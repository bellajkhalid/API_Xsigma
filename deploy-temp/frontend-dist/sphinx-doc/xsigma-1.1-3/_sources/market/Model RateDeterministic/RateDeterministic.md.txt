# The model RateDeterministic

## 1. Executive Summary

The Global Model Risk Assessment is:

Global Model Risk Assessment

| | Rating | Justification |
| --- | --- | --- |
| Complexity | LOW | Based on the Global Pricing Model scorecard |
| Uncertainty | LOW | The model is analytic, used for pricing linear products. Calibration is done to the curve through curve centering and given the low limitations applicable to the approved products, Uncertainty is judged to be low for this model. |
| Reliance | HIGH | Pricing models have high reliance |

Table 2: Model risk assessment

The uncertainty rating has been determined based on consideration of model inputs, relevant model limitations, the risk factor representation required for the products being modelled, the nature of the numerical implementation and calibration approaches employed. The complexity rating has been determined based on consideration of the number and nature of risk factors modelled including their interdependency, the calibration approach employed, the mathematical specification of the model and where relevant, the sophistication of the broader processing environment of which the model is a part. The reliance of all pricing models is high as the model outputs define the relevant officially reported metrics rather than merely informing them. Reduction of reliance on pricing model outputs is similarly inappropriate.

### 1.1 Summary of main validation results

The model RateDeterministic is a pricing model used for the following purposes: Generate asset and liability fair value measurements reported in official books and records and/or generate risk sensitivities (i.e. for End of Day risk management purpose and/or for hedging Risk and Capital calculation) and re-price positions under stress scenarios as a servicer model, in the context of regulatory stress tests i.e. CCAR, in the Interest Risk in the Banking Book ("IRRBB") Delta EVE calculation or in the context of full revaluation ("Full Reval") of (SinVar, HistSim, SVaR). The model is developed and maintained by DBAnalytics and is provided via dlls for use in Microsoft Excel, Python, Perl, and is made available in Kannon and Risk Engine, (amend as required).

In this document we review the RateDeterministic framework used to build interest rate yield curves in Deutsche Bank. This includes the logical structure of the framework as well as the technical tests of its most recent implementation in the DBAnalytics library.

The model RateDeterministic, with configurations

DBOPT-RatesMarketDeterministic
DBOPT-ForwardRateDeterministic
DBCANALYTIC-ShortRateDeterministic
DBX-ShortRateDeterministic
DBSMC-ShortRateDeterministic
DBL-ShortRateDeterministic
DBM-ForwardRateDeterministic

is approved for the following products:

CashCollateralPledged*                       CashCollateralReceived*
Cashflow.CashCoupon*                         Cashflow.Eq871m-FATCA*
Cashflow.Eq871m-NRA*                         Cashflow.FX*
Cashflow.OTCCashGuarantee*                   Cashflow.Rates*
Cashflow.SecProdCashGuarantee*               Cashflow.Trailer*
Cashflow*                                    DepoDemandFixedOpenEnd*
CertificateOfDepositFix*                     CertificateOfDepositFlt*
DepoDemandFloatOpenEnd*                      DepoTermFix*
DepoTermFixedBullet*                         DepoTermFixVariableNotional*
DepoTermFloatBullet*                         DepoTermFlt*
DepoTermFltVariableNotional*                 EqDeltaOne_OISForward*
EqDeltaOne_OISNois*                          EqDeltaOne_OISSwap*
EqInternalCashAdj*                           EqSPAC
Fee.Other*                                   FeeAccrual*
FeeSeriesFixed*                              FeeSeriesFloating*
FixedCashflowFee*                            FRA*
FundMMIdx_Single                             FXForward
FXSpot                                       FXSwap
InternalFundingDepoTermFixedBullet*          InternalFundingDepoTermFloatBullet*
InternalFundingDepoTermOISBullet*            InternalFundingLoanTermFixedBullet*
InternalFundingLoanTermFloatBullet*          InternalFundingLoanTermOISBullet*
IRFundingMMFixed*                            IRFundingMMFloat*
IRFundingMMC*                                IRFundingMMOpenEndCallAcc*
IRFundingNameSwap*                           IRFuture*
IRSwapBasis*                                 IRSwapBasisLiborZeroComp*
IRSwapFiduciary*                             IRSwapFixFix*
IRSwapFixFlt*                                IRSwapFixFltLiborZeroComp*
IRSwapFuture*                                IRSwapIdx*
IRXCcySwapBasis                              IRXCcySwapFixFix
IRXCcySwapFixFlt                             EvergreenRepo*
MuniSwap*                                    OIFuture*
OISFuture*                                   OISSwap*
OISSwapLiborZeroComp*                        Repo*
RepoEvergreen*                               RepoExtendable*
RepoOpen*                                    RepoReverse*
RepoTerm*                                    StockBorrow*
EvergreenRepoReverse*                        EvergreenStockBorrow*
EvergreenStockLend*                          StockLend*
TreasuryYieldLockUnissued*                   TRSMMDRate*
Fee.Remittance*                              IRIndexSingle_MM*
BuySellBack*                                 RepoTriParty*
RepoReverseTriParty*                         SellBuyBack*
CorpBondDistressed                           IRIndexSingle_DURBIAS*
CouponPayBuy*                                CouponPaySell*
SecurityCollateralPledged*                   SecurityCollateralReceived*
CashBalance*                                 FXCashBalance*

The Rate Deterministic curve framework is the Preferred Model framework for products with (*) because arbitrage-free bootstrapping of curves to market instruments is the standard market approach for valuing any linear interest rate product. Linear interest rate products means any product which has a static hedge that can be built from zero-coupon bonds.

The model was last reviewed for DBA v1200. Subsequent changes require further validation.

Comments: Previously the following six MV model names:

DBOPT-RatesMarketDeterministic
DBCANALYTIC-RateDeterministic
DBX-RateDeterministic
DBSMC-RateDeterministic
DBL-RateDeterministic
DBM-RateDeterministic

were approved for valuing linear rates products. In order to consolidate the 'dispersion' of Product/MODEL combinations that are currently approved for trading, unification of these six MV model names into the new name:

RateDeterministic

has been approved.

The products IRSwapFixFix, IRSwapFixFlt, IRSwapFixFltLiborZeroComp, OISSwapLiborZeroComp, IRSwapBasisLiborZeroComp, IRXCcySwapFixFix, IRXCcySwapFixFlt are also approved for multicurrency DS4 with collateral floor and switch.
The IRSwapFixFlt is also approved for the use of BOND OIS spread vol for multiple collaterals of the same currency (e.g. bond and cash collateral). The Kannon tradeable IRSwap which also includes the PRDS products IRSwapFixFlt and OISSwap is approved.

The model RateDeterministic with configurations

DBOPT-RatesMarketDeterministic
DBOPT-ForwardRateDeterministic
DBCANALYTIC-ShortRateDeterministic
DBX-ShortRateDeterministic
DBSMC-ShortRateDeterministic
DBL-ShortRateDeterministic
DBM-ForwardRateDeterministic

is recommended for use with the following products:    For the following usage(s):

• End of day valuation and risk management.
• As a servicer model employed in valuation subject to CCAR stress testing scenarios and HistSim Var.
• For the calculation of Delta EVE under Interest Rate Risk in the Banking Book.

The table below summarizes the validation assessment per usage.

| Usage | Recommended for Use (RFU) |
| --- | --- |
| EOD | YES |
| HistSim | YES |
| CCAR | YES |
| IRRBB | YES |

Table 4: Validation Assessment

The products CashBalance, FXCashBalance, CouponPayBuy, CouponPaySell, InternalFundingDepoTermOISBullet, InternalFundingLoanTermOISBullet, SecurityCollateralPledged and SecurityCollateralReceived are considered in the Appendix subsection 8.14 as part of the ring-fence list MARS request ID2396. The validation testing is performed for the representative products of each bucketized product group.

Statement of Model Approval  The review undertaken did not reveal any evident flaws in the theory or implementation of the model

RateDeterministic.

The model is adequate for the proposed scope of application which is the valuation and risk management of the interest rate products mentioned above, as explained in the Conceptual Soundness section (cf. Section 3) where the conceptual foundations of the models are reviewed. This approval is valid only for the PRDS products listed above and subject to the 'Conditions for Use' described in Section 6.2.1.

The review undertaken did not reveal any flaws in the theory or the relevant implementations.

Products labelled with "*" indicate that the approved model is primary.

The model assumptions are detailed in the model description section.

### 1.2 Limitations and Validation Findings Overview

Model Limitations  No limitons have been identified during the course of validation.

Validation Findings  There are currently no validation findings requiring to be addressed.

The model is approved subject to the 'Conditions for Use', see Section 6.2.1 for further details.

### 1.3 Control Overview

The table below lists the conditions for use that have been raised to address model weaknesses identified in the course of validation. These are classified as Model Rule and should be monitored through the automated Model Parameter Monitoring process. All conditions for use are logged in MARS. Model parameters approved values and appropriate ranges are detailed in the section 6 and the parameter classification and accurate functioning of model rules is confirmed in section 5.

| Parameter | Condition For Use ID | Approved Range | DefaultValue | Description |
| --- | --- | --- | --- | --- |
| CMT:: CMTMode | [13155] | (MATRIX) | MATRIX | Valid CMT modes are: FLAT - Spread is constant across all time and maturities; MATRIX - CMT takes an additional SpreadLock table input; EXMATRIX - CMT takes three additional table input, SpreadLock, Specialness and AuctionDates; PWCONST_L - This is identical to MATRIX except that the interpolation in time space is piecewise constant to the left; PWCONST_R - This is identical to MATRIX except that the interpolation in time space is piecewise constant to the right. FORWARDSPREAD - A spread to generic rates is applied, using the same conventions as FIXING object to match the rates. |                                                                                  23

| CMT:: NaturalTolerance | [13102] | CMT:: NaturalTolerance (["]{d} <= 10 and CMT:: NaturalTolerance like %d | 0d | Tolerance (maximum tenor mismatch) allowed when mapping natural, i.e. rates with RateIndexType = 'NATURAL' to Libor rates. |
| CURVE:: AddPar | [11032] | (NONE, LINEAR) | NONE | Determines the interpolation technique used to insert implied par swap rates between quoted market swap rates. |
| CURVE:: AveragingConvexity | [17778] | (VOL) | VOL | Possible values are VOL (default) or FUNDINGVOL. VOL: when calculating WAVG rates with DBOPT model (typically 1B WAVG OIS), convexity is calculated with the two outputs vols (DBOPTVOL and FUNDINGVOL). FUNDINGVOL when calculating WAVG rates with DBOPT model (typically 1B WAVG OIS), convexity is calculated with FUNDINGVOL. FUNDINGVOL is preferred because it makes the bootstrap and pricing more consistent. |
| CURVE:: BaseRateType | [11627] | if (CURVE:: UseType in (DISCOUNT, BASIS, LIBOR)) then (CURVE:: BaseRateType in (LIBOR, LIBOR-*, OIS, OIS-*)) | LIBOR | The RateType parameter of CURVE when UseType is either DISCOUNTBASIS or LIBOR. It describes the base curve (the CURVE from Cash/Futures/Swaps is a LIBOR curve or OIS curve). |
| CURVE:: BuildMethod | [11036] | (CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD) | - | Defines the method used to calculate implied rates at maturities between quoted market instruments. |
| CURVE:: CGYUseBaseCurve | [11044] | (NO, YES) | - | Controls the usage of the backbone curve for CGY discounting/ forecasting. |
| CURVE:: Cash:: BaseCurve | [17803] | (NONE, LIBOR, LIBOR-*, OIS, OIS-*) | NONE | When the SpotLiborSpreads subtable has the BaseCurve column, the Cash subtable needs to have the BaseCurve column too; in that case, the BaseCurve column must be set to the same value as the LIBOR cash in the Cash table. If set to NONE, the discount factor base curve is set to 1 and the discount factor curve is directly bootstrapped according to the SpreadBuildMethod. |
| CURVE:: Cash:: SpreadBuildMethod | [11623] | if (CURVE:: Cash:: SpreadBuildMethod not like *-*) then (CURVE:: Cash:: SpreadBuildMethod in (CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)) | LINEAR_ZERO | See CURVE::SpreadBuildMethod for the subtable Cash. |
| CURVE:: CashToFuture | [11085] | (BOOTSTRAPCASHPRIORITY, EXACTCASH, CASHPRIORITY, LINEAR, NONE) | LINEAR | Specifies the interpolation technique used to infer the futures stub rate from cash rates. |
| CURVE:: CurveType | [11037] | (LIBOR, CGYBASIS, SPREAD, BASIS, FIBASIS) | - | Defines how a given model uses the LIBOR curve and the SPREAD curve for forecasting (i.e. calculating forward rates) and discounting. |
| CURVE:: ExtrapMethod | [11041] | (CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE) | NATIVE | Defines the method used to calculate rates beyond ExtrapTime (if specified) or the maturity of the longest quoted market instrument (otherwise). |
| CURVE:: HybridConstantForwardConnection | [11084] | (LINEAR, QUADRATIC) | QUADRATIC | Controls the connection between the short end (built in CONSTANT_FORWARD) and the long end (built in HYBRID_FORWARD) when BuildMethod is set to HYBRID_CONSTANT_FORWARD. |
| CURVE:: NaturalTolerance | [11063] | CURVE:: NaturalTolerance (["]{d}) <= 10 and CURVE:: NaturalTolerance like %d | 0d | Sets the interval, around the LIBORMaturity, to project the closest LIBORMAT spreads. |
| CURVE:: OISDateCompression | [11048] | (NO, YES) | NO | When set to YES, the 1B WAVG OIS rates calculation in CURVE bootstrap (when OISSpreadType = *) in pricing is speed up with an approximation : 1B WAVG is approximated by continuous WAVG. |
| CURVE:: OISUseBaseCurve | [11069] | if (CURVE:: BaseRateType is OIS) then (CURVE:: OISUseBaseCurve in (NO, YES, HYBRID)) | - | Controls the usage of the backbone curve for OIS discounting/ forecasting. |
| CURVE:: RecalibMethod | [11068] | (APPROX, EXACT, EXACT-FORCED) | APPROX | Defines the interpolation of the discount factor curve. |
| CURVE:: SmoothFutures | [11039] | (NO, YES, BACKWARD, BACKWARDONLY) | NO | Determines how futures are used to construct a smooth curve. |
| CURVE:: SpotLiborUseBaseCurve | [11089] | (NO, YES) | - | Controls the usage of the backbone curve for LIBOR discounting/ forecasting. |
| CURVE:: SpreadBuildMethod | [11051, 11623, 11625] | if (CURVE:: SpreadBuildMethod not like %-%) then (CURVE:: SpreadBuildMethod in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD)); if (CURVE:: SpreadBuildMethod like %-%) then (CURVE:: SpreadBuildMethod in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)) | LINEAR_ZERO | Controls the interpolation of the spread of various curves to a base curve, to obtain various forecasting/discounting curves (e.g. OIS, CCY, 3m LIBOR, ...) |
| CURVE:: Spreads:: SpreadBuildMethod | [11062, 11525] | if (CURVE:: Spreads:: SpreadBuildMethod not like %-%) then (CURVE:: Spreads:: SpreadBuildMethod in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD)); if (CURVE:: Spreads:: SpreadBuildMethod like %-%) then (CURVE:: Spreads:: SpreadBuildMethod in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)) and CURVE:: Spreads:: SpreadBuildMethod like %[-:] in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)) | LINEAR_ZERO | See CURVE::SpreadBuildMethod for the subtable Spreads. |
| CURVE:: TreasuryUseBaseCurve | [11620] | (NO, YES) | YES | Controls the usage of the backbone curve for TREASURY discounting/ forecasting. |
| CURVE:: TurnMethod | [11054] | (CONSTANT_CASH, CONSTANT_FORWARD, CONSTANT_PARALLEL_ZERO) | CONSTANT_CASH | Dictates how rates should be calculated when one future completely encloses another, i.e. when an enclosing future both settles before and matures after another future. |
| CURVE:: TurnSpreadExtrapolations::Extrapolation | [11622] | (PERIODIC-QUARTEREND) | PERIODIC-QUARTEREND | Defines the type of extrapolation in the TurnspreadExtrapolations table, which is introduced to avoid manually input long end TurnSpread. |
| CURVE:: UseType | [11059] | (CROSSCCYSWAP, DISCOUNTBASIS, LIBOR, INFLATION, TREASURY, CONVERTIBILITY, CROSSCCY) | - | Used to define the way of building a curve. |
| FIXING:: InterpolateNatural | [13381] | (YES, NO) | YES | Determines whether natural rate interpolation/extrapolation in the tenor space is allowed. |
| FIXING:: NaturalTolerance | [13354, 13355] | if (FIXING:: NaturalTolerance like %d) then (FIXING:: NaturalTolerance (["]{d} <= 10); if (FIXING:: NaturalTolerance like %w) then (FIXING:: NaturalTolerance (["]{w} <= 1) | - | Tolerance (maximum tenor mismatch) allowed when mapping natural, i.e. rates with RateIndexType = 'NATURAL' to Libor rates. |
| FUNDING:: Type | [17775] | (SPOTFX) | - | Meta parameter, specifies high level type of an object. |
| FUNDINGVOL:: AdjustConvexity | [12005] | (YES) | YES | If should take into account all adjustments in the end. But since such adjustments appear in various places, the whole validation by GMVG will inevitably take time. Therefore we introduced a property AdjustConvexity to FUNDINGVOL objects in order to control adjustments we want to take into account YES (default) takes into account all adjustments and is what we want to use in the end. NO only takes into account adjustment on the domestic discounting from collateral options. |
| FUNDINGVOL:: CalcAnnuallyMappingConvexity | [12003] | (NO) | YES | Possible values are YES (default) or NO. When setting NO, DS4 convexity on annuity mapping function (relevant when AnnuityMappingModel = SHORTRATE) are not taken into account to PV. |
| FUNDINGVOL:: CalcInflationConvexity | [12000] | (NO) | YES | Possible values are YES (default) or NO. When setting NO, DS4 convexity on inflation forwards are not taken into account to PV. |
| FUNDINGVOL:: CalcLIBORConvexity | [12001] | (NO, YES) | YES | Possible values are YES/NO (default = YES). When setting NO, adjustment from FUNDINGVOL is applied only to discounting and FX forwards. CalcLIBORConvexity = NO is introduced to replace AdjustConvexity = NO. CalcLIBORConvexity = NO is more self consistent than AdjustConvexity = NO because when pricing trades with various domestic currencies, PVs can be converted by FX spots, which is an arbitrage free condition. This is thanks to adjustment on FX forwards. |
| FUNDINGVOL:: CalcZeroCouponConvexity | [12002] | (NO) | YES | Possible values are YES (default) or NO. When setting NO, DS4 convexity on compounded LIBOR/LIBOROIS in PLAIN/ZERO SECURITY are not taken into account to PV. |
| FUNDINGVOL:: DecayTime | [17774] | FUNDINGVOL:: DecayTime unset | UNSET | FreqTimeVec, FrontLatticeFreq and DecayTime are used for the DS4 MonteCarlo to add background simulation time vector. Values can be *UNSET* (default) or numbers. When numbers are set, the conversion of the background time vector generation is consistent with that of the DBX model. FrontLatticeFreq = UNSET means FrontLatticeFreq = FreqTimeVec. DecayTime = UNSET or 0, the background time vector is generated only with FreqTimeVec. When FreqTimeVec is set to UNSET and FrontLatticeFreq and DecayTime are set, a background time vector of FrontLatticeFreq is added until DecayTime. This is only the convention of FUNDINGVOL. |
| FUNDINGVOL:: FloorCalcMethod | [15696] | (ANALYTIC) | MONTECARLO | Determines a way to calculate discount factors and convexity adjustment on LIBORs, etc., from collateral floor options. The choices are: MONTECARLO (default) discount factors and convexity adjustment are calculated by full MonteCarlo; ANALYTIC: discount factors and convexity adjustment are calculated in analytic by moment matching (up to the 3rd order). |
| FUNDINGVOL:: FloorSmoothing | [18467] | (NO) | NO | When set to YES, during calculation of convexity or discount factors with collateral options in the DS4 MonteCarlo, an analytic conditional bond formula (based on moment matching) is used instead of numerical path integration for discounting with collateral floor options (ResearchPaper 9136). This will stabilize Monte Carlo simulation in presence of collateral floor options. |
| FUNDINGVOL:: FreqTimeVec | [17777] | FUNDINGVOL:: FreqTimeVec unset | UNSET | FreqTimeVec, FrontLatticeFreq and DecayTime are used for the DS4 MonteCarlo to add background simulation time vector. Values can be *UNSET* (default) or numbers. When numbers are set, the conversion of the background time vector generation is consistent with that of the DBX model. FrontLatticeFreq = UNSET means FrontLatticeFreq = FreqTimeVec. DecayTime = UNSET or 0, the background time vector is generated only with FreqTimeVec. When FreqTimeVec is set to UNSET and FrontLatticeFreq and DecayTime are set, a background time vector of FrontLatticeFreq is added until DecayTime. This is only the convention of FUNDINGVOL. |
| FUNDINGVOL:: FrontLatticeFreq | [17773] | FUNDINGVOL:: FrontLatticeFreq unset | UNSET | FreqTimeVec, FrontLatticeFreq and DecayTime are used for the DS4 MonteCarlo to add background simulation time vector. Values can be *UNSET* (default) or numbers. When numbers are set, the conversion of the background time vector generation is consistent with that of the DBX model. FrontLatticeFreq = UNSET means FrontLatticeFreq = FreqTimeVec. DecayTime = UNSET or 0, the background time vector is generated only with FreqTimeVec. When FreqTimeVec is set to UNSET and FrontLatticeFreq and DecayTime are set, a background time vector of FrontLatticeFreq is added until DecayTime. This is only the convention of FUNDINGVOL. |
| FUNDINGVOL:: IntegrationFreq | [15695] | FUNDINGVOL:: IntegrationFreq >= 12 | 12 | Number of time steps per year to calculate volatility surface and convexity adjustments in analytic. |
| FUNDINGVOL:: NumberRuns | [15705] | FUNDINGVOL:: NumberRuns >= 1 | 1 | Number of runs for Monte Carlo simulations. Each run consists of a set of correlation-preserving simulation paths following the distribution prescribed by the specific model. |
| FUNDINGVOL:: NumberSims | [1077, 15706] | if (FUNDINGVOL:: AdjustConvexity == YES) then (FUNDINGVOL:: NumberSims >= 10000); FUNDINGVOL:: NumberSims >= 10000 | - | Number of simulations to perform during pricing. |
| FUNDINGVOL:: PolyOrder | [17802] | (1200, 1200-0.25) | 1200 | The flags PolyOrder and StableMaxFraction are used when pricing cash settled swaptions with collateral options by using DBOPTVOL with AnnuityMappingModel = SHORTRATE. When deriving the annuity mapping function, we need to get the conditional expectation of funding ADP w.r.t. the LIBOR short rate. Currently we use the DS4 Monte Carlo with the PolyOrder and StableMaxFraction to get the conditional expectation. Defaults are PolyOrder=1200, StableMaxFraction=0.25 |
| FUNDINGVOL:: ReinvestSpreadCalcMethod | [17776] | (EXACT) | EXACT | Describes how to handle ReinvestSpread and Spread of PLAIN/ZERO SECURITY when capturing DS4 convexity with DBOPT model and CalcZeroCouponConvexity = YES. Possible values are: (1) EXACT (default): throw an error when PLAIN/ZERO SECURITY has non zero ReinvestSpread or Spread as we cannot calculate convexity analytically; (2) APPROX: when PLAIN/ZERO SECURITY has non zero ReinvestSpread and/or Spread, calculate convexity by approximation as if all zero yield were coming from LIBOR compounding. As long as these spread are not huge (like 10%), the approximation is accurate enough to capture convexity. |
| FUNDINGVOL:: StableMaxFraction | [17779] | (0.25) | 0.25 | The flags PolyOrder and StableMaxFraction are used when pricing cash settled swaptions with collateral options by using DBOPTVOL with AnnuityMappingModel = SHORTRATE. When deriving the annuity mapping function, we need to get the conditional expectation of funding ADP w.r.t. the LIBOR short rate. Currently we use the DS4 Monte Carlo with the PolyOrder and StableMaxFraction to get the conditional expectation. Defaults are PolyOrder=1200, StableMaxFraction=0.25 |
| FUNDINGVOL:: SwitchCalcMethod | [15707] | (SEMIANALYTIC) | - | The flag determines a way to calculate discount factors and convexity adjustment on LIBORs, etc., from collateral switch options. The possible values are: MONTECARLO, discount factors and convexity adjustment are calculated by full Monte Carlo; ANALYTIC: discount factors and convexity adjustment are calculated in analytic by moment matching (up to the 3rd order). The method is summarized in ResearchPaper 9136. Notice that SwitchCalcMethod = ANALYTIC is not implemented yet. |
| FUNDINGVOL:: SwitchIndicatorWedge | [15708] | FUNDINGVOL:: SwitchIndicatorWedge >= 0.0001 | UNSET | Possible values are a number or UNSET (default) and the flag is used only for collateral switch option calculation with SwitchCalcMethod = SEMIANALYTIC. When a number is provided, we smooth indicators for estimating mean reversion of the discount rate of collateral switch options with the wedge (like ranking calculation of momentum indices). Especially the property is useful to get stable risks and PV/risk ladders; calculating these indicators with Monte Carlo without wedge could introduce noise. |
| FUNDINGVOL:: UseFXvols | [15709] | (NO, YES) | YES | Possible values are YES/NO (default = YES). When setting NO, FX vol levels are internally overwritten to 0. |
| FUNDINGVOL:: VarianceReduction | [15710] | (ANTITHETIC, ANTITHETICPURE, ORTHOGONAL) | - | "This feature specifies the method to be used for reducing variance in the simulation." |
| FUNDINGVOL:: VolMode | [15711] | (BDT, LVTV, LVMR, TVMR) | BDT | VolMode controls mean reversion of short rates and spreads. Other supported modes are LVMR, TVMR and LVTV. |
| FUNDINGVOL:: VolName | [15712] | (FUNDINGVOL) | - | VolName FUNDINGVOL can be used to provide information relating to LIBOR, spread and FX vols. |
| MKTDATA:: ApplyYieldCurve | [13998] | if (MKTDATA:: Type == MM) then (MKTDATA:: ApplyYieldCurve in (FORECAST, DISCOUNT, DISCOUNT-%, OIS, LIBOR, LIBOR-%, TREASURY, OIS-%)) | FORECAST | FORECAST (default), DISCOUNT, DISCOUNT:Tenor, OIS, LIBOR or LIBOR:Tenor. Results will only be affected by this property when using a spread yield curve. FORECAST (DISCOUNT) means the forecasting (discounting) yield curve is used to generate equity forwards. DISCOUNTBASIS curves support ApplyYieldCurve = OIS, LIBOR and LIBOR:Tenor as well. OIS means the OIS discounting curve is used. LIBOR means the LIBOR (or LiborBasis) forecasting curve is used. LIBOR:tenor (e.g. LIBOR:6m) means the LIBOR (for tenor) is used. Notice that in order to capture the impact of the tenor of LIBOR correctly, the DISCOUNTBASIS curve must have SpotLiborSpreads, i.e. CMT handle with LIBORMAT will not work. |
| MKTDATA:: ForwardPricingMethod | [13993, 13994] | if (MKTDATA:: Type == BOND) then (MKTDATA:: ForwardPricingMethod == NONE); if (MKTDATA:: Type == EXCHANGE) then (MKTDATA:: ForwardPricingMethod in (NONE, PROCEEDS, CDCOMPOUNDING)) | PROCEEDS | Method can be set to either PROCEEDS (the default) or CDCOMPOUNDING. It controls whether coupons will reinvested for a single period from payment to bond maturity (PROCEEDS) or whether they will be compounded between the remaining coupon dates (CDCOMPOUNDING). The methods correspond to those used by Bloomberg. |
| MKTDATA:: RepoShiftType | [13999] | if (MKTDATA:: Type == MM) then (MKTDATA:: RepoShiftType in (ABSOLUTE, RELATIVE)) | ABSOLUTE | Controls whether repo values shifts, specified by the RepoShift property, are ABSOLUTE or RELATIVE. For ABSOLUTE shifts, the shift is added to each repo value; for RELATIVE shifts, each repo value is multiplied by the shift. |
| MKTDATA:: RepoType | [13997] | if (MKTDATA:: Type == MM) then (MKTDATA:: RepoType in (FORWARD, TERM)) | FORWARD | FORWARD (default): Repo rates in the Repo subtable are assumed to be forward rates. TERM: Repo rates are SPOT rates. |
| MKTDATA:: VolIndexVol | [1114] | MKTDATA:: VolIndexVol not exists | - | When this subtable is present we add a further multiplicative "convexity" adjustment to the VOLINDEX calculation, as would be implied by a VOLINDEX volatility equal to this number, as (assuming RepoShiftType=ABS). |
| MODEL:: AverageCompression | [12981, 13147] | if (MODEL:: ModelName == DBX) then (MODEL:: AverageCompression in (NONE, EXPONENTIAL, EXPONENTIAL-%, SYNCHRONISED, SYNCHRONISED -%)); if (MODEL:: ModelName == DBL) then (MODEL:: AverageCompression in (NONE, EXPONENTIAL, EXPONENTIAL-%)) | NONE | Only used for average/variance type of trades ( as in AsianCap security and if RateAverageType # NOAVG in any allowed securities). Default to NONE, meaning no compression is done. |
| MODEL:: CompressionDirection | [12989] | if (MODEL:: ModelName == DBX) then (MODEL:: CompressionDirection in (FORWARD, BACKWARD)) | - | In DBX, one can further select the CompressionDirection (FORWARD or BACKWARD). Using CompressionDirection BACKWARD can be useful in certain cases for additional stability in theta and explain calculations, as it better preserves consistency of the security time vector as time decays. |
| MODEL:: CompressionFreq | [12996] | if (MODEL:: ModelName == DBX) then (MODEL:: CompressionFreq >= 4) | - | Frequency by which a product with many dates (e.g. asian/bermudan/range options or rangeswaps) is compressed to price it in a simplified manner using fewer dates than the initial one. |
| MODEL:: ConvexityTolerance | [626] | if (MODEL:: ConvexityTolerance exists) then (MODEL:: ConvexityTolerance (["]{d} <= 10) | 10d | Convexity Tolerance is the amount of period of mismatch between the rate interval and accrual interval for which we will not apply convexity adjustment. The default is 10d (since v260), since this will avoid giving a superfluous convexity adjustment to RateIndexType: Libor if the forecast period differs from the accrual period by a few days. |
| MODEL:: IndexCompression | [12983] | if (MODEL:: ModelName == DBX) then (MODEL:: IndexCompression in (NONE, EXPONENTIAL, EXPONENTIAL-%, SYNCHRONISED, SYNCHRONISED -%)) | None | Used with MKTDATA.INDEX. Allows to reduce computational time by generating a subset of the original roll dates. Defaults to NONE, meaning that no compression is done. |
| MODEL:: MinimumPayoffSmoothingWedge | [1028] | MODEL:: MinimumPayoffSmoothingWedge not exists | - | Parameter is not approved for use until validated. |
| MODEL:: ModelMode | [13421] | (PRICE, PRICEVALUETODAY) | PRICE | Determines the pricing convention. |
| MODEL:: OASCalibrationTyp | [12947] | if (MODEL:: ModelName == DBX) then (MODEL:: OASCalibrationType == CALIBRATE) | - | This property can be set to NONE, CALIBRATE (default), CALIBRATEANDPRICE or AUTOCALIBRATION. With NONE: no OAS calibration is done. With CALIBRATE, when a bond price is imported in a MKTDATA, an OAS is calibrated to match the market price. The OAS is outputted in the ExtraResults, but the outputted price does not take the OAS into account. It is up to the user to put the calibrated OAS in the MKTDATA to get the market price (not supported in DBSC). With CALIBRATEANDPRICE, the calibrated OAS is used to price the bond, so that the returned price is the market price. Note that when running risks, the OAS is static and corresponds to the unbumped case (not supported in DBC). With AUTOCALIBRATION, the OAS is automatically computed if a MKTDATA object is input containing a price but no curvespread. This is both used in pricing and you will see risk to it in stochastic cases. This approach is currently supported in DBL and DBC. |
| MODEL:: PayoffSmoothingUseTimeScaling | [1029] | MODEL:: PayoffSmoothingUseTimeScaling not exists | - | Parameter is not approved for use until validated. |
| MODEL:: RecalibCurves | [11062] | (NO, YES) | NO | Determines whether OISSpread and CCYSpreads subtables are recalibrated on the fly or not. |
| MODEL:: Tolerance | [13996] | (0) | 0 | Tolerance specifies how closely the centering conditions should be solved for when non-normal rate differentials is used. This defaults to value of 1.0e-6, corresponds to a value of T=0.4. |
| MODEL:: UseNewSVD | [13399] | (NO, ALGLIB) | NO | This parameter is only available for DBX and DBL. Possible values are: NO (default), YES, YES-REGRESSION, ALGLIB. NO: use the DBA internal method. YES: use the IMSL method which appears to give more accurate results on most platforms especially in cases when the matrix is large. YES:REGRESSION: use the regression method. ALGLIB: use the Alglib method by Cholesky decomposition which performs ridge-like regression. |
| MODEL:: ValueMode | [12999] | if (MODEL:: ModelName == DBX) then (MODEL:: ValueMode == VALUEDATE) | - | The ValueMode may be SettleDate or ValueDate. If it is SettleDate(ValueDate), security cashflows are ignored in pricing if paid on or before the settlement-date(valuationdate) of the curve. Also the result of the pricing is compounded up to the respective date. |
| SECURITY:: PIKType | [17826] | if (SECURITY:: SecurityName == BOND) then (SECURITY:: PIKType == NONE) | - | (Optional) For a bond with PIK feature, PIKType specifies if it is configured with PIK AUTO or PIK MANUAL. PIKAUTO means that interest payment, specified contractually by PIKFraction, for each coupon period will be automatically added to the outstanding principal. PIKFRACTION indicates that on each coupon pay date, borrowers have the option to turn on/off the PIK features. |
| SECURITY:: PrepayModel | [13995] | ((blank)) | - | The name of the prepayment or default model |

Table 5: Model Parameters, used in the RateDeterministic model.

## 2 Introduction to Model and Validation

### 2.1 Validation Scope

The scope of the validation is detailed in section 1.1.

Products with similar features from a valuation perspective are grouped together and tested as a single consistent group wherein testing results for a representative product are deemed applicable and able to confer equivalent inference to the whole product group. The product grouping logic is presented in section 2.2.

#### 2.1.1 Introduction

RateDeterministic is the model framework used when the only modelling involved for interest rates is the interpolation/extrapolation of an interest rate CURVE in an arbitrage free manner (i.e. the BuildMethod/ExtrapMethod in the CURVE object).

This is equivalent to an arbitrage free model for zero-coupon bonds of all maturities in a particular currency. Use of the DS2 framework encapsulates basis spreads in an arbitrage-free way (e.g. SPOTLIBORSPREADS, CCYSPREADS, DISCOUNTSPREADS, OISSPREADS).

In this document, we describe and examine DBAnalytics' bootstrapper utilized by various MODEL implementations.

More precisely, this document explains how the various MODEL implementations in DBAnalytics handle intrinsic calculations. From a modelling framework perspective this means that we describe a model that does not diffuse any underlying stochastically.

### 2.2 Product Description

Each of the models in the framework under consideration, i.e. RateDeterministic, is approved for the individual lists of products as detailed below.

The model RateDeterministic, with configurations:

- DBOPT-RatesMarketDeterministic
- DBOPT-ForwardRateDeterministic
- DBCANALYTIC-ShortRateDeterministic
- DBX-ShortRateDeterministic
- DBSMC-ShortRateDeterministic
- DBL-ShortRateDeterministic
- DBM-ForwardRateDeterministic

is approved for the following products:

| Left Column | Right Column |
| --- | --- |
| CashCollateralPledged* | CashCollateralReceived* |
| Cashflow.CashCoupon* | Cashflow.Eq871m-FATCA* |
| Cashflow.Eq871m-NRA* | Cashflow.FX* |
| Cashflow.OTCCashGuarantee* | Cashflow.Rates* |
| Cashflow.SecProdCashGuarantee* | Cashflow.Trailer* |
| Cashflow* | DepoDemandFixedOpenEnd* |
| CertificateOfDepositFix* | CertificateOfDepositFlt* |
| DepoDemandFloatOpenEnd* | DepoTermFix* |
| DepoTermFixedBullet* | DepoTermFixVariableNotional* |
| DepoTermFloatBullet* | DepoTermFlt* |
| DepoTermFltVariableNotional* | EqDeltaOne_QISForward* |
| EqDeltaOne_QISNote* | EqDeltaOne_QISSwap* |
| EqInternalCashAdj* | EqSPAC |
| Fee.Other* | FeeAccrual* |
| FeeSeriesFIxed* | FeeSeriesFloating* |
| FixedCashflowFee* | FRA* |
| FundMMIdx_Single | FXForward |
| FXSpot | FXSwap |
| InternalFundingDepoTermFixedBullet* | InternalFundingDepoTermFloatBullet* |
| InternalFundingDepoTermOISBullet* | InternalFundingLoanTermFixedBullet* |

| Left Column | Right Column |
| --- | --- |
| InternalFundingLoanTermFloatBullet* | InternalFundingLoanTermOISBullet* |
| IRFundingMMFixed* | IRFundingMMFloat* |
| IRFundingMMOI | IRFundingMMOpenEndCallAcc* |
| IRFundingNameSwap* | IRFuture* |
| IRSwapBasis* | IRSwapBasisLiborZeroComp* |
| IRSwapFiduciary* | IRSwapFixFix* |
| IRSwapFixFlt* | IRSwapFixFltLiborZeroComp* |
| IRSwapFuture* | IRSwapIdx* |
| IRXCcySwapBasis | IRXCcySwapFixFix |
| IRXCcySwapFixFlt | EvergeenRepo* |
| OISFuture* | OISwap* |
| OISwapLiborZeroComp* | Repo* |
| RepoEvergreen* | RepoExtendable* |
| RepoOpen* | RepoReverse* |
| RepoTerm* | StockBorrow* |
| EvergreenRepoReverse* | EvergreenStockBorrow* |
| EvergreenStockLend* | StockLend* |
| TreasuryYieldLockUnissued* | TRSMMDRate* |
| Fee.Remittance* | IRIndex*Single_MM* |
| BuySellBack* | RepoTriParty* |
| RepoReverseTriParty* | SellBuyBack* |
| CorpBondDistressed | IRIndex*Single_DURBIAS* |
| CouponPayBuy* | CouponPaySell* |
| SecurityCollateralPledged* | SecurityCollateralReceived* |
| CashBalance* | FXCashBalance* |

The RateDeterministic curve framework is the Preferred Model framework for products with (*), because arbitrage-free bootstrapping of curves to market instruments is the standard market approach for valuing any linear interest rate product. Linear interest rate products means any product which has a static hedge that can be built from zero-coupon bonds.

#### 2.2.1 PRDS Descriptions

| Product Name (Long Product Name) | Product Description |
| --- | --- |

#### BuySellBack (BuySellBack)

A BuySellBack consist of 2 distinct trades, a spot (outright) purchase and a forward (outright) sell of security. The lending fee is implied in the (forward) repurchase price and cannot be adjusted during the course of a transaction. The lender does not retain beneficial ownership of the bonds and so does not receive any substitute payments.

#### CashCollateralPledged

Cash Collateral pledged as part of margin call.

#### CashCollateralReceived

Cash Collateral received as part of margin call.

#### Cashflow

Premium / Deferred premiums / Initial & Final Exchanges / Capital Guarantees, etc. These cashflows will flow front to back and will impact Contract Settlement systems.

#### Cashflow.CashCoupon

The interest paid on a bond. The coupon is the amount that the issuer must pay to the holder of each bond in exchange for investing in that bond.

#### Cashflow.Eq871m-FATCA

A cash flow for the purpose of receiving and paying the tax due under the 871m FATCA legislation.

#### Cashflow.Eq871m-NRA

A cash flow for the purpose of receiving and paying the tax due under the 871m NRA legislation.

#### Cashflow.FX

A cash flow relating to something which is already booked (and will settle) via RMS / FNX - This is typically relating to FX Options and premiums associated with them.

#### Cashflow.OTCCashGuarantee

Used to record a principal / guarantee amount on an OTC product. It should never have any realised cash but can be used to reflect principal protections / guarantees.

#### Cashflow.Rates

A cash flow relating to something which is already booked (and will settle) via Summit.

#### Cashflow.SecProdCashGuarantee

An instrument used to represent a fixed or guaranteed cash flow associated to Securitised Products. This normally would not have realized P&L/AZs but for CD / ELN combinations these are used to flow front to back so would have realized settlement on.

#### Cashflow.Trailer

This is an amount of cash paid to a Third Party Distributor for using their client network to further on sale our products to a much wider audience / client base.

#### CertificateOfDepositFix

A money market instrument issued by a depository institution as evidence of a time deposit to an institutional investor for denominations generally exceeding 10 million. A certificate of deposit has a fixed term, usually upto one year. At the end of the term, the deposit is returned with interest or returned at par if it was issued at a discount. This product pays a fixed rate of interest. A fee must be paid to withdraw funds early. Because most certificates of deposit are negotiable, investors usually sell an unwanted certificate of deposit rather than pay the fee to withdraw the funds. To facilitate transferability, most certificates of deposit are issued in bearer form, but some are registered.

#### CertificateOfDepositFlt

A money market instrument issued by a depository institution as evidence of a time deposit to an institutional investor for denominations generally exceeding 10 million. A certificate of deposit has a fixed term, usually upto one year. At the end of the term, the deposit is returned with interest or returned at par if it was issued at a discount. This product pays a floating rate of interest. A fee must be paid to withdraw funds early. Because most certificates of deposit are negotiable, investors usually sell an unwanted certificate of deposit rather than pay the fee to withdraw the funds. To facilitate transferability, most certificates of deposit are issued in bearer form, but some are registered.

#### Cashflow.Trailer

This is an amount of cash paid to a Third Party Distributor for using their client network to further on sale our products to a much wider audience / client base.

#### CorpBondDistressed

Corp bond is fixed income obligation issued by a corporate (including financial sector entity) as a security or loan note including bearer, dematerialised, registered, schuldscheindarlehen and other similar formats. Principal and interest flows are on scheduled dates with final redemption at a stated final maturity date. In the event of the issuer's default the bondholder's claim is against the insolvency estate of the issuer and final recovery receipt paid against the bondholder's claim is determined by restructuring or bankruptcy/insolvency proceedings and subject to the statutory order of the bondholder's claim vs other creditors of the issuer. The product is a corporate bond which may have any combination of cashflow features defined in the cashflow term sheet. The cashflow value and risk sensitivities are assessed on a 'distressed' basis because the issuer's ability or willingness to pay the contractually defined cashflows is considered materially low, usually due to impaired issuer creditworthiness or a default event has already occurred via failure to pay obligated cashflows, entering bankruptcy or insolvency proceedings or other indications that it is unlikely to fully meet its contractual obligations. The valuation in the instrument is assessed in a 'price-based' framework with market/fair-value pricing determined by idiosyncratic assessment of any near-term scheduled payments being made and the ultimate amount of outstanding claims that will be recoverable , and sensitivities to term cashflow discounting risk drivers are disregarded. For an exposure in distressed status it is assumed that any original contractual borrower options such as call/prepayment rights are economically ineffective or either due to contractual proscriptions resulting from distressed status or funding replacement being inaccessible or prohibitively expensive. If an issuer is in formal insolvency already scheduled cashflows may be assumed that contractually scheduled interest payments will not be made so no ongoing interest accrual is recognised, but in some situations such as very recent perceived deterioration in creditworthiness there may still be an expectation that near-term interest payments will be paid and interest accrual will still be recognised.

#### DepoDemandFixedOpenEnd

Demand depo are deposits without a fixed date for repayment. The client has the right to increase or decrease (even down to 0 balance) the deposit upon giving the agreed notice period.

#### DepoDemandFloatOpenEnd

Demand depo are deposits without a fixed date for repayment. Both DB and the depositor have the right to increase or decrease (even down to 0 balance) the deposit upon giving the agreed notice period.

#### DepoTermFix (DepoTermFixed)

Term deposits are funds placed over a committed period, at a fixed interest rate. This product has multiple coupon payments during the life of the trade.

#### DepoTermFixedBullet (DepoTermFixedBullet)

A bullet Term deposit are funds placed over a committed period with a specified single repayment due on maturity.

#### DepoTermFixVariableNotional (DepoTermFixedVariableNotional)

Term deposit are funds placed over a committed period, at a fixed interest rate, with a specified repayment schedule.

#### DepoTermFloatBullet (DepoTermFloatBullet)

A bullet term deposit relates to funds placed over a committed period (often one working day) at a floating interest rate with a specified single repayment due on maturity.

#### DepoTermFlt (DepoTermFloat)

Term deposits are funds placed over a committed period, at a floating interest rate. This product has multiple coupon payments during the life of the trade.

#### DepoTermFltVariableNotional (DepoTermFloatVariableNotional)

Term deposits are funds placed over a committed period, at a floating interest rate, with a specified repayment schedule.

#### EqDeltaOne_QISForward (QuantitativeInvestmentStrategyForward)

A forward on the QIS strategy forces an investor to buy/sell their strategy position at a predetermined future date at a predetermined price. QIS strategies are modelled with a flat forward. Risk is reported to the strategy rather than decomposed to the underlyings of the strategy.

#### EqDeltaOne_QISNote (QuantitativeInvestmentStrategyNote)

A delta one product which provides access to a note whose final payout is related to the performance of one or many QIS strategies. Risk is reported to the strategies rather than decomposed to the underlyings of the strategies.

#### EqDeltaOne_QISSwap (QuantitativeInvestmentStrategySwap)

A delta one product involving a swap where one leg is a fixed / floating coupon (coupon may be 0) and the other leg is the performance of one or many QIS strategies. Risk is reported to the strategies rather than decomposed to the underlyings of the strategies.

#### EqInternalCashAdj (EqInternalCashAdjustment)

Equity Cash adjustment between books. For example when one book is using Flow Risk (we have to reflect this differently as Flow Risk vs Native Imagine or Risk Engine will value differently).

#### EqSPAC (EquitySpecialPurposeAcquisition Company)

A stock in a SPAC (Special Purpose Acquisition Company). A SPAC holds funds it raised via IPO until it finds a suitable acquisition, at which time the shares are converted into shares of the acquired company. Shareholders must approve the acquisition. A SPAC has a fixed period of time (typically 2 years) to find an acquisition. If SPAC is not found in this time then the SPAC is liquidated and shareholders are returned their investment plus interest. This tag is to be used for the stock holding in the SPAC prior to acquisition.

#### EvergreenRepo (EvergreenRepo)

An Evergreen Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a later date. The trade will be booked term, but the end date will continually move based on a pre-agreed schedule. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. For the party selling the security and agreeing to repurchase it in the future, it is a repo.

#### Fee.Other

A charge either paid or received and excludes services such as management, advisory. The charge may be a one-off amount or an amount paid periodically based on a specified percentage. Examples include legal fees, administrative fees.

#### FeeAccrual (FeeAccrual)

A product used for recording fixed or floating (LIBOR) Premium, Dividend, Interest or Payment cashflows. The fee is treating on an accrual basis.

#### FeeSeriesFixed (FeeSeriesFixed)

A product used for recording fixed Premium, Dividend, Interest or Payment cashflows.

#### FeeSeriesFloating (FeeSeriesFloating)

A product used for recording floating Premium, Dividend, Interest or Payment cashflows.

#### FixedCashflowFee

A trade used for recording Dividend, Interest or Payment cashflows received from a Commodity backed option, index option, swap or collateral backed repo trade.

#### Fee.Remittance

Remittance of retained earnings from Trading Book still affecting risk, FX hedging and funding but excluded from traders reported P&L.

#### FRA (InterestRateFRA)

A FRA (forward rate agreement) is a payment exchange between two parties based upon the difference between an agreed rate (the reference rate) and the rate the reference rate is fixed at on the fixing date. For example in a 3x9 FRA based on 6m libor, in 3months time, the interest difference between 6m libor and the FRA rate times the agreed notional for the term (i.e. 9m - 3m) is paid by the party which has the positive calculated interest to the party with the negative interest amount. A FRA therefore always consists of one payment.

#### FundMMIdx_Single (FundMoneyMarketIndex_Single)

A long or short position in shares of a fund which aims to replicate the performance of a decomposed money market index where the index and constituents are all of the same currency.

#### FXForward (FXForward)

A FX Forward is a forward contract in the forex market that locks in the price at which an entity can buy or sell a currency on a future date. Also known as "outright forward currency transaction", "forward outright" or "FX forward". Forward contracts are very similar to futures contracts, except they are not exchange-traded.

#### FXSpot (FXSpot)

The purchase or sale of a foreign currency for immediate delivery. Spot trades are settled "on the spot", as opposed to at a set date in the future.

#### FXSwap (FXSwap)

An FXSwap is an FX Forward with an FX Spot.

#### InternalFundingDepoTermFixedBullet (InternalFundingDepoTermFixedBullet)

A cash deposit for a fixed term and at a fixed rate whose purpose is to fund a trading book.

#### InternalFundingDepoTermFloatBullet (InternalFundingDepoTermFloatBullet)

A cash deposit for a fixed term at a floating rate whose purpose is to fund a trading book.

#### InternalFundingDepoTermOISBullet (InternalFundingDepoTermOISBullet)

A cash deposit for a fixed term and at a daily averaging rate such as EONIA, whose purpose is to fund a trading book.

#### InternalFundingLoanTermFixedBullet (InternalFundingLoanTermFixedBullet)

A cash loan for a fixed term and at a fixed rate whose purpose is to fund a trading book.

#### InternalFundingLoanTermFloatBullet (InternalFundingLoanTermFloatBullet)

A cash loan for a fixed term at a floating rate whose purpose is to fund a trading book.

#### InternalFundingLoanTermOISBullet (InternalFundingLoanTermOISBullet)

A cash loan for a fixed term and at a daily averaging rate such as EONIA, whose purpose is to fund a trading book.

#### IRFundingMMFixed (InterestRateFundingMMFixed)

A cash loan or deposit for a fixed term and at a fixed rate whose purpose is to fund a trading book.

#### IRFundingMMFloat (InterestRateFundingMMFloat)

A cash loan or deposit for a fixed term at a floating rate whose purpose is to fund a trading book.

#### IRFundingMMOI (InterestRateFundingMMOI)

A cash loan or deposit for a fixed term and at a daily averaging rate such as EONIA, whose purpose is to fund a trading book.

#### IRFundingMMOpenEndCallAcc (InterestRateFundingMoneyMarket OpenEndCallAccount)

A series of fixed or floating rate cash flows with no fixed maturity date but a notice period instead which can be used to reflect a Cash Loan / Deposit until further notice for any purpose. The loans are either internal facing or spot cancellable by both parties.

#### IRFundingNameSwap (InterestRateFundingNameSwap)

A swap transaction whose purpose is to replicate the DS2 risk arising from the posting of collateral under an ISDA Credit Support Annex agreement. The DS2 curve is effectively pricing the discounting of deals involved in the PV (present value) in margin exchanges.

#### IRFuture (InterestRateFuture)

A future contract where an interest rate for a specified deposit amount is locked in for a future date. The holder is not required to place the designated amount of deposit where the contract is cash settled; instead any net change in the value of the contract are settled in cash on a daily basis.

#### IRIndex*Single_DURBIAS (IRIndexSingle_DURBIAS)

A transaction traded on a see through basis involving an index which has index components with the same currency and which belongs to the Duration Bias family of indices. The trade notional currency is the same as the index currency.

#### IRIndex*Single_MM (IRIndexSingle_MoneyMarket)

A long or short position in a decomposed money market index where the index and constituents are all of the same currency.

#### IRSwapBasis (InterestRateSwapBasis)

An interest rate swap where both legs are floating. An IRSwapBasis product swaps one set of floating rate payments for another set of floating rate payments of a different tenor.

#### IRSwapBasisLiborZeroComp (InterestRateSwapBasisLibor ZeroCompound)

An interest rate swap where both legs are non-OIS floating where one set of floating rate payments is exchanged for another set of floating rate payments of a different tenor, where one or both of the floating legs is compounded at the underlying floating rate until maturity.

#### IRSwapFiduciary (InterestRateSwapFiduciary)

Fiduciary Interest Rate Swaps are held in trust for a beneficiary. A fiduciary is legally obligated to safeguard assets in trust in the best interest of those for whom it acts. State law in the US governs what the fiduciary can and cannot do with the entrusted assets.

#### IRSwapFixFix (InterestRateSwapFixedFixed)

An IRSwapFixFix product swaps one set of fixed rate payments for another set of fixed rate payments of a different tenor.

#### IRSwapFixFlt (InterestRateSwapFixedFloat)

An IRSwapFixFlt product swaps one set of fixed rate payments for another set of floating rate payments.

#### IRSwapFixFltLiborZeroComp (InterestRateSwapFixFloatLibor ZeroCompound)

An interest rate swap where a non-OIS floating rate leg is exchanged for a fixed leg. The floating leg is compounded at the underlying floating rate until maturity.

#### IRSwapFuture (InterestRateSwapFuture)

A future contract on an interest rate swap is a contractual obligation for the contract holder to purchase or sell an interest rate swap on a specified date at a predetermined price.

#### IRSwapIdx (InterestRateIndexSwap)

A swap transaction traded on a non-see through basis which swaps one set of payments based on the change in the level of a rates-based index (either on a total return or excess return basis) for another set of floating or fixed rate payments. The index may be a proprietary DB index or a market index.

#### IRXCcySwapBasis (InterestRateXCcyBasis)

The cross currency swap is a contract that involves the exchange of interest and sometimes principal in one currency for interest and principal in another currency. Optionally, principals are exchanged at the start and the end of the swap at a pre-agreed exchange rate. For a basis cross currency swap, the reset type for both legs is floating.

#### IRXCcySwapFixFix (InterestRateXCcyFixedFixed)

The cross currency swap is a contract that involves the exchange of interest and sometimes principal in one currency for interest and principal in another currency. Optionally, principals are exchanged at the start and the end of the swap at a pre-agreed exchange rate. For a fixed/fixed cross currency swap, the reset type for both legs is fixed.

#### IRXCcySwapFixFlt (InterestRateXCcyFixedFloat)

The cross currency swap is a contract that involves the exchange of interest and sometimes principal in one currency for interest and principal in another currency. Optionally, principals are exchanged at the start and the end of the swap at a pre-agreed exchange rate. For a fixed/float cross currency swap, the reset type for one leg is fixed and for the other leg is float.

#### MuniSwap (MuniSwap)

An interest rate swap were the reference rate is a municipal swap index.

#### OIFuture (OvernightIndexFuture)

A futures contract on an overnight index is a contractual obligation for the contract holder to cash settle against the overnight rate applicable on the last trading day of the contract.

#### OISFuture (OISSwapFuture)

A future contract on an overnight index swap, is a contractual obligation for the contract holder to purchase or sell an overnight index swap on a specified date at a predetermined price.

#### OISwap (InterestRateSwapOIS)

A product used for recording fixed Premium, Dividend, Interest or Payment cashflows.

#### OISwapLiborZeroComp (OvernightIndexedSwapLibor ZeroCompound)

An interest rate swap where an Overnight floating Rate (OIS) leg is exchanged for a non-OIS floating leg. The non-OIS floating leg is compounded at the underlying floating rate until maturity.

#### Repo (Repo)

A Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. For the party selling the security and agreeing to repurchase it in the future, it is a repo.

#### RepoEvergreen (RepoEvergreen)

A Repurchase Agreement (repo) or Securities Lending transaction that is booked term but the end date will continually move based on a pre-agreed schedule. Contract is terminated based on a schedule at either party's discretion with a notice. Securities are transferred at the start in exchange for cash and returned at the end of the contract in exchange for cash + interest.

#### RepoExtendable (RepoExtendable)

A Repurchase Agreement (repo) or Securities Lending transaction that is booked term but can be extended based on a pre-agreed schedule. Extension can happen at either party's discretion, or at one party's discretion with a reset in terms. Securities are transferred at the start in exchange for cash and returned at the end of the contract in exchange for cash + interest.

#### RepoOpen (RepoOpen)

A repo agreement without a fixed date for termination. Contract is terminated anytime at either party's discretion. Collateral (securities) are exchanged at start and end of contract.

#### RepoReverse (ReverseRepo)

Repo and the RepoReverse products define the same product but from the positions of the seller and repurchaser or buyer and reseller of the referenced security.

#### RepoReverseTriParty (TriPartyReverseRepo)

A Reverse Repo defines the purchase of securities coupled with agreements to sell them back to the initial seller at an agreed future date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan and interest to the lender and return of the collateral to the borrower. For the party buying the security and agreeing to sell in the future, the trade is a reverse repo transaction. The distinguishing feature of a tri-party repo is that a custodian bank or international clearing organization, the tri-party agent, acts as an intermediary between the two parties to the repo.

#### RepoTerm (RepoTerm)

A Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a predefined later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower.

#### EvergreenRepoReverse (EvergreenRepoReverse)

An Evergreen ReverseRepo defines the purchase of securities coupled with agreements to sell them back to the initial seller at a future date. The repo is booked term but the end date will continually moved based on a prearranged schedule. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan and interest to the lender and return of collateral to the borrower. For the party buying the security and agreeing to sell in the future, the trade is a reverse repo transaction.

#### RepoTriParty (TriPartyRepo)

A Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. For the party selling the security and agreeing to repurchase it in the future, it is a repo. The distinguishing feature of a tri-party repo is that a custodian bank or international clearing organization, the tri-party agent, acts as an intermediary between the two parties to the repo.

#### SellBuyBack (SellBuyBack)

A SellBuyBack consist of 2 distinct trades, a spot (outright) sale and a forward (outright) repurchase of security. The lending fee is implied in the (forward) repurchase price and cannot be adjusted during the course of a transaction. The lender does not retain beneficial ownership of the bonds and so does not receive any substitute payments.

#### StockBorrow (StockBorrow)

A transaction in which the transferor (lender) transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) - DB, will return equivalent securities at a future date in return for a fee. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower.

#### EvergreenStockBorrow (EvergreenStockBorrow)

A transaction in which the transferor (lender) transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) - DB, will return equivalent securities at a future date in return for a fee. The trade is booked term but the end date will continually moved based on a prearranged schedule. A lender will lose the voting rights associated with the stock and has the right to recall securities on loan at any time, unless otherwise agreed with the borrower.

#### StockLend (StockLend)

A transaction in which the transferor (lender) - DB, transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) will return equivalent securities at a future date in return for a fee. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower.

#### EvergreenStockLend (EvergreenStockLend)

A transaction in which the transferor (lender) - DB, transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) will return equivalent securities at a future date in return for a fee. The trade is booked term but the end date will continually moved based on a prearranged schedule. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower.

#### TreasuryYieldLockUnissued (TreasuryYieldLockUnissued)

An agreement to fix the yield of a specified Treasury bond on a specified future date. The agreed rate is called the lock rate. When the date arrives, the prevailing yield of the bond is compared to the lock Yield and a cash settlement is made based on the difference.

#### TRSMMDRate (TRSMMDRate)

The MMD TRS is intended to provide institutional clients with synthetic exposure to the broad municipal market. This TRS references a hypothetical noncall fixed rate bond, priced at a par coupon on the Settlement Date at a yield equal the MMD rate with a client-specified duration. The long party would receive Fixed equal to MMD on the Settlement Date and pay a fixed or floating funding rate. Upon TRS maturity, the long party receives or pays any price appreciation or depreciation of the hypothetical bond on the Termination Date vs pricing the bond using MMD on such date.

#### CashBalance (CashBalance)

A single currency cash balance relating to a settled trade(s). Can be a single cash position or an aggregate position for a number of trades.

#### FXCashBalance (FXCashBalance)

A dual currency cash balance relating to a settled trade(s). Can be a single cash position or an aggregate position for a number of trades.

#### CouponPayBuy (CouponPayBuy)

Coupon paid on Securities Borrowed.

#### CouponPaySell (CouponPaySell)

Coupon received on Securities Lending.

#### SecurityCollateralPledged (SecurityCollateralPledged)

Security Collateral pledged as part of margin call (Bonds, Equity and Other securities).

#### SecurityCollateralReceived (SecurityCollateralReceived)

Security Collateral received as part of margin call (Bonds, Equity and Other securities).

#### 2.2.2 Product Grouping Tables

For the purpose of model validation testing, we group the PRDS products above as follows. The products marked in bold are tested thoroughly in the MVR.

| Group | Product | Underlying | CouponStruct. | UnderlyingSpec. |
|-------|---------|------------|---------------|-----------------|
| (I.1) | CashCollateralPledged | InterestRate | Linear | |
| | CashCollateralReceived | InterestRate | Linear | |
| | SecurityCollateralPledged | InterestRate | Linear | |
| | SecurityCollateralReceived | InterestRate | Linear | |
| | Cashflow.OTCCashGuarantee | InterestRate | Linear | |
| | Cashflow.CashCoupon | InterestRate | Linear | |
| | Cashflow.Eq871m-FATCA | InterestRate | Linear | |
| | Cashflow.Eq871m-NRA | InterestRate | Linear | |
| | Cashflow.FX | InterestRate | Linear | |
| | Cashflow | InterestRate | Linear | |
| | Cashflow.Rates | InterestRate | Linear | |
| | Cashflow.SecProdCashGuarantee | InterestRate | Linear | |
| | Cashflow.Trailer | InterestRate | Linear | |
| | EqInternalCashAdj | InterestRate | Linear | |
| | Fee.Other | InterestRate | Linear | |
| | FeeAccrual | InterestRate | Linear | |
| | FeeSeriesFixed | InterestRate | Linear | |
| | FeeSeriesFloating | InterestRate | Linear | |
| | Fee.Remittance | InterestRate | Linear | |
| | FixedCashflowFee | InterestRate | Linear | |
| | CashBalance | InterestRate | Linear | |
| | FXCashBalance | InterestRate | Linear | |
| (I.2) | DepoDemandFixedOpenEnd | InterestRate | Linear | |
| | DepoDemandFloatOpenEnd | InterestRate | Linear | |

*Continued from previous page*

| Group | Product | Underlying | CouponStruct. | UnderlyingSpec. |
|-------|---------|------------|---------------|-----------------|
| | DepoTermFix | InterestRate | Linear | |
| | DepoTermFixedBullet | InterestRate | Linear | |
| | DepoTermFixVariableNotional | InterestRate | Linear | |
| | DepoTermFloatBullet | InterestRate | Linear | |
| | DepoTermFlt | InterestRate | Linear | |
| | DepoTermFltVariableNotional | InterestRate | Linear | |
| | InternalFundingDepoTermFixedBullet | InterestRate | Linear | |
| | InternalFundingDepoTermFloatBullet | InterestRate | Linear | |
| | InternalFundingDepoTermOISBullet | InterestRate | Linear | |
| | InternalFundingLoanTermFixedBullet | InterestRate | Linear | |
| | InternalFundingLoanTermFloatBullet | InterestRate | Linear | |
| | InternalFundingLoanTermOISBullet | InterestRate | Linear | |
| | IRFundingMMFixed | InterestRate | Linear | |
| | IRFundingMMFloat | InterestRate | Linear | |
| | IRFundingMMOI | InterestRate | Linear | |
| | IRFundingMMOpenEndCallAcc | InterestRate | Linear | |
| | IRFundingNameSwap | InterestRate | Linear | |
| (I.3) | FRA | InterestRate | Linear | |
| | IRSwapBasis | InterestRate | Linear | |
| | IRSwapBasisLiborZeroComp | InterestRate | Linear | |
| | IRSwapFiduciary | InterestRate | Linear | |
| | IRSwapFixFix | InterestRate | Linear | |
| | IRSwapFixFlt | InterestRate | Linear | |
| | IRSwapFixFltLiborZeroComp | InterestRate | Linear | |
| | IRSwapIdx | InterestRate | Linear | |
| | OISwap | InterestRate | Linear | |
| | OISwapLiborZeroComp | InterestRate | Linear | |
| (I.4) | IRFuture | InterestRate | Linear | Future |
| | IRSwapFuture | InterestRate | Linear | Future |
| | OIFuture | InterestRate | Linear | Future |
| | OISFuture | InterestRate | Linear | Future |
| (I.5) | FundMMIdx_Single | InterestRate | Linear | Index |
| | IRIndex*Single_DURBIAS | InterestRate | Linear | Index (Duration Bias Family) |

*Continued from previous page*

| Group | Product | Underlying | CouponStruct. | UnderlyingSpec. |
|-------|---------|------------|---------------|-----------------|
| | IRIndex*Single_MM | InterestRate | Linear | Index |
| (I.6) | TRSMMDRate | InterestRate | Linear | Muni |
| | MuniSwap | InterestRate | Linear | Muni |
| (I.7) | Repo | InterestRate | Linear | Repo |
| | RepoEvergreen | InterestRate | Linear | Repo |
| | RepoExtendable | InterestRate | Linear | Repo |
| | RepoOpen | InterestRate | Linear | Repo |
| | RepoReverse | InterestRate | Linear | Repo |
| | EvergreenRepoReverse | InterestRate | Linear | Repo |
| | RepoTerm | InterestRate | Linear | Repo |
| | StockBorrow | InterestRate | Linear | |
| | EvergreenStockBorrow | InterestRate | Linear | |
| | StockLend | InterestRate | Linear | |
| | EvergreenStockLend | InterestRate | Linear | |
| | BuySellBack | InterestRate | Linear | |
| | RepoTriParty | InterestRate | Linear | |
| | RepoReverseTriParty | InterestRate | Linear | |
| | SellBuyBack | InterestRate | Linear | |
| | EvergreenRepo | InterestRate | Linear | |
| | CouponPayBuy | InterestRate | Linear | |
| | CouponPaySell | InterestRate | Linear | |
| (I.8) | TreasuryYieldLockUnissued | InterestRate | Linear | Treasury |
| (I.9) | CertificateOfDepositFix | InterestRate | Linear | Deposit |
| | CertificateOfDepositFlt | InterestRate | Linear | Deposit |
| (I.10) | CorpBondDistressed | Corporate | Linear | Bond |
| (II.1) | FXForward | FX | Linear | |
| | FXSpot | FX | Linear | |
| | FXSwap | FX | Linear | |
| (III.1) | IRXCcySwapBasis | FX-InterestRate | Linear | |
| | IRXCcySwapFixFix | FX-InterestRate | Linear | |
| | IRXCcySwapFixFlt | FX-InterestRate | Linear | |
| (IV.1) | EqDeltaOne_QISForward | Equity | Linear | |

*Continued from previous page*

| Group | Product | Underlying | CouponStruct. | UnderlyingSpec. |
|-------|---------|------------|---------------|-----------------|
| | EqDeltaOne_QISNote | Equity | Linear | |
| | EqDeltaOne_QISSwap | Equity | Linear | |
| | EqSPAC | Equity | Linear | |

*Table 8: Product Grouping Table.*

For efficiency of testing, the products as given in Table 8 are split into product groups of similar features. Product group (I.1) covers products which are cash bookings, these are cashflows of to a primary product that have come from elsewhere. Product group (I.2) covers term deposits, including those internal funding deposits which are used for the funding of a trading book. Products in bold have been explicitly tested in the MVR. Product group (I.3) covers swaps and forward rate agreements. Products in bold have been explicitly tested in the MVR. Product group (I.4) covers products which have a future structure, which leads to a convexity adjustment. Products in bold have been explicitly tested in the MVR. Product group (I.5) covers those products with an index underlying. Product group (I.6) covers products which are linked to the municipal market. Product group (I.7) covers repo products and products where stock has been lent in return for a fee. Product group (I.8) covers products which are linked to treasuries. Product group (I.9) covers products which are linked to certificates of deposit.

Product group (II.1) covers FX products. Product group (III.1) covers cross currency swaps which are explicitly tested in [23] and hence no testing is presented in this document. Product group (IV.1) covers products which have an equity underlying.

#### 2.2.3 Model Inventory

In the following, we list the current trade counts as of 9th February, 2023, booked on the various MODEL implementations. Note that previously each implementation/component combination was considered to be an independent model. However, since all models reduce to the bootstrapping of the CURVE object, all models are (as part of the dispersion process) summarized to one preferred model, i.e. RateDeterministic, for all linear products.

Table 9 gives a snapshot of all trades booked using the DBOPT-RateDeterministic model.

| Product Name | No. Trades | PV (in million EUR) | abs. PV (in million EUR) |
|--------------|------------|--------------------|-----------------------|
| CashCollateralPledged | 3,260 | 2,505.370 | 2,505.370 |
| CashCollateralReceived | 783 | -1,421.146 | 1,421.146 |
| Cashflow | 331 | 831.471 | 839.126 |
| Cashflow.CashCoupon | 21 | 7.291 | 50.551 |
| Cashflow.Trailer | 7 | -1.293 | 1.293 |
| CertificateOfDepositFix | 253 | -17,033.620 | 17,033.620 |
| CertificateOfDepositFlt | 98 | 1,611.083 | 1,611.083 |
| DepoDemandFloatOpenEnd | 7 | 0.000 | 0.000 |
| DepoTermFix | 14 | 2.605 | 2.605 |
| DepoTermFixedBullet | 26,193 | 1,307.409 | 15,973.070 |
| DepoTermFloatBullet | 7 | -27.999 | 27.999 |
| EvergreenRepoReverse | 491 | 17,752.986 | 19,146.051 |
| EvergreenStockBorrow | 6,879 | -290.221 | 68,099.234 |
| EvergreenStockLend | 4,861 | 244.406 | 35,603.996 |
| FRA | 175,831 | 2,306.833 | 155,221.162 |
| FXForward | 6,612 | 271.919 | 23,483.399 |
| FXSpot | 9,190 | -43.584 | 7,529.494 |
| FXSwap | 8,152 | -106.872 | 180,188.816 |
| Fee.Other | 761,772 | -29,607.806 | 8,521,187.978 |
| Fee.Remittance | 30,897 | 0.000 | 0.000 |
| FeeAccrual | 5,717 | -98.232 | 125.221 |
| FeeSeriesFixed | 490 | 646.864 | 895.106 |
| FeeSeriesFloating | 739 | -241.442 | 593.266 |
| IRFundingMMFixed | 4,992,793 | -1,231,016.052 | 71,766,806.379 |
| IRFundingMMFloat | 608,558 | 464,482.893 | 40,145,641.662 |
| IRFundingMMOI | 4,554 | -405,214.111 | 2,049,708.066 |
| IRFundingMMOpenEndCallAcc | 49,075 | -145,467.176 | 4,231,898.589 |
| IRFundingNameSwap | 90,457 | 12,970.706 | 953,847.955 |
| IRFuture | 1,450,191 | -30,936.294 | 195,643.199 |
| IRSwapBasis | 107,968 | 611.013 | 63,329.663 |
| IRSwapFixFix | 350,626 | -2,100,806.229 | 5,014,799.468 |
| IRSwapFixFlt | 5,750,890 | 30,486.200 | 27,587,682.297 |
| IRSwapFixFltLiborZeroComp | 22,734 | 7,194.658 | 178,083.064 |
| IRXCcySwapBasis | 9,625 | -13,584.570 | 638,117.324 |
| IRXCcySwapFixFix | 4,570 | 1,189.334 | 127,264.819 |
| IRXCcySwapFixFlt | 18,445 | 1,456.254 | 245,084.794 |
| InternalFundingDepoTermFixedBullet | 15,264 | -368,710.876 | 368,712.283 |
| InternalFundingDepoTermFloatBullet | 125 | -23,251.429 | 33,717.580 |
| InternalFundingDepoTermOISBullet | 7 | -664.395 | 664.395 |
| InternalFundingLoanTermFixedBullet | 14,447 | 318,458.236 | 318,459.954 |
| InternalFundingLoanTermFloatBullet | 2,169 | -732.861 | 85,400.733 |
| InternalFundingLoanTermOISBullet | 7 | 667.499 | 667.499 |
| OIFuture | 584,035 | -194.551 | 15,795.000 |
| OISFuture | 1,045,343 | 4,628.736 | 14,441.921 |
| OISwap | 2,635,833 | 31,538.501 | 7,589,813.645 |

*Continued on next page*

| Product Name | No. Trades | PV (in million EUR) | abs. PV (in million EUR) |
|--------------|------------|--------------------|-----------------------|
| Repo | 1,353,157 | -4,559,407.055 | 4,679,107.676 |
| RepoEvergreen | 278 | -36,735.798 | 36,735.798 |
| RepoReverse | 1,866,649 | 4,356,051.501 | 4,521,683.525 |
| StockBorrow | 88,433 | 179,110.085 | 295,412.457 |
| StockLend | 21,723 | -20,996.013 | 30,502.859 |
| TreasuryYieldLockUnissued | 20 | 10.714 | 19.914 |

*Table 9: Model inventory for the DBOPT-RateDeterministic model as of 09/02/2023.*

Table 10 gives a snapshot of all trades booked using the DBCANALYTIC-RateDeterministic model.

| Product Name | No. Trades | PV (in million EUR) | abs. PV (in million EUR) |
|--------------|------------|--------------------|-----------------------|
| Cashflow | 1,500 | 12,854.079 | 13,300.005 |
| Cashflow.CashCoupon | 80 | -5.900 | 5.927 |
| Cashflow.Eq871m-NRA | 41 | 0.627 | 0.806 |
| Cashflow.FX | 14 | -11.532 | 20.953 |
| Cashflow.OTCCashGuarantee | 23 | 0.418 | 7.159 |
| Cashflow.Rates | 9 | 23.528 | 25.363 |
| Cashflow.SecProdCashGuarantee | 876 | -1,509.384 | 5,649.769 |
| Cashflow.Trailer | 1,460 | -4.757 | 4.767 |
| EqSPAC | 5,072 | 1,268.199 | 1,317.313 |
| Fee.Other | 1,428 | 121.816 | 1,094.804 |
| FeeSeriesFixed | 1,452 | 212.985 | 370.316 |
| FixedCashflowFee | 36 | -0.729 | 0.730 |
| IRFundingMMFixed | 6,510 | -61,863.825 | 419,144.204 |
| IRFundingMMFloat | 12,303 | -444,607.374 | 968,227.194 |
| IRSwapFixFix | 102 | -7.835 | 8,483.967 |
| IRSwapFixFlt | 1,142 | -27.510 | 7,150.088 |
| IRXCcySwapBasis | 8 | -0.199 | 63.036 |
| IRXCcySwapFixFix | 212 | -132.789 | 3,260.437 |
| IRXCcySwapFixFlt | 295 | 22.601 | 1,956.880 |
| Repo | 7,090 | -54,691.393 | 90,025.172 |
| RepoReverse | 18,708 | 52,721.574 | 91,906.893 |
| StockBorrow | 924 | -7.413 | 2,999.171 |
| StockLend | 232 | 1.420 | 1.420 |

*Continued on next page*

| Product Name | No. Trades | PV (in million EUR) | abs. PV (in million EUR) |
|--------------|------------|--------------------|-----------------------|
| CorpBondDistressed | 401 | 336.879 | 416.22 |

*Table 10: Model inventory for the DBCANALYTIC-RateDeterministic model as of 09/02/2023. For * marked prod - CorpBondDistressed, inventory information is presented as of 27th April, 2023.*

Table 11 gives a snapshot of all trades booked using the DBL-RateDeterministic model as of 09/02/2023. For * marked prod - CorpBondDistressed, inventory information is presented as of 27th April, 2023.

Table 14 gives a snapshot of all trades booked using the DBM-RateDeterministic model.

| Product Name | No. Trades | PV (in EUR) | abs. PV (in EUR) |
|--------------|------------|------------|-----------------|
|  |  |  |  |

*Table 14: Model inventory for the DBM-RateDeterministic model as of 09/02/2023.*

Note that no trades were made using DBOPT-ForwardRateDeterministic.

### 2.3 Model Description

#### 2.3.2 Model Assumptions

The products approved for the RateDeterministic model are volatility independent. This means that the interest rates may be assumed to be deterministic for computational purposes, without loss of generality.

Note that this does not mean that we have (unrealistically) assumed that the market interest rates are deterministic. Rather it means that for linear trades the market volatility does not affect the price, so the price and risk sensitivities can be calculated assuming that there is no volatility, which considerably simplifies the calculations. Therefore, the prices and risk-sensitivities calculated under this model assumption are correct and accurate.

#### 2.3.3 Model Parameters and Market Inputs

The main object in the RateDeterministic model is the curve object.

#### 2.3.4 Model Dynamics and Mathematical Description of the Processes

There are three classes of MODEL implementation available in DBAnalytics: analytic, Monte-Carlo (also known as base), and PDE or TREE methods (often referred simply as tree).

ANALYTIC (e.g., DBSMC, DBOPT or DBCANALYTIC^1)
Analytic models work by abstracting the payoff (applying simplifications to reduce the number of risk components affecting the product) and directly valuing the given payoff using analytic methods (e.g., a simple pricing formula such as Black-Scholes) or semi-analytic methods (e.g., a T-dimensional integration such as it is required to calculate a replicating portfolio for a variance swap).

The payoffs are typically valued using specific pricing functions or in the case of payoffs that can be decomposed into the sum of simpler components by collections of pricing functions.

When intrinsic calculations are invoked (i.e. CalcIntrinsic is set to 1) then the volatility is set to 0 irrespective of the inputs. When the volatility is set to zero the pricing functions also call specific intrinsic versions which (where volatility in the case that volatility is present) then non-intrinsic functions (i.e. Simple Option pricing functions) are used. In the case of linear products which are independent of volatility, we end up with an equivalent valuation to intrinsic.

BASE (e.g., DBX or DBM)
Monte-Carlo models work by formulating the option pricing problem as a problem to solve a particular version of the expected payoff under the risk-neutral measure. For simple linear products or European style options this is done by simulating underlyings according to risk-neutral SDE diffusions and then taking the average of the discounted payoff. The relevant drift coefficients of

^1The DBCANALYTIC model is a submodel of the DBC model implementation for analytic and semi analytic derivative pricing.

#### 2.3.5 Curve Bootstrapping

##### 2.3.5.1 Introduction to Curve Bootstrapping

##### 2.3.5.2 Futures Convexity Correction

One of the most liquid interest rate contracts is the Eurodollar (ED) futures contract (and its Euro and Yen equivalents), the underlying being a Libor rate. They are exchange traded, and are fundamental building blocks of interest rate term curves.

The ED contract is subject to margining. Its price incorporates information on the relevant forward rate (required for constructing an interest rate curve), but also on what is known as a convexity adjustment.

The convexity adjustment is the extra value that a futures contract on a rate has over a forward contract on the same rate, with the difference usually being small. The difference occurs because futures contracts are settled daily whereas forward contracts are settled at maturity.

For example, when the price of an ED futures contract increases due to a decrease in the interest rate, the daily profits accrue at a lower rate of interest. Likewise when the price of an ED futures contract decreases due to an increase in the interest rate, the daily losses are financed at a higher rate of interest. Since forward prices are not settled until maturity, they are not affected in this way when interest rates change unpredictably. As such futures contracts on rates are less attractive to investors and therefore investors will demand a higher interest rate on their investment (i.e., futures contracts will trade at a discounted price to forward rate agreements of the same rate).

Assuming a single factor, normal interest-rate model with a flat volatility surface, the size of the convexity adjustment can be approximated as

$\text{FuturesRate} = \text{FRA} - \sigma^2 \ell (\ell/2 + \tau),$

where $\sigma$ is the annualized basis-point volatility, $\ell$ is the time to settlement of the futures contract, and $\tau$ is the futures tenor, e.g., 3m for a Eurodollar future. As can be seen, the convexity correction increases with increasing maturity and varies with rate volatility. This approximation is viewed as a rough estimate only.

The DBAnalytics curve permits direct input of an exogenously calculated futures convexity correction in the Convexity column of the futures subtable in the curve object. The futures rates are then converted internally into forward rates by reducing the rate implied by the futures subtable by the convexity. The implied forward rate in terms of the futures price, $p$, and convexity, $c$, is given by:

$r = 1 - \frac{p}{10000} - c.$

##### 2.3.5.3 Cash-to-Futures Bridge

Interest rate trading desks have two requirements for the short end of the curve:

* Accurately reprice the spot libor fixings appropriate for their trading books.
* The curve should exhibit a smooth transition from the cash to futures part of the curve. Specifically, the overnight forward rates should not jump across the cash to futures bridge.

The property CashToFuture in the DBAnalytics curve allows control over this behaviour. The setting CashToFuture=EXACTCASH allows the trading desk requirements to be met.

As shown in Figure 1, when CashToFuture=EXACTCASH, the original cash instrument that overlaps with the first futures contract is replaced by a cash stub with a maturity date equal to the settlement date of the first futures settlement date. The simple rate for this cash stub is calculated so as to reprice the original cash instrument with settle and maturity dates $C_{settle}$ and $C_{maturity}$ respectively.

#### Figure 1: Cash to Futures Bridge Curve Setting

![Figure 1: When the cash to futures bridge curve setting CashToFuture=EXACTCASH, the maturity date of the original cash instrument is not included in the vector of times used in the yield curve bootstrap. This will prevent overnight forwards exhibiting artificial jumps as one moves along the yield curve cash to futures.](./Fig/1.png)

##### 2.3.5.4 Par Value Assumption

In the definition of swap rate, it is assumed that the floating leg of a swap is priced at par. This is true only if for each floating leg cash flow the period of index rate (typically three-month LIBOR) is identical to the period over which the interest accrues. Although this assumption is always taken for granted, especially in research, actual swaps traded in the market do not always agree with it. For real swaps, there are adjustments on payment dates and index periods, mostly to avoid weekends and holidays. As a result, an index period does not always match its accrual period, which invalidates the assumption for par value. This adjustment usually results in small changes in swap rates, less than one-tenth of a basis point, on average. The effect is bigger, though, for short-dated swaps.

##### 2.3.5.5 Asymptotic Behaviour

Usually reliable swap rate inputs reach up to thirty years in maturity. Extrapolation is required if a swap curve is used to price securities with longer maturities. Unless there is convincing evidence regarding the temporal behaviour of yield curves in terms of a flat forward rate, that is, the last reliable forward rate is assumed to be the curvature asymptotic value. Specifically, the last forward rate of a piecewise flat curve can be used for maturity beyond the last curve piece. In the DBAnalytics curve, the ExtrapMethod property set to CONSTANT_FORWARD gives this behaviour.

##### 2.3.5.6 Curve Build Methods

In the following we describe two of the most common methods that DBAnalytics uses to build (interpolate) the curve. These are the hybrid forward method and the hybrid constant forward method.

##### 2.3.5.7 Constant Forward Curve Bootstrap

The constant forward Build Method constructs the curve using piecewise constant forwards. Given curve instruments with time points $t_0, t_1, \ldots, t_m$, the bootstrapping is done on the continuously compounded forward rates of each segment, $f_i(t) = f_i$ for $i = 0, 1, \ldots, m - 1$. More specifically:

$$DF(t) = DF(t_i) \exp(-F_i(t)). \quad \text{for} \quad t_i \leq t \leq t_{i+1}.$$

where

$$F_i(t) = \int_{t_i}^{t} f_i(s)ds = (t - t_i) f_i$$

$$DF(t_i) = \exp(-\sum_{k=0}^{i-1} F_k(t_{k+1})) = \exp(-\sum_{k=0}^{i-1} (t_{k+1} - t_k)f_k).$$

As noted in the section on the Hybrid Forward curve bootstrap, see Section 2.3.5.9, in common with other non-parametric curve build methods in DBAnalytics, the Newton-Raphson method is used to solve for the value of forward rate required to reprice the input instrument.

##### 2.3.5.8 Linear Zero Rate Curve Bootstrap

The linear zero Build Method constructs the curve by linear interpolation on the zero rate between time points. Given curve instruments with time points $t_0, t_1, \ldots, t_m$, the bootstrapping is done on the zero rates at each time point, $y_i(t) = y_i$ for $i = 0, 1, \ldots, m - 1$. More specifically:

$$DF(t_i) = \exp(-y_i t_i). \quad \text{for} \quad i = 0, 1, \ldots, m - 1,$$

and

$$DF(t^*) = \exp(-y^* t^*). \quad \text{for} \quad t_i \leq t^* \leq t_{i+1},$$

where

$$y^* = y_i + \frac{t^* - t_i}{t_{i+1} - t_i}(y_{i+1} - y_i).$$

##### 2.3.5.9 Hybrid Forward Curve Bootstrap

The hybrid forward Build Method fits piecewise-continuous quadratic splines to the continuously-compounded forward rate. Given the time points $t_0, t_1, \ldots, t_m$ from the curve instruments, the hybrid forward method bootstraps on continuously compounded forward rates of each segment, $f_i(t)$. More specifically:

$$DF(t) = DF(t_i) \exp(-F_i(t)), \quad \text{for} \quad t_i \leq t \leq t_{i+1}.$$

where

$$F_i(t) = \int_{t_i}^{t} f_i(s)ds$$

$$DF(t_i) = \exp(-\sum_{k=0}^{i-1} F_k(t_{k+1})).$$

The hybrid forward bootstrap is carried out in two phases. In the first phase, the bootstrapping of constant forwards is done. Then in the second phase, this constant bootstrapping is used to fit ratic splines.

Phase 1: Constant Forward Bootstrap

As the initial phase, the $f_i(t)$ are bootstrapped as constant forwards, so for each segment we have

$$f_i(t) = f_i \quad \text{for} \quad i = 0, 1, \ldots, m - 1.$$

such that the curve instruments are repriced.

Phase 2: Ratic Spline Bootstrap

In the next phase the method smooths the forward rate using ratic splines. First the forward rates at the time points are derived by linear interpolation from the mid-points of segments in the constant forward bootstrap. In other words, the $f_i(t_i)$ are given by

$$f_i(t_i) = f_i^* = f_i + w_i(f_{i-1} - f_i) \quad \text{for} \quad i = 1, 2, \ldots, m - 1.$$

where the weight is simply that given by linear interpolation between the mid-points of the relevant segments for that time point

$$w_i = \frac{t_i - t_{m_i}}{t_{i-1} - t_{m_i}}, \quad t_{m_i} = \frac{t_i + t_{i-1}}{2}, \quad t_{m_{i+1}} = \frac{t_{i+1} + t_i}{2}$$

The 0-th segment is linear and so we bootstrap $f_0^*$ such that

$$f_0(t) = f_0^* + \frac{f_1^* - f_0^*}{t_1 - t_0}(t - t_0).$$

The ratic spline is fitted for segments $i = 1, 2, \ldots, m - 2$, and as we have already derived the $f_i^*$ we only need to bootstrap the curvature coefficients $c_i$, where

$$f_i(t) = f_i^* + \frac{f_{i+1}^* - f_i^*}{t_{i+1} - t_i}(t - t_i) + c_i(t - t_i)(t - t_{i+1}).$$

Then, the $(m - 1)$-th segment is also linear, and so $f_{m-1}^*$ is bootstrapped so that

$$f_{m-1}(t) = f_{m-1}^* + \frac{f_m^* - f_{m-1}^*}{t_m - t_{m-1}}(t - t_{m-1}).$$

Lastly, the $m$-th segment does not require bootstrapping and is flat so

$$f_m(t) = f_m^*.$$

We note that at each stage of the hybrid forward bootstrap, the integral over the continuously compounded forwards $F_i(t)$ is straightforward to calculate, and it's Jacobian is available analytically.

When bootstrapping the curve for each input build instrument, the value of the forward rate parameter that reprices the instrument to the required present value must be determined. The solver used for this purpose is the Newton-Raphson with an analytical derivative to solve for the parameter iteratively. This is common to all the non parametric curve build methods available in DBAnalytics. More details are available in [10].

##### 2.3.5.10 Hybrid Constant Forward Curve Bootstrap

This is currently the most common build method used by the interest rate trading desks at Deutsche Bank.

A straightforward modification of the hybrid forward build method discussed in the previous section is to have the front end of the curve bootstrapped as though the build method were constant forward up to the expiry date of the last future used in the bootstrap procedure.

This can be achieved by performing the first constant forward bootstrap stage of the hybrid forward build method, skipping the linear spline, and ensuring the curvature coefficients are all set to zero up to the expiry date of the last future. After the last future, the usual smooth hybrid forward curve is bootstrapped.

The motivation behind this is the cash, FRA and futures rates at the short end of the swap curve can often display a rich structure. Since a constant forward bootstrap implies a linear interpolation on term rates, we can avoid overfitting on the short end of the curve this way.

##### 2.3.5.11 CSA Swap Curve Construction

The Collateral Support Annex (CSA), is a legal document which regulates credit support (collateral) for derivative transactions. Two otherwise identical swap contracts having different CSAs, will also have different prices due to the different credit risks that each contract carries. DBAnalytics has a process for bootstrapping both the OIS discount curve and the Libor forecasting curve simultaneously, when an OIS spreads subtable is present in the curve object with usetype=DISCOUNTBASIS. These two curves are required for example when pricing Interest Rate Swaps with full collateral (fundingname=DOMOIS).When full collateral is posted, the counterparty credit risk is eliminated. As a proxy for the risk free rate applicable in this circumstance, the cashflows are discounted at the overnight index swap rate, which has the least risk (and hence lowest rate) of the market curves. In this example the Libor forward payments are derived from the Libor discount curve whilst the cashflows are discounted using the OIS discount curve. Therefore, both curves are required for pricing. In what follows we describe the simultaneous bootstrap algorithm that DBAnalytics uses to consistently generate these two curves.

##### 2.3.5.12 Base (noOIS) Curve

To setup notation, consider first the case of a single Interest Rate Swap (IRS) market in a single currency only. The payment dates of the fixed and floating sides of the IRS can differ. Then, the market swap rate as the coupon of the fixed leg is given by

$$C_N \sum_{m=1}^{N} \Delta_m D(t, T_m) = \sum_{m=1}^{M} \Delta_m L(T_{m-1}, T_m)D(t, T_m).$$

Here, $C_N$ is the swap rate of the length-N IRS at time $t$, $\Delta_m$ and $\Delta_m$ are the daycount fractions of the fixed and floating legs, respectively. $L(T_{m-1}, T_m)$ is the Libor rate at time $t$ that resets at time $T_{m-1}$ and matures at time $T_m$.

If the Libor is taken as the discounting rate, then the following no-arbitrage condition between the zero coupon bonds and the Libor floating payment holds.

$$L(T_{m-1}, T_m) = \frac{1}{\Delta_m} \left( \frac{D(t, T_{m-1})}{D(t, T_m)} - 1 \right)$$

##### 2.3.5.13 Swap Curve with CSA

Here we discuss how DBAnalytics simultaneously bootstraps the OIS discounting curve and the Libor forecasting curve. Let us start with the Bootstrap conditions.

LIBOR swaps priced to par:

$$\sum_{m=1}^{M} L(T_{m-1}, T_m) \Delta_m D_{OIS}(T_m) = C_N \sum_{m=1}^{N} \Delta_m D_{OIS}(T_m).$$

LIBOR + OIS spread $s_{OIS}$ priced to par:

$$\sum_{m=1}^{M} (L(T_{m-1}, T_m) + s_{OIS}) \Delta_m D_{OIS}(T_m) + D_{OIS}(T_M) = D_{OIS}(T_0).$$

Then we can bootstrap the Libors $L$ and OIS discount factors $D_{OIS}$. The frequency of the swap fixed leg can be different to that of the floating leg.

##### 2.3.5.14 Deriving the OIS Discounting Curve

In DBAnalytics the bootstrap of $D_{OIS}(t)$ is achieved by an adjustment to the base curve discount factors $D_0(t)$. Recall the base discount factors are bootstrapped without any OIS-Libor spread information. We have the following relationship:

$$D_{OIS}(t) = D_0(t) \exp(\lambda_{OIS}(t) t).$$

The interpolation scheme used for the spread lambda $\lambda_{OIS}(t)$ is determined by the curve property SpreadBuildMethod.

##### 2.3.5.15 Avoiding a Multi-Dimensional Goal Seek

We note that in DBAnalytics a base Libor curve is always bootstrapped first. This corresponds to a Libor curve without any spreads specified. The base discount factors from this curve are subsequently used to specify the discount factors for all other spread curves.

In the DBAnalytics OIS-LIBOR curve build, the algorithm creates a matching IR swap for each OIS-LIBOR spread such that their maturity dates match.

##### 2.3.5.16 Deriving the Libor Forecasting Curve

The Libor forecasting is derived from:

$$\sum_{m=1}^{M} L(T_{m-1}, T_m) \Delta_m D_{OIS}(T_m) = C_N \sum_{m=1}^{N} \Delta_m D_{OIS}(T_m). \quad (3)$$

To bootstrap $D_{LIBOR}(t)$, we know:

$$L(T_{m-1}, T_i) = \frac{1}{\Delta_m} \left( \frac{D_{LIBOR}(T_{m-1})}{D_{LIBOR}(t)} - 1 \right).$$

Once again we can impose the relationship:

$$D_{LIBOR}(t) = D_0(t) \exp(\lambda_{LIBOR}(t) t).$$

We determine the $\lambda_{LIBOR}(t)$ which solves equation (3). Here, the original input swaps used to construct the curve and the ones created to match the maturities of the OIS swaps are processed.

##### 2.3.5.17 Cash and Futures

As the cash and futures are determined by the LIBOR forecasting curve, the simultaneous bootstrap in this segment of the curve is not required. In this segment of the curve $\lambda_{LIBOR}(t) = 0$.

##### 2.3.5.18 Cash, Futures and Swaps Connection

SmoothFutures = YES are designed to have smooth 3m LIBOR forward rates with nested 3m futures. There is no globally calibrated function, but 3m LIBOR forward are roughly linearly interpolated. With this feature, if we handle input cashflows with 3m period (e.g., 3m LIBOR, 1d rate 3m FRA, etc.) as fixtures and globally fit cash + futures, we can achieve linear interpolation for the whole front end. This is the reason why we recommend (SmoothFutures, CashToFuture) = (YES, EXACT) for 3m LIBOR tenor curve build.

SmoothFuture = BACKWARD was introduced in DBA version 780 to improve connection between futures and swaps.

The flag FutureToSwap = SWAPPRIORITY was introduced at DBA version 690 to use futures overlapped with swaps just to give a trend of yield curve keeping overlapped swaps repriced. The flag FutureToSwap = FUTUREPRIORITY would keep overlapped futures repriced.

The parameter SmoothFuturesExtrapolation is relevant only when SmoothFutures = BACKWARDDAILY and introduced to achieve smooth connection between futures and swaps region together with FutureToSwaps = SWAPPRIORITY.

Possible values are:

* SmoothFuturesExtrapolation = FLAT
* SmoothFuturesExtrapolation = LINEAR: the recommended value for intra-day CURVEs where futures overlapped with swaps are inputted to explicitly control shape of the future-swap overlapping region.
* SmoothFuturesExtrapolation = QUADRATIC: the recommended value for EOD CURVEs where no futures overlapped with swaps.

The reason why SmoothFuturesExtrapolation = LINEAR improves futures-swaps connection is the following:

FutureToSwaps = SWAPPRIORITY constructs 3m tenor curve as multiplication of the front end discount factor by the long end discount factor.

$$DF_{3m}(t) = DF_{front}(t) DF_{end}(t) \quad (4)$$

Where the front end discount factor $DF_{front}(t)$ is built off only Cash/Futures. Then we bootstrap $DF_{end}(t)$ so that swaps are repriced with $DF_{3m}(t)$

SmoothFuturesExtrapolation = LINEAR makes the extrapolation of $DF_{front}(t)$ after the last Cash/Futures smoother.

The main idea of SmoothFuturesExtrapolation = QUADRATIC is to internally add futures overlapped with first 2 swaps (here up to 5yr), where levels of internally added futures are estimated to be in line with first 2 swap levels. Then finally build the curve with SmoothFuturesExtrapolation = LINEAR. Some comments on details of the method:

* We estimate levels of internally added futures by pw-linear interpolation of 3m LIBOR (more exactly LiborBasis) until the last future settle and quadratic interpolation of 3m LIBOR between the last futures settle and the maturity of the 2nd swap. And we find the quadratic interpolation to hit levels of 2 swaps.
* When finding the quadratic interpolation, we use 0 discount rate (i.e. discount factor is 1) so that we don't need to build discount factor to estimate the quadratic interpolation. Notice that the method (using 0 discount rate) is good enough because the internally added futures are just to find interpolation backbone $DF_{front}(t)$ for connection between futures and swaps.
* We add internal future with
  - Settle = the 2nd swap maturity - 3m (LiborBasis)
  - Maturity = the 2nd swap maturity

Then add futures backward for every 3m. This is to ensure that the last interpolation point of $DF_{front}(t)$ is one of time peg of $DF_{end}(t)$. This reduces risk of having oscillation when building $DF_{end}(t)$. Levels of these internal futures are estimated by the quadratic function.

##### 2.3.5.19 Libor Tenor Basis

Throughout the following discussion, we assume the OIS discounting is bootstrapped simultaneously with a Libor forecasting curve.

Interest rate trading desks build a base Libor curve to ensure for a given Libor tenor, they achieve accurate repricing of the spot libor fixing, and generation of smooth LIBOR forwards for a particular tenor. For instance, the EUR Swaps trading desk base curve will ensure the 3m EUR Libor spot fixing is repriced, and a smooth curve of 3m EUR forward Libors can be calculated.

In the single currency market, the tenor swap, which exchanges the two Libors with different tenors, requires non-zero basis spread to be added in either side. It is clear that we cannot treat all Libors equally in order to price the financial products consistently with existing swap markets.

The Libor tenor basis derived from the tenor swaps can be handled using the SpotLiborSpreads subtable of the DBAnalytics curve object. In particular, the LiborBasis property of the curve sets the float leg frequency of the input par swaps used to construct the base Libor curve.

The Base Libor curve should be constructed using instruments that depend on a single Libor tenor, which should also coincide with the value of the LiborBasis property in the curve, e.g., quarterly. This is vital for the SpotLiborSpreads functionality of the curve to work consistently.

We now extend the earlier analysis for building OIS-Libor curves to consider the simultaneous repricing of the Libor swap market and the Libor-OIS basis swap market. In additionn we require repricing of the tenor basis swap market.

LIBOR swaps priced to par:

$$\sum_{m=1}^{M} L(T_{m-1}, T_m) \Delta_m D_{OIS}(T_m) = C_N \sum_{m=1}^{N} \Delta_m D_{OIS}(T_m).$$

LIBOR + OIS spread $s_{OIS}$ priced to par:

$$\sum_{m=1}^{M} (L(T_{m-1}, T_m) + s_{OIS}) \Delta_m D_{OIS}(T_m) + D_{OIS}(T_M) = D_{OIS}(T_0).$$

One market convention, for quoting the Libor tenor swap basis spread, is to have this spread $\tau_n$ on the shorter tenor leg of the swap. This is called the one swap quotation method for the Libor tenor basis spread. We will discuss the alternative two swap quotation method later.

In the one swap convention we have:

$$\sum_{m=1}^{N} (L(T_{m-1}, T_m) + \tau_m) \Delta_m D_{OIS}(T_m) = \sum_{m=1}^{M} L(T_{m-1}, T_m) \Delta_m D_{OIS}(T_m)$$

##### 2.3.5.20 Libor Tenor Basis Spread Adjustment Factors

For Libor rates with tenor not equal to the curves LiborBasis a set of spread adjustment factors are calculated in the following way.

If the base Libor curve is built to provide good 3m Libor forwards, then LiborBasis = Quarterly. To obtain a good 6m Libor we need to calculate:

$$L_{6m}(T_1, T_2) = \frac{1}{\Delta(T_1, T_2)} \left( \frac{D_{6m}(T_1)}{D_{6m}(T_2)} - 1 \right),$$

where

$$D_{6m}(t) = ADJ_{basis}(t) D_{3m}(t),$$

The adjustment factor $ADJ_{basis}$ is then bootstrapped using the Libor forecasting curve and the instruments input in the SpotLiborSpreads subtable of the DBAnalytics curve. In the bootstrap procedure, the SpotLiborSpreads instruments are priced at par with OIS discounting. The SpreadBuildMethod determines the bootstrap build method used for the spread adjustment factors.

##### 2.3.5.21 Libor Tenor Basis Spreads Quotation

Without loss of generality, we refer to the 3s6s Libor tenor basis in the following, where the base Libor forecasting curve is built to generate good 3m forwards.

For instrument types cash, futures and FRAs, the spread is the difference between 6m Libor quoted in the market and the synthetic 6m Libor calculated from the 3m Libor forecasting curve.

For swaps, the spot Libor tenor basis has two equivalent market quotation styles, commonly referred to as the two-swap and one-swap quotation method discussed previously.

In the two swap convention, the spread s is the difference between the fair swap rate of two swaps, each with the same fixed legs, but with different floating legs. Here, one can bootstrap $ADJ_{3s6s}(t)$ using

$$\sum_{i=1}^{N} L_{6m}(T_{i-1}, T_i) \Delta_i D_{OIS}(T_i) = (C + s) \sum_{m=1}^{N} \Delta_n D_{OIS}(T_n).$$

where for the par swap with float leg indexed to 3m Libor and OIS discounting one has

$$\sum_{i=1}^{N} L_{3m}(T_{i-1}, T_i) \Delta_i D_{OIS}(T_i) = C \sum_{m=1}^{N} \Delta_n D_{OIS}(T_n).$$

Note it is straightforward to convert between the one-swap and two-swap quotation methods for spot Libor tenor basis swaps.

##### 2.3.5.22 OIS Date Compression

OIS date compression has been introduced in Release Note 420_00094_R.

We introduce the notation $r_{OIS}$ for the OIS rate,

$$r_{OIS}(T_i, T_j) := L(T_i, T_j) + s_{OIS}, \quad (5)$$

and $\Delta(T_i, T_j)$ as the day count fraction between two arbitrary time points $T_i, T_j$.

When using the day count of type ACT/... (e.g., ACT/360, ACT/365), a 1b WAVG OIS rate is calculated as

$$\sum_{i=1}^{m} r_{OIS}(T_{i-1}, T_i) \frac{\Delta(T_{i-1}, T_i)}{\Delta(T_0, T_m)} = \sum_{i=1}^{m} \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} - 1 \right) \frac{1}{\Delta(T_{i-1}, T_i)} \frac{\Delta(T_{i-1}, T_i)}{\Delta(T_0, T_m)} = \frac{1}{\Delta(T_0, T_m)} \sum_{i=1}^{m} \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} - 1 \right) \quad (6)$$

Since $T_0, T_1, \ldots, T_m$ are all 1b apart the summation in equation (6) can be very big, so the calculation of the WAVG OIS rate can take a long time. To address this issue, when OISDateCompression = YES (in the CURVE object), we approximate

$$\frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} - 1 \approx \ln \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} \right) \quad (7)$$

Equation (6) then becomes

$$\sum_{i=1}^{m} r_{OIS}(T_{i-1}, T_i) \frac{\Delta(T_{i-1}, T_i)}{\Delta(T_0, T_m)} \approx \frac{1}{\Delta(T_0, T_m)} \sum_{i=1}^{m} \ln \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} \right) = \frac{1}{\Delta(T_0, T_m)} \ln \left( \frac{D_{OIS}(T_0)}{D_{OIS}(T_m)} \right) \quad (8)$$

Under the approximation (7), we can see that to calculate the 1b WAVG OIS rate, we only need to calculate discount factors at the period start $T_0$ and end $T_m$, and save the calculations at the intermediate points. To estimate the approximation error in equation (7), we expand the Taylor series for $\ln$:

$$\ln(x) = x - 1 - \frac{1}{2}(x - 1)^2 + O((x - 1)^3), \quad (9)$$

so the error we make is

$$\ln \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} \right) - \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} - 1 \right) \approx \frac{1}{2} \left( \frac{D_{OIS}(T_{i-1})}{D_{OIS}(T_i)} - 1 \right)^2 = \frac{1}{2} (r_{OIS}(T_{i-1}, T_i)\Delta(T_{i-1}, T_i))^2. \quad (10)$$

For example, for $\Delta(T_{i-1}, T_i)) = 1/365$ and $r_{OIS} = 5\%$, the error would be $10^{-8}$. For simplification, assuming all $\Delta(T_{i-1}, T_i) = 1/365$ (which is not true, because of weekends and holidays the order of error would change but would not become material). In the simplification calculation we assumed that $\Delta(T_{i-1}, T_i) = 1/365$, which is not true because not all dates are 1b apart, but even adding weekends and holidays the order of error would change but would not become material. In the simplified calculation with OISDateCompression = YES when calculating 1b WAVG OIS rates with FwdRate() and SwapRate(). For more information, we refer to the DBA documentation [16].

The commonly used type of averaging OIS rates is EONIA (Euro Overnight Index Average). It is defined as

$$r_{EONIA}(T_0, T_m) := \frac{\prod_{i=1}^{m} (1 + r_{OIS}(T_{i-1}, T_i)\Delta(T_{i-1}, T_i)) - 1}{\Delta(T_0, T_m)} = \frac{\frac{D_{OIS}(T_0)}{D_{OIS}(T_m)} - 1}{\Delta(T_0, T_m)}. \quad (12)$$

#### 2.3.6 Model Calibration

Apart from the bootstrapping of the curves which is described above, there is no model calibration.

#### 2.3.7 Risk Sensitivities

The DBA conventions for the Greeks do not correspond to the typical conventions. In particular, the deltas have opposite signs in DBA to the standard signs. Further, note that the Greeks in DBA indicate changes in absolute value, rather than derivatives. In the following list, we describe the risk sensitivities used in the MVR:

* FLATDELTA: The IR curve is shifted up by 1bp absolute, i.e.
$$FLATDELTA = PV(C) - PV(C + 1bp)$$
where $C \in \mathbb{R}^n$ is a representation of the curve object.

* FLATGAMMA: The Flatgamma is calculated based on shifts of absolute values 1bp, 10bp and 11bp on the curve. Namely,
$$FLATGAMMA = (PV(C + 10bp)-PV(C + 11bp))(PV(C)-PV(C + 1bp)).$$
where $C \in \mathbb{R}^n$ represents the curve object.

### 2.4 Feeder and Servicer Models

The model RateDeterministic has no direct servicer or feeder models.

### 2.5 Model Change Description

DBAnalytics model developers log model changes in release notes, which are available through a dedicated website. In the release note, model developers identify the scope of the change made for the Product-Model combinations it is related to and how it can be identified through the library interface. Pricing model changes are categorised into major, minor, technical, non-model and other. The proposed change category is reviewed, and agreed by MoRM on the DBAnalytics website.

The changes not relating to pricing models or risk models are currently not subject to validation. MoRM review the classification to ensure no pricing model related changes are misclassified. MoRM will only validate major and minor classified model changes.

The model changes relevant to the RateDeterministic model are listed below.

* 420_00094_R - Changes to pricing OIS (1b WAVG/EONIA RateAverageType) trades within DBOPT model. a) Fixed a bug that when FixingMethod = FIXING and the accrual end date is the valuation date, the PV of the coupon and the rate were incorrectly 0. The issue is now fixed. b) Fixed a bug that when FixingMethod = FIXING and the last fixing date is the valuation date, the rate was incorrectly calculated (the valuation date was regarded as 0). The issue is now fixed. c) When the pricing CURVE has OISDateCompression = YES, 1b WAVG/EONIA rates are calculated on compressed dates which improves calculation speed and make the CURVE construction and pricing consistent. Testing undertaken for this model change is contained in Section 4.1.2.8.

* 500_00029_R - Several enhancements to ClearingSpreads subtable of DISCONT BASIS CURVEs. a) Support multiple tenors per ClearingHouse. This is necessary to handle non-zero clearing basis on LIBOR frequency basis trades (6m-3m in LCH vs 6m-3m in CME). a-1) Introduced the OISSpreadTenor column to the ClearingSpreads subtable to define the tenor of OISSpreads keeping constant w.r.t. clearing house. For example, when OISSpreadTenor = 6m, 6m-OIS is the same between LCH and CME. b) Changed the interpolation of ClearingSpread adjustment to be in line with description of research paper 8151. This will cause tiny PV difference due to interpolation change. c) New interpolation of ClearingSpread adjustment is controlled by SpreadBuildMethod (which is more consistent with other ...Spreads). Previously this was controlled by BuildMethod. Testing undertaken for this model change is contained in Section 4.1.1.3.

#### 2.6.1 General Testing

##### 2.6.1.1 Description of the Tests

In this section, we briefly explain general testing related to the model that is presented in Section §4.1.1 to Section §4.1.2. There are summarized below:

* Curve Bootstrapping Testing: First, we repriced the market instruments to check various curve spreads are inline with the inputted values in the curve object. More precisely, rates in the swap curve instruments and spreads in the various spread tables (OISSpreads, CCYSpreads, and etc.) are repriced with DBA functions. Second, we repriced the SOFR/ESTER and ClearingHouseSpread instruments and check if rates/spreads are matching with the inputted ones. Moreover, forecast factors, discount factors, rates are manually computed using respective market instruments and checked against the DBA values to verify the bootstrapping of swap curve.

* Curve Parameter Testing: Almost all of the model parameters are tested in detail in Section 4.24, however some key curve parameters are tested in this section. This includes the following:
  1. BuildMethod and SpreadBuildMethod : Here we tested the methodology of interpolation of rates and spreads (BuildMethod and SpreadBuildMethod resp. in DBAnalytics) with the help of quoted instruments in the curve framework. Here we checked the robustness of interpolation with respect to shifts in swap curves and relevant spreads. Later, we have shown how buildmethods will affect the DELTA or appropriate SPREAD Delta of a security. More precisely, we have shown the Risk spill over effect with respect to different build methods using a interest rate swap. This was done for both under normal and Stressed scenarios.
  2. SmoothFutures: Here we checked the methodology of smoothing rate curve with one or more future overlaps in the inputted curve object. Stress test was also carried out to check robustness of the same.
  3. OISDateCompression : Here we tested the impact of the approximation that is used while calculating 1b WAVG OIS rates in the curve bootstrap. This was also tested under various permutations of buildmethods and day count conventions.
  4. FutureToSwap: These two details methodology of bootstrapping while transitioning from Cash to Future and Future to Swap instruments respectively. For FutureToSwap, future and swaps instruments are repriced under various parameter settings and checked the appropriateness therein (See Section 4.1.2.4 for more details).

##### 2.6.1.2 General Testing Files

The testing files for general testing are listed in Table 16.

| Test | Section | Testing Files |
|------|---------|--------------|
| Curve Bootstrapping Testing |  |  |
| Repricing Market Instruments | §4.1.1.1 | Test Evidence/CurveTests.ipynb |
| Swap Curve Repricing | §4.1.1.1 | Test Evidence/CurveTests.ipynb |
| Curve Spreads Repricing | §4.1.1.1 | Test Evidence/CurveTests.ipynb |
| SOFR Rates Repricing | §4.1.1.1 | Test Evidence/SOFR.ipynb |
| SOFR Term Structure Basis Repricing | §4.1.1.1 | Test Evidence/SOFR-ESTER/SOFR-Reprice.ipynb |
| ESTER Term Structure Basis Repricing | §4.1.1.1 | Test Evidence/SOFR-ESTER/ESTER-Reprice.ipynb |
| Curve Testing with Additional Instruments | §4.1.1.1 | Test Evidence/DensesCurve.ipynb |
| Manual Replication of OIS Discounting | §4.1.1.2 | Test Evidence/OIS_Replication.ipynb |
| OIS-Libor spread scenarios | §4.1.1.2 | Test Evidence/CurveTests.ipynb |
| ClearingHouse Spreads | §4.1.1.3 | Test Evidence/ClearingHouseTesting.ipynb |
| Clearing Spreads Discounting Replication | §4.1.1.3 | Test Evidence/ClearingHouseSpreads.ipynb |
| Curve Parameters Testing |  |  |
| BuildMethod | §4.1.2.1 | _tests/Curve_BuildMethod/BuildMethod.ipynb |
| 1d1d Forward Rates | §4.1.2.1 | Test Evidence/BuildMethod_Delta.ipynb |
| Delta Profiles | §4.1.2.1 | Test Evidence/BuildMethod_Delta.ipynb |
| Delta Replication | §4.1.2.1 | Test Evidence/BuildMethod_DeltaReplication.ipynb |
| Delta Risk Spill Over Effect | §4.1.2.1 | _tests/Curve_BuildMethod/Delta_Risk_Spill_Over.ipynb |
| Stress Testing : 1d1d Forward Rates and Zero Rates | §4.1.2.1 | Test Evidence/BuildMethod_Comparison.py |
| Stress Testing : Delta Profiles | §4.1.2.1 | Test Evidence/BuildMethod_Delta.ipynb |
| SpreadBuildMethod | §4.1.2.2 |  |
| 1d1d Forward Rates | §4.1.2.2 | _tests/Curve_BuildMethod/SpreadBuildMethod_OIS.ipynb _tests/Curve_BuildMethod/SpreadBuildMethod_CCY.ipynb _tests/Curve_BuildMethod/SpreadBuildMethod_LIBOR-6m.ipynb _tests/Curve_BuildMethod/SpreadBuildMethod_TreasurySpread.ipynb |
| SOFR and FEDFUND Profiles | §4.1.2.2 | Test Evidence/SOFR-ESTER/ESTER-Compounding.ipynb |
| Discount Spread Delta Profiles | §4.1.2.2 | Test Evidence/BuildMethod_SpreadDelta.ipynb |
| DiscountSpreadDelta Replication | §4.1.2.2 | Test Evidence/BuildMethod_SpreadDeltaReplication.ipynb |
| Stress Testing: Discount Spread Delta Profiles | §4.1.2.2 | Test Evidence/BuildMethod_SpreadDelta.ipynb |
| SmoothFutures | §4.1.2.3 | _tests/FuturesSwaps/SmoothFutures.ipynb |
| FutureToSwap | §4.1.2.4 | _tests/FuturesSwaps/FutureToSwaps.ipynb |
| SpotLiborSpreadInterpolations | §4.1.2.5 | _tests/FuturesSwaps/SpotLiborSpreadInterpolations.ipynb |
| LastFrontSwapTimePeg | §4.1.2.6 | _tests/FuturesSwaps/LastFrontSwapTimePeg.ipynb |
| SmoothFuturesExtrapolation | §4.1.2.7 | _tests/FuturesSwaps/SmoothFuturesExtrapolation_LINEAR.ipynb _tests/FuturesSwaps/SmoothFuturesExtrapolation_QUADRATIC.ipynb |
| OIS Date Compression | §4.1.2.8 | Test Evidence/OISDateCompressionTest.ipynb |
| OISSpreadFrontDates | §4.1.2.9 | _tests/Curve_BuildMethod/SpreadFrontDates.ipynb |
| BasisSpreadFrontDates_<RateIndexSubType> | §4.1.2.9 |  |
| IRFundingMMFloat based on central bank depo rate | §4.3 | _tests/Depo/IRFundingMMFloat.ipynb _tests/Depo/IRFundingMMFloat.xlsx |
| IRFundingMMOpenEndCallAcc based on central bank depo rate | §4.4 | _tests/Depo/IRFundingMMOpenEndCallAcc.ipynb _tests/Depo/IRFundingMMOpenEndCallAcc.xlsx |
| BuySellBack | §4.5 | TestEvidence/Liuyang/s1751.py |
| RepoTriParty |  |  |
| RepoReverseTriParty |  |  |
| SellBuyBack | §4.6 | TestEvidence/SellBuyBack.py |
| EvergreenRepo | §4.7 | TestEvidence/EvergreenRepo.py |

(*) Excel testing files (i.e. xlsx):
https://mars.svn.risk.intranet.db.com/sra_testing/Model/Analytic/RateDeterministic.

#### 2.6.2 Description: EOD Testing

#### 2.6.2.1 Stability Tests

For the stability tests, we compute for all the products tested the PV, Flatdelta, and Flatgamma under absolute IR curve shifts. The absolute IR curve shifts range from -500 to 500 bps. It is expected that all profiles of the considered products exhibit a smooth behaviour under the shifts and are in line with the intuition of the functionality of the product.

Moreover, we compute the product of the product tensor, i.e., profiles under shifts of the product under shifts of all other risk factors in the range from -500 to 500 bps. The profiles are again expected to exhibit a smooth behaviour. Note that, for this test, we do not consider risk factors of the (foreign denominated) funding curve.

#### 2.6.2.2 Taylor Consistency Test

In the Taylor consistency test, we check whether the DBA calculated prices are consistent with the Taylor approximation as calculated from the PV, Flatdelta, and Flatgamma for shifts in the IR curve.

The Taylor formula used for the approximation is a simplified version of the 1-variable Taylor expansion of the price P(s) as a function of the spot. More precisely, we choose to approximate P(s) in a neighbourhood of the production values s0 by means of the expression

$$P(s) \sim P(s_0) + (s - s_0) \frac{\partial P}{\partial s}(s_0) + \frac{1}{2}(s - s_0)^2 \frac{\partial^2 P}{\partial s^2}(s_0).$$

i.e. for some value of s such that $s_0 - \delta \leq s \leq s_0 + \delta$. In terms of the risks involved, represented by the Greeks $\Delta$ and $\Gamma$, we can equivalently rewrite the previous approximation as

$$P(s) \sim P(s_0) + (s - s_0)\Delta(s_0) + \frac{1}{2}(s - s_0)^2 \Gamma(s_0).$$

The motivation for the choice of our approximating formula appears clear, as we choose to approximate the PV surface around the production point s0 through the hedging instruments customarily used by the Front office to hedge the products, discarding the remaining terms present in the second degree expansion of the Taylor formula.

##### 2.6.2.3 Comparison with Other Models

In addition to the stability and Taylor consistency tests, we also compare the PV, Flatdelta and Flatgamma as calculated by other models (DBOPT) for that product. The differences are reported as a function of curve shifts and reveal whether there is a substantial difference in computation with different models or not. Note that in most of the cases the main models used is DBOPT, which we then compare the PVs, Flatdeltas and Flatgammas as obtained from other models such as the DBX, DBM, DBSMC and DBL models.

##### 2.6.2.4 End of Day Testing Files

The testing files for end of day testing are listed in Table 17.

| Test | Section | Testing Files |
|------|---------|--------------|
| Cashflow | §4.9 | _tests/Reva123/Cashflow_EOD.py |
| IRFundingMMFloat | §4.10 | _tests/Reva123/IRFundingMMFloat_EOD.py |
| IRSwapBasis | §4.11 | _tests/Reva123/IRSwapBasis_EOD.py |
| IRSwapFixFlt | §4.12 | _tests/Reva123/IRSwapFixFlt_EOD.py |
| OISwap | §4.13 | _tests/Reva123/OISwap_EOD.py |
| IRFuture | §4.14 | _tests/Reva123/IRFuture_EOD.py |
| FundMMIdx_Single | §4.15 | _tests/Reva123/FundMMIdx_Single_EOD.py |
| MuniSwap | §4.16 | _tests/Reva123/MuniSwap_EOD.py |
| Repo | §4.17 | _tests/Reva123/Repo_EOD.py |
| TreasuryYieldLockUnissued | §4.19 | _tests/Reva123/TreasuryYieldLockUnissued_EOD.py |
| CertificateOfDepositFix | §4.20 | _tests/Reva123/CertificateOfDepositFix_EOD.py |
| CorpBondDistressed | §4.21 | _tests/Reva123/CorpBondDistressed_EOD.py |
| EqDeltaOne_QISSwap | §4.22 | _tests/Reva123/EqDeltaOne_QISSwap_EOD.py |
| IRIndex*Single_DURBIAS | §4.23 | _tests/IRIndexSingle_DURBIAS/IRIndexSingle_DURBIAS_EOD.py |

*Table 17: Files for End of Day Testing*

The testing files for end of day testing of the products on the ring-fence list are recorded in Table 18.

| Test | Section | Testing Files |
|------|---------|--------------|
| CashBalance | §8.14 | test_evidence_ring_fence/CashBalance_EOD.ipynb |
| CouponPaySell | §8.14 | test_evidence_ring_fence/CouponPaySell_EOD.ipynb |
| InternalFundingDepoTermOISBullet | §8.14 | test_evidence_ring_fence/InternalFundingDepoTermOISBullet_EOD.ipynb |
| SecurityCollateralReceived | §8.14 | test_evidence_ring_fence/SecurityCollateralReceived_EOD.ipynb |

*Table 18: Files for End of Day Testing of Ring-Fenced products*

#### 2.6.3 Description: IRRBB Testing

Interest rate stress tests are conducted in this MVR according to the ten different scenarios defined under the IRRBB framework. This framework is part of the Basel capital frameworks Pillar 2 (Supervisory Review Process).

The BCBS document [28] describes eight Interest Rate shock scenarios that are required to be applied to IRRBB exposures in each currency for which a bank has material positions in the Banking Book. Eight Interest Rate currency dependent shock scenarios are prescribed that embody absolute interest rate shocks. Two of them (Steepener and Flattener) have been extended to take their opposite shift in order to define two additional scenarios: Steepener Negative and Flattener Negative. The IRRBB Interest Rate scenarios are summarized as follows:

* Parallel shock up
* Parallel shock down
* Steepener shock (short rate down and long rates up)
* Steepener negative shock (opposite steepener shift)
* Flattener shock (short rates up and long rates down)
* Flattener negative shock (opposite flattener shift)
* Short rates shock up
* Short rates shock down
* Long rates shock up
* Long rates shock down

The results of the IRRBB tests are reported in corresponding product testing sections. The testing file for all considered products is listed in Table 19.

| Test | Section | Testing Files |
|------|---------|--------------|
| Cashflow | §4.9.2 | _tests/Reva123/Cashflow_IRRBB.py |
| IRFundingMMFloat | §4.10.2 | _tests/Reva123/IRFundingMMFloat_IRRBB.py |
| IRSwapBasis | §4.11.2 | _tests/Reva123/IRSwapBasis_IRRBB.py |
| IRSwapFixFlt | §4.12.2 | _tests/Reva123/IRSwapFixFlt_IRRBB.py |
| OISwap | §4.13.2 | _tests/Reva123/OISwap_IRRBB.py |
| IRFuture | §4.14.2 | _tests/Reva123/IRFuture_IRRBB.py |
| FundMMIdx_Single | §4.15.3 | Test Evidence/FundMMIdx_Single_f.ipynb |
| MuniSwap | §4.16.3 | _tests/Reva123/MuniSwap_IRRBB.py |
| Repo | §4.17.3 | _tests/Reva123/Repo_IRRBB.py |
| EverGreenStockBorrow | §8.6.3 | _tests/Reva123/EverGreenStockBorrow_IRRBB.py |
| TreasuryYieldLockUnissued | §4.19.3 | _tests/Reva123/TreasuryYieldLockUnissued_r.ipynb |
| CertificateOfDepositFix | §4.20.3 | _tests/Reva123/CertificateOfDepositFix_IRRBB.py |
| CorpBondDistressed | §4.21.3 | _tests/Reva123/CorpBondDistressed_IRRBB.py |
| EqDeltaOne_QISSwap | §4.22.3 | _tests/Reva123/EqDeltaOne_QISSwap_IRRBB.py |
| IRIndex*Single_DURBIAS | §4.23.7 | _tests/IRIndexSingle_DURBIAS/IRIndexSingle_DURBIAS_IRRBB.py |

*Table 19: Files for IRRBB Testing*

The testing files for IRRBB testing of the products on the ring-fence list are recorded in Table 20.

| Test | Section | Testing Files |
|------|---------|--------------|
| CashBalance | §8.14 | test_evidence_ring_fence/CashBalance_IRRBB.ipynb |
| CouponPaySell | §8.14 | test_evidence_ring_fence/CouponPaySell_IRRBB.ipynb |
| InternalFundingDepoTermOISBullet | §8.14 | test_evidence_ring_fence/InternalFundingDepoTermOISBullet_IRRBB.ipynb |
| SecurityCollateralReceived | §8.14 | test_evidence_ring_fence/SecurityCollateralReceived_IRRBB.ipynb |

*Table 20: Files for IRRBB Testing of Ring-Fenced products*

#### 2.6.4 Description: CCAR Testing

The CCAR methodology is included in the general stress testing framework as described in Standardized Shock Primer document [29]. This, in particular, includes a construction of CCAR stressed market data objects for adverse and severely adverse stress scenarios which have been reviewed and validated in [30], [31], [32], [33]. For the purpose of this validation, CCAR market data objects are treated as given inputs and the main objective is to test the behaviour of a product-model pair in the CCAR stressed pricing contexts including convergence and stability of the returned PV and risk sensitivities.

We consider three separate scenarios in testing:

1. Base Scenario: This is the market data used in end of day pricing on the valuation date.
2. CCAR 1: This is the recent adverse 2023 FRB CCAR scenario.
3. CCAR 2: This is the recent severely adverse 2023 FRB CCAR scenario.

The testing performed on the products follows closely the EOD testing. Specifically, we first test the stability of PV, Flatdelta and Flatgamma for the base and both CCAR scenarios for interest rate shifts. We then apply the Taylor consistency test under the CCAR scenarios. Eventually, under the CCAR scenarios, we compare the PV, Flatdelta and Flatgamma of various RateDeterministic models to the respective quantities as computed by the main model under curve shifts. The results of the CCAR tests are reported in corresponding product testing sections. The testing file for all considered products is listed in Table 21.

| Test | Section | Testing Files |
|------|---------|--------------|
| Cashflow | §4.9.3 | _tests/Reva123/Cashflow_CCAR.py |
| IRFundingMMFloat | §4.10.3 | _tests/Reva123/IRFundingMMFloat_CCAR.py |
| IRSwapBasis | §4.11.3 | _tests/Reva123/IRSwapBasis_CCAR.py |
| IRSwapFixFlt | §4.12.3 | _tests/Reva123/IRSwapFixFlt_CCAR.py |
| OISwap | §4.13.3 | _tests/Reva123/OISwap_CCAR.py |
| IRFuture | §4.14.3 | _tests/Reva123/IRFuture_CCAR.py |
| FundMMIdx_Single | §4.15.2 | _tests/Reva123/FundMMIdx_Single_CCAR.py |
| MuniSwap | §4.16.2 | _tests/Reva123/MuniSwap_CCAR.py |
| Repo | §4.17.2 | _tests/Reva123/Repo_CCAR.py |
| EverGreenStockBorrow | §8.6.2 | _tests/Reva123/EverGreenStockBorrow_CCAR.py |
| TreasuryYieldLockUnissued | §4.19.2 | _tests/Reva123/TreasuryYieldLockUnissued_CCAR.py |
| CertificateOfDepositFix | §4.20.2 | _tests/Reva123/CertificateOfDepositFix_CCAR.py |
| CorpBondDistressed | §4.21.2 | _tests/Reva123/CorpBondDistressed_CCAR.py |
| EqDeltaOne_QISSwap | §4.22.2 | _tests/Reva123/EqDeltaOne_QISSwap_CCAR.py |
| IRIndex*Single_DURBIAS | §4.23.6 | _tests/IRIndexSingle_DURBIAS/IRIndexSingle_DURBIAS_CCAR.py |

*Table 21: Files for CCAR Testing*

The testing files for CCAR testing of the products on the ring-fence list are recorded in Table 22.

| Test | Section | Testing Files |
|------|---------|--------------|
| CashBalance | §8.14 | test_evidence_ring_fence/CashBalance_CCAR.ipynb |
| CouponPaySell | §8.14 | test_evidence_ring_fence/CouponPaySell_CCAR.ipynb |
| InternalFundingDepoTermOISBullet | §8.14 | test_evidence_ring_fence/InternalFundingDepoTermOISBullet_CCAR.ipynb |
| SecurityCollateralReceived | §8.14 | test_evidence_ring_fence/SecurityCollateralReceived_CCAR.ipynb |

*Table 22: Files for CCAR Testing of Ring-Fenced products*

#### 2.6.5 Description: Multivariate Testing

In the multivariate test, we apply the VaR shocks provided by MRM simultaneously to each risk factor of the considered product and asses the overall impact on the PV.

The steps of the multivariate test can be summarised as follows:

1. First, the underlying risk factors of the considered product are determined.
2. Second, it is tested to which underlying risk factors the product is sensitive. This is done by calculating the respective derivatives.
3. Third, for each risk factor to which the product is sensitive, the minimum and maximum VaR shocks provided by MRM are collected, if available.
4. Fourth, all collected minimum and maximum VaR shocks are then simultaneously applied to the respective risk factors according to the indicated signs of the derivatives and multiplied by a factor λ ∈ [0, 1], i.e. for risk factor X_base under the base scenario, we have X_up/down(λ) = X_base + λ · X_up/down, where Δ_up/down denote the minimum and maximum VaR shocks, respectively.
5. For a discretisation of λ ∈ [0, 1], we then compute the corresponding PVs PV(λ) using the stressed risk factors X_up/down(λ), respectively. This gives us a transition of the PV under a lower and upper stressed scenario.

In view of this procedure, we will then report for each considered product the relevant risk factors in a table, document to which risk factors the product is sensitive, and then plot the transition of the PV under the up and down scenarios.

The results of the multivariate tests are reported in corresponding product testing sections. The testing file for all considered products is listed in Table 23.

| Test | Section | Testing Files |
|------|---------|--------------|
| Cashflow | §4.9.4 | _tests/Reva123/Multivariate_RateDet_Cashflow.py |
| IRFundingMMFloat | §4.10.4 | _tests/Reva123/Multivariate_RateDet_IRFundingMMFloat.py |
| IRSwapBasis | §4.11.4 | _tests/Reva123/Multivariate_RateDet_IRSwapBasis.py |
| IRSwapFixFlt | §4.12.4 | _tests/Reva123/Multivariate_RateDet_IRSwapFixFlt.py |
| OISwap | §4.13.4 | _tests/Reva123/Multivariate_RateDet_OISwap.py |
| IRFuture | §4.14.4 | _tests/Reva123/Multivariate_RateDet_IRFuture.py |
| FundMMIdx_Single | §4.15.4 | _tests/Reva123/Multivariate_RateDet_FundMMIdx_Single.py |
| MuniSwap | §4.16.4 | _tests/Reva123/Multivariate_RateDet_MuniSwap.py |
| Repo | §4.17.4 | _tests/Reva123/Multivariate_RateDet_Repo.py |
| EverGreenStockBorrow | §8.6.4 | _tests/Reva123/Multivariate_RateDet_EverGreenStockBorrow.py |
| TreasuryYieldLockUnissued | §4.19.4 | _tests/Reva123/Multivariate_RateDet_TreasuryYieldLockUnissued.py |
| CertificateOfDepositFix | §4.20.4 | _tests/Reva123/Multivariate_RateDet_CertificateOfDepositFix.py |
| EqDeltaOne_QISSwap | §4.22.4 | _tests/Reva123/Multivariate_RateDet_EqDeltaOne_QISSwap.py |
| IRIndex*Single_DURBIAS | §4.23.8 | _tests/IRIndexSingle_DURBIAS/IRIndexSingle_DURBIAS_MultiVar.py |

*Table 23: Files for Multivariate Testing*

The testing files for multivariate testing of the products on the ring-fence list are recorded in Table 24.

| Test | Section | Testing Files |
|------|---------|--------------|
| CashBalance | §8.14 | test_evidence_ring_fence/CashBalance_MultiVar.ipynb |
| CouponPaySell | §8.14 | test_evidence_ring_fence/CouponPaySell_MultiVar.ipynb |
| InternalFundingDepoTermOISBullet | §8.14 | test_evidence_ring_fence/InternalFundingDepoTermOISBullet_MultiVar.ipynb |
| SecurityCollateralReceived | §8.14 | test_evidence_ring_fence/SecurityCollateralReceived_MultiVar.ipynb |

*Table 24: Files for MultiVar Testing of Ring-Fenced products*

#### 2.6.6 Description: Model Parameter Testing

The Model Parameter Monitoring (MPM) testing of the RateDeterministic model is concerned with assessing the correct functionality of the used model parameters. In most cases, this comprises the direct impact of the considered model parameter on the PV of another related quantity, such as the first or second order sensitivities. However, when more suitable, it may also be appropriate to test the stability of the PV and the first or second order sensitivities under curve or volatility shifts.

As the approach taken depends on the model parameter under consideration, we refer to Section 4.24 for a more detailed description of each test. The corresponding testing files for all relevant model parameters are listed in Table 25.

| Test | Section | Testing Files |
|------|---------|--------------|
| AddPar | §4.24.1.1 | _tests/MPM/addpar_linear.py, addpar_none.py |
| TurnMethod | §4.24.1.2 | _tests/MPM/curve_turnmethod.py |
| CashToFuture | §4.24.1.3 | _tests/MPM/curve_cashtofuture.py |
| SmoothFutures | §4.24.1.4 | _tests/MPM/FuturesSwaps/SmoothFutures.py |
| ExtrapMethod and ExtrapTime | §4.24.1.5 | _tests/MPM/curve_extrapmethod.py |
| BuildMethod | §4.24.1.6 | _tests/MPM/curve_buildmethod.py |
| HybridConstantForwardConnection | §4.24.1.7 | _tests/MPM/curve_hybridconstantforwardconnection.py |
| OISUseBaseCurve | §4.24.1.9 | _tests/MPM/curve_oisusebasecurve.py |
| CCYUseBaseCurve | §4.24.1.9 | _tests/MPM/curve_ccyusebasecurve.py |
| SpotLiborUseBaseCurve | §4.24.1.9 | _tests/MPM/curve_spotliborusebasecurve.py |
| TreasuryUseBaseCurve | §4.24.1.9 | _tests/MPM/curve_treasuryusebasecurve.py |
| RecalibMethod | §4.24.1.10 | _tests/MPM/curve_recalibmethod.py |
| NaturalTolerance | §4.24.1.11 | _tests/MPM/curve_naturaltolerance.py |
| OISDateCompression | §4.24.1.13 | Test Evidence/OISDateCompressionTest.py |
| UseType | §4.24.1.16 | _tests/MPM/curve_usetype.py |
| ApplyYieldCurve | §4.24.8.1 | _tests/MPM/MPMTesting_MKTDATA.py |
| RepoShiftType | §4.24.8.2 | _tests/MPM/MPMTesting_MKTDATA.py |
| RepoType | §4.24.8.3 | _tests/MPM/MPMTesting_MKTDATA.py |

*Table 25: Files for MPM Testing*

#### 2.6.7 Risk Factor Table

Table 26 gives an overview of the range of risk factor shifts used for each product group.

| Group | Product | Test | IRCURVE Swap | IRCURVE Discountspread | IRCURVE Spotliborspread | IRCURVE OISspread |
|-------|---------|------|--------------|-------------------|---------------------|----------------|
| (I.1) | Cashflow | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.1) | SecurityCollateralReceived | EOD | [-5%,+5%] | [-5%,+5%] | NA | NA |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | NA | NA |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | NA | NA |
| (I.1) | CashBalance | EOD | [-5%,+5%] | NA | NA | [-5%,+5%] |
| (I.2) | IRFundingMMFloat | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.2) | InternalFundingDepoTermOISBullet | EOD | [-5%,+5%] | [-5%,+5%] | NA | NA |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | NA | NA |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | NA | NA |
| (I.3) | IRSwapBasis | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.3) | IRSwapFixFlt | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.3) | OISwap | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.4) | IRFuture | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.5) | FundMMIdx_Single | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.6) | MuniSwap | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.7) | Repo | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.7) | EverGreenStockBorrow | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.7) | CouponPaySell | EOD | [-5%,+5%] | NA | NA | NA |
|  |  | CCAR | [-5%,+5%] | NA | NA | NA |
|  |  | IRRBB | [-5%,+5%] | NA | NA | NA |
| (I.8) | TreasuryYieldLockUnissued | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.9) | CertificateOfDepositFix | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.10) | CorpBondDistressed | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (IV.1) | EqDeltaOne_QISSwap | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (I.5) | IRIndex*Single_DURBIAS | EOD | [-5%,+5%] | NA | NA | NA |
|  |  | CCAR | [-5%,+5%] | NA | NA | NA |
|  |  | IRRBB | [-5%,+5%] | NA | NA | NA |

### 2.7 Engagement Process

The model developer documentation submitted in MARS request ID : 2020Dec21-LIMZHOU-16423 has been reviewed for sufficiency and completeness against the model approval request submission standards detailed in the Pricing Model Validation Document (39). The results of the initial review are detailed in Tables 3.5 and 3.6.

### 2.8 List of Validation Findings

There are no validation findings.

#### 2.8.1 Finding Description

There are currently no Validation Findings

#### 2.8.2 Resolved

| Request ID | Start Date | Due Date | Request Status | Originator | Action Owner | Finding Severity |
| --- | --- | --- | --- | --- | --- | --- |
| 11346 | 29/06/2018 | 31/08/2018 | Finding Resolved | Scott Murphy | Amaury Guillaume | Medium |
| 10305 | 19/10/2017 | 29/06/2018 | Finding Resolved | Scott Murphy | Amaury Guillaume | Medium |
| 12254 | 15/01/2018 | 31/07/2018 | Finding Resolved | Eris Runa | Yang Jiao | Medium |

Table 27: RateDeterministic Closed Findings

Request ID 11346
* Model Configurations:
  RateDeterministic
* PRDS Products:
  OISwap
* Description of Validation Finding:
  Difference found in PV of OISwap between DBOPT and DBSMC compared with DBX and DBM, when model is changed.
  PV should be same regardless of implementation.
* Action:
  Severity rating was introduced post 2017 and the issue has been fixed,for more details see description below.
* Description of Actions taken:
  I fixed this issue in v620, see release note R620_04:
  http://dr.gci.db.com/releasenote/data/summary.php?version=620#620_00004_R

Request ID 10305
* Model Configurations:
  RateDeterministic
* PRDS Products:
  All approved products
* Description of Validation Finding:
  CCAR related stress testing of products approved and proposed to be approved for the RateDeterministic model is not explicitly covered by current model developer documentation.
* Action:
  DBAnalytics must provide model developer documentation including CCAR stress testing results for the RateDeterministic model.
* Description of Actions taken:
  The updated T2 doc containing CCAR tests for RateDeterministic was submitted by Hiro, see 2017Nov16-TAKAYHI-10115, 20180626. I updated the document initially created by Hiro in the above MARS request with FLATGAMMA ladders (spreadsheet and dictionaries used to generate the ladders included as well)

Request ID 12254
* Model Configurations:
  DBX-RateDeterministic
* PRDS Products:
  All approved products
* Description of Validation Finding:
  The MuniZeroShift parameter is not handled properly when a RebucketCurve table is given in the curve object (which happens in the case of CCAR scenarios). This results in spikes in the FlatGamma.
* Action:
  closing Finding on MuniSwap (Mars request Id 2019Jan15-RUNAERI-12254) as it was resolved via the MuniLiborFloor methodology.
* Description of Actions taken:
  this is not relevant anymore as we have submitted a new document.

For the sake of completeness, we also list the older validation findings (note that no ID has been assigned):

* Raised 08/01/2015. Difference in PV (Present Value) of MuniTOBFixedAccruals was found between DBOPT and DBL. Now this has been resolved in the way FO assigns the currency dictionary.
* Raised 08/01/2015. Difference in PV of IRSBondUnfunded was found between DBOPT and DBSMC. It was found that under DBSMC CMT objects were ignored, but now (as per Release Note 240_00197_R) they are used.
* Raised on 08/01/2015. Difference in PV of IRSwapFixFlt was found between DBOPT and DBL. Under DBL, when ModelType was not NORMAL, CHARGE, HEXETE, CHEXETE, then the discount bonds were not re-centered to hit the forwards when interpolation was involved. This has been remedied (as per Release Note 240_00203_R) by forcing the re-centering of the log-normals bonds.
* Raised on 15/01/2015. Difference in PV of IRSwapIdx was found between DBX and DBSMC. Now an error is thrown for DBSMC (Illegal SwapIndexType, Implied swapindex not recognized for this Request!).
* Raised on 15/01/2015. Difference in PV of OISwap was found between DBOPT and DBSMC vs DBM. When using a curve without the CCYBASIS in DBMSMC, specifically involving not being taken into account correctly when pricing rates related to RateIndexTypes, this led to a discrepancy with DBOPT. This has been corrected as of Release Note 240_00216_R.

* Raised on 26/02/2015. Difference in PV of TBillBasisSwap was found between DBOPT and DBX. Previously when pricing RateIndexType = CMS/CMT with RateIndices with RateFrequency = ZERO-cmaliborbasis>, so a spotliborspread would not apply. This has now been corrected so that spotliborspreads are applied (Release Note 240_00193_R).
* Raised on 29/07/2016. An error in ModelInfo was found. OISwaps (with Security Type = SWAP / RateIndexType = LIBEOLIBOR / AvgType = EONIA) should be on RateDeterministic rather than AFSABR. ModelInfo (for CalcInstrinsic = 0, ExtraResults = 0) currently reports AFSABR even though the vol is not used for pricing.
* Raised on 27/07/2016. An error in ModelInfo was found. When pricing a linear product, such as IRSwapFixFlt, booked in a CCYSWAp security with DBOPT vol (CalcInstrinsic=0, ExtraResults = 0), DBA shows the wrong model name: DBOPTRateMarketAFSABR. The expected model name is DBOPT-RateDeterministic. This has been resolved (MARS Request ID: 2016Jul27-LOERAND-8800) so that the correct ModelInfo is displayed (Release Note 620_00092_R).
* Raised on 19/10/2017. CCAR related stress testing of products approved and proposed to be approved for the RateDeterministic model is not explicitly covered by current model developer documentation. DBAnalytics and Market Risk Management must therefore provide model developer documentation including CCAR stress testing results for the RateDeterministic model. This finding has been closed after documentation was provided.
* Raised on 29/06/16. A discrepancy in PV of OISwap was found between DBOPT and DBSMC compared with DBX and DBM. The difference appears to arise due to different treatments of averaging weights of the EONIA formula. This has been resolved (MARS Request ID: 2018Jun29-MURPSCO-11346) so that pricing of EONIA coupons with GENSWAP is in line with other SECURITIES and MODELS (Release Note 620_00004_R).
* Raised on 15/01/19. The MuniZeroShift parameter was not handled properly in CCAR. This resulted in spikes in the FlatGamma for CCAR. This has been resolved through the new MuniLiborFloor methodology introduced in DBA ver. 760.

### 2.9 List of Validation Observation

As part of the validation of pricing models, MoRM may identify problems with the model that require an immediate implementation fix and cause further validation activities to be put on hold. Generally, remediation actions and timelines will be discussed and monitored as part of the NOWGs. To raise a validation finding MoRM creates a validation finding request in MARS, where the finding is described, happens problem solution owner is assigned and a deadline for remediation of the finding is set. If the validation findings are not closed within agreed timelines, MoRM will only raise validation findings and recorded findings (and not observations) for pricing models. Due to the amount of model usage for validation and risk management, issues identified must be addressed through concrete remediation.

Note that when an EXTRAINFO object with ResultType="MODELPRICE is used*, the IgnoreMissingObjs property should be set to NO, in order to avoid potential misreporting of result values, e.g., when switching between different implementations. Furthermore, EXTRAINFO objects are only applied if ExtraResults is set to 1 in the MODEL object, which means that the IgnoreMissingObjs setting might be ignored. This can create some inconsistencies between the different implementations. We belief that this, however, is more a booking issue rather than a modelling issue and, therefore, do not define any "Conditions for Use" on ExtraInfo.IgnoreMissingObjs and MODEL.ExtraResults.

The following PRDS products IRSwapOIS (IRSwapOvernightIndex), IRSwapFixFlt, CCYBasis, IRSwapZero, IRSwapBasis, OISwapFixFlt, OISwap, CCYSwapFixFlt, IRXCcySwapFixFlt, IRXCcySwapFixFlt are approved for the DS4 yield curve with funding volatility, and the IRSwapFixFlt is also approved for the use of BOND OIS spreads for multiple collaterals of the same currency (e.g., bond and cash-collateral), and the testing conducted by GMVG are available and provided in a separate document see [17].

The Kannon tradable IRSwap which also includes the PRDS products IRSwapFixFlt and OISwaps are approved, and the testing conducted by GMVG are available and provided in a separate document see [20].

*An EXTRAINFO of type MODELPRICE replaces the model returned price with any other value from the ExtraResults.

## 3. Assessment of Approach, Conceptual Soundness and Implementation

### 3.1 Assessment of Development and Modelling Data

The products considered in this MVR are linear (i.e. there is no optionality embedded). Such products can be replicated statically. Notice that the products are linear but stochastic* and so is the replicating portfolio. However, they cancel exactly by taken appropriate long-short trading positions.

In other words, the observed value of the financial variable under consideration is the current expectation and although this does not guarantee the future evolution of the variable under consideration, trading positions that guarantee this value and so is considered as a fair value given the no-arbitrage framework. As a result, we do not require a full stochastic dynamic process model for the underlying because many different paths are irrelevant for the valuation of these products. Therefore, one requires a model that interpolates correctly, bootstrap consistently and retrieves the missing points in the term structure that are based on the various currencies used for the product under consideration because these are the unobservable values that remain to be inferred correctly.

RateDeterministic is the model framework used when the interest rates are modelled by the interpolation and extrapolation of an interest rate curve in an arbitrage free manner. Additionally, all product types may be handled consistently in the DBA Analytics libraries using the DS2 framework which incorporates observed spreads in the market, including cross currency swap spreads, overnight index swap spreads, spot Libor basis spreads, and discount funding spreads. Since the discount factors are known at the valuation date, the interest rates are modelled as deterministic functions of time in this framework. The products it prices have no optionality dependency and hence their value can be calculated analytically without modelling assumptions.

More precisely, the risk neutral measure used for pricing can be calculated through the Girsanov's Theorem and it is not based on any approximation of rates being deterministic or otherwise. We illustrate the use of measure change in the following example, where we consider the floating leg of a swap paying Libor

$$V_{Float}(0) = \sum_{i} E[D_i L_i(T_{i-1})T_i]$$

$$= \sum_{i} P(0,T_i)E^{T_i}[L_i(T_{i-1})T_i]$$

$$= \sum_{i} P(0,T_i)T_iL_i(0)$$

where $D_i$ is the discount factor to time $T_i$, $L_i(t)$ is the Libor rate between $T_{i-1}$ and $T_i$ at time $t$ and $T_i = T_i - T_{i-1}$. In the above, we changed to the $T_i$-forward measure, under which the Libor rate is a martingale, which allowed us to give an analytic result purely in terms of the zero-coupon bonds and the current Libor rate. It is important to note, however, that if there is a cap or a floor that introduces a volatility dependency and hence modelling assumptions, but such products are not approved under this model.

The linear interest rate products considered in this model are those for which a static hedge can be constructed from zero-coupon bonds. The fact that a static replication can be constructed means that the value of these products is independent of the model: the static replication can be priced from the curve, and the cost of the replication must be the price of the instrument by no-arbitrage. In the following example, we show how a static hedge provides the forward price for a bond (through which the corresponding forward Libor rate is defined).

We consider a contract at time $t$ to purchase a bond at time $T_{i-1}$ that matures at time $T_i$. In order to find the fair forward price to purchase the bond without any cashflows at time $t$ we create a static replication of the contract. At time $t$ we purchase the $T_i$ maturity bond and finance the purchase by shorting $\frac{P(t,T_i)}{P(t,T_{i-1})}$ units of the $T_{i-1}$ maturity bond and finance the purchase by shorting $\frac{P(t,T_i)}{P(t,T_{i-1})}$ units of the $T_{i-1}$. As can be seen below, this results in a net cashflow of zero, i.e.

$$P(t,T_i) - (\frac{P(t,T_i)}{P(t,T_{i-1})})P(t,T_{i-1}) = P(t,T_i) - P(t,T_i) = 0$$

Then, at time $T_{i-1}$, we have to pay $\frac{P(t,T_i)}{P(t,T_{i-1})}$ on our short bond position which has matured, but receive the forward price in exchange for the $T_i$ maturity bond. In order for the replication to be valid we require that the cashflows net be zero, which gives that the forward bond price must be

$$P(t,T_{i-1},T_i) = \frac{P(t,T_i)}{P(t,T_{i-1})}$$

where $P(t,T_{i-1},T_i)$ is the forward bond price. From this, we have forward Libor rates or other linear interest rate products related to this rate.

With this in mind, we focus in the testing on the bootstrapping and interpolation of the yield curve. Figure 4 illustrates the differences between four methods of curve construction by plotting an example 1-day forward rate over time for the four methods. Further details of the exact interpolations methods are given in Section 2.3.5.6. In our testing, we have four points of focus:

1. Verification that we reprice the input market instruments correctly.
2. Confirmation that there is no arbitrage, specifically that we do not have negative instantaneous forward rates.
3. Checking that there is reasonable behaviour of the greeks under curve stresses.
4. Testing the dispersion of risk sensitivities along the curve, specifically how the dispersion changes according to stresses at points of the curve.

![Figure 4: 1-day forward rate for BuildMethods CONSTANT_FORWARD, LINEAR_ZERO, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD.](./Fig/4.png)

In addition, we also conduct testing on the use of OIS spreads for discounting. The testing verifies the implementation of the bootstrapping of the OIS discount factors in the CURVE object. It also illustrates the difference between discounting with and without OIS discounting, as shown in Figure 5.

![Figure 5: Zero rate with and without OIS discounting](./Fig/5.png)

### 3.2 Assessment of Methodology and Calibration

#### 3.2.1 Assessment of Alternative Approaches

For RateDeterministic the following implementations are currently available: DBM, DBL, DBX, DBOPT, DBSMC and DBA ANALYTIC. The same underlying curve bootstrapper is used by all models, this has been tested in this report. Since the curve bootstrap forms the core modeling component, from a modeling perspective the different implementations are equivalent when valuing linear trades. Therefore, although different model configurations can be used in practice, the theoretical pricing structure remains always the same.

#### 3.2.2 Assessment of Calibration

Since the model is RateDeterministic, there is no volatility component and hence no volatility calibration is applicable. We refer to the Curve primer [37], for the details on the curve construction methodologies implemented in DBAanallytics. The CURVE object calibration instruments are part of various sub labels such as the following: CASH, FUTURES, SWAPS, OISSpreads, DiscountSpreads, CCYSpreads, SpotLiborSpreads, TreasurySwapSpreads, BasisSpreads, MuniSpreads. The choice of the calibration instruments is owned jointly by the trading desk and the STRATS team. It is however, generally recommended that liquidly traded, natural hedging instruments for the products are used as targets for curve construction.

#### 3.2.3 Conceptual Soundness Statement

In conclusion, given the linear nature of the products under consideration and the absence of volatility, the most important aspects for this model are the curve interpolation and bootstrapping in a consistently calibrated multicurve setting. As a result, the RateDeterministic model framework is approved for all the products under consideration listed in this report.

### 3.3 Assessment of Model Assumptions and Limitations

The model assumptions and limitations are listed in Sections 2.3.2. In particular, the list of model assumptions and limitations is deemed complete and there is no relevant missing item that requires to be added to the current version of the documentation.

#### 3.3.1 Assessment of Model Assumptions

| Assumption | Conceptual Suitability |
| --- | --- |
| Volatility Independent | For linear trades the market volatility does not affect the price, so the price and risk sensitivities can be calculated assuming that there is no volatility, which considerably simplifies the calculations. Therefore, the prices and risk-sensitivities calculated under this model assumption are correct and accurate. |

Table 28: Model assumptions and their conceptual suitability.

#### 3.3.2 Assessment of Model Limitations

No limiations have been identified during the course of validation.

### 3.4 Expert Judgments in the Model

In addition to the model specification detailed in section 2.3, the market inputs specified in section 2.3.3 are subject to IPV process and the following model parameters are subject to the following expert judgement:

* There are no model parameters that are subject to expert judgement for RateDeterministic

### 3.5 Assessment of Model Documentation

Model users are responsible for seeking model validation for all new model and product combinations prior to use, through the submission of Model Approval Requests in line with the documentation standards set out by MoRM. Documentation should be sufficient to permit independent review and to facilitate potential replication and/or upgrade of the model by others, independent of the original developer.

The following steps are carried out in evaluating the Model Approval Request submissions:

* Upon being assigned to the Model Approval Request, the Primary Approver must review the submission to confirm completeness and adequacy against the minimum standards.
* If the Model Approval Request does not comply with submission standards or if additional information is required, the Primary Approver will reject the request and clearly document the reasons for this as well as follow up actions required by model owner/developer submitting the request, prior to resubmission.

MoRM will not commence validation until the Model Approval Request is accepted.

At any time during the validation process, MoRM have the right to request additional information they deem necessary for effective validation, even if outside the submission requirements listed in this document. MoRM may also ask for the model documents to be updated during the course of the validation. Additional supporting information obtained during the validation is also recorded in MARS.

The pricing model developer document requirements to check:

| Section | Content | MoRM check |
| --- | --- | --- |
| Executive summary | Model Developer | Yes |
|  | Documentation Info | Yes |
| Market characteristic and market data |  |  |
| Market characteristic | Market considerations | Yes |
|  | Market instruments | Yes |
|  | Market instrument treatment | Yes |
|  | Other market data | Not relevant |
| Model Description |  |  |
| Model Dynamics | Model assumptions | Yes |
|  | Model parameters | Yes |
|  | Model dynamics | Yes |
|  | Model components | Not relevant |
|  | Model implementation | Yes |
| Model calibration | Model parameters calibration | Yes |
| Model risk sensitivities | Modes which apply to the model | Yes |
|  | Model risk sensitivities | Yes |
| Model weaknesses, limitations | Weakness and limitation description | Yes |
|  | Model Restrictions (Conditions for Use) | Yes |
| Conceptual Soundness | Product scope | Yes |
|  | Justification for model selection | Yes |
| Model controls | Analytics Library and Version | Yes |
|  | Compensating controls | Yes |
|  | Model inputs controls | Yes |
| Implementation testing and justification of model behaviour | | Yes |
| Model configuration testing | | Yes |
| References | | Yes |

The pricing product model developer document requirements to check:

| Section | Content | MoRM check |
| --- | --- | --- |
| Executive summary | Model Developer | Yes |
|  | Documentation Info | Yes |
|  | Model configuration | Yes |
|  | Product Owner | Yes |
|  | Business Area, Line or Asset Class | Yes |
|  | Risk Management Systems | Yes |
| Products description |  |  |
| Product Scope | PRDS name and definition | Yes |
|  | NPA Reference | Yes |
|  | Mathematical desciption of the payoff | Yes |
|  | Product contractual parameters | Yes |
|  | Product scripting | Yes |
| Product grouping | Product main characteristics and features | Yes |
| Product model appropriateness |  |  |
| Model appropriateness for products it will be used for | Product-Model Combination appropriateness | Yes |
| Product Risk factor identification | Key Risk factors | Yes |
|  | Risk sensitivities | Yes |
|  | Calibration instruments | Yes |
|  | Products calibration instrument choice | Yes |
| Product model weakness identification | Product-Model Combination Limitations | Yes |
| Model Configuration Testing and Results |  |  |
| Convergence and stability tests | | Yes |
| Limiting case and alternative model testing | | Yes |
| Calibration algorithm and risk sensitivities | | Not relevant |
| Risk factor tests | End of Day condition and VAR | Yes |
|  | CCAR and EBA conditions | Yes |
|  | RIB | Yes |
| Testing evidence | | Yes |

### 3.6 IT Implementation testing

For Pricing models, implementation refers to DBA releases and deployment refers to integrating them into risk calculators. The deployed model library executable code must be held in a secure and controlled environment or embedded in a system which is held in a secure and controlled environment.

DBAnalytics production system reconciliation: Independent model validation testing is undertaken using DBAnalytics. Since no additional processing of DBAnalytics is undertaken and no further external analytics are being run in strategic production systems, it can be assured that model output produced with a consistent version of DBAnalytics will yield equivalent results whether run locally by individual users or in official production systems.

The following implementation tests have been carried out by DBA:

* Model Benchmarking Tests: RateDeterministic_FXDeterministic framework has been tested across implementations such as DBX (Monte Carlo), DBX(PDE), DBOPT and DBAnalytic Models).
* Stability Analyses: Stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.
* CCAR Conditions: CCAR stress scenarios in order to test the accuracy and robustness of RateDeterministic models.
* IRRBB Conditions: IRRBB stress scenarios for the models under consideration.

## 4. Independent Validation Testing

### 4.1 General Testing

#### 4.1.1 Curve Bootstrapping Testing

In this section, we present the testing in detail related to the bootstrapping methodology of the curve. First, we repriced the market instruments and compared against published values in the curve object. The tests are passed. Later, we independently replicated OIS/LIBOR basis-based discounting and compared against DBA values. Here, the error between manually computed values and DBA ones found to be insignificant. Then we present the testing related to clearing house spreads.

##### 4.1.1.1 Repricing Market Instruments

In the following sections, curve repricing tests, refer to checking that the price, data and spreads input to construct the curve, can be reproduced by pricing the appropriate DBAnalytics securities. Using the data stored in the Exotics object reviewed in this document for EUR, USD and JPY, Here curves have been constructed using marketdata from 2006 to the present day. We independently verify the simultaneous bootstrap method used throughout the RateDeterministic curve building framework in DBAnalytics. We do this for the simpler constant forward build method, which allows us to confirm the behaviour of the simultaneous bootstrap.

### a) Swap Curve Repricing

We test the ability of the base libor curve to reprice the input cash, futures and swaps. This is done for the usual case where the curve is built using spot starting swaps, and the more challenging case where a mix of spot and forward starting swaps are used as inputs for the base libor curve construction.

Table 29: Base Libor Swap Curve built with spot starting swaps, for valuation date 26th February 2013.

| Settle | Maturity | Basis | Rate | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130531 | ACT/360 | 0.0021 | 1 | 0.0021 | -1.1e-14 |

| Settle | Maturity | Freq | Convexity | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20130320 | 20130620 | QUARTERLY | ACT/360 | 9978.74 | 1.23e-08 | 1 | 9978.7354 | 5.5e-12 |
| 20130619 | 20130919 | QUARTERLY | ACT/360 | 9977.74 | 3.124e-07 | 1 | 9977.7354 | 3.6e-12 |
| 20130918 | 20131218 | QUARTERLY | ACT/360 | 9974.24 | 1.9621e-06 | 1 | 9974.2354 | 3.6e-12 |
| 20131218 | 20140318 | QUARTERLY | ACT/360 | 9969.74 | 4.1039e-06 | 1 | 9969.7354 | 3.6e-12 |
| 20140319 | 20140619 | QUARTERLY | ACT/360 | 9964.14 | 9.3732e-06 | 1 | 9964.1450 | 1.1e-11 |
| 20140618 | 20140918 | QUARTERLY | ACT/360 | 9958.14 | 1.76224e-05 | 1 | 9958.1450 | 1.1e-11 |
| 20140917 | 20141217 | QUARTERLY | ACT/360 | 9951.89 | 3.04705e-05 | 1 | 9951.8950 | 3.6e-12 |
| 20141217 | 20150317 | QUARTERLY | ACT/360 | 9945.14 | 5.03204e-05 | 1 | 9945.1450 | 3.6e-12 |

| Settle | RollDate | Maturity | Freq | Basis | Coupon | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20160229 | ANNUALLY | 30/360 | 0.0047775 | 1 | 0.0047 | 1.2e-16 |
| 20130226 | 20130226 | 20170228 | ANNUALLY | 30/360 | 0.0068149 | 1 | 0.0068 | 4.1e-17 |
| 20130226 | 20130226 | 20180228 | ANNUALLY | 30/360 | 0.0082431 | 1 | 0.0082 | -4.2e-17 |
| 20130226 | 20130226 | 20190228 | ANNUALLY | 30/360 | 0.010134 | 1 | 0.0101 | 3.5e-17 |
| 20130226 | 20130226 | 20200229 | ANNUALLY | 30/360 | 0.0119431 | 1 | 0.0119 | -1.6e-17 |
| 20130226 | 20130226 | 20210226 | ANNUALLY | 30/360 | 0.0136126 | 1 | 0.0136 | -4.0e-17 |
| 20130226 | 20130226 | 20220228 | ANNUALLY | 30/360 | 0.0151179 | 1 | 0.0151 | 2.9e-17 |
| 20130226 | 20130226 | 20230228 | ANNUALLY | 30/360 | 0.0164678 | 1 | 0.0165 | -3.8e-17 |
| 20130226 | 20130226 | 20250228 | ANNUALLY | 30/360 | 0.0187568 | 1 | 0.0188 | -4.9e-17 |
| 20130226 | 20130226 | 20280229 | ANNUALLY | 30/360 | 0.0211384 | 1 | 0.0211 | 4.9e-17 |
| 20130226 | 20130226 | 20330228 | ANNUALLY | 30/360 | 0.0228017 | 1 | 0.0228 | -8.3e-17 |
| 20130226 | 20130226 | 20380228 | ANNUALLY | 30/360 | 0.0233256 | 1 | 0.0233 | 3.1e-17 |
| 20130226 | 20130226 | 20430228 | ANNUALLY | 30/360 | 0.0236261 | 1 | 0.0235 | 2.4e-17 |
| 20130226 | 20130226 | 20480229 | ANNUALLY | 30/360 | 0.0238298 | 1 | 0.0238 | -1.0e-17 |
| 20130226 | 20130226 | 20530228 | ANNUALLY | 30/360 | 0.0242431 | 1 | 0.0242 | -3.5e-18 |
| 20130226 | 20130226 | 20630228 | ANNUALLY | 30/360 | 0.0249111 | 1 | 0.0249 | -8.9e-18 |
| 20130226 | 20130226 | 20730228 | ANNUALLY | 30/360 | 0.0253714 | 1 | 0.0254 | -3.5e-18 |

Table 30: Base Libor Swap Curve built with spot & fwd starting swaps, for valuation date 26th February 2013.

| Settle | Maturity | Basis | Rate | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130531 | ACT/360 | 0.0021 | 1 | 0.0021 | -1.1e-14 |

| Settle | Maturity | Freq | Convexity | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20130320 | 20130620 | QUARTERLY | ACT/360 | 9978.74 | 1.23e-08 | 1 | 9978.7354 | 5.5e-12 |
| 20130619 | 20130919 | QUARTERLY | ACT/360 | 9977.74 | 3.124e-07 | 1 | 9977.7354 | 3.6e-12 |
| 20130918 | 20131218 | QUARTERLY | ACT/360 | 9974.24 | 1.9621e-06 | 1 | 9974.2354 | 3.6e-12 |
| 20131218 | 20140318 | QUARTERLY | ACT/360 | 9969.74 | 4.1039e-06 | 1 | 9969.7354 | 3.6e-12 |
| 20140319 | 20140619 | QUARTERLY | ACT/360 | 9964.14 | 9.3732e-06 | 1 | 9964.1450 | 1.1e-11 |
| 20140618 | 20140918 | QUARTERLY | ACT/360 | 9958.14 | 1.76224e-05 | 1 | 9958.1450 | 1.1e-11 |
| 20140917 | 20141217 | QUARTERLY | ACT/360 | 9951.89 | 3.04705e-05 | 1 | 9951.8950 | 3.6e-12 |
| 20141217 | 20150317 | QUARTERLY | ACT/360 | 9945.14 | 5.03204e-05 | 1 | 9945.1450 | 3.6e-12 |

| Settle | RollDate | Maturity | Freq | Basis | Coupon | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20160229 | ANNUALLY | 30/360 | 0.0047775 | 1 | 0.0047 | 1.2e-16 |
| 20130226 | 20130226 | 20170228 | ANNUALLY | 30/360 | 0.0068149 | 1 | 0.0068 | 4.1e-17 |
| 20130226 | 20130226 | 20180228 | ANNUALLY | 30/360 | 0.0082431 | 1 | 0.0082 | 1.0e-17 |
| 20130226 | 20130226 | 20190228 | ANNUALLY | 30/360 | 0.0101334 | 1 | 0.0101 | 4.5e-17 |
| 20200229 | 20130226 | 20220228 | ANNUALLY | 30/360 | 0.0272865 | 1 | 0.0273 | -1.0e-16 |
| 20130226 | 20130226 | 20230228 | ANNUALLY | 30/360 | 0.0164678 | 1 | 0.0165 | -1.4e-17 |
| 20130226 | 20130226 | 20250228 | ANNUALLY | 30/360 | 0.0187568 | 1 | 0.0188 | -1.0e-17 |
| 20130226 | 20130226 | 20280229 | ANNUALLY | 30/360 | 0.0211384 | 1 | 0.0211 | 4.9e-18 |
| 20130226 | 20130226 | 20330228 | ANNUALLY | 30/360 | 0.0228017 | 1 | 0.0228 | -2.8e-17 |
| 20330228 | 20330228 | 20430228 | ANNUALLY | 30/360 | 0.0257341 | 1 | 0.0257 | 8.7e-17 |
| 20430228 | 20430228 | 20530220 | ANNUALLY | 30/360 | 0.0280028 | 1 | 0.0280 | 5.5e-17 |
| 20430228 | 20530228 | 20530228 | ANNUALLY | 30/360 | 0.031955 | 1 | 0.0320 | -3.5e-17 |

Now, we test the ability of the CSA libor swap curve to simultaneously reprice both the libor swaps market and the OIS market. This is done for the usual case where the base libor curve is built using spot starting swaps, and the more challenging case when a mix of spot and forward starting swaps are used as inputs for the base libor curve construction.

When the population of Libor swaps used to build the base curve contains a mix of spot starting and forward starting swaps, the fit to the OIS-Libor basis swap spreads become less accurate. Even so, we find the repricing error is still well within bid-offer spread, as is alluded to in the DBAnalytics documentation.

Table 31: CSA Libor Swap Curve built with spot starting swaps, for valuation date 26th February 2013.

| Settle | RollDate | Maturity | Freq | Basis | Coupon | Use | Reprice | Diff (bps) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20160229 | ANNUALLY | 30/360 | 0.0047775 | 1 | 0.0047 | 7.1e-11 |
| 20130226 | 20130226 | 20170228 | ANNUALLY | 30/360 | 0.0068149 | 1 | 0.0068 | -3.3e-09 |
| 20130226 | 20130226 | 20180228 | ANNUALLY | 30/360 | 0.0082431 | 1 | 0.0082 | 9.7e-08 |
| 20130226 | 20130226 | 20190228 | ANNUALLY | 30/360 | 0.010134 | 1 | 0.0101 | 1.9e-07 |
| 20130226 | 20130226 | 20200229 | ANNUALLY | 30/360 | 0.0119431 | 1 | 0.0119 | 2.8e-07 |
| 20130226 | 20130226 | 20210226 | ANNUALLY | 30/360 | 0.0136126 | 1 | 0.0136 | 3.5e-07 |
| 20130226 | 20130226 | 20220228 | ANNUALLY | 30/360 | 0.0151179 | 1 | 0.0151 | 3.8e-07 |
| 20130226 | 20130226 | 20230228 | ANNUALLY | 30/360 | 0.0164678 | 1 | 0.0165 | 4.0e-07 |
| 20130226 | 20130226 | 20250228 | ANNUALLY | 30/360 | 0.0187568 | 1 | 0.0188 | 8.0e-07 |
| 20130226 | 20130226 | 20280229 | ANNUALLY | 30/360 | 0.0211384 | 1 | 0.0211 | 6.1e-07 |
| 20130226 | 20130226 | 20330228 | ANNUALLY | 30/360 | 0.0228017 | 1 | 0.0228 | 6.3e-09 |
| 20130226 | 20130226 | 20380228 | ANNUALLY | 30/360 | 0.0233256 | 1 | 0.0233 | 1.5e-07 |
| 20130226 | 20130226 | 20430228 | ANNUALLY | 30/360 | 0.0236261 | 1 | 0.0236 | 2.0e-07 |
| 20130226 | 20130226 | 20480229 | ANNUALLY | 30/360 | 0.0238298 | 1 | 0.0238 | 2.7e-09 |
| 20130226 | 20130226 | 20530228 | ANNUALLY | 30/360 | 0.0242431 | 1 | 0.0242 | 7.8e-08 |
| 20130226 | 20130226 | 20630228 | ANNUALLY | 30/360 | 0.0249111 | 1 | 0.0249 | 2.3e-07 |
| 20130226 | 20130226 | 20730228 | ANNUALLY | 30/360 | 0.0253714 | 1 | 0.0254 | 3.0e-07 |

| Settle | RollDate | Maturity | Freq | Basis | Spread | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20130531 | QUARTERLY | ACT/360 | -0.00126 | 1 | -0.0013 | 2.4e-17 |
| 20130226 | 20130226 | 20130831 | QUARTERLY | ACT/360 | -0.00126837 | 1 | -0.0013 | -9.5e-11 |
| 20130226 | 20130226 | 20131130 | QUARTERLY | ACT/360 | -0.00132511 | 1 | -0.0013 | -1.2e-10 |
| 20130226 | 20130226 | 20140228 | QUARTERLY | ACT/360 | -0.00136106 | 1 | -0.0014 | -6.5e-13 |
| 20130226 | 20130226 | 20150228 | QUARTERLY | ACT/360 | -0.001557 | 1 | -0.0016 | 2.9e-17 |
| 20130226 | 20130226 | 20160229 | QUARTERLY | ACT/360 | -0.001598 | 1 | -0.0016 | -7.0e-15 |
| 20130226 | 20130226 | 20170228 | QUARTERLY | ACT/360 | -0.001605 | 1 | -0.0016 | -5.2e-12 |
| 20130226 | 20130226 | 20180228 | QUARTERLY | ACT/360 | -0.001604 | 1 | -0.0016 | -1.4e-11 |
| 20130226 | 20130226 | 20200229 | QUARTERLY | ACT/360 | -0.001582 | 1 | -0.0016 | 1.9e-11 |
| 20130226 | 20130226 | 20230228 | QUARTERLY | ACT/360 | -0.00151 | 1 | -0.0015 | 4.5e-11 |
| 20130226 | 20130226 | 20280229 | QUARTERLY | ACT/360 | -0.00131 | 1 | -0.0013 | -5.9e-11 |
| 20130226 | 20130226 | 20330228 | QUARTERLY | ACT/360 | -0.00119 | 1 | -0.0012 | -9.1e-13 |
| 20130226 | 20130226 | 20430228 | QUARTERLY | ACT/360 | -0.001071 | 1 | -0.0011 | -2.0e-11 |
| 20130226 | 20130226 | 20530228 | QUARTERLY | ACT/360 | -0.000941 | 1 | -0.0009 | -4.0e-12 |
| 20130226 | 20130226 | 20630228 | QUARTERLY | ACT/360 | -0.000851 | 1 | -0.0009 | -2.5e-11 |
| 20130226 | 20130226 | 20730228 | QUARTERLY | ACT/360 | -0.000851 | 1 | -0.0009 | -2.9e-11 |
| 20130226 | 20130226 | 20830228 | QUARTERLY | ACT/360 | -0.000811 | 1 | -0.0008 | -3.3e-16 |

Table 32: CSA Libor Swap Curve built with spot & fwd starting swaps, for valuation date 26th February 2013.

| Settle | RollDate | Maturity | Freq | Basis | Coupon | Use | Reprice | Diff (bps) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20160229 | ANNUALLY | 30/360 | 0.0047775 | 1 | 0.0047 | 7.0e-11 |
| 20130226 | 20130226 | 20170228 | ANNUALLY | 30/360 | 0.0068149 | 1 | 0.0068 | -3.3e-09 |
| 20130226 | 20130226 | 20180228 | ANNUALLY | 30/360 | 0.0082431 | 1 | 0.0082 | 9.7e-08 |
| 20130226 | 20130226 | 20190228 | ANNUALLY | 30/360 | 0.0101334 | 1 | 0.0101 | 3.9e-07 |
| 20200229 | 20130226 | 20220228 | ANNUALLY | 30/360 | 0.0272866 | 1 | 0.0273 | 3.2e-07 |
| 20130226 | 20130226 | 20230228 | ANNUALLY | 30/360 | 0.0164678 | 1 | 0.0165 | 3.1e-13 |
| 20130226 | 20130226 | 20250228 | ANNUALLY | 30/360 | 0.0187568 | 1 | 0.0188 | 7.8e-07 |
| 20130226 | 20130226 | 20280229 | ANNUALLY | 30/360 | 0.0211384 | 1 | 0.0211 | 5.9e-07 |
| 20130226 | 20130226 | 20330228 | ANNUALLY | 30/360 | 0.0228017 | 1 | 0.0228 | 6.9e-09 |
| 20330228 | 20330228 | 20430228 | ANNUALLY | 30/360 | 0.0257341 | 1 | 0.0257 | 8.7e-13 |
| 20430228 | 20430228 | 20530220 | ANNUALLY | 30/360 | 0.0280028 | 1 | 0.0280 | 1.1e-06 |
| 20430228 | 20530228 | 20530228 | ANNUALLY | 30/360 | 0.031955 | 1 | 0.0320 | -4.2e-13 |

| Settle | RollDate | Maturity | Freq | Basis | Spread | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20130226 | 20130226 | 20130531 | QUARTERLY | ACT/360 | -0.00126 | 1 | -0.0013 | 8.9e-16 |
| 20130226 | 20130226 | 20130831 | QUARTERLY | ACT/360 | -0.00126837 | 1 | -0.0013 | 1.6e-11 |
| 20130226 | 20130226 | 20131130 | QUARTERLY | ACT/360 | -0.00132511 | 1 | -0.0013 | 2.1e-11 |
| 20130226 | 20130226 | 20140228 | QUARTERLY | ACT/360 | -0.00136106 | 1 | -0.0014 | 1.4e-15 |
| 20130226 | 20130226 | 20150228 | QUARTERLY | ACT/360 | -0.001557 | 1 | -0.0016 | 2.3e-16 |
| 20130226 | 20130226 | 20160229 | QUARTERLY | ACT/360 | -0.001598 | 1 | -0.0016 | 1.0e-16 |
| 20130226 | 20130226 | 20170228 | QUARTERLY | ACT/360 | -0.001605 | 1 | -0.0016 | 1.8e-16 |
| 20130226 | 20130226 | 20180228 | QUARTERLY | ACT/360 | -0.001604 | 1 | -0.0016 | 2.4e-11 |
| 20130226 | 20130226 | 20200229 | QUARTERLY | ACT/360 | -0.001582 | 1 | -0.0016 | 1.1e-17 |
| 20130226 | 20130226 | 20230228 | QUARTERLY | ACT/360 | -0.00151 | 1 | -0.0015 | 1.3e-15 |
| 20130226 | 20130226 | 20280229 | QUARTERLY | ACT/360 | -0.00131 | 1 | -0.0013 | -2.0e-12 |
| 20130226 | 20130226 | 20330228 | QUARTERLY | ACT/360 | -0.00119 | 1 | -0.0012 | -8.1e-14 |
| 20130226 | 20130226 | 20430228 | QUARTERLY | ACT/360 | -0.001071 | 1 | -0.0011 | 4.6e-09 |
| 20130226 | 20130226 | 20530228 | QUARTERLY | ACT/360 | -0.000941 | 1 | -0.0009 | 4.9e-17 |
| 20130226 | 20130226 | 20630228 | QUARTERLY | ACT/360 | -0.000851 | 1 | -0.0009 | -3.3e-16 |
| 20130226 | 20130226 | 20730228 | QUARTERLY | ACT/360 | -0.000851 | 1 | -0.0009 | -4.6e-16 |
| 20130226 | 20130226 | 20830228 | QUARTERLY | ACT/360 | -0.000811 | 1 | -0.0008 | 6.5e-17 |

Now we present the LIBOR forward curves on 3 different dates especially before, during and after Lehman bust.

The Exotics object, RATESEURLIBOR owned by the interest rates exotics desk in London, stores a history of DBAnalytics curves constructed using the RateDeterministic framework reviewed in this document for EUR, USD and JPY. Here curves have been stored using marketdata from 2006 to the present day.

We pick up EUR swap curves for several dates in our repricing tests below. Covering the period, before, during and after the credit crunch. In all cases the repricing of all instruments was to the curve Newton-Raphson solver accuracy of 10e-7.

![Figure 6: Some of the the 3m EUR Libor Forward Curves used in testing, derived using interest rate curves for valuation dates, 1-Sep-2006, 10-Oct-2008, and 24-Jun-2013. All clearly exhibiting different 3m forward curve shapes.](./Fig/6.png)

b) Curve Spreads Repricing

We take a EUR Libor swap curve for valuation date October 10, 2008, at the height of the credit crunch. This guarantees a stressed base 3m Libor curve, together with very high levels of OIS-Libor and Spot Libor tenor basis swap spreads.

![Figure 7: 3s6s Spot Libor Tenor basis swap spreads for valuation date October 10, 2008, as taken from the DBAnalytics curve.](./Fig/7.png)

![Figure 8: Forecast Libor curves for various EUR Libor forward rates for valuation date October 10, 2008, as implied by the DBAnalytics curve.](./Fig/8.png)

The repricing of the OIS-Libor basis swap spreads, and the Spot Libor tenor basis swap spreads is very accurate in these extreme market conditions, as shown below.

Table 33: Repricing of EONIA-Libor basis swap spreads for curve valuation date October 10, 2008.

| Settle | RollDate | Maturity | Freq | Basis | Spread | Use | Reprice | Diff |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20081014 | 20081014 | 20090114 | QUARTERLY | ACT/360 | -0.01954 | 1 | -0.0195 | 1.9e-09 |
| 20081014 | 20081014 | 20090414 | QUARTERLY | ACT/360 | -0.015608 | 1 | -0.0146 | -9.5e-12 |
| 20081014 | 20081014 | 20090714 | QUARTERLY | ACT/360 | -0.0116 | 1 | -0.0116 | -4.3e-12 |
| 20081014 | 20081014 | 20091014 | QUARTERLY | ACT/360 | -0.00978885 | 1 | -0.0098 | -1.5e-12 |
| 20081014 | 20081014 | 20101014 | QUARTERLY | ACT/360 | -0.00710582 | 1 | -0.0071 | 5.7e-11 |
| 20081014 | 20081014 | 20111014 | QUARTERLY | ACT/360 | -0.00589418 | 1 | -0.0059 | -1.0e-11 |
| 20081014 | 20081014 | 20121014 | QUARTERLY | ACT/360 | -0.00495246 | 1 | -0.0050 | -9.3e-11 |
| 20081014 | 20081014 | 20131014 | QUARTERLY | ACT/360 | -0.00440578 | 1 | -0.0044 | -3.4e-11 |
| 20081014 | 20081014 | 20151014 | QUARTERLY | ACT/360 | -0.00369356 | 1 | -0.0037 | -4.5e-11 |
| 20081014 | 20081014 | 20181014 | QUARTERLY | ACT/360 | -0.00316908 | 1 | -0.0032 | -3.0e-11 |
| 20081014 | 20081014 | 20231014 | QUARTERLY | ACT/360 | -0.00265628 | 1 | -0.0026 | -5.5e-11 |
| 20081014 | 20081014 | 20281014 | QUARTERLY | ACT/360 | -0.00240359 | 1 | -0.0024 | -4.1e-12 |
| 20081014 | 20081014 | 20381014 | QUARTERLY | ACT/360 | -0.00223321 | 1 | -0.0022 | -5.6e-12 |
| 20081014 | 20081014 | 20481014 | QUARTERLY | ACT/360 | -0.00223321 | 1 | -0.0022 | -3.7e-16 |
| 20081014 | 20081014 | 20581014 | QUARTERLY | ACT/360 | -0.00223321 | 1 | -0.0022 | -8.9e-16 |
| 20081014 | 20081014 | 20681014 | QUARTERLY | ACT/360 | -0.00223321 | 1 | -0.0022 | 3.8e-13 |
| 20081014 | 20081014 | 20781014 | QUARTERLY | ACT/360 | -0.00223321 | 1 | -0.0022 | -9.1e-13 |

Next, we present the re-pricing of SpotLibor spreads.

Table 34: Repricing of Libor Tenor basis swap spreads for curve valuation date October 10, 2008.

| 20081014 | 20081014 | 20090414 | SEMI | ACT/360 | 0.086667 | 6M | Reprice 3m | Reprice 6m | Reprice 3s6s Spread | Diff 3s6s |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20081014 | 20081014 | 20091014 | ANNUALLY | 30/360 | 0.002868 | 6M | 0.0415 | 0.0442 | -0.0039 | 1.0e-15 |
| 20081014 | 20081014 | 20101014 | ANNUALLY | 30/360 | 0.002238 | 6M | 0.0403 | 0.0426 | -0.0022 | 6.7e-15 |
| 20081014 | 20081014 | 20111014 | ANNUALLY | 30/360 | 0.001962 | 6M | 0.0417 | 0.0433 | -0.0016 | 6.3e-16 |
| 20081014 | 20081014 | 20121014 | ANNUALLY | 30/360 | 0.001228 | 6M | 0.0426 | 0.0438 | -0.0012 | 1.7e-15 |
| 20081014 | 20081014 | 20131014 | ANNUALLY | 30/360 | 0.001017 | 6M | 0.0432 | 0.0442 | -0.0010 | 4.1e-15 |
| 20081014 | 20081014 | 20141014 | ANNUALLY | 30/360 | 0.000878 | 6M | 0.0438 | 0.0446 | -0.0009 | 4.4e-17 |
| 20081014 | 20081014 | 20151014 | ANNUALLY | 30/360 | 0.000778 | 6M | 0.0443 | 0.0450 | -0.0008 | -3.7e-17 |
| 20081014 | 20081014 | 20161014 | ANNUALLY | 30/360 | 0.000701 | 6M | 0.0448 | 0.0455 | -0.0007 | 9.8e-18 |
| 20081014 | 20081014 | 20171014 | ANNUALLY | 30/360 | 0.000629 | 6M | 0.0454 | 0.0460 | -0.0006 | 6.7e-18 |
| 20081014 | 20081014 | 20181014 | ANNUALLY | 30/360 | 0.000588 | 6M | 0.0459 | 0.0464 | -0.0006 | 4.8e-18 |
| 20081014 | 20081014 | 20201014 | ANNUALLY | 30/360 | 0.000512 | 6M | 0.0465 | 0.0470 | -0.0005 | 1.2e-17 |
| 20081014 | 20081014 | 20231014 | ANNUALLY | 30/360 | 0.000438 | 6M | 0.0467 | 0.0474 | -0.0004 | 3.2e-17 |
| 20081014 | 20081014 | 20281014 | ANNUALLY | 30/360 | 0.000365 | 6M | 0.0462 | 0.0465 | -0.0004 | 1.3e-17 |
| 20081014 | 20081014 | 20331014 | ANNUALLY | 30/360 | 0.000330 | 6M | 0.0447 | 0.0451 | -0.0003 | 2.4e-18 |
| 20081014 | 20081014 | 20381014 | ANNUALLY | 30/360 | 0.000303 | 6M | 0.0435 | 0.0438 | -0.0003 | 1.3e-17 |
| 20081014 | 20081014 | 20431014 | ANNUALLY | 30/360 | 0.000283 | 6M | 0.0425 | 0.0429 | -0.0003 | 1.0e-17 |
| 20081014 | 20081014 | 20481014 | ANNUALLY | 30/360 | 0.000269 | 6M | 0.0416 | 0.0421 | -0.0003 | 1.9e-17 |
| 20081014 | 20081014 | 20531014 | ANNUALLY | 30/360 | 0.000257 | 6M | 0.0409 | 0.0415 | -0.0003 | -3.0e-17 |
| 20081014 | 20081014 | 20581014 | ANNUALLY | 30/360 | 0.000248 | 6M | 0.0405 | 0.0411 | -0.0002 | -1.7e-17 |
| 20081014 | 20081014 | 20681014 | ANNUALLY | 30/360 | 0.000235 | 6M | 0.0404 | 0.0406 | -0.0002 | -1.5e-17 |

We have repriced CCY Spreads and Treasury Spreads in the section 4.24.1.16, hence no more testing is presented at this point.

c) SOFR Rates Repricing

SOFR Rates are calculated from OIS rate plus a SOFR - OIS spread. We test repricing, i.e. inputted SOFR - OIS spreads and implied SOFR - OIS spreads are the same, see table 35.

# Group | Product | Test | IRCURVE Swap | IRCURVE DiscountSpread | IRCURVE SpotLiborSpread | IRCURVE OISspread |
| --- | --- | --- | --- | --- | --- | --- |
| (1.3) | IRSwapBasis | - | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  | IRSwapFix Flt | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  | OISwap | | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.4) | IRFuture | | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.5) | FundMMIdx_Single | | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
|  | IRIndexSingle_DURBIAS | | EOD | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | CCAR | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | IRRBB | [-15%,+15%] | N/A | N/A | N/A |
| (1.6) | MuniSwap | | EOD | [-5%,+5%] | [-5%,+5%] | [-3%,+5%] | [-5%,+5%] |
|  |  | | CCAR | [-5%,+5%] | [-4%,+5%] | [-4%,+5%] | [-4%,+5%] |
|  |  | | IRRBB | [-3%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.7) | Repo | | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  | EvergreenStockBorrow | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.7) | CouponPaySell | | EOD | [-5%,+5%] | [-5%,+5%] | N/A | N/A |
|  |  | | CCAR | [-5%,+5%] | [-5%,+5%] | N/A | N/A |
|  |  | | IRRBB | [-5%,+5%] | [-5%,+5%] | N/A | N/A |
| (1.8) | TreasuryYieldLockUnissued | | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|  |  | | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.9) | CertificateOfDepositFix | | EOD | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | CCAR | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | IRRBB | [-15%,+15%] | N/A | N/A | N/A |
| (1.10) | CorpBondDistressed | | EOD | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | CCAR | [-5%,+5%] | N/A | N/A | N/A |
|  |  | | IRRBB | [-15%,+15%] | N/A | N/A | N/A |
| (IV.1) | EqDeltaOne_OISSwap | | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | N/A |
|  |  | | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | N/A |
|  |  | | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | N/A |

#### Table 35: Table shows inputted spread

Table 35 shows inputted spread (based on futures and swaps) and implied spread calculated from SOFR and OIS rates are the same.

Figure 9 shows the SOFR and OIS 3m forward rates for different maturities. The interpolation method for the basis spread is HYBRID_CONSTANT_FORWARD.

#### Figure 9: Comparison between SOFR and OIS

![Figure 9: Comparison between SOFR and OIS 3m forward rates for different maturities.](./Fig/1.png)

Figure 9: Comparison between SOFR and OIS 3m forward rates for different maturities. The interpolation method for the basis spread is HYBRID_CONSTANT_FORWARD.

Figure 10 shows the difference between SOFR and OIS 3m forward rates for different maturities and for the interpolation methods LINEAR_ZERO, CONSTANT_FORWARD and HYBRID_FORWARD for the basis spread.

![Figure 10: Difference between SOFR and OIS 3m forward rates for different maturities.](./Fig/2.png)

Figure 10: Difference between SOFR and OIS 3m forward rates for different maturities. The interpolation method for the basis spreads are LINEAR_ZERO, CONSTANT_FORWARD and HYBRID_FORWARD.

d) SOFR Term Structure Basis Repricing

The SOFR forecasting curve is built from the fed fund curve and the SOFR - fed fund basis. The latter is given in the BasisSpreads subtable of the CURVE object, see Table 36.

Table 36: BasisSpreads subtable in CURVE object

When setting BaseRateIndexSubType = LIBOR, OISBaseRateIndexSubType = FEDFUND, the CURVE uses the 3m LIBOR curve as the base curve. Setting BaseRateIndexSubType = SOFR and RateIndexSubType = SOFR and Tenor = 1b means inputs are 1b SOFR - 1b fed fund basis (time dependent 1b SOFR - 1b fed fund basis). Time-dependent 1b SOFR - 1b fed fund basis are represented as two types of instruments.

InstrumentType = FUTURE: Spread = compounded SOFR - compounded fed fund

InstrumentType = SWAP-ONE: Spread = compounded SOFR vs (compounded fed fund) + spread discount at fed fund.

Table 37 compares manually calculated SOFR - fed fund spreads, together with the inputted spreads of the different instruments. The differences are immaterial.

Table 37: Table compares manually calculated SOFR - fed fund spreads

Table 37: Table compares manually calculated SOFR - fed fund spreads, together with the inputted spreads of the different instruments. The differences are immaterial.

Table 38 shows repricing of the SOFR - fed fund instruments.

Table 38: SOFR-Fed fund basis spreads instruments

Table 38: Table shows PV for the SOFR -fed fund basis spreads instruments given in the CURVE object. PV is close to zero which validates repricing.

e) ESTER Term Structure Basis Repricing

The ESTER forecasting curve is built from the EONIA curve and the ESTER - EONIA basis. The latter is given in the BasisSpreads subtable of the CURVE object, see Table 39. The basis will be locked in 2019 and is therefore deterministic. Then it makes sense to provide only one 1b ESTER - 1b EONIAOIŚ instrument to the BasisSpreads table and interpolate basis as

1b ESTER - ab EONIAOIŚ = spread

for all future dates. This is achieved by InstrumentType = FLAT.

Table 39: BasisSpreads subtable in CURVE object

Table 40 shows repricing of the
compounded (1b EONIAOIŚ - 8bps) vs compounded (1b ESTER)
swap for different maturities.

#### Table 40: ESTER-EONIA basis spreads instruments

Table 40: Table shows PV for the ESTER-EONIA basis spreads instruments given in the CURVE object. PV is close to zero which validates repricing.

### f) Curve Testing with Additional Instruments

The testing that follows was not requested through the MARS approval system. A CURVE was provided by the Strats team, and DBA was asked to perform sanity checks. We provide the summary of those checks.

Typically DBA CURVEs contain a particular configuration of market instruments. The curve provided was a USD curve, with ValuationDate 11-May-2016 and was claimed to have more market instruments than usual. In particular, it contains one cash instrument, 13 futures instruments, 16 swaps, 36 OIS spreads and 62 SpotLibor Spreads.

In our testing we have taken this CURVE unmodified. In our first test we show that the OIS swaps are to good approximation priced to par, see Table 41.

#### Table 41: OIS swap prices to par

Table 41: We check that the OIS swap prices to par for a range of maturities up to 60 years. We find in accordance with our expectations that the PV is approximately zero, being about $10^{-4}$ at the very long maturities but as good as $10^{-7}$ at short maturities. A notional of 100 was used.

Next we show that the Swaps are to excellent precision in agreement with the manual price, see Table 42.

#### Table 42: Manual repricing of Swap Rates

Table 42: We manually reprice the Swap Rates in the Swaps subtable used for bootstrapping the curve. We find excellent agreement.

We perform a stress test on the base curve instruments, and find smooth and stable PV over a large range of rate shocks, Figure 11.

![Figure 11: Stress test on base curve instruments](./Fig/3.png)

Figure 11: We stress the cash, futures and swaps instruments in the base curve parallel from -300 bps to +500 bps. The Swap PV is smooth and does not break down even with negative rates.

Finally, we check that the Overnight OIS swap rate is in excellent agreement with the manual calculation. We see in Figure 12 that the OIS rate implied by the DBA SwapRate function (with CURVE.type='OISSpread'), is in excellent agreement with the the manually repriced OIS rate.

![Figure 12: Calculate Overnight OIS swap rates](./Fig/4.png)

Figure 12: We calculate the Overnight OIS swap rates, and compare the manual calculation with the DBA value. We find excellent agreement.

##### 4.1.1.2 Manual Replication of OIS Discounting

In the following section we test the OIS discounting implemented in DBAanalytics. We verify the bootstrapping of the curve with and without OIS spreads, and also look at the impact that OIS spreads have on the curve. Later we have shown effect of LIBOR-OIS basis spread levels on forward rates and discount factors.

The starting point of the bootstrapping are the equations from the definition of the par swap rate and the same from the OIS spreads.

$$\sum_{i=1}^N \Delta_{float,i}L_i DF_{OIS}(T_i) = c_{swap} \sum_{i=1}^N \Delta_{fixed,i}DF_{OIS}(T_i)$$

$$\sum_{i=1}^m \Delta_{float,i}(L_i + s_{OIS})DF_{OIS}(T_i) = DF_{OIS}(T_{start}) - DF_{OIS}(T_{maturity})$$

By rearranging the above two equations, this leads to an expression for the discount factor that can be used for the bootstrapping. Starting with the first maturity, we can iteratively calculate the discount factor of the following maturity, and in this way bootstrap the entire curve.

$$DF_{OIS}(T_{maturity}) = \frac{(DF_{OIS}(T_{settle}) - c_{swap}\sum_{i=1}^{N-1}\Delta_{fixed,i}DF_{OIS}(T_i) - s_{OIS}\sum_{i=1}^{m-1}\Delta_{float,i}DF_{OIS}(T_i))}{(1 + c_{swap}\Delta_{fixed,N}DF_{OIS}(T_{maturity}) + s_{OIS}\Delta_{float,m}DF_{OIS}(T_{maturity}))}$$

Similarly we have the following equation for the forward rates, through which they can be bootstrapped once we have the appropriate discount factors.

$$L_m = \frac{(c_{swap}\sum_{i=1}^N \Delta_{fixed,i}DF_{OIS}(T_i) - \sum_{i=1}^{m-1}\Delta_{float,i}L_iDF_{OIS}(T_i))}{\Delta_{float,m}DF_{OIS}(T_m)}$$

We now compare the results of discount factors and zero rates produced by DBAanalytics with those produced by our own manual bootstrapping. The spreads used in the particular curve tested are given in Table 43 below. Figure 13 examines the discount factors in the two cases, where we use the OIS spreads and in the case where there is no spread. Figure 14 examines instead the zero rates in the two cases. In all cases examined we see that there is very good match between DBAnalytics and our manually bootstrapped and calculated rates. The largest difference found very small at less than 2 x $10^{-11}$.

#### Table 43: OIS spreads as used in the curve for discounting

![Figure 13: The plots compare the discount factors produced by DBAanalytics with manual replication by bootstrapping.](./Fig/5.png)

Figure 13: The plots compare the discount factors produced by DBAanalytics with manual replication by bootstrapping. In the left plot there is a spread, whereas in the right plot there is no spread. In both cases we see that there is a good match between the DBA analytics value and the manual replication. In the case of the spread being included, the largest difference is of the order of $10^{-11}$, and all other points are smaller than that.

![Figure 14: The plots above compare the zero rate produced by the DBAanalytics function and the manual calculation done using the bootstrapped discount factors.](./Fig/6.png)

Figure 14: The plots above compare the zero rate produced by the DBAanalytics function and the manual calculation done using the bootstrapped discount factors. In the left plot there is an OIS spread, but in the right plot there is no spread. The differences in both cases are very small. Similar to the discount factors, in the case of OIS discounting, the magnitude of the largest difference is of the order of $10^{-11}$, and all other points have differences smaller than that.

![Figure 15: The zero rate with and without OIS discounting is plotted above.](./Fig/7.png)

Figure 15: The zero rate with and without OIS discounting is plotted above. As the OIS spread is negative, the discount factor is higher and consequently the zero rate is lower with OIS discounting.

Next we take a Libor curve for valuation date 25-Jul-2013, and assume a flat term structure of spot OIS-Libor basis swap spreads at levels +200bps, 100bps, Libor Flat, 50bps, -50bps, -100bps, -200bps. We look at the effect on OIS discounting and the forecast index curve.

![Figure 16: OIS Discount Factors for various levels of OIS-Libor spreads.](./Fig/8.png)

Figure 16: OIS Discount Factors for various levels of OIS-Libor spreads.

![Figure 17: 3M forecast Libor curves for various levels of OIS-Libor spreads.](./Fig/9.png)

Figure 17: 3M forecast Libor curves for various levels of OIS-Libor spreads.

Discount factors computed from the OIS curve are higher than those from the Libor curve. Implied forward rates under OIS discounting are lower than those under Libor discounting. This is expected when the OIS curve is below the Libor curve (as would be normally be the case) and when the curve is upward sloping.

##### 4.1.1.3 ClearingHouse Spreads

Clearinghouses offer institutions the facility to clear trades at a central location rather than in private between dealers, thereby increasing transparency and reducing counterparty risk.

Since the 2008 crisis, clearinghouses have played an increasingly important role as regulatory authorities in the US, Europe and Asia require more and more derivative products to be guaranteed by clearinghouses. The goal of these regulations is to make the derivatives market more transparent and ensure that losses at one financial company don't spread to others and the broader economy.

Due to different margin requirements and fees charged by different clearinghouses, the cost of a derivative cleared at one clearinghouse may differ to that of the same derivative cleared at another. For interest rate swaps, these differences can be seen in the fixed swap rates that are quoted in the different clearing houses.

For example, the fixed rate on a 30-year interest rate swap that clears through the CME Group typically differs to the fixed rate on the same position cleared at LCH Clearnet by about 3 basis points. This observed difference is called the clearinghouse spread.

In recent times structural imbalances between buy and sellside demand for cleared swaps has contributed to widening of the basis, and for accurate pricing these spreads can no longer be ignored from the modelling.

As of DBA version 330 clearing spreads are included in DBA through a ClearingSpreads subtable in the OS2 curve (UseType=DISCOUNT_BASIS and CurveType=COVER_BASIS). Clearing house spreads are entered as relative spreads (in basis points) against a base clearing house. The base clearing house in DBA can be set using the BaseClearingHouse field in the CURVE object and is typically set to LCH.

When a ClearingSpreads subtable is used, the market data in the Cash, Futures and Swaps subtables correspond to those quoted at the base clearing house. Clearing house spreads can be entered under the Spread column in the ClearingSpreads subtable for cash, futures and swaps instruments, where the type of the instrument that the spread relates to is indicated by the InstrumentType column in the ClearingSpreads subtable.

In the case when the Clearing house spreads correspond to the same instruments in the cash, futures and swaps subtables, then a simple procedure is obtaining the Clearinghouse spread instrument market data which is then used internally in DBA calculations. For brevity we describe this process for the swaps subtable.

When the spreads in the ClearingHouse subtable, s, correspond with the same instruments in the Swaps (baseclearinghouse) subtable, the clearing house swap rates, $X^{CHS}_i$, are related to the base clearinghouse rates, $X_i$, via:

$$X^{CHS}_i = X_i + s_i$$

These CHS swap rates are then used in the CURVE bootstrap. For example, if OIS spreads are also present then the Libor-OIS bootstrapping is performed to obtain $L^{CHS}$ and $D^{CHS}$ using the usual bootstrap method detailed in 2.3.5.13, except now the CHS swap rates are used, resulting in the two equations:

$$\sum_{m=1}^N L^{CHS}(T_{m-1},T_m)\Delta_mD^{CHS}(T_m) = X_i^{CHS} \sum_{m=1}^N \Delta_mD^{CHS}(T_m)$$

$$\sum_{m=1}^N (L^{CHS}(T_{m-1},T_m) + s_{OIS})\Delta_mD^{CHS}(T_m) = D^{CHS}(T_0) - D^{CHS}(T_N).$$

For completeness we note that for annual swaps the dual bootstrapping can be solved exactly without interpolation, according to:

$$D^{CHS}(T_M) = \frac{D^{CHS}(T_0) - (X_N^{CHS} + X_M^{CHS})\sum_{i=1}^{M-1} \Delta_iD^{CHS}(T_i)}{\Delta_M(X_N^{CHS} + X_M^{CHS}) + 1}$$

and

$$L(T_{M-1},T_M) = \frac{X_M^{CHS} \sum_{i=1}^M \Delta_iD^{CHS}(T_i) - \sum_{i=1}^{M-1} \Delta_iL(T_{i-1},T_i)D^{CHS}(T_i)}{\Delta_M D^{CHS}(T_M)}$$

Therefore, clearing house spreads impact both forecasting and discounting for the same funding name.

To obtain $L^{CHS}$, a 1 × 2 array [ClearingHouse CHS] must be passed to the fundingName in the FwdRate function. Furthermore, the CHS discount factors can be calculated in DBA using the DiscFactor function with the FundingName argument set equal to the funding name and adding the clearing house code to the end of the string separated by a hyphen. For example, if the OIS funding is used at the CME clearing house then the FundingName=\"SOFR-OIS-CME\". Other CURVE related functions, such as the SwapRate function, are able to calculate the CHS rates by passing a RESULTS object with property "ClearingHouse=CME" to the ExtraResults argument of the SwapRate function.

In our first test we manually reprice the clearing house Libors and discount factors using the dual bootstrapping algorithm.

We use a USD curve with BaseClearingHouse=LCH, and ClearingHouse=CME in the ClearingSpreads subtable. We set random clearing house spreads. A comparison of the discount factors are shown in Figure 18, and we find excellent agreement with the manual calculation. Similar in Figure 19, we plot the manually bootstrapped Libor against the Libors obtained using DBA, again finding excellent agreement. This supports the evidence that the clearinghouse spreads subtable has been correctly implemented in DBA.

![Figure 18: USD discount factor for CME clearing house spreads compared with manual computation.](./Fig/10.png)

Figure 18: USD discount factor for CME clearing house spreads compared with manual computation. The differences are less the $10^{-9}$ which provides strong evidence that the clearing house spreads are correctly implemented in DBA.

![Figure 19: USD Libor for CME clearing house spreads compared with manual computation.](./Fig/11.png)

Figure 19: USD Libor for CME clearing house spreads compared with manual computation. The differences are less the $10^{-9}$ which provides strong evidence that the clearing house spreads are correctly implemented in DBA.

In our next test, we verify that the DBA SwapRate function is correctly implemented with clearing house spreads.

In Figure 20 we compare the difference between swap rate ending at different maturities up to 50 years, we find that the difference between swap rates for LCH and CME clearinghouses is exactly equal to the spread.

![Figure 20: USD swap rate for clearing house spreads (LCH vs CME) of 0.02% over 50 years.](./Fig/12.png)

Figure 20: USD swap rate for clearing house spreads (LCH vs CME) of 0.02% over 50 years. The difference in swap rate is equal to the spread as expected providing evidence that clearing house spreads are correctly implemented in DBA curve object related functions.

In the security object, the "ClearingHouse" field has been enabled which triggers the proper forecasting and discounting for the trade when the security is priced in a clearing house. For example, a fixed for floating swap is considered a fixed for floating swap security type, receiving fixed rate 0.0199 semiannually for 10 years, and paying floating quarterly for 10 years.

In Figure 21 we compare the PVs of the LCH and CME fixed for floating swaps for a range of clearing house spreads. As expected, as the clearing house spreads increase, the PV of the CME swap becomes more negative. That is we effectively receive smaller fixed payments due to the spreads.

![Figure 21: Comparison of the PV of a fixed for floating swap traded on LCH and CME clearing houses respectively.](./Fig/13.png)

Figure 21: Comparison of the PV of a fixed for floating swap traded on LCH and CME clearing houses respectively. The PV is seen to become more negative as the clearing house spread increases. The PVs are stable for a large range of spreads.

Next we have shown the testing relates to the curve parameter ClearingSpreads. In contrast to previous testing this new change allows clearing spreads to be provided for multiple tenors. This allows for basis trades to be handled when there is non-zero clearing basis. We also test the introduction of the column setting which tenor of OISSpreads to keep constant for clearing house.

### a) Outline of theory - Single clearing spread provided

Initially we aim to show that it is only necessary to provide clearing spreads for one LIBOR tenor. Taking the PV of a swap as a function of $r_L$, $s_{OIS}$ and $K$. Let us also assume that the initial margin is proportional to the flat delta of the swap, then the PV adjusted by the initial margin can be approximated by:

$$SwapPV(r_L, s_{OIS}, K, c) \approx SwapPV_{raw}(r_L, s_{OIS}, K) + c \frac{\partial}{\partial r_L} SwapPV_{raw}(r_L, s_{OIS}, K)$$

$$\approx SwapPV_{raw}(r_L + c, s_{OIS}, K)$$

In other words this means that we need only provide clearing spreads for one LIBOR tenor.

Suppose we have clearing spreads for 6m tenor, then we need to calibrate to

$$SwapPV(6m, CME, t) = SwapPV(6m, LCH, t) + ClearingSpread(6m, CME - LCH, t)$$

$$OISSpread(6m, CME, t) = OISSpread(6m, LCH, t)$$

where the discount factors are bootstrapped, so we have

$$DF_{OIS,CME}(t) = DF_{OIS,LCH}(t)Ad_{OIS,CME-LCH}(t)$$

$$DF_{6m,CME}(t) = DF_{6m,LCH}(t)Ad_{6m,CME-LCH}(t)$$

And for other LIBOR tenors, we extrapolate flat and use the same adjustment factor

$$DF_{3m,CME}(t) = DF_{3m,LCH}(t)Ad_{6m,CME-LCH}(t)$$

### b) Outline of theory - Multiple clearing spreads provided

In reality, due to supply and demand there can be differences in clearing spreads for different tenors. We can therefore input clearing spreads for multiple LIBOR tenors, but we set which LIBOR tenor the OISSpreads are kept constant between LCH and CME with the setting OISSpreadTenor. Using our previous example we assume that OISSpreadTenor = 6m, but we also have the 3m tenor for clearing spreads.

As before for the 6m tenor we bootstrap

$$DF_{OIS,CME}(t) = DF_{OIS,LCH}(t)Ad_{OIS,CME-LCH}(t)$$

$$DF_{6m,CME}(t) = DF_{6m,LCH}(t)Ad_{6m,CME-LCH}(t)$$

to hit calibration targets

$$SwapPV(6m, CME, t) = SwapPV(6m, LCH, t) + ClearingSpread(6m, CME - LCH, t)$$

$$OISSpread(6m, CME, t) = OISSpread(6m, LCH, t)$$

Then for the 3m tenor we calibrate to

$$SwapPV(3m, CME, t) = SwapPV(3m, LCH, t) + ClearingSpread(3m, CME - LCH, t)$$

and bootstrap

$$DF_{3m,CME}(t) = DF_{3m,LCH}(t)Ad_{3m,CME-LCH}(t)$$

Once we have the clearing basis for selected tenors, the clearing basis for any other tenors is given by flat extrapolation and linear interpolation $ln(Ad_{X,CME-LCH}(t))$ with 30/360 day count convention. We test this in the following subsection.

### c) Interpolation check

In the following test we have clearing spreads for the 3m and 12m tenors. Specifically we have the clearing spreads for 3m and 12m given as in the following table:

#### Table 44: Clearing spreads for each LIBOR tenor

| Libor Tenor | Manual |
| --- | --- |
| 3M | 0.02% |
| 12M | 0.04% |

From the linear interpolation described in the previous subsection we have that for the 6m tenor the adjustment factor should be

$$ln(Ad_{6m,CME-LCH}(t)) = \frac{2}{3}ln(Ad_{3m,CME-LCH}(t)) + \frac{1}{3}ln(Ad_{12m,CME-LCH}(t))$$

Now assuming that we have flat interest rates we have

$$DF(t) = e^{-rt}$$

$$Adj_{CME-LCH}(t) = \frac{DF_{CME}(t)}{DF_{LCH}(t)} = e^{-ct}$$

where c is the clearing spread for that tenor. We also have the following approximation for the forward rate in this scenario

$$FwdRate(t_1, t_2) = \frac{1}{t_2 - t_1}(e^{r(t_2-t_1)} - 1) \approx r$$

and so the difference between the forward rates under LCH and CME clearing will be approximately the clearing spread.

In other words the linear interpolation on the adjustment factor, leads to approximately linear interpolation on the difference between the two forward rates. This is precisely the behaviour we see in Figure 22, where the 6m tenor is approximately at the level 1/3 of the way between the 3m and 12m tenors. Furthermore we see the flat extrapolation gives the 1m tenor at the level of the 3m tenor.

![Figure 22: The difference in forward rates is given as a function of time for 1M, 3M, 6M and 12M tenors.](./Fig/14.png)

Figure 22: The difference in forward rates is given as a function of time for 1M, 3M, 6M and 12M tenors. The linear interpolation on the adjustment factor can be seen for the 6M tenor, and the flat extrapolation can be seen for the 1M tenor.

### d) Checking OISSpreads held constant

In this subsection we check that the OISSpread for the specified tenor is held constant. First we set OISSpreadTenor = 6m, with clearing spreads = 0.01% for 3m tenor and clearing spreads = 0.02% for 6m (see figure below).

![Figure 23: The clearing spreads for 3M and 6M tenors can be seen to be constant at the 0.010% and 0.020% level respectively, as given in the ClearingSpreads subtable.](./Fig/15.png)

Figure 23: The clearing spreads for 3M and 6M tenors can be seen to be constant at the 0.010% and 0.020% level respectively, as given in the ClearingSpreads subtable.

As can be seen in the plot that as the OISSpread varies over time the difference between LCH and CME remains small and negligible.

![Figure 24: With OISSpreadTenor = 6M we find that the OIS-6M spread matches almost exactly between LCH and CME funding.](./Fig/16.png)

Figure 24: With OISSpreadTenor = 6M we find that the OIS-6M spread matches almost exactly between LCH and CME funding.

We repeat the exercise with the OISSpreadTenor = 3m and looking at the the OIS - 3M LIBOR basis. Once again we find the difference is almost zero.

![Figure 25: With OISSpreadTenor = 3M we find that the OIS-3M spread matches almost exactly between LCH and CME funding.](./Fig/17.png)

Figure 25: With OISSpreadTenor = 3M we find that the OIS-3M spread matches almost exactly between LCH and CME funding.

#### 4.1.2 Curve Parameter Testing

Here, we present the testings related to the curve parameters. Model parameters are tested in detail in Section §4.24, however, testing of some key curve parameters are presented in this section.

##### 4.1.2.1 BuildMethod
a) 1d1d Forward Rates

Firstly, we see how BuildMethod works. This controls interpolation of the base curve (the curve built off Cash/Futures/Swaps ignoring various spreads). Then we build LIBOR CURVE with various BuildMethod and calculate 1d1d forward rates (we can approximately regard it as continuously compounded forward rates) off the base curves to see the difference of interpolation.

We test the following BuildMethod which could be used by the bank LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD and QUADRATIC_FORWARD.

The result of front end (up to 3.5 years) is shown in Figure 26.

![Figure 26: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD and QUADRATIC_FORWARD, front end (up to 3.5 years).](./Fig/18.png)

Figure 26: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD and QUADRATIC_FORWARD, front end (up to 3.5 years).

LINEAR_ZERO has noncontinuous 1-day forward, front end (up to 3.5 years), see Figure 27.

![Figure 27: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, front end (up to 3.5 years).](./Fig/19.png)

Figure 27: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, front end (up to 3.5 years).

Figure 28 shows the 1-day forward rate for BuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, front end (up to 3.5 years).

![Figure 28: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, front end (up to 3.5 years).](./Fig/20.png)

Figure 28: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, front end (up to 3.5 years).

Comparison between CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD are in Figure 29. CONSTANT_FORWARD gives piece-wise constant continuously compounded forwards (then non-continuous) and HYBRID_FORWARD gives continuous forwards with quadratic spline (piece-wise quadratic but the derivatives of the forwards are not continuous). HYBRID_CONSTANT_FORWARD switches from CONSTANT_FORWARD to HYBRID_FORWARD at the last future maturity.

b) BuildMethod testing - more to come in later sections

#### OIS Discount Factors

![Figure 30: OIS Discount Factors for various levels of OIS-Libor spreads.](./Fig/21.png)

#### 3M forecast Libor curves for various levels of OIS-Libor spreads

![Figure 31: 3M forecast Libor curves for various levels of OIS-Libor spreads.](./Fig/22.png)

#### Zero Rate Comparison

Discount factors computed from the OIS curve are higher than those from the Libor curve. Implied forward rates under OIS discounting are lower than those under Libor discounting. This is expected when the OIS curve is below the Libor curve (as would be normally be the case) and when the curve is upward sloping.

#### Further analysis of clearing house spreads

Clearinghouses offer institutions the facility to clear trades at a central location rather than in private between dealers, thereby increasing transparency and reducing counterparty risk.

Since the 2008 crisis, clearinghouses have played an increasingly important role as regulatory authorities in the US, Europe and Asia require more and more derivative products to be guaranteed by clearinghouses. The goal of these regulations is to make the derivatives market more transparent and ensure that losses at one financial company don't spread to others and the broader economy.

Due to different margin requirements and fees charged by different clearinghouses, the cost of a derivative cleared at one clearinghouse may differ to that of the same derivative cleared at another. For interest rate swaps, these differences can be seen in the fixed swap rates that are quoted in the different clearing houses.

For example, the fixed rate on a 30-year interest rate swap that clears through the CME Group typically differs to the fixed rate on the same position cleared at LCH Clearnet by about 3 basis points. This observed difference is called the clearinghouse spread.

#### OIS Discount Factor Calculations

The calculation of OIS discount factors is critical for accurate valuation. The formula used is:

$DF(t) = e^{-rt}$

where r is the continuously compounded zero rate for maturity t.

When incorporating clearing house spreads, the adjustment factor is given by:

$Adj_{CME-LCH}(t) = \frac{DF_{CME}(t)}{DF_{LCH}(t)} = e^{-ct}$

where c is the clearing spread for the relevant tenor.

#### Forward Rate Approximation

The forward rate for period (t₁, t₂) can be approximated as:

$FwdRate(t_1, t_2) = \frac{1}{t_2 - t_1}(e^{r(t_2-t_1)} - 1) \approx r$

Under flat interest rate assumptions, the difference between forward rates under different clearing houses will be approximately equal to the clearing spread.

#### Stress Testing Results

Stress tests performed on the base curve instruments show smooth and stable PV over a large range of rate shocks (-300 bps to +500 bps). The swap PV functions remain smooth and do not break down even in negative rate environments, which is crucial for risk management in the current interest rate environment.

#### Bootstrapping Methodology

The bootstrapping process begins with the equations from the definition of par swap rate and OIS spreads:

$\sum_{i=1}^N \Delta_{float,i}L_i DF_{OIS}(T_i) = c_{swap} \sum_{i=1}^N \Delta_{fixed,i}DF_{OIS}(T_i)$

$\sum_{i=1}^m \Delta_{float,i}(L_i + s_{OIS})DF_{OIS}(T_i) = DF_{OIS}(T_{start}) - DF_{OIS}(T_{maturity})$

By rearranging these equations, we derive expressions for discount factors and forward rates that enable the iterative bootstrapping of the entire curve.

#### Conclusion on Model Risk Management

The comprehensive testing conducted confirms that the implemented curve-building methodologies in DBA are accurate and reliable. The tests verify that:

1. OIS discounting is correctly implemented
2. Clearing house spreads are properly accounted for
3. Different build methods produce expected interpolation behaviors
4. Stress testing confirms robustness even in extreme rate environments

These results support the model's suitability for risk management and valuation purposes across various market conditions and instrument types.

![Figure 29: Figure compares 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/21.png)

Figure 29: Figure compares 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).

Comparison between BuildMethod = HYBRID_FORWARD and QUADRATIC_FORWARD are in Figure 30.

![Figure 30: Figure compares 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = HYBRID_FORWARD and QUADRATIC_FORWARD, front end (up to 3.5 years).](./Fig/22.png)

Figure 30: Figure compares 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = HYBRID_FORWARD and QUADRATIC_FORWARD, front end (up to 3.5 years).

QUADRATIC_FORWARD is cubic spline of log of discount factors. Then continuously compounded forwards are continuous and smooth (its 1st order derivatives is also continuous). The figure above shows almost the same interpolation between them but shows QUADRATIC_FORWARD is smoother as expected.

We might think QUADRATIC_FORWARD would be recommendation for EOD pricing/risk management as the curve is smoothest. But DBA's recommendation is HYBRID_CONSTANT_FORWARD because:

1. We typically input granular front end instruments (Cash and Futures). In that case, spline interpolation like HYBRID_FORWARD or QUADRATIC_FORWARD would introduce oscillation. With granular input, CONSTANT_FORWARD interpolation would allow us to control interpolation as we want!
2. We will see curve risks with QUADRATIC_FORWARD has big risk spillover, see Section 4.1.2.1. This is because the curve is too smooth.

![Figure 31: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, up to 10 years.](./Fig/23.png)

Figure 31: Figure shows 1-day forward rate (using the LIBOR-3m curve) for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, up to 10 years.

### b) Delta Profiles

In the following sets of testing we examine the sensitivity of bucketed DELTA at different points of the curve to the curve BuildMethod.

The security considered is an accreting Bermudan swap with annual exercise from 10/02/2023 to 10/02/2048; the valuation date is 16/02/2018. The underlying swap also runs from 10/02/2023 to 10/02/2048 and receives a fixed coupon of 4% and pays LIBOR. The notional accretes by 4% annually. We note however that although this product is not approved under the Rate/Deterministic model, it allows us to examine the DELTA profiles resulting from different curve interpolations.

In the first set of testing we look at the DELTA of the Bermudan for different BuildMethods. DELTA produces a sensitivity for each curve maturity used in the construction of the curve, by applying a bump at each point and measuring the impact on PV. In Figure 32 we have the DELTA profiles for CONSTANT_FORWARD, LINEAR_ZERO, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD and QUADRATIC_FORWARD.

As expected the security is most sensitive to the 30Y point in all cases, with smaller sensitivities at shorter maturity curve points. In general, the profiles are mostly similar between different BuildMethods. The HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD BuildMethods do have small sensitivities just beyond the 30Y point at the 35Y point, but as the figure show the sensitivities are very small in comparison to that at the 30Y point.

![Figure 32: The DELTA per bucket (the sensitivity of PV to bumps of different curve instruments) is given above for different BuildMethods.](./Fig/24.png)

Figure 32: The DELTA per bucket (the sensitivity of PV to bumps of different curve instruments) is given above for different BuildMethods. The greatest sensitivity is at the 30Y maturity point and smaller sensitivities at earlier dates for all BuildMethods.

Next, we attempt to replicate the DELTA calculation manually, by repricing the Bermudan under appropriate curve bumps. In other words, for each curve construction point we calculate

$$\Delta_i = \frac{PV - PV(bump_i)}{bump_i} \times bp \times scaling factor$$

where $bump_i$ is the bump applied to bucket $i$ and $PV(bump_i)$ is the PV when $bump_i$ is applied to bucket $i$.

The manual results are compared with the value produced by DBAanalytics in Table 45 below. Across all of the BuildMethods, we find that there is a good match with only small differences for all bucket points considered.

#### Table 45: DELTA verification by bucket

Table 45: DELTA verification by bucket. For each BuildMethod we have the DELTA bucketing as calculated by DBAanalytics and also according to manual recalculation, and the difference between them. In the manual recalculation we use the unbumped PV and the PV when the curve is bumped (using the same bumps as DBAanalytics). This then permits a comparison. All the differences are small in size.

### c) Delta Risk Spill Over Effect

We look at risk spill over for an 11y swap as an example. We calculate DELTA for an (around the par) 11y swap with various BuildMethods. The result is shown in Table 46. The result of using LINEAR_ZERO and CONSTANT_FORWARD is that the risk is localized. Since the swap maturity is 11y and we have 10y and 12y buckets, ideal delta is at 10y and 12y with 60% and 40%. These BuildMethods do it well. But QUADRATIC_FORWARD has risk spill over at the closest buckets (9y and 15y) (we call it risk spill over) and is the reason why we do not use that curve for risk calculation. BuildMethod = HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD has some risk spill over in the closest buckets (9y and 15y) but well localized compared to QUADRATIC_FORWARD. Then we conclude HYBRID_CONSTANT_FORWARD has good balance between curve smoothness and risk localization: as we see so far, these are basically trade off.

#### Table 46: FLATDELTA of 11y swap for various BuildMethods

![Figure 33: Figure shows the DELTA for an (around the par) 11y swap for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD.](./Fig/25.png)

Figure 33: Figure shows the DELTA for an (around the par) 11y swap for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD.

### d) Stress Testing : 1d1d Forward Rates and Zero Rates

In the graphs below the curve has been bumped at specific points (4Y, 7Y, 10Y and 20Y) by 0.1%. The testing looks at the impact on the curve interpolation for various BuildMethods by examining the 1-day forward rate and zero rate in Figures 34 and 35.

The impact of the curve bumps are apparent in the 1-day forward rate, as illustrated in Figure 34, then in the zero rate shown in Figure 35 as the zero rates are an average rate. In each case we can see that the impact is centered near the maturity where the bump has been applied, as would be expected. The impact is then largely dissipated by the adjacent maturity points in curve construction.

The plot for HYBRID_CONSTANT_FORWARD in Figure 34 provides an illustration of the relationship between it and the two BuildMethods HYBRID_FORWARD and CONSTANT_FORWARD. Although HYBRID_CONSTANT_FORWARD is very close to HYBRID_FORWARD for longer maturities, it demonstrates different behaviour at the shorter end of the curve. Specifically, it behaves in a similar fashion to CONSTANT_FORWARD BuildMethod, which is as would be expected given that it uses constant forward interpolation for the short end of the curve.

![Figure 34: 1-day forward rate under point stresses at 4Y, 7Y, 10Y and 20Y points for BuildMethods CONSTANT_FORWARD, LINEAR_ZERO, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD and QUADRATIC_FORWARD.](./Fig/26.png)

Figure 34: 1-day forward rate under point stresses at 4Y, 7Y, 10Y and 20Y points for BuildMethods CONSTANT_FORWARD, LINEAR_ZERO, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD and QUADRATIC_FORWARD. In most cases the impact on the forward rates is centered on the stress point, with limited impact at other maturities.

the BuildMethods. We look at the difference between the DELTA produced at each bucket compared to the unstressed version.

Although, as would be expected, the stress affects the DELTA at the bucket at which it is applied most, there are smaller effects at other maturities. The CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD and QUADRATIC_FORWARD profiles are broadly similar in showing this pattern. A further point to note is that the LINEAR_ZERO DELTA profile is extremely sensitive to the 25Y stress, showing a very large difference at that point in the profile.

![Figure 36: Comparison of the DELTA by bucket under stress for each of the BuildMethods.](./Fig/27.png)

Figure 36: Comparison of the DELTA by bucket under stress for each of the BuildMethods. In each case we compare the difference between the base DELTA profile and when a 0.5% stress is applied to the 15Y, 25Y and 30Y curve points respectively. In general - as would be expected - the difference is greatest where the stress is applied. In the case of LINEAR_ZERO there is a significant difference caused by the 25Y stress.

#### Table 47: ...UseBaseCurve Setting

| OISUseBaseCurve | NO |
| --- | --- |
| CCYUseBaseCurve | NO |
| SpotLiborUseBaseCurve | NO |
| TreasuryUseBaseCurve | NO |

##### 4.1.2.2 SpreadBuildMethod

### a) 1d1d Forward Rates

SpreadBuildMethod controls interpolation of spread lambda adjustments over the base curve for each tenor curves (OIS, CCY, 1m, 6m, 3M,... tenors). In order to understand their interpolation easier, we calculate 1-day forwards of each tenor curves without using backbone curves.

We recall from [36] and [37] how discount factors are calculated:

$$DF_{OIS}(t) = DF_{base}(t) \cdot Adj_{OIS-base}(t)$$

$$DF_{CCY}(t) = DF_{base}(t) \cdot Adj_{CCY-base}(t)$$

$$DF_{3m}(t) = DF_{base}(t) \cdot Adj_{3m-base}(t)$$

$$DF_{6m}(t) = DF_{3m}(t) \cdot Adj_{6m-3m}(t)$$

The properties ...UseBaseCurve are to build discounting/forecasting curves without backbone curves. For example, OISUseBaseCurve = NO means

$$DF_{OIS}(t) = Adj_{OIS-base}(t)$$

and we bootstrap $Adj_{OIS-base}(t)$ to hit instruments in the OISSpreads subtable.

This section deals with the cases OISUseBaseCurve = NO, CCYUseBaseCurve = NO, SpotLiborUseBaseCurve = NO, TreasuryUseBaseCurve = NO, the following Section 4.2.4.1 with ... UseBaseCurve = YES.

The notation of SpreadBuildMethod is X-Y or X (meaning X-X). X controls interpolation of discounting (e.g., OISSpreads, CCYSpreads and DiscountSpreads) and Y controls interpolation of forecasting (SpotLiborSpreads, BasisSpreads, ∆λs). But since interpolation of each tenor curves in the test, focusing X-X is enough to cover all cases. SpreadBuildMethod = HYBRID_CONSTANT_FORWARD builds the ∆λs/front end (cash, futures instruments) in CONSTANT_FORWARD and the long end (few long instruments) in HYBRID_FORWARD. But for OISSpreads, CCYSpreads, DiscountSpreads and BasisSpreads, we can explicitly define the front end with SpreadBuildMethod column. For SpreadBuildMethod = HYBRID_CONSTANT_FORWARD, we use CONSTANT_FORWARD build up to 1y for OISSpreads, CCYSpreads and DiscountSpreads.

Figure 37 shows the 1-day forward OIS rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD, front end (up to 3.5 years).

![Figure 37: Figure shows 1-day forward OIS rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/28.png)

Figure 37: Figure shows 1-day forward OIS rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD, front end (up to 3.5 years).

Comparison between CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD are in Figure 38.

![Figure 38: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/29.png)

Figure 38: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).

Comparison between SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD are in Figure 39.

![Figure 39: Figure compares 1-day forward OIS rate for SpreadBuildMethod = HYBRID_FORWARD and QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).](./Fig/30.png)

Figure 39: Figure compares 1-day forward OIS rate for SpreadBuildMethod = HYBRID_FORWARD and QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).

Figure 40 shows the 1-day forward CCY rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD for up to 3.5 years (front end).

![Figure 40: Figure shows 1-day forward CCY rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).](./Fig/31.png)

Figure 40: Figure shows 1-day forward CCY rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).

Comparison between CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD are in Figure 41.

![Figure 41: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/32.png)

Figure 41: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).

Comparison between SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD are in Figure 42.

![Figure 42: Figure compares 1-day forward CCY rate for SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/33.png)

Figure 42: Figure compares 1-day forward CCY rate for SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD, front end (up to 3.5 years).

Figure 43 shows the 1-day forward LIBOR-6m rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD for up to 3.5 years (front end).

![Figure 43: Figure shows 1-day forward LIBOR-6m rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).](./Fig/34.png)

Figure 43: Figure shows 1-day forward LIBOR-6m rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).

Comparison between CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD are in Figure 44.

![Figure 44: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/35.png)

Figure 44: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).

Comparison between BuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD are in Figure 45.

![Figure 45: Figure compares 1-day forward LIBOR-6m rate for SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).](./Fig/36.png)

Figure 45: Figure compares 1-day forward LIBOR-6m rate for SpreadBuildMethod = HYBRID_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD front end (up to 3.5 years).

Figure 46 shows the 1-day forward Treasury rate for BuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD front end (up to 3.5 years).

![Figure 46: Figure shows 1-day forward Treasury rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, front end (up to 3.5 years).](./Fig/37.png)

Figure 46: Figure shows 1-day forward Treasury rate for SpreadBuildMethod = LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, front end (up to 3.5 years).

Comparison between CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD are in Figure 47.

![Figure 47: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).](./Fig/38.png)

Figure 47: Figure compares 1-day forward OIS rate for SpreadBuildMethod = CONSTANT_FORWARD, HYBRID_FORWARD and HYBRID_CONSTANT_FORWARD, front end (up to 3.5 years).

### b) SOFR and FEDFUND Profiles

Figure 48 shows the 1b SOFR rate together with the 1b FEDFUND rate and the difference, for different maturities. The SOFR curve uses the FEDFUND CURVE as a backbone, and the basis spreads are applied on top from the BasisSpreads table, together with the interpolation coming from the setting SpreadBuildMethod = HYBRID_CONSTANT_FORWARD.

![Figure 48: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = HYBRID_CONSTANT_FORWARD.](./Fig/39.png)

Figure 48: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = HYBRID_CONSTANT_FORWARD.

Figure 49 shows the 1b SOFR rate together with the 1b FEDFUND rate and the difference, for different maturities. The SOFR curve uses the FEDFUND CURVE as a backbone, and the basis spreads are applied on top from the BasisSpreads table, together with the interpolation coming from the setting SpreadBuildMethod = LINEAR_ZERO.

![Figure 49: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = LINEAR_ZERO.](./Fig/40.png)

Figure 49: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = LINEAR_ZERO.

Figure 50 shows the 1b SOFR rate together with the 1b FEDFUND rate and the difference, for different maturities. The SOFR curve uses the FEDFUND CURVE as a backbone, and the basis spreads are applied on top from the BasisSpreads table, together with the interpolation coming from the setting SpreadBuildMethod = HYBRID_FORWARD.

![Figure 50: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = HYBRID_FORWARD.](./Fig/41.png)

Figure 50: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = HYBRID_FORWARD.

Figure 51 shows the 1b SOFR rate together with the 1b FEDFUND rate and the difference, for different maturities. The SOFR curve uses the FEDFUND CURVE as a backbone, and the basis spreads are applied on top from the BasisSpreads table, together with the interpolation coming from the setting SpreadBuildMethod = CONSTANT_FORWARD.

![Figure 51: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = CONSTANT_FORWARD.](./Fig/42.png)

Figure 51: Figure compares the 1b SOFR rate to the 1b FEDFUND rate, together with the difference for SpreadBuildMethod = CONSTANT_FORWARD.

### c) Discount Spread Delta Profiles

In the following sets of testing we examine the sensitivity of DISCOUNTSPREADDELTA at different points of the curve to the curve BuildMethod.

The security considered is the same accreting Bermudan swap considered in the DELTA testing in Section 4.1.2.1.

In the first set of testing we look at the DISCOUNTSPREADDELTA of the Bermudan for different SpreadBuildMethods without using backbone curve. DISCOUNTSPREADDELTA produces a sensitivity for each curve maturity provided for the discount spreads, by applying a bump at each point and measuring the impact on PV. In Figure 52 we have the DISCOUNTSPREADDELTA profiles for CONSTANT_FORWARD, LINEAR_ZERO, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD and QUADRATIC_CONSTANT_FORWARD.

The differences between the different BuildMethods is very small. The security is most sensitive at the 5Y point when the annual exercise and swap start, where the DISCOUNTSPREADDELTA is largest. The DISCOUNTSPREADDELTA then diminishes in size for longer maturities with only small magnitude at buckets other than 5Y, 7Y and 10Y.

![Figure 52: The DISCOUNTSPREADDELTA per bucket (the sensitivity of PV to bumps of different discount spreads)](./Fig/43.png)

Figure 52: The DISCOUNTSPREADDELTA per bucket (the sensitivity of PV to bumps of different discount spreads) is given above for different BuildMethods. The greatest sensitivity is at the 5Y point, with sensitivities decreasing for maturities beyond this point, and by the 15Y point they are very small.
The differences between the different BuildMethods is very small. The security is most sensitive at the 5Y point when the annual exercise and swap start, where the DISCOUNTSPREADDELTA is largest. The DISCOUNTSPREADDELTA then diminishes in size for longer maturities with only small magnitude at buckets other than 5Y, 7Y and 10Y.
The DISCOUNTSPREADDELTA is then very small at the 15Y point and beyond. The differences between the different BuildMethods is very small.
Next, we attempt to replicate the DISCOUNTSPREADDELTA calculation manually. This is done by repricing the Bermudan under appropriate curve bumps, which we then use to produce the value for each bucket. So for each curve construction point we calculate

$$\Delta_i = (PV - PV(bump_i)) \times scaling factor$$

where $bump_i$ is the bump applied to bucket $i$ and $PV(bump_i$ is the PV when $bump_i$ is applied to bucket $i$.

Table 48 below gives the results from DBAnalytics and our manual calculation, as well as the difference between them. There is a good match for all BuildMethods, and we see that there are only very small differences in all cases. Furthermore it is clear that there are only small differences between the values produced for different BuildMethods.

| Bucket | DBAanalytics | Manual | Error | DBAanalytics | Manual | Error | DBAanalytics | Manual | Error | DBAanalytics | Manual | Error | DBAanalytics | Manual | Error | DBAanalytics | Manual | Error |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0.25Y | 37 | 37 | 0 | 37 | 37 | 0 | 37 | 37 | 0 | 37 | 37 | 0 | 37 | 37 | 0 | 37 | 37 | 0 |
| 0.5Y | -23 | -23 | 0 | -23 | -23 | 0 | -23 | -23 | 0 | -23 | -23 | 0 | -23 | -23 | 0 | -23 | -23 | 0 |
| 0.75Y | 1 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 |
| 1Y | -52 | -52 | 0 | -52 | -52 | 0 | -52 | -52 | 0 | -52 | -52 | 0 | -52 | -52 | 0 | -52 | -52 | 0 |
| 2Y | -84 | -84 | 0 | -84 | -84 | 0 | -84 | -84 | 0 | -84 | -84 | 0 | -84 | -84 | 0 | -84 | -84 | 0 |
| 3Y | -134 | -134 | 0 | -134 | -134 | 0 | -134 | -134 | 0 | -134 | -134 | 0 | -134 | -134 | 0 | -134 | -134 | 0 |
| 4Y | -133 | -133 | 0 | -133 | -133 | 0 | -133 | -133 | 0 | -133 | -133 | 0 | -133 | -133 | 0 | -133 | -133 | 0 |
| 5Y | 7,228 | 7,228 | 0 | 7,228 | 7,228 | 0 | 7,228 | 7,228 | 0 | 7,228 | 7,228 | 0 | 7,228 | 7,228 | 0 | 7,228 | 7,228 | 0 |
| 7Y | 1,362 | 1,362 | 0 | 1,362 | 1,362 | 0 | 1,362 | 1,362 | 0 | 1,362 | 1,362 | 0 | 1,362 | 1,362 | 0 | 1,362 | 1,362 | 0 |
| 10Y | 924 | 924 | 0 | 924 | 924 | 0 | 924 | 924 | 0 | 924 | 924 | 0 | 924 | 924 | 0 | 924 | 924 | 0 |
| 15Y | 163 | 163 | 0 | 163 | 163 | 0 | 163 | 163 | 0 | 163 | 163 | 0 | 163 | 163 | 0 | 163 | 163 | 0 |
| 20Y | 2 | 2 | 0 | 2 | 2 | 0 | 2 | 2 | 0 | 2 | 2 | 0 | 2 | 2 | 0 | 2 | 2 | 0 |
| 30Y | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |

Table 48: DISCOUNTSPREADDELTA verification by bucket. For each SpreadBuildMethod we have the DISCOUNTSPREADDELTA bucketing as calculated by DBAnalytics and also according to manual recalculation, and the difference between them. In the manual recalculation we use the unbumped PV and the PV when the curve is bumped (using the same bumps as DBAnalytics).

### d) Stress Testing: Discount Spread Delta Profiles

In the next section of testing we apply a stress of 0.5% to the 2Y, 5Y, 10Y and 20Y discount spreads in turn and examine the differences that this causes in the DISCOUNTSPREADDELTA profile. In Figure 53 below we see the impact of each of these stresses according to the SpreadBuildMethod used. The plots are of the difference between the DISCOUNTSPREADDELTA produced at each bucket compared to the unstressed version.

The profiles are very similar for all SpreadBuildMethods considered. Although, as would be expected, the stress affects the DISCOUNTSPREADDELTA at the bucket at which it is applied most, there are smaller effects at other maturities. The impact of the stresses are greatest for the 5Y and 10Y stress, as these points are more sensitive than the 2Y and 20Y points as shown by the earlier DISCOUNTSPREADDELTA testing.

![Figure 53: Comparison of the DISCOUNTSPREADDELTA by bucket under stress for each of the SpreadBuildMethods.](./Fig/2.png)

##### 4.1.2.3 SmoothFutures

The flag SmoothFutures = YES is designed to have smooth 3m LIBOR forward rates with nested 3m futures. Figure 54 compares the settings SmoothFutures = YES and SmoothFutures = NO when looking at the 3m LIBOR forwards for different maturities. The impact looks insignificant.

![Figure 54: The plot shows 3m LIBOR forward rates for SmoothFutures = YES and NO.](./Fig/3.png)

Table 49 shows the bucket deltas for an 8m into 3m FRA, based on 3m EUR Libor. The settlement date is 24-Jan-2019, the end date 24-Apr-2019, the valuation date 22-May-2018. We can see that for SmoothFutures = YES, the risk is properly bucketed between the 19-Dec-2018 and 20-Mar-2019 futures (the settlement date 24-Jan-2019 is in between) but SmoothFutures = NO does not give localized risk (i.e. pertubation could introduce oscillation).

| BUCKETNAME | YES | NO |
| --- | --- | --- |
| 3M | -2 | -2 |
| JUN 2018 | 0 | 745 |
| JUL 2018 | 0 | 1249 |
| AUG 2018 | -1 | 392 |
| SEP 2018 | 0 | -2461 |
| OCT 2018 | 0 | 2045 |
| NOV 2018 | -1 | 574 |
| DEC 2018 | -1516 | -2533 |
| MAR 2019 | -992 | -987 |
| JUN 2019 | 0 | -5 |
| SEP 2019 | 0 | 0 |
| DEC 2019 | 0 | 0 |
| MAR 2020 | 0 | 0 |
| JUN 2020 | 0 | 0 |
| SEP 2020 | 0 | 0 |
| DEC 2020 | 0 | 0 |
| MAR 2021 | 0 | 0 |
| 4Y | 0 | 0 |
| 5Y | 0 | 0 |
| 6Y | 0 | 0 |
| 7Y | 0 | 0 |
| 8Y | 0 | 0 |
| 9Y | 0 | 0 |
| 10Y | 0 | 0 |
| 11Y | 0 | 0 |
| 12Y | 0 | 0 |
| 15Y | 0 | 0 |
| 20Y | 0 | 0 |
| 25Y | 0 | 0 |
| 30Y | 0 | 0 |
| 35Y | 0 | 0 |
| 40Y | 0 | 0 |

Table 49: Table shows the DELTA of the an 8m into 3m FRA, i.e. bucket deltas for different maturities.

Table 50 shows futures and swaps given in the curve. We can see an overlap of futures and swaps, i.e. the last future matures after the first swap. The goal is to make the future - swap connection smooth which happens at maturity less than 4Y.

| Valuation Date | 6-Nov-2019 |  |  |  |
| --- | --- | --- | --- | --- |
| Futures |  |  |  |  |
| SettleDate | Maturity |  | Price | Convexity |
| 20201216 | 20210316 |  | 9967.00 | 0.0001% |
| 20210102 | 3m |  | 9967.25 | 0.0000% |
| 20210120 | 20210420 |  | 9971.20 | 0.0001% |
| 20210317 | 20210617 |  | 9976.00 | 0.0002% |
| 20210616 | 20210916 |  | 9978.00 | 0.0008% |
| 20210915 | 20211215 |  | 9978.50 | 0.0011% |
| 20211215 | 20220315 |  | 9976.50 | 0.0019% |
| 20220316 | 20220616 |  | 9976.00 | 0.0030% |
| 20220615 | 20220915 |  | 9975.50 | 0.0044% |
| 20220921 | 20221221 |  | 9973.00 | 0.0066% |
| 20221221 | 20230321 |  | 9968.50 | 0.0095% |
| 20230315 | 20230615 |  | 9966.50 | 0.0128% |
| 20230621 | 20230921 |  | 9962.00 | 0.0168% |
| 20230920 | 20231220 |  | 9957.50 | 0.0190% |
| 20231220 | 20240320 |  | 9951.50 | 0.0213% |
| 20240320 | 20240620 |  | 9947.50 | 0.0234% |
| 20240619 | 20240919 |  | 9942.50 | 0.0256% |
| 20240918 | 20241218 |  | 9937.00 | 0.0312% |
| 20241218 | 20250319 |  | 9931.00 | 0.0379% |
| 20250319 | 20250619 |  | 9926.50 | 0.0457% |
| 20250618 | 20250918 |  | 9920.50 | 0.0548% |
| Swaps |  |  |  |  |
| Settle | Maturity | Basis | Coupon | FloatFrequency |
| 0B | 4Y | 30/360 | 0.3119% | QUARTERLY |
| 0B | 5Y | 30/360 | 0.3754% | QUARTERLY |
| 0B | 6Y | 30/360 | 0.4522% | QUARTERLY |
| 0B | 7Y | 30/360 | 0.5240% | QUARTERLY |
| 0B | 8Y | 30/360 | 0.5924% | QUARTERLY |
| 0B | 9Y | 30/360 | 0.6527% | QUARTERLY |
| 0B | 10Y | 30/360 | 0.7053% | QUARTERLY |
| 0B | 11Y | 30/360 | 0.7535% | QUARTERLY |
| 0B | 12Y | 30/360 | 0.7957% | QUARTERLY |
| 0B | 15Y | 30/360 | 0.8822% | QUARTERLY |
| 0B | 20Y | 30/360 | 0.9861% | QUARTERLY |
| 0B | 25Y | 30/360 | 1.0365% | QUARTERLY |
| 0B | 30Y | 30/360 | 1.0182% | QUARTERLY |
| 0B | 35Y | 30/360 | 0.9815% | QUARTERLY |
| 0B | 40Y | 30/360 | 0.9815% | QUARTERLY |
| 0B | 50Y | 30/360 | 0.9152% | QUARTERLY |

Table 50: Table shows futures and swaps in the curve.

SmoothFutures = BACKWARD (BACKWARDDAILY) was introduced at DBA version 780 (790) to improve connection between futures and swaps. Figure 55 shows the comparison of SmoothFutures = YES, SmoothFutures = BACKWARD and SmoothFutures = BACKWARDDAILY for the 3m USD LIBOR forward. They all look smooth.

![Figure 55: Figure shows 3m USD LIBOR forward for SmoothFutures = YES, SmoothFutures = BACKWARD and SmoothFutures = BACKWARDDAILY.](./Fig/6.png)

But when pertubing the futures with settlement date = 15-Sep-2021 (valuation date is 6-Nov-19, so maturity is 1.859 years) by +10 bp, and we compare with SmoothFutures = BACKWARD and SmoothFutures = BACKWARDDAILY, we see the following picture in Figure 56: We see similar interpolation in the 3m forward. But when looking at the connection part between futures and swaps, SmoothFutures = YES will not ensure smooth extrapolation of 3m LIBOR after the last repriced futures.

![Figure 56: Figure shows 3m USD LIBOR forward for SmoothFutures = YES, SmoothFutures = BACKWARD and SmoothFutures = BACKWARDDAILY when pertubating the futures with settlement date = 15-Sep-2021 by +10 bp (valuation date is 6-Nov-19, so maturity is 1.859 years).](./Fig/7.png)

When we compare SmoothFutures = BACKWARD and BACKWARDDAILY, we see BACKWARDDAILY behaves better when we build a CURVE with more granular futures input (e.g. monthly). Since SmoothFutures = BACKWARDDAILY ensures (almost) linear interpolation of 3m forward by backward bootstrapping daily synthetic back to back futures, we see less noise with BACKWARDDAILY than BACKWARD. And this gives more appropriate risk.

Figure 57 shows the bucket delta of 3m10d into 3m FRA with respect to the futures in the CURVE object, for different maturities of those futures. The figure on left shows the bucket deltas for SmoothFutures = BACKWARDDAILY, and the figure on the right shows the bucket deltas for SmoothFutures = YES, BACKWARD.

![Figure 57: Figures shows the bucket delta of 3m10d into 3m FRA with respect to the futures in the CURVE object, for different maturities of those futures. The figure on left shows the bucket deltas for SmoothFutures = BACKWARDDAILY, and the figure on the right shows the bucket deltas for SmoothFutures = YES, BACKWARD.](./Fig/7.png)

### 4.1.2.4 FutureToSwap

This example uses the curve from Table 50 which has overlaps between futures and swaps. The flag FutureToSwap = SWAPPRIORITY was introduced at DBA version 690 to use futures overlapped with swaps just to give a trend of yield curve keeping overlapped swaps repriced. Table 51 shows that with FutureToSwap = FUTUREPRIORITY, all futures are repriced but with FutureToSwap = SWAPPRIORITY, futures after the first swap maturity cutoff are not repriced. The valuation date is 6-Nov-2019, the first swap maturity is 4Y, so the cutoff is 6-Nov-2023, and we see that the first futures after the cutoff is 20-Dec-2023 which is not repriced.

| SettleDate | Maturity | Target | FUTUREPRIORITY | SWAPPRIORITY | FUTUREPRIORITY diff | SWAPPRIORITY diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20230315 | 20230615 | 1.569% | 1.569% | 1.569% | 0% | 0% |
| 20230621 | 20230921 | 1.581131% | 1.581131% | 1.581131% | 0% | 0% |
| 20230920 | 20231220 | 1.596141% | 1.596141% | 1.579637% | 0% | -0.016504% |
| 20231220 | 20240320 | 1.608688% | 1.608688% | 1.60742% | 0% | -0.001268% |
| 20240320 | 20240620 | 1.626106% | 1.626106% | 1.624838% | 0% | -0.001268% |
| 20240619 | 20240919 | 1.646912% | 1.646912% | 1.645645% | 0% | -0.001268% |
| 20240918 | 20241218 | 1.670441% | 1.670441% | 1.672432% | 0% | 0.001991% |

Table 51: Table shows repricing of futures before the cutoff point for FutureToSwap = SWAPPRIORITY and repricing of all futures for FutureToSwap = FUTUREPRIORITY.

Table 52 shows the 3m forward rates implied by futures price, together with the forward rates of the curve with the settings FutureToSwap = SWAPPRIORITY-6m and FutureToSwap = SWAPPRIORITY-2y. When setting FutureToSwap = SWAPPRIORITY-6m, the cutoff is set 6m before the first swap maturity, i.e. futures maturing after that cutoff are not repriced, the same for FutureToSwap = SWAPPRIORITY-2y which sets the cutoff 2y before the first swap maturity. The first swap maturity is 6-Nov-2023, and we see repricing of futures before the cutoff but not after, for example for the first futures after the cutoff maturing at 15-Jun-2023, and we see that the first futures after the cutoff matures 18-Nov-2021 which is not repriced.

| SettleDate | Maturity | Target | SWAPPRIORITY-6m | SWAPPRIORITY-2y | SWAPPRIORITY-6m diff | SWAPPRIORITY-2y diff |
| --- | --- | --- | --- | --- | --- | --- |
| 20210616 | 20210916 | 1.518% | 1.518% | 1.518% | 0% | 0% |
| 20210721 | 20211021 | 1.518577% | 1.518577% | 1.518577% | 0% | 0% |
| 20210818 | 20211118 | 1.519038% | 1.519038% | 1.519038% | 0% | -0.000022% |
| 20210915 | 20211215 | 1.5195% | 1.5195% | 1.51955% | 0% | 0.00005% |
| 20211020 | 20220120 | 1.526661% | 1.526661% | 1.526661% | 0% | -0.001381% |
| 20211117 | 20220217 | 1.53569% | 1.53569% | 1.53569% | 0% | -0.001989% |
| 20211215 | 20220315 | 1.543319% | 1.543319% | 1.543319% | 0% | -0.001989% |
| 20220119 | 20220419 | 1.541512% | 1.541512% | 1.541512% | 0% | -0.001989% |
| 20220216 | 20220516 | 1.54006% | 1.54006% | 1.54006% | 0% | -0.001989% |
| 20220316 | 20220616 | 1.538619% | 1.538619% | 1.538619% | 0% | -0.001989% |
| 20220420 | 20220720 | 1.541843% | 1.541843% | 1.541843% | 0% | -0.001989% |
| 20220518 | 20220818 | 1.544421% | 1.544421% | 1.544421% | 0% | -0.001989% |
| 20220615 | 20220915 | 1.547% | 1.547% | 1.547% | 0% | -0.001989% |
| 20220720 | 20221020 | 1.550393% | 1.550393% | 1.550393% | 0% | -0.001989% |
| 20220817 | 20221117 | 1.553107% | 1.553107% | 1.553107% | 0% | -0.001989% |
| 20220921 | 20221221 | 1.5565% | 1.5565% | 1.5565% | 0% | -0.001989% |
| 20221221 | 20230321 | 1.5705% | 1.5705% | 1.5705% | 0% | -0.001989% |
| 20230315 | 20230615 | 1.569% | 1.569% | 1.569% | -0.006327% | -0.001989% |
| 20230621 | 20230921 | 1.581131% | 1.581131% | 1.581131% | -0.006234% | -0.001989% |
| 20230920 | 20231220 | 1.596141% | 1.579637% | 1.579637% | -0.016504% | -0.016504% |
| 20231220 | 20240320 | 1.608688% | 1.60742% | 1.60742% | -0.001268% | -0.001268% |
| 20240320 | 20240620 | 1.626106% | 1.624838% | 1.624838% | -0.001268% | -0.001268% |
| 20240619 | 20240919 | 1.646912% | 1.645645% | 1.645645% | -0.001268% | -0.001268% |
| 20240918 | 20241218 | 1.670441% | 1.672432% | 1.672432% | 0.001991% | 0.001991% |

Table 52: Table shows repricing of futures before the cutoff point for FutureToSwap = SWAPPRIORITY-6m and FutureToSwap = SWAPPRIORITY-2y.

Table 53 demonstrates that for FutureToSwap = SWAPPRIORITY-6m, all swaps are repriced, but for FutureToSwap = FUTUREPRIORITY, swaps are only repriced after the cutoff which is the last futures maturity which is 18-Dec-2024 (the 5Y point is 6-Nov-2024).

##### 4.1.2.6 LastFrontSwapTimePeg

The flag LastFrontSwapTimePeg (SWAP/FUTURE, default is SWAP) is relevant only when FutureToSwap = SWAPPRIORITY, see Section 4.1.2.4. The last front swap means the last swap whose maturity is before the last future maturity + 5d. When bootstrapping the last front swap, the time peg of continuously compounded forward rates is:
- LastFrontSwapTimePeg = SWAP (default): The maturity of the last front swap.
- LastFrontSwapTimePeg = FUTURE: max( the maturity of the last future, the maturity of the last front swap )

LastFrontSwapTimePeg = FUTURE will give smoother adjustment until the last future maturity.

Table 54 shows the futures and swaps of a USD CURVE, and we illustrate how the property LastFrontSwapTimePeg works on that.

The USD CURVE is built with 3m futures up to maturity = 20250918. The 4y and 5y swaps (with maturity = 20240619 and 20250619) mature before the last future maturity. By nature of FutureToSwap = SWAPPRIORITY, we would have 4Y swap, 5Y swap, and 4y/5y swaps (here Jun 23 future and later). But built with LastFrontSwapTimePeg = SWAP, implied futures input aAS 3m forward implied) massively drops between Mar 25 and Jun 25 futures. As below, LastFrontSwapTimePeg = FUTURE pins 5y swap with time peg of last future maturity (20250918) to avoid jumps in continuously compounded forward around Mar 25 and Jun 25 futures). As below, LastFrontSwapTimePeg = FUTURE improves the implied convexity of Jun 25 future.

Table 55: Comparison of convexity input with implied convexity adjustment for LastFrontSwapTimePeg = SWAP, FUTURE

| SettleDates | MaturityDates | Labels | cvx input | cvx implied (SWAP) | cvx implied (FUTURE) |
| --- | --- | --- | --- | --- | --- |
| 20200715 | 20201015 | Jul20 | 0.0000% | 0.0000% | 0.0000% |
| 20200819 | 20201119 | Aug20 | 0.0000% | 0.0000% | 0.0000% |
| 20200916 | 20201216 | Sep20 | 0.0000% | 0.0000% | 0.0000% |
| 20201021 | 20210121 | Oct20 | 0.0000% | 0.0000% | 0.0000% |
| 20201216 | 20210316 | Dec20 | 0.0001% | 0.0001% | 0.0001% |
| 20201231 | 3m | 31Dec2020_FRA | 0.0000% | 0.0000% | 0.0000% |
| 20210102 | 3m | 2Jan2021_FRA | 0.0000% | 0.0000% | 0.0000% |
| 20210120 | 20210420 | Jan21 | 0.0001% | 0.0001% | 0.0001% |
| 20210317 | 20210617 | Mar21 | 0.0002% | 0.0002% | 0.0002% |
| 20210616 | 20210916 | Jun21 | 0.0006% | 0.0006% | 0.0006% |
| 20210915 | 20211215 | Sep21 | 0.0011% | 0.0011% | 0.0011% |
| 20211215 | 20220315 | Dec21 | 0.0019% | 0.0019% | 0.0019% |
| 20220316 | 20220616 | Mar22 | 0.0030% | 0.0030% | 0.0030% |
| 20220615 | 20220915 | Jun22 | 0.0044% | 0.0044% | 0.0044% |
| 20220921 | 20221221 | Sep22 | 0.0068% | 0.0068% | 0.0068% |
| 20221221 | 20230321 | Dec22 | 0.0095% | 0.0095% | 0.0095% |
| 20230315 | 20230615 | Mar23 | 0.0126% | 0.0126% | 0.0126% |
| 20230621 | 20230921 | Jun23 | 0.0168% | 0.0214% | 0.0214% |
| 20230920 | 20231220 | Sep23 | 0.0190% | 0.0239% | 0.0239% |
| 20231220 | 20240320 | Dec23 | 0.0213% | 0.0262% | 0.0262% |
| 20240320 | 20240620 | Mar24 | 0.0234% | 0.0283% | 0.0283% |
| 20240619 | 20240919 | Jun24 | 0.0256% | 0.0263% | 0.0263% |
| 20240918 | 20241218 | Sep24 | 0.0312% | 0.0320% | 0.0320% |
| 20241218 | 20250319 | Dec24 | 0.0379% | 0.0389% | 0.0389% |
| 20250319 | 20250619 | Mar25 | 0.0457% | 0.0469% | 0.0469% |
| 20250618 | 20250918 | Jun25 | 0.0548% | 0.0114% | 0.0566% |

On Table 56 and Figure 61, we compute 1d-forward rate implied from 3m curve with LastFrontSwapTimePeg = SWAP and FUTURE and the difference. This is to demonstrate when 1d-forward rate jumps. With SWAP, the rate jumps at 5y swap maturity (20250619). On the other hand with FUTURE, the rate jumps at the last future maturity (20250918).

Table 56: Comparison of 1d-forward rate implied from the 3m curve with LastFrontSwapTimePeg = SWAP, FUTURE and the difference

| SettleDates | SWAP | FUTURE | SWAP-FUTURE |
| --- | --- | --- | --- |
| 20250618 | 0.7363% | 0.7363% | 0.0000% |
| 20250619 | 0.7690% | 0.7378% | 0.0313% |
| 20250620 | 0.7693% | 0.7378% | 0.0316% |
| … | … | … | … |
| 20250915 | 0.7970% | 0.7376% | 0.0594% |
| 20250916 | 0.7973% | 0.7376% | 0.0598% |
| 20250917 | 0.7976% | 0.7376% | 0.0601% |
| 20250918 | 0.7980% | 0.8196% | -0.0217% |
| 20250919 | 0.7983% | 0.8199% | -0.0216% |
| 20250920 | 0.7986% | 0.8202% | -0.0216% |
| 20250921 | 0.7989% | 0.8204% | -0.0215% |

![Figure 61: The plot shows 1-day forward rate (using the LIBOR-3m curve) for LastFrontSwapTimePeg=SWAP, FUTURE from 15-Jun-2025 to 18-Oct-2025.](./Fig/15.png)

##### 4.1.2.7 SmoothFuturesExtrapolation, SmoothFuturesExtrapolationInterval

We test the SmoothFuturesExtrapolation and SmoothFuturesExtrapolationInterval parameters. These parameters are relevant only when SmoothFutures = BACKWARDDAILY and introduced to achieve smooth connection between futures and swaps region together with FutureToSwap = SWAPPRIORITY. Possible values for SmoothFuturesExtrapolation are:

- FLAT: default
- LINEAR: the recommended value for intra-day CURVEs where futures overlapped with swaps are inputted to explicitly capture shape of the future-swap overlapping region.
- QUADRATIC: the recommended value for EOD CURVEs where no futures overlapped with swaps. Firstly we see how SmoothFuturesExtrapolation = LINEAR improves interpolation of an intra-day CURVE. Then see how QUADRATIC improves interpolation of EOD CURVEs.

SmoothFuturesExtrapolation = LINEAR

We test the following USD intra-day CURVE with valuation date 11-Jun-2021. Futures until 18-June 2026 (around 5y). Also it uses FutureToSwap = SWAPPRIORITY and SmoothFutures = BACKWARDDAILY.

| ValuationDate | 11-Jun-2021 |
| --- | --- |
| SettlementDate | 15-Jun-2021 |
| ... | ... |
| FutureToSwap | SWAPPRIORITY-9m |
| SmoothFutures | BACKWARDDAILY |

Futures
| Settle | Maturity | Freq | Basis | Price | Convexity | Use | Label |
| --- | --- | --- | --- | --- | --- | --- | --- |
| ... | ... | ... | ... | ... | ... | ... | ... |
| 19-Mar-25 | 19-Jun-25 | QUARTERLY | ACT/360 | 9849 | 0.0010366 | 1 | 25-Mar |
| 18-Jun-25 | 18-Sep-25 | QUARTERLY | ACT/360 | 9839 | 0.0012166 | 1 | 25-Jun |
| 17-Sep-25 | 17-Dec-25 | QUARTERLY | ACT/360 | 9829 | 0.0013921 | 1 | 25-Sep |
| 17-Dec-25 | 17-Mar-26 | QUARTERLY | ACT/360 | 9819 | 0.0014983 | 1 | 25-Dec |
| 18-Mar-26 | 18-Jun-26 | QUARTERLY | ACT/360 | 9812.5 | 0.0015385 | 1 | 26-Mar |

Swaps
| Settle | RollDate | Maturity | Freq | Basis | Coupon | FloatFreq | Use |
| --- | --- | --- | --- | --- | --- | --- | --- |
| OB | OB | 4Y | SEMI | 30/360 | 0.0062693 | QUARTERLY | 1 |
| OB | OB | 5Y | SEMI | 30/360 | 0.0082461 | QUARTERLY | 1 |
| OB | OB | 6Y | SEMI | 30/360 | 0.0099798 | QUARTERLY | 1 |
| ... | ... | ... | ... | ... | ... | ... | ... |

And we compare interpolation around future - swap overlap (4y-6y) between

- FLAT:

| FutureToSwap | SWAPPRIORITY-9m |
| --- | --- |
| SmoothFuturesExtrapolation | FLAT |

- LINEAR-1y:

| FutureToSwap | SWAPPRIORITY-9m |
| --- | --- |
| SmoothFuturesExtrapolation | LINEAR |
| SmoothFuturesExtrapolationInterval | 1y |

When comparing LIBOR-3m forwards, FLAT has cusp around last future maturity. On the other hand, LINEAR-1y gives smoother interpolation. As explained in Section 2.3.5.18, SmoothFuturesExtrapolation = LINEAR improves futures-swaps connection by making the extrapolation of the front end discount factor $DF_{front}(t)$ is Equation (4).

![Figure 62: The plot shows 3m-LIBOR forward rate for SmoothFuturesExtrapolation = FLAT and LINEAR. CURVE contains cash/futures/swaps.](./Fig/17.png)

We show how $DF_{front}(t)$ is extrapolated after the last future maturity by building CURVEs only with Cash and Futures. We compare:

- FUTUREONLY_LINEAR-6m: with SmoothFuturesExtrapolation = LINEAR and SmoothFuturesExtrapolationInterval = 6m.
- FUTUREONLY_LINEAR-1y: with SmoothFuturesExtrapolation = LINEAR and SmoothFuturesExtrapolationInterval = 1y.
- FUTUREONLY_LINEAR-2y: with SmoothFuturesExtrapolation = LINEAR and SmoothFuturesExtrapolationInterval = 2y.
- FUTUREONLY_FLAT: with SmoothFuturesExtrapolation = FLAT

Notice that we also need to set ExtrapMethod = NATIVE to extrapolate after last future maturity with the method if there is no swap instruments.

We see the implied 3m-forward from $DF_{front}(t)$ in Figure 63

![Figure 63: The plot shows 3m-LIBOR forward rate for cash/futures only, with SmoothFuturesExtrapolation = FLAT and LINEAR and SmoothFuturesExtrapolation = 6m, 1y, 2y.](./Fig/18.png)

We see how extrapolation exactly works by plotting 1D-forward implied from 3m curves. As the plot below, FUTUREONLY_LINEAR-1y does linear interpolation of 1b-forward from the last future settlement (18-Mar-26, about 4.75y) and the maturity (18-Jun-26, about 5y). Then we do quadratic extrapolation until the last future maturity + 1y (SmoothFuturesExtrapolationInterval), i.e., 18-Jun-27, about 6y). Then flat extrapolate after the last future maturity + 1y. The same applies to FUTUREONLY_LINEAR-6m, FUTUREONLY_LINEAR-2y and we can see the comparison of 1b-forward implied from 3m curves between SmoothFuturesExtrapolation = FLAT, LINEAR and SmoothFuturesExtrapolationInterval = 6m, 1y, 2y in Figure 64.

![Figure 64: The plot shows 1b-forward rate implied from 3m curves for cash/futures only, with SmoothFuturesExtrapolation = FLAT and LINEAR and SmoothFuturesExtrapolationInterval = 6m, 1y, 2y.](./Fig/18.png)

The reasons why DBA chooses SmoothFuturesExtrapolationInterval = 1y are

- Ideally we want to have linear extrapolation forever because we multiply by $DF_{front}(t)$ built off HYBRID_FORWARD or QUADRATIC_FORWARD. But naive flat extrapolation for very long date (e.g. 70y) is numerically unstable as $DF_{front}(t)$ could easily reach 0 or infinity.
- On the other hand we have smaller cusp when we use SmoothFuturesExtrapolationInterval = 0y.
- We are ok as long as SmoothFuturesExtrapolationInterval is long enough (e.g. 1y). The period is built off HYBRID_FORWARD/QUADRATIC_FORWARD anyway.

SmoothFuturesExtrapolation = QUADRATIC

Though the intra-day curve with SmoothFuturesExtrapolation = LINEAR has very smooth future-swap connection, we cannot use the curve for EOD pricing/risk. The reason is because risk is not intuitive and has unexplained risk. In Table 57, we can see the DELTA risk for 4y6m swap. When using the intra-day curve, we see noise in futures overlapped with swaps (valuation date = 11-Jun-2021).

| BUCKETNAME | VALUE |
| --- | --- |
| 0M | 8.610 |
| ... | ... |
| Sep24 | -160.716 |
| Dec24 | -159.028 |
| Mar25 | -129.413 |
| Jun25 | 1,240.363 |
| Sep25 | 1,182.222 |
| Dec25 | -2,308.917 |
| Mar26 | 495.197 |
| 4Y\|OB\|OB | 22,826.496 |
| 5Y\|OB\|OB | 28,207.971 |
| 6Y\|OB\|OB | -3,778.354 |
| 7Y\|OB\|OB | 0.013 |
| 8Y\|OB\|OB | -0.000 |

Table 57: Bucket DELTAs of 4y6m swap, SmoothFuturesExtrapolation = LINEAR valuation date = 11-Jun-2021.

We also have risk of unexplained P&L as futures overlapped with swaps are not repriced with FutureToSwap = SWAPPRIORITY. On the other hand, EOD CURVEs with non-overlapping futures (12 futures) give reasonable risks. But they have the following issues:
- Implied 3m forwards have cusp around future-swaps connection.
- The curve shape materially changes by future rolls. Then we have huge theta P&L around future rolls.

Figure 65 is demonstrating the issues by comparing

- 12FUT_FLAT: EOD CURVE with 12 futures

| FutureToSwap | FUTUREPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | FLAT |

- 12FUT_FLAT_ROLLED: 1 more future added to the EOD CURVE to show impact of future roll

| FutureToSwap | FUTUREPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | FLAT |

![Figure 65: The plot shows 3m-forward rate, curve with non-overlapping futures, with SmoothFuturesExtrapolation = FLAT. 12FUT_FLAT contains 12 futures, 12FUT_FLAT_ROLLED contains one extra future (13 futures total) to show the impact of future roll.](./Fig/20.png)

SmoothFuturesExtrapolation = QUADRATIC was introduced to achieve smooth connection like the intra-day curve without explicitly introducing overlapping futures. Figure 66 shows how good SmoothFuturesExtrapolation = QUADRATIC is by comparing

- LINEAR-1y: intra-day curve, with overlapping futures

| FutureToSwap | SWAPPRIORITY-9m |
| --- | --- |
| SmoothFuturesExtrapolation | LINEAR |
| SmoothFuturesExtrapolationInterval | 1y |

- 12FUT_FLAT: EOD CURVE with 12 futures

| FutureToSwap | FUTUREPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | FLAT |

The BuildMethod QUADRATIC_CONSTANT_FORWARD is used which is a mixture of CONSTANT_FORWARD for the short end and QUADRATIC_FORWARD for the long end.

### 12FUT_QUADRATIC: CURVE with 12 futures

| FutureToSwap | SWAPPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | QUADRATIC |
| SmoothFuturesExtrapolationInterval | 1y |

We see interpolation of 12FUT_QUADRATIC is smoother like LINEAR-1y despite of no futures overlapping with swaps.

![Figure 66: The plot shows 3m-forward rate, comparing curve with overlapping futures, SmoothFuturesExtrapolation = FLAT and curves with non-overlapping futures, for SmoothFuturesExtrapolation = FLAT, QUADRATIC.](./Fig/1.png)

Also when comparing

- 12FUT_QUADRATIC: CURVE with 12 futures but setting

| FutureToSwap | SWAPPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | QUADRATIC |
| SmoothFuturesExtrapolationInterval | 1y |

- 12FUT_QUADRATIC_ROLLED: one more future to 12FUT_QUADRATIC to see future roll impact, same setting:

| FutureToSwap | SWAPPRIORITY |
| --- | --- |
| SmoothFuturesExtrapolation | QUADRATIC |
| SmoothFuturesExtrapolationInterval | 1y |

We see much smaller impact by future rolls in Figure 67.

![Figure 67: The plot shows 3m-forward rate, curve with non-overlapping futures, with SmoothFuturesExtrapolation = QUADRATIC. 12FUT_FLAT contains 12 futures, 12FUT_FLAT_ROLLED contains one extra future (13 futures total) to show the impact of future roll. We see much smaller impact by future roll than for SmoothFuturesExtrapolation = FLAT, in Figure 65.](./Fig/2.png)

In Table 58, we see the DELTA risk of a 4y6m swap, we still see intuitive risk as we do not explicitly add overlapping futures.

| 12FUT_FLAT | | 12FUT_QUADRATIC | |
| --- | --- | --- | --- |
| BUCKETNAME | VALUE | BUCKETNAME | VALUE |
| 0M | 8.607 | 0M | 8.606 |
| 3M | -164.422 | 3M | -421.434 |
| Jun21 | 46.859 | Jun21 | 46.858 |
| Jul21 | 47.316 | Jul21 | 47.315 |
| Aug21 | 18.375 | Aug21 | 18.374 |
| Sep21 | -96.999 | Sep21 | -351.221 |
| Dec21 | -91.525 | Dec21 | -342.955 |
| 31Dec2021_TOY | 2.552 | 31Dec2021_TOY | 2.552 |
| 02Jan2022_TOY | 28.433 | 02Jan2022_TOY | 24.911 |
| Mar22 | -57.355 | Mar22 | -310.856 |
| Jun22 | -95.498 | Jun22 | -368.087 |
| Sep22 | -90.659 | Sep22 | -345.904 |
| Dec22 | -97.492 | Dec22 | -332.354 |
| Mar22 | -113.035 | Mar23 | -385.901 |
| Jun22 | -112.845 | Jun23 | -354.141 |
| 30Jun2023_TOY | 0 | 30Jun2023_TOY | 0 |
| 3Jul2023_TOY | 0 | 3Jul2023_TOY | 0 |
| 5Jul2023_TOY | -10.441 | 5Jul2023_TOY | -26.95 |
| Sep23 | -119.422 | Sep23 | -371.123 |
| Dec23 | -136.728 | Dec23 | -391.431 |
| Mar24 | -130.481 | Mar24 | -946.417 |
| 4Y\|OB\|OB | 22,825.29 | 4Y\|OB\|OB | 28,629.29 |
| 5Y\|OB\|OB | 28,206.50 | 5Y\|OB\|OB | 25,985.33 |
| 6Y\|OB\|OB | -3,777.91 | 6Y\|OB\|OB | -3,778.22 |
| 7Y\|OB\|OB | 0.013 | 7Y\|OB\|OB | 0.013 |
| 8Y\|OB\|OB | 0 | 8Y\|OB\|OB | 0 |
| 9Y\|OB\|OB | 0 | 9Y\|OB\|OB | 0 |
| 10Y\|OB\|OB | 0 | 10Y\|OB\|OB | 0 |
| 11Y\|OB\|OB | 0 | 11Y\|OB\|OB | 0 |
| 12Y\|OB\|OB | 0 | 12Y\|OB\|OB | 0 |
| 15Y\|OB\|OB | 0 | 15Y\|OB\|OB | 0 |
| 20Y\|OB\|OB | 0 | 20Y\|OB\|OB | 0 |
| 25Y\|OB\|OB | 0 | 25Y\|OB\|OB | 0 |
| 30Y\|OB\|OB | 0 | 30Y\|OB\|OB | 0 |
| 35Y\|OB\|OB | 0 | 35Y\|OB\|OB | 0 |
| 40Y\|OB\|OB | 0 | 40Y\|OB\|OB | 0 |

Table 58: Bucket DELTAs of 4y6m swap, SmoothFuturesExtrapolation = FLAT, QUADRATIC.

##### 4.1.2.8 OIS Date Compression

We test the error which made by calculating WAVG with date compression which uses the approximation (7). We test the common build methods of the CURVE, HYBRID_CONSTANT_FORWARD, LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD. We also test for the day count conventions ACT/360 and ACT/365.

We first test BuildMethod = HYBRID_CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 68 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 69 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 68: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360. The CURVE is built using the EONIA rate.](./Fig/4.png)

![Figure 69: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. Errors are immaterial.](./Fig/4.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression). Figure 70 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial. Figure 71 shows the same test with day count convention = ACT/365. Errors are immaterial.

![Figure 70: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the WAVG rate. Errors are immaterial.](./Fig/5.png)

![Figure 71: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/365, in absolute and relative terms. The CURVE is built using the WAVG rate. Errors are immaterial.](./Fig/5.png)

We next test BuildMethod = LINEAR_ZERO.

First, we run tests with a CURVE built with the EONIA rate.

Figure 72 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 73 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 72: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The CURVE is built using the EONIA rate.](./Fig/6.png)

![Figure 73: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = LINEAR_ZERO and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. Errors are immaterial.](./Fig/6.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 74 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 74: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The CURVE is built using the WAVG rate.](./Fig/6.png)

We next test BuildMethod = CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 75 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 76 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 75: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The CURVE is built using the EONIA rate.](./Fig/7.png)

![Figure 76: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. Errors are immaterial.](./Fig/7.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 77 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 77: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The CURVE is built using the WAVG rate.](./Fig/7.png)

We next test BuildMethod = HYBRID_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 78 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 79 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 78: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the EONIA rate.](./Fig/8.png)

![Figure 79: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. Errors are immaterial.](./Fig/8.png)

Figure 80 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 80: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The CURVE is built using the WAVG rate.](./Fig/9.png)

In Table 59, we can see the price of a 60Y - fair fixed for float swap where the floating leg is the WAVG rate (compressed and uncompressed), and the fair spread is taken from the corresponding OISSpreads entry in the CURVE object. Test shows that the fair swap reprices with immaterial numerical error.

| Build Method | Swap Price<br>with OIS date compression | Swap Price<br>without OIS date compression |
| --- | --- | --- |
| HYBRID_CONSTANT_FORWARD | 1.622 × 10^-9 | 1.615 × 10^-9 |
| LINEAR_ZERO | 1.333 × 10^-9 | 1.326 × 10^-9 |
| CONSTANT_FORWARD | 1.341 × 10^-9 | 1.334 × 10^-9 |
| HYBRID_FORWARD | 1.623 × 10^-9 | 1.615 × 10^-9 |

Table 59: Table shows the price of a fair OIS swap with 60Y maturity where the spread on LIBOR is taken from the corresponding OISSpreads entry in the CURVE object, and rate CURVE is built with WAVG rate. Different build methods are tested, and the test shows that the fair swap is repriced with immaterial numerical error. The notional of the fair swap is 100.

Since the magnitude of error grows with the magnitude of the rate, we run the same tests for extreme rates. We first test for negative curve shifts of -500bps.

We first test BuildMethod = HYBRID_CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 81 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 82 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 81: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the EONIA rate.](./Fig/10.png)

![Figure 82: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/10.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression). Figure 83 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial. Figure 84 shows the same test with day count convention = ACT/365. Errors are immaterial.

![Figure 83: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/365, in absolute and relative terms. The CURVE is built using the WAVG rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/10.png)

![Figure 84: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/365, in absolute and relative terms. The CURVE is built using the WAVG rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/10.png)

We next test BuildMethod = LINEAR_ZERO.

First, we run tests with a CURVE built with the EONIA rate.

Figure 85 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 86 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 85: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the EONIA rate.](./Fig/11.png)

![Figure 86: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = LINEAR_ZERO and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/11.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 87 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 87: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the WAVG rate.](./Fig/12.png)

We next test BuildMethod = CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 88 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 89 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 88: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the EONIA rate.](./Fig/12.png)

![Figure 89: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/12.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 90 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 90: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the WAVG rate.](./Fig/13.png)

We next test BuildMethod = HYBRID_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 91 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 92 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 91: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the EONIA rate.](./Fig/14.png)

![Figure 92: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by -500bps. Errors are immaterial.](./Fig/14.png)

Figure 93 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 93: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The curve is shifted by -500bps. The CURVE is built using the WAVG rate.](./Fig/14.png)

| Build Method | Swap Price<br>with OIS date compression | Swap Price<br>without OIS date compression |
| --- | --- | --- |
| HYBRID_CONSTANT_FORWARD | 3.445 × 10^-8 | 3.416 × 10^-8 |
| LINEAR_ZERO | 3.420 × 10^-8 | 3.395 × 10^-8 |
| CONSTANT_FORWARD | 3.198 × 10^-8 | 3.181 × 10^-8 |
| HYBRID_FORWARD | 3.447 × 10^-8 | 3.418 × 10^-8 |

Table 60: Table shows the price of a fair OIS swap with 60Y maturity where the spread on LIBOR is taken from the corresponding OISSpreads entry in the CURVE object, and rate CURVE is built with WAVG rate. The curve is shifted by -500bps. Different build methods are tested, and the test shows that the fair swap is repriced with immaterial numerical error. The notional of the fair swap is 100.

Since the magnitude of error grows with the magnitude of the rate, we run the same tests for extreme rates. We first test for large curve shifts of +1000bps.

We first test BuildMethod = HYBRID_CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 94 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 95 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 94: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the EONIA rate.](./Fig/15.png)

![Figure 95: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/15.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression). Figure 96 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial. Figure 97 shows the same test with day count convention = ACT/365. Errors are immaterial.

![Figure 96: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/365, in absolute and relative terms. The CURVE is built using the WAVG rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/16.png)

![Figure 97: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_CONSTANT_FORWARD and day count convention ACT/365, in absolute and relative terms. The CURVE is built using the WAVG rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/16.png)

We next test BuildMethod = LINEAR_ZERO.

First, we run tests with a CURVE built with the EONIA rate.

Figure 98 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 99 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 98: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the EONIA rate.](./Fig/17.png)

![Figure 99: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = LINEAR_ZERO and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/17.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 100 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 100: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = LINEAR_ZERO and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the WAVG rate.](./Fig/17.png)

We next test BuildMethod = CONSTANT_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 101 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 102 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 101: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the EONIA rate.](./Fig/18.png)

![Figure 102: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/18.png)

Next we look at a CURVE built with 1b WAVG rate (with and without date compression).

Figure 103 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 103: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = CONSTANT_FORWARD and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the WAVG rate.](./Fig/18.png)

We next test BuildMethod = HYBRID_FORWARD.

First, we run tests with a CURVE built with the EONIA rate.

Figure 104 shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression and day count convention ACT/360. Figure 105 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression. Tests show that the difference is immaterial.

![Figure 104: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the EONIA rate.](./Fig/19.png)

![Figure 105: The graph shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m, for BuildMethod = HYBRID_FORWARD and day count convention ACT/360, in absolute and relative terms. The CURVE is built using the EONIA rate. The curve is shifted by +1000bps. Errors are immaterial.](./Fig/19.png)

Figure 106 shows the difference between the forwards 1b WAVG OIS with date compression - 1b WAVG OIS without date compression, for different maturities, averages taken over 3m and day count convention ACT/360, in absolute and relative terms. Errors are immaterial.

![Figure 106: The graph shows the difference between the forwards 1b WAVG OIS - EONIA OIS rate, for different maturities, averages taken over 3m, with and without OIS date compression for BuildMethod = HYBRID_FORWARD and day count convention ACT/360. The curve is shifted by +1000bps. The CURVE is built using the WAVG rate.](./Fig/20.png)

| Build Method | Swap Price<br>with OIS date compression | Swap Price<br>without OIS date compression |
| --- | --- | --- |
| HYBRID_CONSTANT_FORWARD | 2.894 × 10^-8 | 2.849 × 10^-8 |
| LINEAR_ZERO | 2.946 × 10^-8 | 2.900 × 10^-8 |
| CONSTANT_FORWARD | 2.942 × 10^-8 | 2.895 × 10^-8 |
| HYBRID_FORWARD | 2.894 × 10^-8 | 2.849 × 10^-8 |

Table 61: Table shows the price of a fair OIS swap with 60Y maturity where the spread on LIBOR is taken from the corresponding OISSpreads entry in the CURVE object, and rate CURVE is built with WAVG rate. The curve is shifted by +1000bps. Different build methods are tested, and the test shows that the fair swap is repriced with immaterial numerical error. The notional of the fair swap is 100.

Next we present the ESTER curve with OISDateCompression. The ESTER curve is built by using OISDateCompression = YES for calculating 1b WAVG OIS, see Section 4.1.2.8, approximating 1b OIS rate/basis as continuously OIS rate/basis.

We test the compression by comparing it to the exact calculation:

$R_{EONIA, exact} = \frac{1}{\Delta(t_0, t_n)} \cdot \left(-1 + \prod_{i=0}^{n-1}(1 + \Delta(t_i, t_{i+1})(R_i + Spread))\right)^{-1}; (34)$

In that case, the spread is compounded. We also compare with EONIA + spread, i.e. the spread is added after the rate is compounded:

$R_{EONIA, EONIA+spread} = \frac{1}{\Delta(t_0, t_n)} \cdot \left(-1 + \prod_{i=0}^{n-1}(1 + \Delta(t_i, t_{i+1})R_i)\right)^{-1} + Spread; (35)$

##### 4.1.2.9 Using the compression, the EONIA rate is approximated as (see 8):

$$R_{EONIA,compress} = \frac{1}{\Delta(T_1, T_2)} \ln \left( \frac{DF_{OIS}(T_0)}{DF_{OIS}(T_1)} \right)$$

Figure 107 shows the differences $R_{EONIA,EONIA+spread} - R_{EONIA,Exact}$ and $R_{EONIA,compress} - R_{EONIA,Exact}$. For spread = 8bps, we can see that the bias due to approximation with the OISDateCompression is materially 0. Even when bumping the spread to 1%, the approximation works.

![Figure 107: Figure shows bias of approximation.](./Fig/1.png)

##### 4.1.2.9 OISSpreadFrontDates, BasisSpreadFrontDates _<RateIndexSubType>_

CURVES with OISSpreadFrontDates, and BasisSpreadFrontDates _<RateIndexSubType>_ are used in order to globally fit the front end (instruments with SpreadBuildMethod = CONSTANT_FORWARD) in OISSpreads and BasisSpreads.

We have the following two curves:
- RT_DT_IR#USD: FEDFUND - 3m LIBOR basis is in OISSpreads with OISUseBaseCurve =_NO_
- RT_SOFR: FEDFUND - 3m LIBOR basis is in BasisSpreads with BaseCurve = NONE for RateIndexSubType = FEDFUND. The levels of BasisSpreads are reset with to be consistent.

In Table we see 1-day FEDFUND forward jumps a the date specified 17-Sep-2020 which specified by OISSpreadFrontDates in and BasisSpreadFrontDates in RT_SOFR. And we see OISSpreadFrontDates and BasisSpreadFrontDates are working exactly the same.

Table 62 shows the OISSpreadFrontDates in RT_DT_IR#USD and BasisSpreadFrontDates in RT_SOFR.

| RT_DT_IR#USD OISSpreadFrontDates | RT_SOFR BasisSpreadFrontDates_FEDFUND |
|----------------------------------|-------------------------------------|
| 20200917                        | 20200917                           |
| 20201106                        | 20201106                           |
| 20201217                        | 20201217                           |
| 20210204                        | 20210204                           |
| 20210318                        | 20210318                           |
| 20210429                        | 20210429                           |
| 20210610                        | 20210610                           |
| 20210722                        | 20210722                           |

Table 63: 1-day forward FEDFUND rate for CURVE RT_DT_IR#USD built with FEDFUND in OISSpreads and CURVE RT_SOFR build with FEDFUND in BasisSpreads

| Date | RT_DT_IR#USD | RT_SOFR |
|------|--------------|---------|
| 20200827 | 0.000002321 | 0.000002321 |
| 20200828 | 0.000002321 | 0.000002321 |
| 20200829 | 0.000002321 | 0.000002321 |
| 20200830 | 0.000002321 | 0.000002321 |
| 20200831 | 0.000002321 | 0.000002321 |
| 20200901 | 0.000002321 | 0.000002321 |
| 20200902 | 0.000002321 | 0.000002321 |
| 20200903 | 0.000002321 | 0.000002321 |
| 20200904 | 0.000002321 | 0.000002321 |
| 20200905 | 0.000002321 | 0.000002321 |
| 20200906 | 0.000002321 | 0.000002321 |
| 20200907 | 0.000002321 | 0.000002321 |
| 20200908 | 0.000002321 | 0.000002321 |
| 20200909 | 0.000002321 | 0.000002321 |
| 20200910 | 0.000002321 | 0.000002321 |
| 20200911 | 0.000002321 | 0.000002321 |
| 20200912 | 0.000002321 | 0.000002321 |
| 20200913 | 0.000002321 | 0.000002321 |
| 20200914 | 0.000002321 | 0.000002321 |
| 20200915 | 0.000002321 | 0.000002321 |
| 20200916 | 0.000002321 | 0.000002321 |
| 20200917 | 0.000727057 | 0.000727057 |
| 20200918 | 0.000727057 | 0.000727057 |
| 20200919 | 0.000727057 | 0.000727057 |
| 20200920 | 0.000727057 | 0.000727057 |
| 20200921 | 0.000727057 | 0.000727057 |
| 20200922 | 0.000727057 | 0.000727057 |
| 20200923 | 0.000727057 | 0.000727057 |

### 4.2 Transition to RFR backbone CURVE (Mars request 2021Jul23-TAKAYHI-17369)

In the present section we test the impact of changing the interest curve backbone from Libor from RFR. To adequately price interest rate derivatives even for a single currency many interest rate curves are required. One of the curves is typically referenced to as "base" or "backbone" curve, whereas the other curves are built by adding a suitable basis. For example, prior to LIBOR transition, the bank used Libor-3m curve as a base curve for EUR, and several basis curves were built on top of it. As a part of LIBOR transition, the bank is changing the base curve from Libor to RFR. This does not impact the pricing of the derivatives and the procedures used to build the curves, but merely the choice of input data.

We illustrate here the construction of various rate curves using a CURVE object with RFR backbone. We check that the build instruments for the curve are correctly recognized and repriced manually. We also check that transitioning from the Libor backbone to the RFR backbone has immaterial effect on the constructed rate curves.

Base curve

Figures 108, 109 illustrate the instruments used to build the RFR curve for USD, GBP, JPY and CHF:

- The CASH instruments pay a compounded RFR rate over a period in exchange for a fixed payment. The cash rates can be provided for consecutive non-overlapping intervals $[T_0, T_1], [T_1, T_2], \ldots, [T_{n-1}, T_n]$ (e.g. USD, GBP) or for co-initial intervals $[T_0, T_1], [T_0, T_2], \ldots, [T_0, T_n]$ (e.g. JPY), where $T_0$ is the valuation date and $DF(T_0) = 1$. In both cases this allows to bootstrap the RFR discounting factors for the instants $T_1, T_2, \ldots, T_n$ using:

$$DF(T_i) = (1 + dcf(T_i, T_j)c(T_i, T_j))DF(T_j),$$

where $c(T_i, T_j)$ is the cash rate for the period $[T_i, T_j]$ and $dcf(T_i, T_j)$ is the day count fraction between dates $T_i$ and $T_j$.

- The FUTURES instruments are quarterly (IMM) futures, where the final settlement price is the compounded RFR rate over the respective period. For some currencies (e.g. JPY) futures are not used to build the curves. When futures are used, typically the futures rates are given for non-overlapping intervals $[T_0, T_1], \ldots, [T_{n-1}, T_n]$, where $T_n$ is the last maturity covered by cash rates. This allows to bootstrap the RFR short rate for the period $[T_0, T_{next}]$. This is done by converting the futures price into an equivalent cash rate for the same period and then proceeding as with the cash rates:

$$c(T_i, T_j) = 1 - \frac{f(T_i, T_j)}{10000} - convexity(T_i, T_j),$$

where $f(T_i, T_j), c(T_i, T_j)$ are the futures price and the equivalent cash rate for the period $[T_i, T_j]$ and $convexity(T_i, T_j)$ is the convexity correction specified in the futures database.

- The SWAP instruments are OIS swaps with annual frequency. The floating leg pays the compounded RFR rate over the respective periods. More details on build instruments for swaps are provided for the periods $[T_0, T_{n+m+1}], \ldots, [T_i, T_{n+m+k}]$ and the fixed leg payments during the period $[T_{n+m}, T_{n+m+k}]$ occur exactly on $T_{n+m+j}$ with $j = 1, \ldots, k$, we can directly bootstrap the discount factors for these times using the formula:

$$DF(T_b) - DF(T_a) = s(T_0, T_1) \sum_{i=1}^{n} dcf(T_{i-1}, T_i)DF(T_i), \quad i = n + m + 1, \ldots, n + m + k,$$

where at step i we use this formula to determine $DF(T_i)$ from the known previous discounting factors $DF(T_0) = 1, DF(T_1), \ldots, DF(T_{i-1})$ as well as the swap rate $s(T_0, T_1)$ for the period $[T_0, T_1]$. When the fixed leg frequency is different, additional interpolation is required.

Test: In order to make sure that the build instruments are correctly identified and priced, we reprice them manually. The repricing errors are shown in Table 64, confirming the correctness of the implementation.

![Figure 108: Left: build instruments for the USD SOFR curve; right: build instruments for the GBP SONIA curve. Shaded areas show the time span of the instrument.](./Fig/2.png)

![Figure 109: Left: build instruments for the JPY TONAR curve; right: build instruments for the CHF SARON curve. Shaded areas show the time span of the instrument.](./Fig/3.png)

| Ccy | Key | Freq | RFR | DiscRate | Count | MaxError |
|-----|-----|------|-----|----------|-------|----------|
| 0 | CHF | CASH | ZERO | SARON | SARON | 1 | 2.1e-15 |
| 1 | CHF | FUTURES | QUARTERLY | SARON | SARON | 6 | 2.2e-14 |
| 2 | CHF | SWAP | ANNUALLY | SARON | SARON | 18 | 8.9e-13 |
| 3 | GBP | CASH | ZERO | SONIA | SONIA | 12 | 1.1e-14 |
| 4 | GBP | FUTURES | QUARTERLY | SONIA | SONIA | 7 | 1.1e-14 |
| 5 | GBP | SWAP | ANNUALLY | SONIA | SONIA | 16 | 6.2e-14 |
| 6 | JPY | CASH | ZERO | TONAR | TONAR | 10 | 1.5e-14 |
| 7 | JPY | SWAP | ANNUALLY | TONAR | TONAR | 17 | 1.1e-12 |
| 8 | USD | CASH | ZERO | SOFR | SOFR | 8 | 1.3e-13 |
| 9 | USD | FUTURES | QUARTERLY | SOFR | SOFR | 9 | 1.1e-14 |
| 10 | USD | SWAP | ANNUALLY | SOFR | SOFR | 17 | 2.8e-14 |

Table 64: Base curve build instruments per currency. Count is the number of instruments of a given category. MaxError shows the maximum manual repricing error for instruments of a given category for a notional of 100.

Basis curves

Several basis curves are built on top of the base RFR curve to correctly price various derivatives.

Libor projection curves. For each currency several Libor projection curves are built. The tenors of Libor rates are 1m, 3m, 6m and 12m. To build the basis curve for a fixed term the following instruments are used:

- CASH and FUTURE instruments pay compounded RFR + spread in exchange for a term Libor rate for the same period.
- SWAPCOMP instruments are swaps between the compounded RFR + spread against Libor.

We make sure that the instruments are repriced manually in Table 65.

We remind how the Libor projection curves in the same currency are built. We assume that the discount factors $DF_{RFR}$ for the RFR curve have been built. For concreteness, consider the construction of the Libor-3m projection curve. Using the par swap instrument spread for the period $[T_i, T_{i+1}]$ which pays compounded RFR + Spread in exchange for Libor-3m, we can determine the projected Libor-3m rate for the period $[T_i, T_{i+1}]$ from:

$$DF_{RFR}(T_i) - DF_{RFR}(T_{i+1}) = (Libor_{3m}(T_i, T_{i+1}) - s(T_i, T_{i+1}))dcf(T_i, T_{i+1})DF_{RFR}(T_{i+1}).$$

This Libor-3m rate for he period $[T_i, T_{i+1}]$ can then be used for valuing complex derivatives whose rate is based on Libor-3m and which are using RFR discounting. In a similar way, consider the par swap, paying compounded RFR + Spread in exchange for Libor-3m in each 3m period $[T_0, T_1], [T_1, T_2], \ldots, [T_{n-1}, T_n]$:

$$DF_{RFR}(T_0) - DF_{RFR}(T_n) = \sum_{i=1}^{n} (Libor_{3m}(T_{i-1}, T_i) - s(T_0, T_n))dcf(T_{i-1}, T_i)DF_{RFR}(T_i).$$

Assuming that the projected Libor-3m rates for the period $[T_0, T_1], \ldots, [T_{n-2}, T_{n-1}]$ are already known, we can use this formula to determine the projected rate $Libor_{3m}(T_{n-1}, T_n)$.

| Ccy | Key | RecRate | PayRate | DiscRate | Freq | Count | MaxError |
|-----|-----|---------|---------|----------|------|-------|----------|
| 0 | CHF | CASH | SARON | LIBOR-12M | SARON | ZERO | 1 | 1.7e-13 |
| 1 | CHF | FUTURE | SARON | LIBOR-12M | SARON | ZERO | 1 | 2.9e-14 |
| 2 | CHF | SWAPCOMP | SARON | LIBOR-12M | SARON | ANNUALLY | 19 | 2.2e-12 |
| 3 | CHF | CASH | SARON | LIBOR-1M | SARON | ZERO | 1 | 4.1e-15 |
| 4 | CHF | FUTURE | SARON | LIBOR-1M | SARON | ZERO | 1 | 2.9e-14 |
| 5 | CHF | SWAPCOMP | SARON | LIBOR-1M | SARON | MONTHLY | 19 | 3.4e-13 |
| 6 | CHF | CASH | SARON | LIBOR-3M | SARON | ZERO | 1 | 1.8e-12 |
| 7 | CHF | FUTURE | SARON | LIBOR-3M | SARON | ZERO | 1 | 1.1e-14 |
| 8 | CHF | SWAPCOMP | SARON | LIBOR-3M | SARON | QUARTERLY | 19 | 2.2e-13 |
| 9 | CHF | CASH | SARON | LIBOR-6M | SARON | ZERO | 1 | 2.3e-12 |
| 10 | CHF | FUTURE | SARON | LIBOR-6M | SARON | ZERO | 1 | 7.4e-15 |
| 11 | CHF | SWAPCOMP | SARON | LIBOR-6M | SARON | SEMI | 19 | 5.9e-14 |
| 12 | GBP | CASH | SONIA | LIBOR-12M | SONIA | ZERO | 1 | 6.1e-13 |
| 13 | GBP | FUTURE | SONIA | LIBOR-12M | SONIA | ZERO | 14 | 2.9e-14 |
| 14 | GBP | SWAPCOMP | SONIA | LIBOR-12M | SONIA | ANNUALLY | 17 | 2.6e-13 |
| 15 | GBP | CASH | SONIA | LIBOR-1M | SONIA | ZERO | 1 | 6.9e-13 |
| 16 | GBP | FUTURE | SONIA | LIBOR-1M | SONIA | ZERO | 14 | 3e-14 |
| 17 | GBP | SWAPCOMP | SONIA | LIBOR-1M | SONIA | MONTHLY | 17 | 3.3e-13 |
| 18 | GBP | CASH | SONIA | LIBOR-3M | SONIA | ZERO | 1 | 5.5e-14 |
| 19 | GBP | FUTURE | SONIA | LIBOR-3M | SONIA | ZERO | 14 | 3.5e-14 |
| 20 | GBP | SWAPCOMP | SONIA | LIBOR-3M | SONIA | QUARTERLY | 17 | 1.1e-13 |
| 21 | GBP | CASH | SONIA | LIBOR-6M | SONIA | ZERO | 1 | 5.3e-13 |
| 22 | GBP | FUTURE | SONIA | LIBOR-6M | SONIA | ZERO | 14 | 3.8e-14 |
| 23 | GBP | SWAPCOMP | SONIA | LIBOR-6M | SONIA | SEMI | 17 | 1.4e-13 |
| 24 | JPY | CASH | TONAR | LIBOR-12M | TONAR | ZERO | 5 | 2e-14 |
| 25 | JPY | SWAPCOMP | TONAR | LIBOR-12M | TONAR | ANNUALLY | 23 | 2.1e-12 |
| 26 | JPY | CASH | TONAR | LIBOR-1M | TONAR | ZERO | 5 | 1.7e-14 |
| 27 | JPY | SWAPCOMP | TONAR | LIBOR-1M | TONAR | MONTHLY | 24 | 5e-13 |
| 28 | JPY | CASH | TONAR | LIBOR-3M | TONAR | ZERO | 5 | 1.7e-14 |
| 29 | JPY | SWAPCOMP | TONAR | LIBOR-3M | TONAR | QUARTERLY | 24 | 6e-13 |
| 30 | JPY | CASH | TONAR | LIBOR-6M | TONAR | ZERO | 5 | 2e-14 |
| 31 | JPY | SWAPCOMP | TONAR | LIBOR-6M | TONAR | SEMI | 24 | 1.5e-12 |
| 32 | USD | SWAPCOMP | SOFR | LIBOR-12M | SOFR | ANNUALLY | 15 | 1.3e-12 |
| 33 | USD | SWAPCOMP | SOFR | LIBOR-1M | SOFR | MONTHLY | 17 | 4.7e-13 |
| 34 | USD | SWAPCOMP | SOFR | LIBOR-3M | SOFR | QUARTERLY | 16 | 5.8e-13 |
| 35 | USD | SWAPCOMP | SOFR | LIBOR-6M | SOFR | SEMI | 17 | 3.3e-13 |
| 36 | USD | CASH | SOFR | LIBOR-12M | SOFR | ZERO | 2 | 3.3e-13 |
| 37 | USD | FUTURE | SOFR | LIBOR-12M | SOFR | ZERO | 10 | 1.7e-14 |
| 38 | USD | CASH | SOFR | LIBOR-1M | SOFR | ZERO | 2 | 1.3e-13 |
| 39 | USD | FUTURE | SOFR | LIBOR-1M | SOFR | ZERO | 10 | 2.3e-14 |
| 40 | USD | CASH | SOFR | LIBOR-3M | SOFR | ZERO | 2 | 3.2e-13 |
| 41 | USD | FUTURE | SOFR | LIBOR-3M | SOFR | ZERO | 14 | 5.2e-14 |
| 42 | USD | CASH | SOFR | LIBOR-6M | SOFR | ZERO | 2 | 3e-13 |
| 43 | USD | FUTURE | SOFR | LIBOR-6M | SOFR | ZERO | 10 | 3.3e-14 |

Table 65: Instruments used to build the RFR-Libor curves for different tenors across currencies. The column MaxError shows the maximum manual repricing error for instruments in a given category.

Cross-currency swaps. When USD is a foreign currency and the trade is collateralized in USD, a cross-currency basis curve is needed to correctly price the trade. This curve is built from series of cross-currency swaps, which pay quarterly compounded USD SOFR in exchange for the quarterly compounded domestic RFR. We make sure that these swaps are correctly repriced manually in Table 66.

The construction of cross-currency basis curves is more evolved compared to the single-currency case. We illustrate this with construction of the USD/GBP basis curve. The build instruments are swaps, paying compounded USD SOFR in exchange for compounded GBP SONIA + Spread quarterly, and the USD SOFR discounting is used for both legs. For a swap priced at par, we have the following equality:

$$\sum_{i=1}^{n} (SONIA_{SOFR}^P(T_{i-1}, T_i) + s(T_{i-1}, T_i))dcf(T_{i-1}, T_i)DF_{SONIA|SOFR}(T_i) + DF_{SONIA|SOFR}(T_n) - DF_{SONIA|SOFR}(T_0) = 0,$$

where $SONIA_{SOFR}^P(T_{i-1}, T_i), DF_{SONIA|SOFR}(T_i)$ are the projected SONIA rate and SONIA discount factor under SOFR collaterization, and $s(T_{i-1}, T_i)$ is the cross-currency spread. Note that the USD SOFR leg has zero present value because of the initial and terminal notional exchange. We consider (42) for $i = 1, \ldots, n, as a system of n equations for finding 2n unknowns $SONIA_{SOFR}^P(T_{i-1}, T_i), DF_{SONIA|SOFR}(T_i)$. To get a unique solution, the following assumption is made:

$$SONIA_{SOFR}^P(T_{i-1}, T_i) = SONIA_{SONIA}^P(T_{i-1}, T_i), \quad i = 1, \ldots, n,$$

where $SONIA_{SONIA}^P(T_{i-1}, T_i)$ is the projected SONIA rate under SONIA collaterization, which is known from single-currency SONIA instruments. With this assumption, n discounting factors $DF_{SONIA|SOFR}(T_i)$ are uniquely determined from n equations (42), $i = 1, \ldots, n$.

| Ccy | Key | Freq | RecRate | PayRate | Count | MaxError |
|-----|-----|------|---------|---------|-------|----------|
| 0 | CHF | CCYSWAP | QUARTERLY | SOFR | SARON | 21 | 5.6e-08 |
| 1 | EUR | CCYSWAP | QUARTERLY | SOFR | LIBOR | 17 | 7.1e-08 |
| 2 | GBP | CCYSWAP | QUARTERLY | SOFR | SONIA | 17 | 5.1e-08 |
| 3 | JPY | CCYSWAP | QUARTERLY | SOFR | TONAR | 21 | 6.7e-05 |

Table 66: The MaxError column shows the maximal manual replication error for the price of cross-currency swaps between USD and a given currency. Both legs are discounted at the USD SOFR rate.

Basis swaps. In the USD space, two extra basis curves are built. The first one is built from forward starting swaps, where compounded SOFR + spread is exchanged against the compounded fed funds rate. The second basis curve is built from spot starting swaps where compounded SOFR + spread is exchanged for the 13 weeks treasury bill rate.

In the JPY space, several extra basis curves are built from the spot starting swaps, where compounded TONAR + spread are exchanged against ZTIBOR or DTIBOR with different frequencies (1m, 3m, 6m, 12m). This gives eight basis curves.

We make sure that the basis swaps are correctly repriced manually in Table 67.

| Ccy | Key | Freq | RecRate | PayRate | DiscRate | Count | MaxError |
|-----|-----|------|---------|---------|----------|-------|----------|
| 0 | JPY | BASISSWAP | ANNUALLY | TONAR | DTIBOR | TONAR | 23 | 3.1e-08 |
| 1 | JPY | BASISSWAP | ANNUALLY | TONAR | ZTIBOR | TONAR | 23 | 3.1e-08 |
| 2 | JPY | BASISSWAP | MONTHLY | TONAR | DTIBOR | TONAR | 29 | 3.1e-08 |
| 3 | JPY | BASISSWAP | MONTHLY | TONAR | ZTIBOR | TONAR | 29 | 3.1e-08 |
| 4 | JPY | BASISSWAP | QUARTERLY | TONAR | DTIBOR | TONAR | 28 | 3.1e-08 |
| 5 | JPY | BASISSWAP | QUARTERLY | TONAR | ZTIBOR | TONAR | 28 | 3.1e-08 |
| 6 | JPY | BASISSWAP | SEMI | TONAR | DTIBOR | TONAR | 26 | 3.1e-08 |
| 7 | JPY | BASISSWAP | SEMI | TONAR | ZTIBOR | TONAR | 26 | 3.1e-08 |
| 8 | USD | BASISSWAP | QUARTERLY | SOFR | FEDFUND | SOFR | 25 | 5.1e-08 |
| 9 | USD | BASISSWAP | QUARTERLY | SOFR | TBILL | SOFR | 17 | 0.13 |
| 10 | USD | BASISSWAP | ZERO | SOFR | FEDFUND | SOFR | 8 | 1.5e-08 |

Table 67: The column MaxError shows the maximum manual repricing error for different categories of basis swaps.

Treasury spreads. A treasury spread curve is built by subtracting the swap rate from the treasury yield with the same maturity and coupon frequency. Table 68 shows that the spreads computed manually essentially coincide with the spreads in the curve object.

| Ccy | RFR | Region | Freq | Count | MaxError |
|-----|-----|--------|------|-------|----------|
| 0 | CHF | SARON | CORP | ANNUALLY | 4 | 2.9e-17 |
| 1 | CHF | SARON | SOV_CH | ANNUALLY | 4 | 7.2e-11 |
| 2 | CHF | SARON | SOV_CH_CPI | ANNUALLY | 4 | 7.2e-11 |
| 3 | CHF | SARON | UNMAPPED | ANNUALLY | 4 | 2.9e-17 |
| 4 | GBP | SONIA | CORP | SEMI | 11 | 2.8e-17 |
| 5 | GBP | SONIA | SOV_GB | SEMI | 11 | 8e-11 |
| 6 | GBP | SONIA | SOV_GB_CPI | SEMI | 11 | 8e-11 |
| 7 | GBP | SONIA | UNMAPPED | SEMI | 11 | 2.8e-17 |
| 8 | JPY | TONAR | CORP | SEMI | 24 | 2.6e-17 |
| 9 | JPY | TONAR | SOV_JP | SEMI | 24 | 3.9e-10 |
| 10 | JPY | TONAR | SOV_JP_CPI | SEMI | 24 | 3.9e-10 |
| 11 | JPY | TONAR | UNMAPPED | SEMI | 24 | 2.6e-17 |
| 12 | USD | SOFR | CORP | SEMI | 6 | 1.3e-16 |
| 13 | USD | SOFR | SOV_US | SEMI | 6 | 3.6e-10 |
| 14 | USD | SOFR | SOV_US_CPI | SEMI | 6 | 3.6e-10 |
| 15 | USD | SOFR | UNMAPPED | SEMI | 6 | 1.3e-16 |

Table 68: The column MaxError shows the maximal manual replication error for spreads between the treasury yield and a swap rate with the same frequency and timespan across different currencies and categories of bonds.

Clearing spreads. Each clearing house has its own price for the same swap. To account for the basis between clearing houses, additional basis curves are built. We make sure that the manually computed clearing spreads are consistent with the marks in the CURVE object in Table 69.

| Ccy | RFR | Freq | BaseCH | CH | Count | MaxError |
|-----|-----|------|--------|----|----|--------|
| 0 | CHF | SARON | ANNUALLY | LCH | CME | 20 | 8.9e-16 |
| 1 | CHF | SARON | ANNUALLY | LCH | EUREX | 20 | 8.9e-16 |
| 2 | GBP | SONIA | SEMI | LCH | CME | 16 | 9.5e-17 |
| 3 | GBP | SONIA | SEMI | LCH | EUREX | 16 | 1.1e-16 |
| 4 | JPY | TONAR | QUARTERLY | JSCC | CME | 21 | 8.2e-12 |
| 5 | JPY | TONAR | QUARTERLY | JSCC | LCH | 21 | 8.2e-12 |
| 6 | USD | SOFR | SEMI | LCH | CME | 14 | 1.7e-16 |
| 7 | USD | SOFR | SEMI | LCH | EUREX | 14 | 9.5e-17 |

Table 69: Clearing house basis curves. The column BaseCH designates the base clearing house, and the column CH indicates the clearing house to which we compare. The column Count shows the number of spreads specified for a given pair of clearing houses. The column MaxError shows the maximum manual replication error for the difference of prices of RFR swaps traded at given clearing houses.

Impact of backbone change

Test: In this subsection we check that changing the backbone of the CURVE object from Libor to RFR has immaterial effect on the resulting constructed rate curves. Figures 108 and 111 show that changing he backbone has immaterial effect on the RFR swap rates, 3m Libor rates and other selected rates.

![Figure 110: Left: Various interest rate curves for USD (RFR swap curve, Libor-3m curve, Stfma) built from the Libor and RFR backbone CURVE objects. Right: GBP interest rate curves (RFR swap curve, Libor-3m curve, treasury yield curve). One can see, that transitioning to the RFR backbone has immaterial effect.](./Fig/4.png)

![Figure 111: Left: Various interest rate curves for JPY (RFR swap curve, Libor-3m curve, treasury yield curve) built from the Libor and RFR backbone CURVE objects. Right: CHF interest rate curves. One can see, that transitioning to the RFR backbone has immaterial effect.](./Fig/5.png)

However, changing the backbone from Libor to RFR has a slight effect on RFR term forwards (less than 1bp), see Fig. 112 (left). The reason is that the pillar points from which RFR curve is built by interpolation is different for the two backbones. Fig. 112 (right) shows that aligning the pillar points one can make the difference immaterial. This confirms that the curve construction is performed correctly and the discrepancy is only due to different market data.

![Figure 112: Left: 1m compounded RFR forwards computed from the original Libor-3m and RFR backbone curves. Right: same rates after the pillar points (settlement dates, maturities and tenors) of the curve build instruments are aligned, and the RFR cash instruments suitable in the RFR backbone curve is populated by the RFR rates computed from the Libor-3m backbone curve. One can see that after such an alignment of curve build instruments, the resulting compounded RFR rates are essentially the same.](./Fig/6.png)

### 4.3 IRFundingMMFloat based on Central Bank deposit rate (Mars request 2021Sep14-ZENGGAV-17502)

In the present section we perform testing of the product IRFundingMMFloat in the model DBX::RateDeterministic. The product is a floating rate loan or deposit referencing a central bank deposit rate, such as ECB Depo, USD IOER, or GBP BOE Base.

The tested product pays the weighted average ECB-Depo rate. The first payment occurs on 16-Aug-22 and is equal to the notional times the ECB-Depo rate daily averaged from 16-Aug-21 till 12-Aug-22. The second payment occurs on 16-Aug-23 and is equal to the daily average of the ECB-Depo rate from 15-Aug-22 till 14-Aug-23. In formulas, the rate which applies to the notional for the accrual period m is equal to:

$AvgDepo_m = \sum_{k=1}^{n} w_k Depo(d_k)$

$w_k = \frac{\Delta(d_k, d_{k+1}, \text{ACT}/360)}{\sum_k \Delta(d_k, d_{k+1}, \text{ACT}/360)}$

$Depo(d_k) = \begin{cases}
Depo Fixing(d_k), & \text{the fixing on date } d_k \text{ is provided}, \\
ESTER(d_k) + Spread, & \text{otherwise}.
\end{cases}$

where $d_k$ is the $k$-th business day in the accrual period and $\Delta(d_k, d_{k+1}, \text{ACT}/360)$ is the number of calendar days between $d_k$ and $d_{k+1}$ divided by 360. The payment at the end of each accrual period m is equal to:

$Payoff_m = AvgDepo_m \times \Delta(\text{AccrualBegin}_m, \text{AccrualEnd}_m, \text{ACT}/360) \times \text{Notional},$

where AccrualBegin$_m$ and AccrualEnd$_m$ are the first and the last accrual days in the $m$-th accrual period.

A fixing of ECB-Depo of -0.5% is provided for each day from 16-Aug-21 till 14-Sep-21. For each following business day the ECB-Depo rate is computed by adding up the ESTER rate and a manually inputted spread of 5 bp from the MKTDATA object. The spread reflects the view of the trader. The forward ESTER and EUR CB Depo rates are shown in Fig. - The valuation date is 13-Sep-21. The notional is 10,000 EUR.

The product has been risk managed for a while in a risk management system Score. The present request is related to switching to the risk management system Kannon.

![Figure 113: ESTER rate and EUR CB Depo rates. The forward EUR CB rates are computed by adding a spread to the ESTER rate. The spread is inputted by the trader. In the present example the spread is equal to 5 bp.](./Fig/7.png)

#### 4.3.1 Curve Shifts

Test: We make sure that the present value and key sensitivities of the product behave smoothly and as expected under the parallel shifts of the interest rate curve. This is found to be the case.

![Figure 114: Left: Present value under parallel shifts of the interest rate curve. Note that the non-monotonous present value profile is due to two contributions: the present value of the accrued interest is monotonously increasing with the rates, whereas the present value of the principal payment is monotonously decreasing. Right: flat delta.](./Fig/8.png)

![Figure 115: Left: Flat gamma under parallel shifts of the interest rate curve. Right: flat delta with respect to the spread between the ECB deposit rate and ESTER. The behaviour is smooth.](./Fig/9.png)

#### 4.3.2 Shifting the spread between the ECB deposit rate and ESTER

Test: We make sure that the present value and key sensitivities of the product behave smoothly and as expected under the shifts of the spread between the ECB deposit rate and ESTER rate. This is found to be the case.

![Figure 116: Left: Present value for different values of the spread between the ECB deposit rate and ESTER rate. Present value decays with the spread, as expected.Right: flat delta. The behaviour is smooth.](./Fig/10.png)

![Figure 117: Left: Flat gamma for different values of the spread between the ECB deposit rate and ESTER rate. Gamma is smooth and is close to zero, as expected. Right: flat delta with respect to the spread between the ECB deposit rate and ESTER. The behaviour is smooth.](./Fig/11.png)

#### 4.3.3 Manual Replication

Test: In this section we replicate the calculate the present value of an IRFundingMMFloat and compare it to the calculation performed by DBA.

Table 70 illustrates the replication of the key features of the product:

1. Accrual begin for the first period is specified in the SECURITY handle. For the second period it coincides with the pay date for the first period.
2. The pay date the first period is 3m months from the accrual begin. The pay date for the second period is 90 calendar days from the valuation date 15-Sep-2021, which is the notification period.
3. The interest is accrued daily at the ECBDepo rate, which is given by fixing until the valuation date and by summing up ESTER and a spread, specified by a trader for later dates. The interest calculation for first period is given in Table 75 and for the second period in Table 76.

The replicated present value agrees with the present value computed by DBA with a zero replication error.

| Dates | DCF | ESTER | Depo | Fixing | Weight | WeightDiff |
|-------|-----|-------|------|--------|--------|------------|
| 0 | 16-Aug-21 | 0.002778 |  | -0.5000% | -0.5% | 0.002747 | 6.07153e-18 |
| 1 | 17-Aug-21 | 0.002778 |  | -0.5000% | -0.5% | 0.002747 | 6.07153e-18 |
| 2 | 18-Aug-21 | 0.002778 |  | -0.5000% | -0.5% | 0.002747 | 6.07153e-18 |
| 20 | 13-Sep-21 | 0.002778 |  | -0.5000% | -0.5% | 0.002747 | 6.07153e-18 |
| 21 | 14-Sep-21 | 0.002778 |  | -0.5000% | -0.5% | 0.002747 | 6.07153e-18 |
| 22 | 15-Sep-21 | 0.002778 | -0.005702 | -0.5202% |  | 0.002747 | 6.07153e-18 |
| 23 | 16-Sep-21 | 0.002778 | -0.005702 | -0.5202% |  | 0.002747 | 6.07153e-18 |
| 256 | 11-Aug-22 | 0.002778 | -0.005591 | -0.5091% |  | 0.002747 | 6.07153e-18 |
| 257 | 12-Aug-22 | 0.008333 | -0.005591 | -0.5091% |  | 0.008242 | 1.73472e-17 |

Table 70: Manual computation of daily rates and weights for the first year (excerpt). Here DCF is the day count fraction till the next business day (number of calendar days divided by 360, corresponding to the ACT/360 convention), ESTER is the forward to ESTER rate, fixing is the ECB-Depo fixing. The column weight contains the ratio of the day count fraction to the sum of all the day count fractions. WeightDiff shows the difference of manual and DBA weights. All the differences are of machine precision.

Using Table 70, we reproduce the average rate for the first year with an error of order 1e-9. This leads to the present value error for the first payment of less than 0.1 EUR for 10,000 EUR notional:

| Manual Daycount | 1.01111111 |
|-----------------|------------|
| DBA Daycount | 1.01111111 |
| Manual Rate | -0.51620858633% |
| DBA Rate | -0.516208340% |
| Rate Diff | -2.4629587E-09 |
| Manual Dist. Fact. | 1.00529625 |
| DBA Disc. Fact | 1.00529625 |
| Manual PVLet | 52470.85846 |
| DBA PVLet | 52470.83342 |
| PVLet Diff | 0.02503572 |

Table 71: Manual computation of the rate applicable to the first year and of the corresponding PVLet.

| Dates | DCF | ESTER | Depo | Weight | WeightDiff |
|-------|-----|-------|------|--------|------------|
| 0 | 15-Aug-22 | 0.002778 | -0.5591% | -0.5091% | 0.00274 | 6.07153e-18 |
| 1 | 16-Aug-22 | 0.002778 | -0.5591% | -0.5091% | 0.00274 | 6.07153e-18 |
| 2 | 17-Aug-22 | 0.002778 | -0.5591% | -0.5091% | 0.00274 | 6.07153e-18 |
| 255 | 11-Aug-23 | 0.008333 | -0.5067% | -0.4567% | 0.00821 | 1.9082e-17 |
| 256 | 14-Aug-23 | 0.002778 | -0.5067% | -0.4567% | 0.00274 | 6.07153e-18 |

Table 72: Manual computation of daily rates and weights for the second year (excerpt). Here DCF is the day count fraction till the next business day (number of calendar days divided by 360, corresponding to the ACT/360 convention), ESTER is the forward tb ESTER rate, fixing is the ECB-Depo fixing. The column weight contains the ratio of the day count fraction to the sum of all the day count fractions. WeightDiff shows the difference of manual and DBA weights. All the differences are of machine precision.

Using Table 72, we reproduce the average rate for the first year with an error of order 1e-9. This leads to the present value error for the second payment of less than 0.1 EUR for 10,000 EUR notional:

| Manual Daycount | 1.01388889 |
| DBA Daycount | 1.01388889 |
| Manual Rate | -0.48529856291% |
| DBA Rate | -0.485298416929% |
| Rate Diff | -1.4566245E-09 |
| Manual Dist. Fact. | 1.01076576 |
| DBA Disc. Fact | 1.01076576 |
| Manual PVLet | 49733.5996 |
| DBA PVLet | 49733.58467 |
| PVLet Diff | 0.01492704 |

Table 73: Manual computation of the rate applicable to the second year and of the corresponding PVLet.

### 4.4 IRFundingMMOpenEndCallAcc based on Central Bank deposit rate (Mars request 2021Sep15-ZENGGAV-17507)

In the present section we perform testing of the product IRFundingMMOpenEndCallAcc in the model DBX::RateDeterministic. The product is a call account, that is, an open-ended deposit between treasury and other businesses in the firm or an external client. The client can deposit and withdraw money at any time (respecting a notification period), and gain interest. The reference rate is one of the central bank deposit rates such as ECB-Depo, USD-IOER, or GBP-BOE-Base.

The call account is initialized with the initial notional of 10,000 EUR and the valuation date is 15-Sep-2021. The notification period is 90d, so that for the valuation purposes the trade terminates on 14-Dec-2021. The notional adjustment frequency is QUARTERLY. Accordingly, the product pays quarterly interest accrued from the valuation date till 17-Nov-2021 on 17-Nov-2021. The next accrual period covers the 3m period starting on 17-Nov-2021, but since the trade is terminated on 14-Dec-2021, the interest accrues till this date and is then paid. Fixing of the ECB depo rate of -0.5% are used, when the opposite is not mentioned explicitly.

The product has been risk managed for a while in a risk management system Score. The present request is related to switching to the risk management system Kannon.

#### 4.4.1 Curve Shifts

Test: We make sure that the present value and key sensitivities of the product behave smoothly and as expected under the parallel shifts of the interest rate curve. This is found to be the case.

![Figure 118: Left: Present value under parallel shifts of the interest rate curve and for different fixings of the ECB depo rate. Non-zero fixings lead to a non-monotonous behaviour of the price. Right: flat delta. The behaviour is smooth.](./Fig/12.png)

![Figure 119: Left: Flat gamma under parallel shifts of the interest rate curve. Right: flat delta with respect to the spread between the ECB deposit rate and ESTER. The behaviour is smooth.](./Fig/13.png)

#### 4.4.2 Shifting the spread between the ECB deposit rate and ESTER

Test: We make sure that the present value and key sensitivities of the product behave smoothly and as expected under the shifts of the spread between the ECB deposit rate and ESTER rate. This is found to be the case.

![Figure 120: Left: Present value for different values of the spread between the ECB deposit rate and ESTER rate. Present value decays with the spread, as expected.Right: flat delta. The behaviour is smooth.](./Fig/14.png)

![Figure 121: Left: Flat gamma for different values of the spread between the ECB deposit rate and ESTER rate. Gamma is smooth and is close to zero, as expected. Right: flat delta with respect to the spread between the ECB deposit rate and ESTER. The behaviour is smooth.](./Fig/15.png)

#### 4.4.3 Manual Replication

Test: In this section we replicate the calculate the present value of an IRFundingMMOpenEndCallAce and compare it to the calculation performed by DBA.

Table 74 illustrates the replication of the key features of the product:

1. Accrual begin for the first period is specified in the SECURITY handle. For the second period it coincides with the pay date for the first period.
2. The pay date the first period is 3m months from the accrual begin. The pay date for the second period is 90 calendar days from the valuation date 15-Sep-2021, which is the notification period.
3. The interest is accrued daily at the ECBDepo rate, which is given by fixing until the valuation date and by summing up ESTER and a spread, specified by a tracker for later dates. The interest calculation for first period is given in Table 75 and for the second period in Table 76.

The replicated present value agrees with the present value computed by DBA with a zero replication error.

#### 4.4.3 Manual Replication of the price

| | First Period | Second Period | Total |
|---|---|---|---|
| AccrualBegin | 17-Aug-21 | 17-Nov-21 | |
| AccrualEnd | 16-Nov-21 | 13-Dec-21 | |
| PayDate | 17-Nov-21 | 14-Dec-21 | |
| DiscountFactor | 1.000998736 | 1.001427597 | |
| InterestPV | -13.14812367 | -3.913929894 | -17.062054 |
| PrincipalPV | 0 | 10014.27597 | 10014.27597 |
| TotalPV | -13.14812367 | 10010.36204 | 9997.213916 |

Table 74: Manual replication of the present value for IRFundingMMOpenEndCallAcc. The resulting present value is identical to the one calculated by DBA.

| Dates | NextBD | DCF | Fixing | ESTER | Depo | PVLet |
|---|---|---|---|---|---|---|
| 0 | 17-Aug-21 | 18-Aug-21 | 0.002778 | -0.5000% | | -0.5000% | -0.139028 |
| 1 | 18-Aug-21 | 19-Aug-21 | 0.002778 | -0.5000% | | -0.5000% | -0.139028 |
| 2 | 19-Aug-21 | 20-Aug-21 | 0.002778 | -0.5000% | | -0.5000% | -0.139028 |
| 19 | 13-Sep-21 | 14-Sep-21 | 0.002778 | -0.5000% | | -0.5000% | -0.139028 |
| 20 | 14-Sep-21 | 15-Sep-21 | 0.002778 | -0.5000% | | -0.5000% | -0.139028 |
| 21 | 15-Sep-21 | 16-Sep-21 | 0.002778 | | -0.5702% | -0.5202% | -0.144649 |
| 22 | 16-Sep-21 | 17-Sep-21 | 0.002778 | | -0.5702% | -0.5202% | -0.144649 |
| 64 | 15-Nov-21 | 16-Nov-21 | 0.002778 | | -0.5711% | -0.5211% | -0.144899 |
| 65 | 16-Nov-21 | 17-Nov-21 | 0.002778 | | -0.5711% | -0.5211% | -0.144899 |

Table 75: Manual replication of the accrued interest for the first accrual period (excerpt). Fixings are provided until 14-Sep-21. After this date the Depo rate is equal to the sum of ESTER and a spread of 5 bp. DCF is the number of calendar days till the next business days divided by 360. PVLet is the product Notional×DCF×Depo×(Discount factor for the first period payment date).

| Dates | NextBD | DCF | ESTER | Depo | PVLet |
|---|---|---|---|---|---|
| 0 | 17-Nov-21 | 18-Nov-21 | 0.002778 | -0.5711% | -0.5211% | -0.144961 |
| 1 | 18-Nov-21 | 19-Nov-21 | 0.002778 | -0.5711% | -0.5211% | -0.144961 |
| 2 | 19-Nov-21 | 22-Nov-21 | 0.008333 | -0.5711% | -0.5211% | -0.434877 |
| 16 | 09-Dec-21 | 10-Dec-21 | 0.002778 | -0.5711% | -0.5211% | -0.144961 |
| 17 | 10-Dec-21 | 13-Dec-21 | 0.008333 | -0.5711% | -0.5211% | -0.434877 |
| 18 | 13-Dec-21 | 14-Dec-21 | 0.002778 | -0.5711% | -0.5211% | -0.144961 |

Table 76: Manual replication of the accrued interest for the first accrual period (excerpt). The Depo rate is equal to the sum of ESTER and a spread of -0.5%. DCF is the number of calendar days till the next business days divided by 360. PVLet is the product Notional×DCF×Depo×(Discount factor for the second period payment date).

### 4.5 Mars request 2021Sep29-LIUYANGA-17551: BuySellBack, RepoTriParty and RepoReverseTriParty

In the present section we perform testing of the products BuySellBack, RepoTriParty and RepoReverseTriParty in the model RateDeterministic, with configuration DBOPT-RatesMarketDeterministic. These products are, in essence, very similar; the security is a SWAP and has only one relevant payment. The purpose of the request is to differentiate between a classic repo and a triparty (reverse) repo.

#### 4.5.1 BuySellBack

A BuySellBack consist of 2 distinct trades, a spot (outright) purchase and a forward (outright) sell of security. The lending fee is implied in the (forward) repurchase price and cannot be adjusted during the course of a transaction. The lender does not retain beneficial ownership of the bonds and so does not receive any substitute payments.

The particular security tested has the following values of relevant parameters:

- Notional = 3,952,397,970 JPY
- Spread = -0.0035
- SetDate = 13-Aug-2021
- PayDate = 16-Aug-2021

The notional has been rescaled to 10,000 JPY in the tests displayed below for convenience.

##### 4.5.1.1 EOD Pricing

###### 4.5.1.1.1 Stability tests

Figures 122-123 show the obtained PVs, Flatdeltas, and Flatgammas of the BuySellBack when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 122: PV of the BuySellBack as a function of curve shifts.](./Fig/16.png)

![Figure 123: Flatdelta (left) and Flatgamma (right) of the BuySellBack as a function of curve shifts.](./Fig/17.png)

###### 4.5.1.1.2 Taylor expansion

Figure 124 shows the PV of the BuySellBack computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

#### 4.5.1.2 IRRBB scenarios

In this section, we test the stability of the BuySellBack trade under the IRRBB scenarios and compare them with the Base scenario.

Figures 125-127 show two IRRBB scenarios and the base scenario for a clear comparison. Taking all scenarios together, we obtain Figure 128.

![Figure 124: PV of the BuySellBack as a function of curve shifts when computed by the DBA pricing formula accompanied by its Taylor approximation.](./Fig/18.png)

![Figure 125: PV of the BuySellBack under curve shifts for the Base and IRRBB parallel scenarios (left). PV of the BuySellBack under curve shifts for the Base and IRRBB steepener/flattener scenarios (right).](./Fig/19.png)

![Figure 126: PV of the BuySellBack under curve shifts for the Base and IRRBB short scenarios (left). PV of the BuySellBack under curve shifts for the Base and IRRBB long scenarios (right).](./Fig/20.png)

![Figure 127: PV of the BuySellBack under curve shifts for the Base scenario and IRRBB negative scenarios.](./Fig/21.png)

![Figure 128: PV of the BuySellBack under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/22.png)

#### 4.5.1.3 Manual reproduction of the price

The pricing formula of the product is simply given by

$$PV = N(1 + s * \delta)DF, \tag{46}$$

where $N$ is the Notional, $s$ is the spread, $\delta$ is the yearly day fraction between the SetDate and the PayDate, and $DF$ is the discount factor constructed from the curve object. Using the original value of the Notional, the above formula returns

$$PV = 3,952,222,507.7310605, \tag{47}$$

whose value agrees with the one produced by DBPrice up to numerical error.

#### 4.5.2 RepoTriParty

A Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral to the borrower. For the party selling the security and agreeing to repurchase it in the future, it is a repo. The distinguishing feature of a tri-party repo is that a custodian bank or international clearing organization, the tri-party agent, acts as an intermediary between the two parties to the repo.

The particular security tested has the following values of relevant parameters:

- Notional = 3,000,000,000 JPY
- Spread = -0.0001
- SetDate = 13-Aug-2021
- PayDate = 14-Aug-2021

The notional has been rescaled to 10,000 JPY in the tests displayed below for convenience.

##### 4.5.2.1 EOD Pricing

###### 4.5.2.1.1 Stability tests

Figures 129-130 show the obtained PVs, Flatdeltas, and Flatgammas of the RepoTriParty when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 129: PV of the RepoTriParty as a function of curve shifts.](./Fig/23.png)

![Figure 130: Flatdelta (left) and Flatgamma (right) of the RepoTriParty as a function of curve shifts.](./Fig/24.png)

###### 4.5.2.1.2 Taylor expansion

Figure 131 shows the PV of the RepoTriParty computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 131: PV of the RepoTriParty as a function of curve shifts when computed by the DBA pricing formula accompanied by its Taylor approximation.](./Fig/25.png)

#### 4.5.2.2 IRRBB scenarios

In this section, we test the stability of the RepoTriParty trade under the IRRBB scenarios and compare them with the Base scenario.

Figures 132-134 show two IRRBB scenarios and the base scenario for a clear comparison. Taking all scenarios together, we obtain Figure 135.

![Figure 132: PV of the RepoTriParty under curve shifts for the Base and IRRBB parallel scenarios (left). PV of the RepoTriParty under curve shifts for the Base and IRRBB steepener/flattener scenarios (right).](./Fig/26.png)

![Figure 133: PV of the RepoTriParty under curve shifts for the Base and IRRBB short scenarios (left). PV of the RepoTriParty under curve shifts for the Base and IRRBB long scenarios (right).](./Fig/27.png)

![Figure 134: PV of the RepoTriParty under curve shifts for the Base and IRRBB negative scenarios.](./Fig/28.png)

![Figure 135: PV of the RepoTriParty under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/29.png)

#### 4.5.2.3 Manual reproduction of the price

The pricing formula of the product is simply given by

$$PV = N(1 + s * \delta)DF, \tag{48}$$

where $N$ is the Notional, $s$ is the spread, $\delta$ is the yearly day fraction between the SetDate and the PayDate, and $DF$ is the discount factor constructed from the curve object. Using the original value of the Notional, the above formula returns

$$PV = -3,000,005,761.471517, \tag{49}$$

whose value agrees with the one produced by DBPrice up to numerical error.

#### 4.5.3 RepoReverseTriParty

A Reverse Repo defines the purchase of securities coupled with agreement to sell them back to the initial seller at an agreed future date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan and interest to the lender and return of the collateral to the borrower. For the party buying the security and agreeing to sell in the future, the trade is a reverse repo transaction. The distinguishing feature of a tri-party repo is that a custodian bank or international clearing organization, the tri-party agent, acts as an intermediary between the two parties to the repo.

The particular security tested has the following values of relevant parameters:

- Notional = 6,000,000,000 JPY
- Spread = -0.00125
- SetDate = 25-Feb-2020
- PayDate = 26-Feb-2020

The notional has been rescaled to 10,000 JPY in the tests displayed below for convenience.

##### 4.5.3.1 EOD Pricing

###### 4.5.3.1.1 Stability tests

Figures 136-137 show the obtained PVs, Flatdeltas, and Flatgammas of the RepoReverseTriParty when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 136: PV of the RepoReverseTriParty as a function of curve shifts.](./Fig/30.png)

![Figure 137: Flatdelta (left) and Flatgamma (right) of the RepoReverseTriParty as a function of curve shifts.](./Fig/31.png)

###### 4.5.3.1.2 Taylor expansion

Figure 138 shows the PV of the RepoReverseTriParty computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 138: PV of the RepoReverseTriParty as a function of curve shifts when computed by the DBA pricing formula accompanied by its Taylor approximation.](./Fig/32.png)

#### 4.5.3.2 IRRBB scenarios

In this section, we test the stability of the RepoReverseTriParty trade under the IRRBB scenarios and compare them with the Base scenario.

Figures 139-141 show two IRRBB scenarios and the base scenario for a clear comparison. Taking all scenarios together, we obtain Figure 142.

![Figure 139: PV of the RepoReverseTriParty under curve shifts for the Base scenario and IRRBB parallel scenarios (left). PV of the RepoReverseTriParty under curve shifts for the Base scenario and IRRBB steepener/flattener scenarios (right).](./Fig/33.png)

![Figure 140: PV of the RepoReverseTriParty under curve shifts for the Base scenario and IRRBB short scenarios (left). PV of the RepoReverseTriParty under curve shifts for the Base scenario and IRRBB long scenarios (right).](./Fig/34.png)

![Figure 141: PV of the RepoReverseTriParty under curve shifts for the Base and IRRBB negative scenarios.](./Fig/35.png)

![Figure 142: PV of the RepoReverseTriParty under curve shifts for the Base and all IRRBB scenarios.](./Fig/36.png)

#### 4.5.3.3 Manual reproduction of the price

The pricing formula of the product is simply given by

$$PV = N(1 + s * \delta)DF, \tag{50}$$

where $N$ is the Notional, $s$ is the spread, $\delta$ is the yearly day fraction between the SetDate and the PayDate, and $DF$ is the discount factor constructed from the curve object. Using the original value of the Notional, the above formula returns

$$PV = 6,000,007,800.804151, \tag{51}$$

whose value agrees with the one produced by DBPrice up to numerical error.

### 4.6 SellBuyBack (Mars request 2021Nov30-LIUYANGA-17820)

In the present section we perform testing of the product SellBuyBack model RateDeterministic, with configuration DBOPT-RateMarketDeterministic. The security is a SWAP and has only one relevant payment. The purpose of the request is to differentiate between a classic repo and a reverse repo.

A SellBuyBack consist of 2 distinct trades, a spot (outright) sale and a forward (outright) repurchase of security. The lending fee is implied in the (forward) repurchase price and cannot be adjusted during the course of a transaction. The lender does not retain beneficial ownership of the bonds and so does not receive any substitute payments.

The particular security tested has the following values of relevant parameters:

- Notional = 5,081,425 EUR
- Spread = -0.0065
- SetDate = 15-Nov-2021
- PayDate = 09-Dec-2021

The notional has been rescaled to 10,000 EUR in the tests displayed below for convenience.

#### 4.6.0.1 EOD Pricing

##### 4.6.0.1.1 Stability tests

Figures 143-144 show the obtained PVs, Flatdeltas, and Flatgammas of the BuySellBack when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 143: PV of the BuySellBack as a function of curve shifts.](./Fig/37.png)

![Figure 144: Flatdelta (left) and Flatgamma (right) of the BuySellBack as a function of curve shifts.](./Fig/38.png)

##### 4.6.0.1.2 Taylor expansion

Figure 145 shows the PV of the SellBuyBack computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 145: PV of the SellBuyBack as a function of curve shifts when computed by the DBA pricing formula accompanied by its Taylor approximation.](./Fig/39.png)

#### 4.6.0.2 IRRBB scenarios

In this section, we test the stability of the SellBuyBack trade under the IRRBB scenarios and compare them with the Base scenario.

Figures 146-148 show two IRRBB scenarios and the base scenario for a clear comparison. Taking all scenarios together, we obtain Figure 149.

![Figure 146: PV of the SellBuyBack under curve shifts for the Base and IRRBB parallel scenarios (left). PV of the SellBuyBack under curve shifts for the Base and IRRBB steepener/flattener scenarios (right).](./Fig/40.png)

![Figure 147: PV of the SellBuyBack under curve shifts for the Base and IRRBB short scenarios (left). PV of the SellBuyBack under curve shifts for the Base and IRRBB long scenarios (right).](./Fig/41.png)

![Figure 148: PV of the SellBuyBack under curve shifts for the Base scenario and IRRBB negative scenarios.](./Fig/42.png)

![Figure 149: PV of the SellBuyBack under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/43.png)

#### 4.6.0.3 Manual reproduction of the price

The pricing formula of the product is simply given by

$$PV = N(1 + s * \delta)DF, \tag{52}$$

where $N$ is the Notional, $s$ is the spread, $\delta$ is the yearly day fraction between the SetDate and the PayDate, and $DF$ is the discount factor constructed from the LIBOR curve object. Using the original value of the Notional, the above formula returns

$$PV = -5,079,965.9413884677 EUR, \tag{53}$$

whose value agrees with the one produced by DBPrice up to numerical error.

### 4.7 EvergreenRepo (Mars request 2021Oct08-BRARJOA-17609)

In the present section we perform testing of the product EvergreenRepo with the model RateDeterministic, with configuration DBOPT-RatesMarketDeterministic. The security is a SWAP and has only one relevant payment. The purpose of the request is to differentiate between a classic repo and a reverse repo.

An Evergreen Repurchase Agreement (REPO) is where the seller of a security agrees to buy it back from a buyer at a later date. The trade will be booked term, but the end date will continually move based on a pre-agreed schedule. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. For the party selling the security and agreeing to repurchase it in the future, it is a repo.

The particular security tested has the following values of relevant parameters:

- Notional = -95,242,680 EUR
- Spread = -0.0055
- SetDate = 17-Feb-2021
- PayDate = 08-Dec-2021

The notional has been rescaled to 10,000 EUR in the tests displayed below for convenience.

#### 4.7.0.1 EOD Pricing

##### 4.7.0.1.1 Stability tests

Figures 150-151 show the obtained PVs, Flatdeltas, and Flatgammas of the BuySellBack when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 150: PV of the BuySellBack as a function of curve shifts.](./Fig/44.png)

![Figure 151: Flatdelta (left) and Flatgamma (right) of the BuySellBack as a function of curve shifts.](./Fig/45.png)

##### 4.7.0.1.2 Taylor expansion

Figure 152 shows the PV of the EvergreenRepo computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 152: PV of the EvergreenRepo as a function of curve shifts when computed by the DBA pricing formula accompanied by its Taylor approximation.](./Fig/46.png)

#### 4.7.0.2 IRRBB scenarios

In this section, we test the stability of the EvergreenRepo trade under the IRRBB scenarios and compare them with the Base scenario.

Figures 153-155 show two IRRBB scenarios and the base scenario for a clear comparison. Taking all scenarios together, we obtain Figure 156.

![Figure 153: PV of the EvergreenRepo under curve shifts for the Base and IRRBB parallel scenarios (left). PV of the EvergreenRepo under curve shifts for the Base and IRRBB steepener/flattener scenarios (right).](./Fig/47.png)

#### Present Value EvergreenRepo

![Figure 154: PV of the EvergreenRepo under curve shifts for the Base and IRRBB short scenarios (left). PV of the EvergreenRepo under curve shifts for the Base and IRRBB long scenarios (right).](./Fig/1.png)

![Figure 155: PV of the EvergreenRepo under curve shifts for the Base scenario and IRRBB negative scenarios.](./Fig/2.png)

### LIBOR to RFR Transition

- The DBMVOL backbone will be changed from Libor to RFR. That is, the precalibrated DBMVOL volatility objects will parametrize the short rate volatility, surface of RFR swaptions.
- Calibration targets for models using the MARGINALVOL framework (DLVDiffusion) will change from Libor to RFR options.
- Products referencing Libor (resp. CMS) rates after the Libor transition date are subject to Libor (resp. CMS) fallback modifications.

We explain the changes and test their impact on pricing and calibration in the model validation report on Libor transition [36].

### 4.9 Product Testing : Cashflow

The considered Cashflow product was valuated on 31/01/2023. The details of the deal are given in Table 77.

| | Leg 0 |
|---|---|
| Currency | EUR |
| Notional | 10000.0 |
| RollDate | 14/12/2021 |
| EndDate | 27/11/2023 |

The price of the product is the cashflow discounted at the coupon paydate:

$$PV = N * DF(T)$$

where DF denotes the discount factor and N the amount paid at time T.
The IR curve properties are given in the table below.

![Figure 157: Discount factor, zero rate and 1 day forward rate for EUR on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS-ESTER.](./Fig/3.png)

#### 4.9.1 EOD Testing

#### 4.9.1.1 Stability Tests
For the considered Cashflow product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 158: PV and greeks for shifted curves.](./Fig/4.png)

Figure 158 show the obtained PVs, Flatdeltas, and Flatgammas of the Cashflow when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 159: Trade PV for different spread shifts for Cashflow.](./Fig/5.png)

![Figure 160: Flatdelta for IR EUR for different spread shifts for Cashflow.](./Fig/6.png)

![Figure 161: Flatgamma for IR EUR for different spread shifts for Cashflow.](./Fig/7.png)

#### 4.9.1.2 Taylor Test
Figure 162 shows the PV of the Cashflow computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 162: PV of the Cashflow as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/8.png)

#### 4.9.1.3 Comparison with Other Models

Figure 163 shows the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBC model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 163: Model comparison for Cashflow.](./Fig/9.png)

#### 4.9.1.4 Manual Reproduction of Cashflow Table
When ExtraResults is set to 1, DBAnalytics shows the cashflow table that is used to calculate the PV of the trade. In the manual replication, we use the DBA function "FwdRate" and "DiscFact" to compute the forwards and the discount rates.

| Funding | RFR | ProductFunding |
|---|---|---|
| Currency | EUR | EUR |
| Type | OIS | LIBOR-3m |
| DiscountRateType | OIS-ESTER | LIBOR-3m |
| CurveID | eurstr | eur3ml |

Table 79: Cashflow manual DiscFact for Leg0.

| PayDate | DiscFact | Man DiscFact | DiscFact rel err |
|---|---|---|---|
| 0 | 20231127 | 0.974479 | 0.974479 | -3.67879e-11 |

Table 80: Cashflow cashflow for Leg0.

| # | PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
|---|---|---|---|---|---|---|
| 0 | 20231127 | 10000.0 | 0.974479 | 9744.791019 | 9744.791019 | 1.55491e-13 |

### 4.9.2 IRRBB Testing

In this section, we test the stability of the Cashflow trade as described in Subsection 4.9 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.9.2.1 Scenario Curves
Figure 164 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 164: Zero rate for Cashflow under various IRRBB scenarios.](./Fig/10.png)

##### 4.9.2.2 Stability Tests
For the considered Cashflow, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 165 shows the obtained PVs of the Cashflow in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 165: PV of Cashflow under various IRRBB scenarios.](./Fig/11.png)

### 4.9.3 CCAR Testing

In this section, we test the Cashflow trade as described in Subsection 4.9 under the CCAR 2022 scenarios and compare them with the Base scenario.

#### 4.9.3.1 Scenario Curves
Figure 166 shows the scenario curves for the underlying rate affecting the Cashflow.

![Figure 166: Rate for Cashflow under CCAR scenarios.](./Fig/12.png)

#### 4.9.3.2 Stability Tests
For the considered Cashflow, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

#### a) Stability with respect to Curve Shifts

Figure 167 show the obtained PVs, Flatdeltas, Flatgammas of the Cashflow when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 167: PV and greeks for Cashflow under CCAR scenarios.](./Fig/13.png)

#### b) Stability with respect to risk factor shifts

Figures 168-170 show the PVs and greeks of the Cashflow in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 168: Trade PV vs spreadshifts for Cashflow under CCAR scenarios.](./Fig/14.png)

![Figure 169: Flatdelta for IR EUR vs spreadshifts for Cashflow under CCAR scenarios.](./Fig/15.png)

![Figure 170: Flatgamma for IR EUR vs spreadshifts for Cashflow under CCAR scenarios.](./Fig/16.png)

#### 4.9.3.3 Taylor Approximation under CCAR
Figures 171-172 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 171: CCAR1 PV of the Cashflow as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/17.png)

![Figure 172: CCAR2 PV of the Cashflow as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/18.png)

#### 4.9.3.4 Comparison with Other Models
Figures 173-174 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

![Figure 173: Model comparison for Cashflow with applied CCAR1.](./Fig/19.png)

![Figure 174: Model comparison for Cashflow with applied CCAR2.](./Fig/20.png)

### 4.9.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the Cashflow trade as described in Subsection 4.9.

Table 81 lists the underlying risk factors of the Cashflow. In particular, we can observe that the product is sensitive to all risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 175.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|---|---|---|---|---|
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |

![Figure 175: Transition of the PV of the Cashflow in the two extreme stressed scenarios.](./Fig/21.png)

### 4.10 Product Testing : IRFundingMMFloat

The considered IRFundingMMFloat product was valuated on 31/01/2023. The details of the deal are given in Table 82.

| | Leg 0 | Leg 1 |
|---|---|---|
| Currency | EUR | EUR |
| Notional | 0.0 | 10000.0 |
| RollDate | 29/07/2016 | 29/07/2016 |
| EndDate | 01/08/2024 | 01/08/2024 |
| RateType | FIXED | LIBOR |
| Frequency | ZERO | QUARTERLY |
| EffectiveDate | 29/07/2016 | 29/07/2016 |
| Spread | 0 | 0.0128 |

The present value of each leg , PV^(i) with i = 0, 1, is calculated via

$$PV^{(i)} = \sum_{j=1}^{n(i)} PV_j^{(i)}$$

where PV_j^(i) denote the present value for each of the future paylets for Leg i.

$$PV_j^{(i)} = N_i * C_j^{(i)} * \Delta(T_{j-1}, T_j) * DF(T_j)$$

where DF denotes the discount factor, \Delta(T_{j-1}, T_j) denotes the daycount fraction and C_j^(i) denotes the sum of the rate and the spread according to Table 82 that each leg pays.

The IR curve properties are given in the table below.

![Figure 176: Discount factor, zero rate and 1 day forward rate for EUR on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS-ESTER.](./Fig/22.png)

#### 4.10.1 EOD Testing

#### 4.10.1.1 Stability Tests
For the considered IRFundingMMFloat product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 177: PV and greeks for shifted curves.](./Fig/23.png)

Figure 177 show the obtained PVs, Flatdeltas, and Flatgammas of the IRFundingMMFloat when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 178: Trade PV for different spread shifts for IRFundingMMFloat.](./Fig/24.png)

![Figure 179: Flatdelta for IR EUR for different spread shifts for IRFundingMMFloat.](./Fig/25.png)

![Figure 180: Flatgamma for IR EUR for different spread shifts for IRFundingMMFloat.](./Fig/26.png)

#### 4.10.1.2 Taylor Test
Figure 181 shows the PV of the IRFundingMMFloat computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 181: PV of the IRFundingMMFloat as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/27.png)

#### 4.10.1.3 Comparison with Other Models
Figure 182 shows the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 182: Model comparison for IRFundingMMFloat.](./Fig/28.png)

##### 4.10.1.4 Manual Reproduction of Cashflow Table
When ExtraResults is set to 1, DBAnalytics shows the cashflow table that is used to calculate the PV of the trade. In the manual replication, we use the DBA function "FwdRate" and "DiscFact" to compute the forwards and the discount rates.

| Funding | RFR | ProductFunding |
|---|---|---|
| Currency | EUR | EUR |
| Type | OIS | LIBOR |
| DiscountRateType | OIS-ESTER | TREASURY |
| CurveID | eurstr | gvd-byterm-funding-eur |

The following changes were made in the process of reproduction.

#### Table 84: IRFundingMMFloat manual DiscFact for Leg0.

| PayDate | DiscFact | Man DiscFact | DiscFact rel err |
|---|---|---|---|
| 0 | 20240801 | 0.94617 | 0.94617 | 9.72808e-12 |

Table 85: IRFundingMMFloat cashflow for Leg0.

| PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
|---|---|---|---|---|---|
| 0 | 20240801 | 10000.0 | 0.94617 | 9461.69544 | 9461.69544 | 9.72811e-12 |

#### Table 86: IRFundingMMFloat manual DiscFact for Leg1.

| PayDate | DiscFact | Man DiscFact | DiscFact rel err |
|---|---|---|---|
| 0 | 20230201 | 0.999939 | 0.999939 | 2.11610e-12 |
| 1 | 20230502 | 0.992828 | 0.992828 | 1.68191e-11 |
| 2 | 20230801 | 0.983852 | 0.983852 | 4.61569e-11 |
| 3 | 20231101 | 0.974281 | 0.974281 | 1.25882e-11 |
| 4 | 20240201 | 0.965943 | 0.965943 | -1.88206e-11 |
| 5 | 20240502 | 0.955768 | 0.955768 | -2.51278e-12 |
| 6 | 20240801 | 0.946170 | 0.946170 | 9.72808e-12 |

#### Table 87: IRFundingMMFloat manual rates for Leg1.

| SetDate | StartingTime | EndingTime | Rate | Man Rate | Rate err |
|---|---|---|---|---|---|
| 0 | 20221028 | 20221101 | 20230201 | 0.016410 | 0.016410 | 0.00000e+00 |
| 1 | 20230130 | 20230201 | 20230501 | 0.024820 | 0.024820 | 0.00000e+00 |
| 2 | 20230427 | 20230501 | 20230801 | 0.032465 | 0.032465 | 2.26082e-11 |
| 3 | 20230728 | 20230801 | 20231101 | 0.034841 | 0.034841 | -3.45638e-11 |
| 4 | 20231030 | 20231101 | 20240201 | 0.034551 | 0.034551 | -7.22727e-12 |
| 5 | 20240130 | 20240201 | 20240501 | 0.033211 | 0.033211 | 6.56880e-12 |
| 6 | 20240429 | 20240501 | 20240801 | 0.031399 | 0.031399 | -1.53096e-11 |

#### Table 88: IRFundingMMFloat coupons for Leg1.

| Notional | DayCount | Rate | Spread | Amount | Man Amount | Amount rel. err. |
|---|---|---|---|---|---|---|
| 0 | 10000.0 | 0.255556 | 0.016410 | 0.0128 | 74.647778 | 74.647778 | 1.717945e-10 |
| 1 | 10000.0 | 0.250000 | 0.024820 | 0.0128 | 94.050000 | 94.050000 | -1.662094e-11 |
| 2 | 10000.0 | 0.252778 | 0.032465 | 0.0128 | 114.419191 | 114.419191 | 4.175440e-11 |
| 3 | 10000.0 | 0.255556 | 0.034841 | 0.0128 | 121.750191 | 121.750191 | 1.613449e-10 |
| 4 | 10000.0 | 0.255556 | 0.034551 | 0.0128 | 121.007179 | 121.007179 | 1.927337e-10 |
| 5 | 10000.0 | 0.252778 | 0.033211 | 0.0128 | 116.305426 | 116.305426 | 9.042594e-11 |
| 6 | 10000.0 | 0.252778 | 0.031399 | 0.0128 | 111.725516 | 111.725516 | 7.818395e-11 |

#### Table 89: IRFundingMMFloat cashflow for Leg1.

| PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
|---|---|---|---|---|---|
| 0 | 20230201 | 74.647778 | 0.999939 | 74.643189 | 74.643189 | 1.739107e-10 |
| 1 | 20230502 | 94.050000 | 0.992828 | 93.375450 | 93.375450 | -1.862826e-15 |
| 2 | 20230801 | 114.419191 | 0.983852 | 112.571563 | 112.571563 | 8.791129e-11 |
| 3 | 20231101 | 121.750191 | 0.974281 | 118.618881 | 118.618881 | 1.739132e-10 |
| 4 | 20240201 | 121.007179 | 0.965943 | 116.886090 | 116.886090 | 1.739131e-10 |
| 5 | 20240502 | 116.305426 | 0.955768 | 111.160981 | 111.160981 | 8.791323e-11 |
| 6 | 20240801 | 111.725516 | 0.946170 | 105.711281 | 105.711281 | 8.791199e-11 |

#### 4.10.2 IRRBB Testing

In this section, we test the stability of the IRFundingMMFloat trade as described in Subsection 4.10 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.10.2.1 Scenario Curves

Figure 183 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 183: Zero rate for IRFundingMMFloat under various IRRBB scenarios.](./Fig/1.png)

##### 4.10.2.2 Stability Tests
For the considered IRFundingMMFloat, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 184 shows the obtained PVs of the IRFundingMMFloat in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 184: PV of IRFundingMMFloat under various IRRBB scenarios.](./Fig/2.png)

#### 4.10.3 CCAR Testing

In this section, we test the IRFundingMMFloat trade as described in Subsection 4.10 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.10.3.1 Scenario Curves
Figure 185 shows the scenario curves for the underlying rate affecting the IRFundingMMFloat.

![Figure 185: Rate for IRFundingMMFloat under CCAR scenarios.](./Fig/3.png)

##### 4.10.3.2 Stability Tests
For the considered IRFundingMMFloat, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

#### a) Stability with respect to Curve Shifts

Figure 186 show the obtained PVs, Flatdeltas, Flatgammas of the IRFundingMMFloat when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 186: PV and greeks for IRFundingMMFloat under CCAR scenarios.](./Fig/4.png)

#### b) Stability with respect to risk factor shifts

Figures 187-189 show the PVs and greeks of the IRFundingMMFloat in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 187: Trade PV vs spreadshifts for IRFundingMMFloat under CCAR scenarios.](./Fig/5.png)

![Figure 188: Flatdelta for IR EUR vs spreadshifts for IRFundingMMFloat under CCAR scenarios.](./Fig/6.png)

![Figure 189: Flatgamma for IR EUR vs spreadshifts for IRFundingMMFloat under CCAR scenarios.](./Fig/7.png)

##### 4.10.3.3 Taylor Approximation under CCAR
Figures 190-191 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 190: CCAR1 PV of the IRFundingMMFloat as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/8.png)

![Figure 191: CCAR2 PV of the IRFundingMMFloat as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/9.png)

##### 4.10.3.4 Comparison with Other Models
Figures 192-193 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

![Figure 192: Model comparison for IRFundingMMFloat with applied CCAR1.](./Fig/10.png)

![Figure 193: Model comparison for IRFundingMMFloat with applied CCAR2.](./Fig/11.png)

#### 4.10.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the IRFundingMMFloat trade as described in Subsection 4.10.

Table 90 lists the underlying risk factors of the IRFundingMMFloat. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 194.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|---|---|---|---|---|
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |

![Figure 194: Transition of the PV of the IRFundingMMFloat in the two extreme stressed scenarios.](./Fig/12.png)

### 4.11 Product Testing : IRSwapBasis

The considered IRSwapBasis product was valuated on 31/01/2023. The details of the deal are given in Table 91.

| | Leg 0 | Leg 1 |
|---|---|---|
| Currency | AUD | AUD |
| Notional | 10000.0 | 10000.0 |
| RollDate | 04/01/2033 | 04/01/2033 |
| EndDate | 04/01/2035 | 04/01/2035 |
| RateType | LIBOR | LIBOR |
| Frequency | SEMI | QUARTERLY |
| EffectiveDate | 04/01/2033 | 04/01/2033 |
| Spread | 0 | 0.000403 |

The present value of each leg , PV^(i) with i = 0, 1, is calculated via

$$PV^{(i)} = \sum_{j=1}^{n(i)} PV_j^{(i)}$$

where PV_j^(i) denote the present value for each of the future paylets for Leg i.

$$PV_j^{(i)} = N_i * C_j^{(i)} * \Delta(T_{j-1}, T_j) * DF(T_j)$$

where DF denotes the discount factor, \Delta(T_{j-1}, T_j) denotes the daycount fraction and C_j^(i) denotes the sum of the rate and the spread according to Table 91 that each leg pays.

The IR curve properties are given in the table below.

![Figure 195: Discount factor, zero rate and 1 day forward rate for AUD on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS.](./Fig/13.png)

#### 4.11.1 EOD Testing

##### 4.11.1.1 Stability Tests
For the considered IRSwapBasis product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 196: PV and greeks for shifted curves.](./Fig/14.png)

Figure 196 show the obtained PVs, Flatdeltas, and Flatgammas of the IRSwapBasis when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 197: Trade PV for different spread shifts for IRSwapBasis.](./Fig/15.png)

![Figure 198: Flatdelta for IR AUD for different spread shifts for IRSwapBasis.](./Fig/16.png)

![Figure 199: Flatgamma for IR AUD for different spread shifts for IRSwapBasis.](./Fig/17.png)

##### 4.11.1.2 Taylor Test
Figure 200 shows the PV of the IRSwapBasis computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 200: PV of the IRSwapBasis as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/18.png)

##### 4.11.1.3 Comparison with Other Models
Figure 201 shows the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 201: Model comparison for IRSwapBasis.](./Fig/19.png)

##### 4.11.1.4 Manual Reproduction of Cashflow Table
When ExtraResults is set to 1, DBAnalytics shows the cashflow table that is used to calculate the PV of the trade. In the manual replication, we use the DBA function "FwdRate" and "DiscFact" to compute the forwards and the discount rates.

| Funding | RFR | ProductFunding |
|---|---|---|
| Currency | AUD | AUD |
| Type | OIS | OIS |
| DiscountRateType | OIS | OIS |
| CurveID | audois | audois |

Table 93: IRSwapBasis manual DiscFact for Leg0.

| PayDate | DiscFact | Man DiscFact | DiscFact rel err |
|---|---|---|---|
| 0 | 20330704 | 0.674335 | 0.674335 | -4.06730e-11 |
| 1 | 20340104 | 0.659762 | 0.659762 | 2.41582e-11 |
| 2 | 20340704 | 0.645705 | 0.645705 | 5.49228e-11 |
| 3 | 20350104 | 0.631859 | 0.631859 | 3.53523e-13 |

Table 94: IRSwapBasis manual rates for Leg0.

| SetDate | StartingTime | EndingTime | Rate | Man Rate | Rate err |
|---|---|---|---|---|---|
| 0 | 20330104 | 20330104 | 20330704 | 0.046545 | 0.046545 | 3.33913e-11 |
| 1 | 20330704 | 20330704 | 20340104 | 0.046866 | 0.046866 | -1.28402e-11 |
| 2 | 20340104 | 20340104 | 20340704 | 0.046808 | 0.046808 | 1.44128e-11 |
| 3 | 20340704 | 20340704 | 20350104 | 0.046697 | 0.046697 | -4.50603e-11 |

Table 95: IRSwapBasis coupons for Leg0.

| Notional | DayCount | Rate | Spread | Amount | Man Amount | Amount rel. err. |
|---|---|---|---|---|---|---|
| 0 | -10000.0 | 0.49589 | 0.046545 | 0 | -230.813393 | -230.813393 | 4.68992e-11 |
| 1 | -10000.0 | 0.50411 | 0.046866 | 0 | -236.257196 | -236.257196 | -3.06565e-11 |
| 2 | -10000.0 | 0.49589 | 0.046808 | 0 | -232.118291 | -232.118291 | -5.77664e-11 |
| 3 | -10000.0 | 0.50411 | 0.046697 | 0 | -235.406073 | -235.406073 | -1.09751e-11 |

Table 96: IRSwapBasis cashflow for Leg0.

| PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
|---|---|---|---|---|---|
| 0 | 20330704 | -230.813393 | 0.674335 | -155.645549 | -155.645549 | 6.22629e-12 |
| 1 | 20340104 | -236.257196 | 0.659762 | -155.873534 | -155.873534 | -6.49817e-12 |
| 2 | 20340704 | -232.118291 | 0.645705 | -149.879946 | -149.879946 | -2.84368e-12 |
| 3 | 20350104 | -235.406073 | 0.631859 | -148.743405 | -148.743405 | -1.06216e-11 |

Table 97: IRSwapBasis manual DiscFact for Leg1.

| PayDate | DiscFact | Man DiscFact | DiscFact rel err |
|---|---|---|---|
| 0 | 20330404 | 0.681594 | 0.681594 | 6.68754e-11 |
| 1 | 20330704 | 0.674335 | 0.674335 | -4.06730e-11 |
| 2 | 20331004 | 0.667024 | 0.667024 | -7.21216e-11 |
| 3 | 20340104 | 0.659762 | 0.659762 | 2.41582e-11 |
| 4 | 20340404 | 0.652728 | 0.652728 | 4.39743e-11 |
| 5 | 20340704 | 0.645705 | 0.645705 | 5.49228e-11 |
| 6 | 20341004 | 0.638716 | 0.638716 | 4.29047e-11 |
| 7 | 20350104 | 0.631859 | 0.631859 | 3.53523e-13 |

Table 98: IRSwapBasis manual rates for Leg1.

| SetDate | StartingTime | EndingTime | Rate | Man Rate | Rate err |
|---|---|---|---|---|---|
| 0 | 20330104 | 20330104 | 20330404 | 0.045873 | 0.045873 | 3.58863e-11 |
| 1 | 20330404 | 20330404 | 20330704 | 0.046193 | 0.046193 | -4.53780e-11 |
| 2 | 20330704 | 20330704 | 20331004 | 0.046347 | 0.046347 | 4.68663e-11 |
| 3 | 20331004 | 20331004 | 20340104 | 0.046320 | 0.046320 | 1.18208e-11 |
| 4 | 20340104 | 20340104 | 20340404 | 0.046221 | 0.046221 | -2.94646e-11 |
| 5 | 20340404 | 20340404 | 20340704 | 0.046277 | 0.046277 | -2.76832e-11 |
| 6 | 20340704 | 20340704 | 20341004 | 0.046207 | 0.046207 | -3.13540e-13 |
| 7 | 20341004 | 20341004 | 20350104 | 0.045990 | 0.045990 | 3.06623e-11 |

Table 99: IRSwapBasis coupons for Leg1.

| Notional | DayCount | Rate | Spread | Amount | Man Amount | Amount rel. err. |
|---|---|---|---|---|---|---|
| 0 | 10000.0 | 0.246575 | 0.045873 | 0.000403 | 114.104388 | 114.104388 | -7.30018e-11 |
| 1 | 10000.0 | 0.249315 | 0.046193 | 0.000403 | 116.170841 | 116.170841 | 3.68820e-11 |
| 2 | 10000.0 | 0.252055 | 0.046347 | 0.000403 | 117.835446 | 117.835446 | 6.69623e-11 |
| 3 | 10000.0 | 0.252055 | 0.046320 | 0.000403 | 117.767955 | 117.767955 | -1.65460e-12 |
| 4 | 10000.0 | 0.246575 | 0.046221 | 0.000403 | 114.962894 | 114.962894 | -6.96742e-11 |
| 5 | 10000.0 | 0.249315 | 0.046277 | 0.000403 | 116.379938 | 116.379938 | -5.58705e-11 |
| 6 | 10000.0 | 0.252055 | 0.046207 | 0.000403 | 117.483886 | 117.483886 | -4.81960e-11 |
| 7 | 10000.0 | 0.252055 | 0.045990 | 0.000403 | 116.935288 | 116.935288 | -1.53124e-11 |

Table 100: IRSwapBasis cashflow for Leg1.

| PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
|---|---|---|---|---|---|
| 0 | 20330404 | 114.104388 | 0.681594 | 77.772850 | 77.772850 | -6.12650e-12 |
| 1 | 20330704 | 116.170841 | 0.674335 | 78.338064 | 78.338064 | -3.79098e-12 |
| 2 | 20331004 | 117.835446 | 0.667024 | 78.590016 | 78.590016 | -5.15936e-12 |
| 3 | 20340104 | 117.767955 | 0.659762 | 77.698828 | 77.698828 | 2.25036e-11 |
| 4 | 20340404 | 114.962894 | 0.652728 | 75.039470 | 75.039470 | -2.56997e-11 |
| 5 | 20340704 | 116.379938 | 0.645705 | 75.147110 | 75.147110 | -9.47615e-13 |
| 6 | 20341004 | 117.483886 | 0.638716 | 75.038892 | 75.038892 | -5.29127e-12 |
| 7 | 20350104 | 116.935288 | 0.631859 | 73.886594 | 73.886594 | -1.49589e-11 |

#### 4.11.2 IRRBB Testing

In this section, we test the stability of the IRSwapBasis trade as described in Subsection 4.11 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.11.2.1 Scenario Curves
Figure 202 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 202: Zero rate for IRSwapBasis under various IRRBB scenarios.](./Fig/20.png)

##### 4.11.2.2 Stability Tests
For the considered IRSwapBasis, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 203 shows the obtained PVs of the IRSwapBasis in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 203: PV of IRSwapBasis under various IRRBB scenarios.](./Fig/21.png)

#### 4.11.3 CCAR Testing

In this section, we test the IRSwapBasis trade as described in Subsection 4.11 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.11.3.1 Scenario Curves
Figure 204 shows the scenario curves for the underlying rate affecting the IRSwapBasis.

![Figure 204: Rate for IRSwapBasis under CCAR scenarios.](./Fig/22.png)

##### 4.11.3.2 Stability Tests
For the considered IRSwapBasis, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

#### a) Stability with respect to Curve Shifts

Figure 205 show the obtained PVs, Flatdeltas, Flatgammas of the IRSwapBasis when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 205: PV and greeks for IRSwapBasis under CCAR scenarios.](./Fig/23.png)

#### b) Stability with respect to risk factor shifts

Figures 206-208 show the PVs and greeks of the IRSwapBasis in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 206: Trade PV vs spreadshifts for IRSwapBasis under CCAR scenarios.](./Fig/24.png)

### 4.11.3 Taylor Approximation under CCAR

Figures 209-210 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 209: CCAR1 PV of the IRSwapBasis as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/209.png)

![Figure 210: CCAR2 PV of the IRSwapBasis as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/210.png)

#### 4.11.3.4 Comparison with Other Models

Figures 211-212 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

![Figure 211: Model comparison for IRSwapBasis with applied CCAR1.](./Fig/211.png)

![Figure 212: Model comparison for IRSwapBasis with applied CCAR2.](./Fig/212.png)

### 4.12 Product Testing : IRSwapFixFlt

The considered IRSwapFixFlt product was valuated on 31/01/2023. The details of the deal are given in Table 102.

| | Leg 0 | Leg 1 |
| --- | --- | --- |
| Currency | EUR | EUR |
| Notional | -9000.0 | 10000.0 |
| RollDate | 17/12/2015 | 17/12/2015 |
| EndDate | 18/12/2023 | 18/12/2023 |
| Rate Type | FIXED | LIBOR |
| Frequency | ZERO | QUARTERLY |
| EffectiveDate | 17/12/2015 | 17/12/2015 |
| Spread | 0 | 0.0034 |

Table 102: Details of the analyzed IRSwapFixFlt product.

The present value of each leg, PV$^{(i)}$ with $i = 0, 1$, is calculated via

$$PV^{(i)} = \sum_{j=1}^{n(i)} PV_j^{(i)}$$

where $PV_j^{(i)}$ denote the present value for each of the future paylets for Leg $i$.

$$PV_j^{(i)} = N_i * C_j^{(i)} * \Delta(T_{j-1}, T_j) * DF(T_j)$$

where DF denotes the discount factor, $\Delta(T_{j-1}, T_j)$ denotes the daycount fraction and $C_j^{(i)}$ denotes the sum of the rate and the spread according to Table 102 that each leg pays.

The IR curve properties are given in the table below.

![Figure 214: Discount factor, zero rate and 1 day forward rate for EUR on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS-ESTER.](./Fig/214.png)

#### 4.12.1 EOD Testing

##### 4.12.1.1 Stability Tests

For the considered IRSwapFixFlt product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 215: PV and greeks for shifted curves.](./Fig/215.png)

Figure 215 show the obtained PVs, Flatdeltas, and Flatgammas of the IRSwapFixFlt when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 216: Trade PV for different spread shifts for IRSwapFixFlt.](./Fig/216.png)

![Figure 217: Flatdelta for IR EUR for different spread shifts for IRSwapFixFlt.](./Fig/217.png)

![Figure 218: Flatgamma for IR EUR for different spread shifts for IRSwapFixFlt.](./Fig/218.png)

##### 4.12.1.2 Taylor Test

Figure 219 shows the PV of the IRSwapFixFlt computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 219: PV of the IRSwapFixFlt as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/219.png)

##### 4.12.1.3 Comparison with Other Models

Figures 230-231 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 230: Model comparison for IRSwapFixFlt with applied CCAR1.](./Fig/230.png)

![Figure 231: Model comparison for IRSwapFixFlt with applied CCAR2.](./Fig/231.png)

##### 4.12.1.4 Manual Reproduction of Cashflow Table

When ExtraResults is set to 1, DBAnalytics shows the cashflow table that is used to calculate the PV of the trade. In the manual replication, we use the DBA function "FwdRate" and "DiscFact" to compute the forwards and the discount rates.

Table 103: Funding information.

| Funding | RFR | ProductFunding |
| --- | --- | --- |
| Currency | EUR | EUR |
| Type | OIS | LIBOR-3m |
| DiscountRateType | OIS-ESTER | LIBOR-3m |
| CurveID | euestr | eur3ml |

The following changes were made in the process of reproduction. The HolidayCities used in DateAdd and FwdRate is set to ZZZ. Instead of AccrualBegin the SetDate + RateStartingTime is used for the start of accrual. Instead of AccrualEnd the SetDate + RateStartingTime + RateTerm is used for the end of accrual.

Table 104: IRSwapFixFlt manual DiscFact for Leg1.

| | PayDate | DiscFact | Man DiscFact | DiscFact rel err |
| --- | --- | --- | --- | --- |
| 0 | 20230320 | 0.997099 | 0.997099 | 2.504613e-11 |
| 1 | 20230619 | 0.989646 | 0.989646 | -4.077290e-11 |
| 2 | 20230918 | 0.981120 | 0.981120 | -4.464021e-11 |
| 3 | 20231218 | 0.972510 | 0.972510 | -4.191350e-11 |

Table 105: IRSwapFixFlt manual rates for Leg1.

| | SetDate | StartingTime | EndingTime | Rate | Man Rate | Rate err |
| --- | --- | --- | --- | --- | --- | --- |
| 0 | 20221215 | 20221219 | 20230320 | 0.020620 | 0.020620 | 0.000000e+00 |
| 1 | 20230316 | 20230320 | 20230620 | 0.029812 | 0.029812 | -1.530073e-11 |
| 2 | 20230615 | 20230619 | 20230919 | 0.034379 | 0.034379 | -1.184387e-11 |
| 3 | 20230914 | 20230918 | 20231218 | 0.035027 | 0.035027 | 1.960591e-12 |

Table 106: IRSwapFixFlt coupons for Leg1.

| | Notional | DayCount | Rate | Spread | Amount | Man Amount | Amount rel. err. |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0 | 9000.0 | 0.252778 | 0.020620 | 0.0092 | 67.840500 | 67.840500 | 6.286539e-11 |
| 1 | 9000.0 | 0.252778 | 0.029812 | 0.0092 | 88.751217 | 88.751217 | 1.296845e-10 |
| 2 | 9000.0 | 0.252778 | 0.034379 | 0.0092 | 99.141868 | 99.141868 | 1.325526e-10 |
| 3 | 9000.0 | 0.252778 | 0.035027 | 0.0092 | 100.616950 | 100.616950 | 1.298249e-10 |

Table 107: IRSwapFixFlt cashflow for Leg1.

| | Pay Date | Amount | DiscFact | PvLet | Man. PvLet | PvLet rel. err. |
| --- | --- | --- | --- | --- | --- | --- |
| 0 | 20230320 | 67.840500 | 0.997099 | 67.643679 | 67.643679 | 8.791153e-11 |
| 1 | 20230619 | 88.751217 | 0.989646 | 87.832259 | 87.832259 | 8.791153e-11 |
| 2 | 20230918 | 99.141868 | 0.981120 | 97.270093 | 97.270093 | 8.791232e-11 |
| 3 | 20231218 | 100.616950 | 0.972510 | 97.850944 | 97.850944 | 8.791141e-11 |

#### 4.12.2 IRRBB Testing

In this section, we test the stability of the IRSwapFixFlt trade as described in Subsection 4.12 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.12.2.1 Scenario Curves

Figure 221 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 221: Zero rate for IRSwapFixFlt under various IRRBB scenarios.](./Fig/221.png)

##### 4.12.2.2 Stability Tests

For the considered IRSwapFixFlt, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 222 shows the obtained PVs of the IRSwapFixFlt in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 222: PV of IRSwapFixFlt under various IRRBB scenarios.](./Fig/222.png)

#### 4.12.3 CCAR Testing

In this section, we test the IRSwapFixFlt trade as described in Subsection 4.12 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.12.3.1 Scenario Curves

Figure 223 shows the scenario curves for the underlying rate affecting the IRSwapFixFlt.

![Figure 223: Rate for IRSwapFixFlt under CCAR scenarios.](./Fig/223.png)

##### 4.12.3.2 Stability Tests

For the considered IRSwapFixFlt, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

##### a) Stability with respect to Curve Shifts

Figure 224 show the obtained PVs, Flatdeltas, Flatgammas of the IRSwapFixFlt when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 224: PV and greeks for IRSwapFixFlt under CCAR scenarios.](./Fig/224.png)

##### b) Stability with respect to risk factor shifts

Figures 225-227 show the PVs and greeks of the IRSwapFixFlt in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 225: Trade PV vs spreadshifts for IRSwapFixFlt under CCAR scenarios.](./Fig/225.png)

![Figure 226: Flatdelta for IR EUR vs spreadshifts for IRSwapFixFlt under CCAR scenarios.](./Fig/226.png)

![Figure 227: Flatgamma for IR EUR vs spreadshifts for IRSwapFixFlt under CCAR scenarios.](./Fig/227.png)

##### 4.12.3.3 Taylor Approximation under CCAR

Figures 228-229 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 228: CCAR1 PV of the IRSwapFixFlt as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/228.png)

![Figure 229: CCAR2 PV of the IRSwapFixFlt as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/229.png)

##### 4.12.3.4 Comparison with Other Models

Figures 230-231 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

#### 4.12.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the IRSwapFixFlt trade as described in Subsection 4.12.

Table 108 lists the underlying risk factors of the IRSwapFixFlt. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 232.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |

Table 108: Risk factors for the IRSwapFixFlt.

![Figure 232: Transition of the PV of the IRSwapFixFlt in the two extreme stressed scenarios.](./Fig/232.png)

### 4.13 Product Testing : OISwap

The considered OISwap product was valuated on 31/01/2023. The details of the deal are given in Table 109.

| | Leg 0 | Leg 1 |
| --- | --- | --- |
| Currency | USD | USD |
| Notional | 10000.0 | -10000.0 |
| RollDate | 15/02/2023 | 15/02/2023 |
| EndDate | 15/02/2031 | 15/02/2031 |
| Rate Type | FIXED | SOFR |
| Frequency | ANNUALLY | ANNUALLY |
| EffectiveDate | 15/02/2022 | 15/02/2022 |
| Spread | 0.018 | 0 |

Table 109: Details of the analyzed OISwap product.

The present value of each leg, PV$^{(i)}$ with $i = 0, 1$, is calculated via

$$PV^{(i)} = \sum_{j=1}^{n(i)} PV_j^{(i)}$$

where $PV_j^{(i)}$ denote the present value for each of the future paylets for Leg $i$.

$$PV_j^{(i)} = N_i * C_j^{(i)} * \Delta(T_{j-1}, T_j) * DF(T_j)$$

where DF denotes the discount factor, $\Delta(T_{j-1}, T_j)$ denotes the daycount fraction and $C_j^{(i)}$ denotes the sum of the rate and the spread according to Table 109 that each leg pays.

The IR curve properties are given in the table below.

![Figure 233: Discount factor, zero rate and 1 day forward rate for USD on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS-SOFR.](./Fig/233.png)

#### 4.13.1 EOD Testing

##### 4.13.1.1 Stability Tests

For the considered OISwap product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 234: PV and greeks for shifted curves.](./Fig/234.png)

Figure 234 show the obtained PVs, Flatdeltas, and Flatgammas of the OISwap when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 235: Trade PV for different spread shifts for OISwap.](./Fig/235.png)

![Figure 236: Flatdelta for IR USD for different spread shifts for OISwap.](./Fig/236.png)

![Figure 237: Flatgamma for IR USD for different spread shifts for OISwap.](./Fig/237.png)

##### 4.13.1.2 Taylor Test

Figure 238 shows the PV of the OISwap computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 238: PV of the OISwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/238.png)

##### 4.13.1.3 Comparison with Other Models

Figure 239 shows the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 239: Model comparison for OISwap.](./Fig/239.png)

##### 4.13.1.4 Manual Reproduction of Cashflow Table

When ExtraResults is set to 1, DBAnalytics shows the cashflow table that is used to calculate the PV of the trade. In the manual replication, we use the DBA function "FwdRate" and "DiscFact" to compute the forwards and the discount rates.

Table 110: Funding information.

| Funding | RFR | ProductFunding |
| --- | --- | --- |
| Currency | USD | USD |
| Type | OIS | OIS |
| DiscountRateType | OIS-SOFR | OIS-SOFR |
| CurveID | usdsofr | usdsofr |

Table 111: OISwap manual DiscFact for Leg0.

| | PayDate | DiscFact | Man DiscFact | DiscFact rel err |
| --- | --- | --- | --- | --- |
| 0 | 20230217 | 0.997883 | 0.997883 | 4.852360e-11 |
| 1 | 20240220 | 0.951056 | 0.951056 | 2.539751e-11 |
| 2 | 20250220 | 0.917857 | 0.917857 | 1.151086e-11 |
| 3 | 20260219 | 0.892002 | 0.892002 | 5.511261e-11 |
| 4 | 20270218 | 0.867315 | 0.867315 | 3.110336e-11 |
| 5 | 20280217 | 0.843128 | 0.843128 | -2.765615e-11 |
| 6 | 20290220 | 0.818897 | 0.818897 | -5.825808e-12 |
| 7 | 20300220 | 0.795257 | 0.795257 | 4.523626e-11 |
| 8 | 20310220 | 0.772008 | 0.772008 | 3.613004e-11 |

Table 112: OISwap cashflow for Leg0.

| | PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
| --- | --- | --- | --- | --- | --- | --- |
| 0 | 20230217 | 182.5 | 0.997883 | 182.113567 | 182.113567 | 4.652370e-11 |
| 1 | 20240220 | 182.5 | 0.951056 | 173.567719 | 173.567719 | 2.539746e-11 |
| 2 | 20250220 | 184.5 | 0.917857 | 169.344604 | 169.344604 | 1.151087e-11 |
| 3 | 20260219 | 182.0 | 0.892002 | 162.344374 | 162.344374 | 5.511272e-11 |
| 4 | 20270218 | 182.0 | 0.867315 | 157.851404 | 157.851404 | 3.110335e-11 |
| 5 | 20280217 | 182.0 | 0.843128 | 153.449342 | 153.449342 | -2.76561e-11 |
| 6 | 20290220 | 183.0 | 0.818897 | 149.858241 | 149.858241 | -5.82589e-12 |
| 7 | 20300220 | 182.5 | 0.795257 | 145.134364 | 145.134364 | 4.523621e-11 |
| 8 | 20310220 | 184.0 | 0.772008 | 142.049511 | 142.049511 | 3.613001e-11 |

Table 113: OISwap manual DiscFact for Leg1.

| | PayDate | DiscFact | Man DiscFact | DiscFact rel err |
| --- | --- | --- | --- | --- |
| 0 | 20230217 | 0.997883 | 0.997883 | 4.852360e-11 |
| 1 | 20240220 | 0.951056 | 0.951056 | 2.539751e-11 |
| 2 | 20250220 | 0.917857 | 0.917857 | 1.151086e-11 |
| 3 | 20260219 | 0.892002 | 0.892002 | 5.511261e-11 |
| 4 | 20270218 | 0.867315 | 0.867315 | 3.110336e-11 |
| 5 | 20280217 | 0.843128 | 0.843128 | -2.765615e-11 |
| 6 | 20290220 | 0.818897 | 0.818897 | -5.825808e-12 |
| 7 | 20300220 | 0.795257 | 0.795257 | 4.523626e-11 |
| 8 | 20310220 | 0.772008 | 0.772008 | 3.613004e-11 |

Table 114: OISwap manual rates for Leg1.

| | SetDate | StartingTime | EndingTime | Rate | Man Rate | Rate err |
| --- | --- | --- | --- | --- | --- | --- |
| 1 | 20230215 | 20230215 | 20240215 | 0.048192 | 0.048192 | -4.896406e-11 |
| 2 | 20240215 | 20240215 | 20250218 | 0.035736 | 0.035736 | -1.450205e-11 |
| 3 | 20250218 | 20250218 | 20260217 | 0.028679 | 0.028679 | 1.675018e-11 |
| 4 | 20260217 | 20260217 | 20270216 | 0.028149 | 0.028149 | 7.067388e-12 |
| 5 | 20270216 | 20270216 | 20280215 | 0.028370 | 0.028370 | -1.759633e-11 |
| 6 | 20280215 | 20280215 | 20290215 | 0.028860 | 0.028860 | 9.635844e-12 |
| 7 | 20290215 | 20290215 | 20300215 | 0.029314 | 0.029314 | 4.170761e-11 |
| 8 | 20300215 | 20300215 | 20310218 | 0.029700 | 0.029700 | 3.297889e-11 |

Table 115: OISwap coupons for Leg1.

| | Notional | DayCount | Rate | Spread | Amount | Man Amount | Amount rel. err. |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1 | -10000.0 | 1.013889 | 0.048192 | 0 | -488.617476 | -488.617476 | -2.539249e-11 |
| 2 | -10000.0 | 1.025000 | 0.035736 | 0 | -366.291172 | -366.291172 | -1.152414e-11 |
| 3 | -10000.0 | 1.011111 | 0.028679 | 0 | -289.980562 | -289.980562 | -5.512397e-11 |
| 4 | -10000.0 | 1.011111 | 0.028149 | 0 | -284.621540 | -284.621540 | -3.106040e-11 |
| 5 | -10000.0 | 1.011111 | 0.028370 | 0 | -286.853364 | -286.853364 | 2.764300e-11 |
| 6 | -10000.0 | 1.016667 | 0.028860 | 0 | -293.408657 | -293.408657 | 5.868997e-12 |
| 7 | -10000.0 | 1.013889 | 0.029314 | 0 | -297.216057 | -297.216057 | -4.522174e-11 |
| 8 | -10000.0 | 1.022222 | 0.029700 | 0 | -303.600712 | -303.600712 | -3.609081e-11 |

Table 116: OISwap cashflow for Leg1.

| | PayDate | Amount | DiscFact | PvLet | Man PvLet | PvLet rel. err. |
| --- | --- | --- | --- | --- | --- | --- |
| 1 | 20240220 | -488.617476 | 0.951056 | -464.702580 | -464.702580 | 5.015208e-15 |
| 2 | 20250220 | -366.291172 | 0.917857 | -336.202891 | -336.202891 | -1.335691e-14 |
| 3 | 20260219 | -289.980562 | 0.892002 | -258.663257 | -258.663257 | -1.142744e-14 |
| 4 | 20270218 | -284.621540 | 0.867315 | -246.856646 | -246.856646 | 4.234516e-14 |
| 5 | 20280217 | -286.853364 | 0.843128 | -241.854175 | -241.854175 | -1.327930e-14 |
| 6 | 20290220 | -293.408657 | 0.818897 | -240.271614 | -240.271614 | 4.305753e-14 |
| 7 | 20300220 | -297.216057 | 0.795257 | -236.363121 | -236.363121 | 1.442951e-14 |
| 8 | 20310220 | -303.600712 | 0.772008 | -234.382243 | -234.382243 | 3.928809e-14 |

#### 4.13.2 IRRBB Testing

In this section, we test the stability of the OISwap trade as described in Subsection 4.13 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.13.2.1 Scenario Curves

Figure 240 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 240: Zero rate for OISwap under various IRRBB scenarios.](./Fig/240.png)

##### 4.13.2.2 Stability Tests

For the considered OISwap, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 241 shows the obtained PVs of the OISwap in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 241: PV of OISwap under various IRRBB scenarios.](./Fig/241.png)

#### 4.13.3 CCAR Testing

In this section, we test the OISwap trade as described in Subsection 4.13 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.13.3.1 Scenario Curves

Figure 242 shows the scenario curves for the underlying rate affecting the OISwap.

![Figure 242: Rate for OISwap under CCAR scenarios.](./Fig/242.png)

##### 4.13.3.2 Stability Tests

For the considered OISwap, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

##### a) Stability with respect to Curve Shifts

Figure 243 show the obtained PVs, Flatdeltas, Flatgammas of the OISwap when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 243: PV and greeks for OISwap under CCAR scenarios.](./Fig/243.png)

##### b) Stability with respect to risk factor shifts

Figures 244-246 show the PVs and greeks of the OISwap in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 244: Trade PV vs spreadshifts for OISwap under CCAR scenarios.](./Fig/244.png)

![Figure 245: Flatdelta for IR USD vs spreadshifts for OISwap under CCAR scenarios.](./Fig/245.png)

![Figure 246: Flatgamma for IR USD vs spreadshifts for OISwap under CCAR scenarios.](./Fig/246.png)

##### 4.13.3.3 Taylor Approximation under CCAR

Figures 247-248 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 247: CCAR1 PV of the OISwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/247.png)

![Figure 248: CCAR2 PV of the OISwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/248.png)

##### 4.13.3.4 Comparison with Other Models

Figures 249-250 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

![Figure 249: Model comparison for OISwap with applied CCAR1.](./Fig/249.png)

![Figure 250: Model comparison for OISwap with applied CCAR2.](./Fig/250.png)

#### 4.13.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the OISwap trade as described in Subsection 4.13.

Table 117 lists the underlying risk factors of the OISwap. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 251.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | USD | USD | SWAP | YES |
| IRCURVE | USD | USD | DISCOUNTSPREAD | YES |

Table 117: Risk factors for the OISwap.

![Figure 251: Transition of the PV of the OISwap in the two extreme stressed scenarios.](./Fig/251.png)

### 4.14 Product Testing : IRFuture

The considered IRFuture product was valuated on 31/01/2023. The details of the deal are given in Table 118.

| | Leg 0 |
| --- | --- |
| Currency | USD |
| Notional | -10000.0 |
| RateType | LIBOR-CURVE |
| SettleDate | 20/06/2023 |
| Term | 3M |
| ExerciseStart | 20/09/2023 |
| ExerciseEnd | 20/09/2023 |

Table 118-119: Details of the analyzed IRFuture product.

An IRFuture is a future contract where an interest rate for a specified deposit amount is locked in for a future date. The holder is not required to place the designated amount of deposit where the contract is cash settled; indeed any net change in the value of the contract are settling in cash on a daily basis.

The PV is calculated via PV = (1 - r) × N where r and N are the rate and the notional specified in Table 118.

The IR curve properties are given in the table below.

![Figure 252: Discount factor, zero rate and 1 day forward rate for USD on 31/01/2023. Manual rate was calculated from the DiscFact function. The OIS curve type is OIS-SOFR.](./Fig/252.png)

#### 4.14.1 EOD Testing

##### 4.14.1.1 Stability Tests

For the considered IRFuture product, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

![Figure 253: PV and greeks for shifted curves.](./Fig/253.png)

Figure 253 show the obtained PVs, Flatdeltas, and Flatgammas of the IRFuture when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

Figure 254: Trade PV for different spread shifts for IRFuture.

Figure 255: Flatdelta for IR USD for different spread shifts for IRFuture.

Figure 256: Flatgamma for IR USD for different spread shifts for IRFuture.

##### 4.14.1.2 Taylor Test

Figure 257 shows the PV of the IRFuture computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

#### 4.14.2.1 Scenario Curves

Figure 259 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 259: Zero rate for IRFuture under various IRRBB scenarios.](./Fig/259.png)

##### 4.14.2.2 Stability Tests

For the considered IRFuture, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. We split the IRRBB scenarios into meaningful groups for better clarity.

Figure 260 shows the obtained PVs of the IRFuture in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 260: PV of IRFuture under various IRRBB scenarios.](./Fig/260.png)

#### 4.14.3 CCAR Testing

In this section, we test the IRFuture trade as described in Subsection 4.14 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.14.3.1 Scenario Curves

Figure 261 shows the scenario curves for the underlying rate affecting the IRFuture.

![Figure 261: Rate for IRFuture under CCAR scenarios.](./Fig/261.png)

##### 4.14.3.2 Stability Tests

For the considered IRFuture, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

##### a) Stability with respect to Curve Shifts

Figure 262 show the obtained PVs, Flatdeltas, Flatgammas of the IRFuture when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 262: PV and greeks for IRFuture under CCAR scenarios.](./Fig/262.png)

##### b) Stability with respect to risk factor shifts

Figures 263-265 show the PVs and greeks of the IRFuture in the Base, CCAR1 and CCAR2 scenarios when the relevant spreads are shifted.

![Figure 263: Trade PV vs spreadshifts for IRFuture under CCAR scenarios.](./Fig/263.png)

![Figure 264: Flatdelta for IR USD vs spreadshifts for IRFuture under CCAR scenarios.](./Fig/264.png)

![Figure 265: Flatgamma for IR USD vs spreadshifts for IRFuture under CCAR scenarios.](./Fig/265.png)

##### 4.14.3.3 Taylor Approximation under CCAR

Figures 266-267 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR scenarios.

![Figure 266: CCAR1 PV of the IRFuture as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/266.png)

![Figure 267: CCAR2 PV of the IRFuture as a function of curve shifts when computed by the DBA pricing formula and the Taylor (linear and quadratic) approximations.](./Fig/267.png)

##### 4.14.3.4 Comparison with Other Models

Figures 268-269 show the PV, Flatdelta and Flatgamma as a function of curve shifts when calculated with other models.

![Figure 268: Model comparison for IRFuture with applied CCAR1.](./Fig/268.png)

![Figure 269: Model comparison for IRFuture with applied CCAR2.](./Fig/269.png)

#### 4.14.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the IRFuture trade as described in Subsection 4.14.

Table 119 lists the underlying risk factors of the IRFuture. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 270.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | USD | USD | SWAP | YES |

Table 119: Risk factors for the IRFuture.

![Figure 270: Transition of the PV of the IRFuture in the two extreme stressed scenarios.](./Fig/270.png)

### 4.15 Product Testing : FundMMIdx_Single

A FundMMIdx_Single product is a long or short position in shares of a fund which aims to replicate the performance of a decomposed money market index where the index and constituents are all of the same currency.

The payoff of this product is:

$$PV = N * DF_{OIS}(T_f) * Coupon \tag{56}$$

Whereas $Coupon$ is calculated as ratio of cash values of Money Market Index : SONI at two different dates, i.e.

$$Coupon = \frac{I(T_1)}{I(T_0)}, I(T_2) = 1 \tag{57}$$

then above equation equivalent to

$$Coupon = I(T_1) = \frac{M_0}{DF_{OIS}(T_1)} \tag{58}$$

whereas $M_0$ is the Spot value of index at Valuation Date i.e. 183.2036. Then 56 reduces to

$$PV = N * M_0 * \frac{DFors(T_L)}{DFors(T_V)} \tag{59}$$

Presented below is the index values of SONI as a function of time.

## SONI (GBP) Index Values

![Figure 271: Implied Cash Values of Index as function of time.](./Fig/1.png)

Following are the details about the dates.

|              |  Log 1     |
|--------------|------------|
| SetDate($T_2$)       | 19/02/2025 |
| LastSetDate($T_1$)   | 04/01/2027 |
| EndDate($T_L$)       | 04/01/2028 |
| Valuation Date($T_V$) | 07/02/2019 |

Table 120: Rolldate, EffectiveDate and EndDate for each of the legs in the swap.

The valuation date is 7th February, 2019. Notional is rescaled to 10000 and denominated in GBP.

#### 4.15.1 EOD Testing

##### 4.15.1.1 Cashflow Table and Manual Replication

Here we present the relevant cashflow of the trade and manual, DBA calculations of the PV of the trade.

| - | T1 | Coupon-DBA | Coupon-Man | PV-DBA | PV-Man | PV Diff. |
|---|---|------------|------------|--------|--------|----------|
| 4th Jan, 2027 | 198.987 | 198.987 | 1.808E6 | 1.808E6 | 0 |

Table 121: Manual and DBA calculated PV of the FundMMldx_Single trade. It can be seen that number are in excellent agreement with each other.

##### 4.15.1.2 Stability Tests For the considered FundMMldx_Single, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 272-274 show the obtained PVs, Flatdeltas, and Flatgammas of the FundMMldx_Single when the underlying IR curve is shifted, respectively. Indeed the fixed amount to is higher than the OIS rate that is paid by the first leg. By shifting the IR curve, the discount factor decreases thus the present value decreases. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 272: PV of the FundMMldx_Single as a function of curve shifts.](./Fig/2-1.png)

![Figure 273: Flatdelta of the FundMMldx_Single as a function of curve shifts.](./Fig/2-2.png)

![Figure 274: Flatgamma of the FundMMldx_Single as a function of curve shifts.](./Fig/3.png)

##### 4.15.1.3 Taylor Test Figure 549 shows the PV of the FundMMldx_Single computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 275: PV of the FundMMldx_Single as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/3-2.png)

##### 4.15.1.4 Comparison with Other Models Figures 276-278 shows the PV, Flatdelta and FlatGamma differences as a function of curve shifts when calculated with other available models and compared with the DBSMC model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 276: PV of the FundMMldx_Single as a function of curve shifts.](./Fig/4-1.png)

![Figure 277: Flatdelta of the FundMMldx_Single as a function of curve shifts.](./Fig/4-2.png)

![Figure 278: Flatgamma of the FundMMldx_Single as a function of curve shifts.](./Fig/4-3.png)

#### 4.15.2 CCAR Testing

In this section, we test the FundMMldx_Single trade as described in Subsection 4.15 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.15.2.1 Scenario Curves Figure 279 shows the scenario curves for the underlying rate affecting the FundMMldx_Single trade.

![Figure 279: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/5.png)

##### 4.15.2.2 Stability Tests For the considered FundMMldx_Single trade, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

a) Stability with respect to Curve Shifts

Figures 280, 281 and 282 show the obtained NetValues, Flatdeltas and Flatgammas of the FundMMldx_Single when the underlying YieldCurve is shifted, respectively. In particular, we can observe that the NetValues, Flatdelta and Flatgamma profiles change smoothly under the considered shifts in all scenarios, as expected.

![Figure 280: NetValue of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5-1.png)

![Figure 281: FLATDELTA of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5-2.png)

![Figure 282: FLATGAMMA of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/6-1.png)

##### 4.15.2.3 Taylor Approximation under CCAR Eventually, Figures 283 and 284 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 283: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/6-2.png)

![Figure 284: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/6-3.png)

##### 4.15.2.4 Comparison with Other Models Figures 285-286, Figures 287-288 and Figures 289-290 show the PV, Flatdelta and FlatGamma differences respectively as a function of curve shifts when calculated with other model, namely DBX, and compared with the DBSMC model.

![Figure 285: NetValue difference to the DBSMC Model of the FundMMldx_Single as a function of yieldcurve shifts for the CCAR1 scenario under DBX model.](./Fig/7-1.png)

![Figure 286: NetValue difference to the DBSMC Model of the FundMMldx_Single as a function of yieldcurve shifts for the CCAR2 scenario under DBX model.](./Fig/7-2.png)

![Figure 287: FLATDELTA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR1 scenario under DBX model.](./Fig/7-3.png)

![Figure 288: FLATDELTA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR2 scenario under DBX model.](./Fig/7-4.png)

![Figure 289: FLATGAMMA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR1 scenario under DBX model.](./Fig/8-1.png)

![Figure 290: FLATGAMMA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR2 scenario under DBX model.](./Fig/8-2.png)

#### 4.15.3 IRRBB Testing

In this section, we test the FundMMldx_Single trade as described in Subsection 4.15 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.15.3.1 Scenario Curves Figure 291 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 291: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/8-3.png)

##### 4.15.3.2 Stability Tests

For the considered FundMMldx_Single, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that we plot all scenario curves in a single plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 292-297 show the obtained PVs of the FundMMldx_Single in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 292: PV of the FundMMldx_Single under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/9-1.png)

![Figure 293: PV of the FundMMldx_Single under curve shifts for the Base scenario and the parallel scenarios.](./Fig/9-2.png)

![Figure 294: PV of the FundMMldx_Single under curve shifts for the Base scenario and the short scenarios.](./Fig/9-3.png)

![Figure 295: PV of the FundMMldx_Single under curve shifts for the Base scenario and the long scenarios.](./Fig/9-4.png)

![Figure 296: PV of the FundMMldx_Single under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/10-1.png)

![Figure 297: PV of the FundMMldx_Single under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/10-2.png)

#### 4.15.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the FundMMldx_Single trade as described in Subsection 4.15.

Table 122 lists the underlying risk factors of the FundMMldx_Single. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 298.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|------|----------|-----------|------------|------------|
| IRCURVE | GBP | GBP | OISSPREAD | YES |
| IRCURVE | GBP | GBP | SWAP | YES |

Table 122: Risk factors for the FundMMldx_Single.

![Figure 298: Transition of the PV of the FundMMldx_Single in the up and down stressed scenarios.](./Fig/11.png)

### 4.16 Product Testing : MuniSwap

A MuniSwap is an interest rate swap where the reference rate is a municipal swap index such as the US SIFMA Municipal Swap index. The product we consider in this test, templated in SWAP in DBAnaIytics, is an single leg consisting of quarterly 3M SIFMA rates from 6th August, 2007 to 6th August, 2027.

MunlSpreads are inputed as Spread column in MuniRatio subtable of the CURVE object.

More precisely, PV of the the leg writes, as follows:

$$PV = N \sum_{j=2}^{n} DF_{zcr}(T_j) * \Delta(T_{j-1}, T_j) * BMA(T_{j-1}, T_j) \tag{60}$$

whereas $BMA(T_{j-1}, T_j)$ is calculated as weighted average of $BMA$ rates over an interval of 1 week between $T_{j-1}$ and $T_j$ and writes as follows:

$$BMA(T_{j-1}, T_j) = \frac{\sum_{k=1}^{N_j} w_{k,j} * BMA(T_{j,k}, T_{j,k+1})}{\sum_{k=1}^{N_j} w_{k,j}} \tag{61}$$

where $N$ is the notional, $w_{k,j}$ are weights giving the time fraction between $T_{j,k+1}$ and $T_{j,k}$, $\Delta(t, T)$ is the time fraction (in years) between $t$ and $T$. The notional is 120k USD. The valuation date is 2023-01-31.

A plot of 3M BMA rates as a function of time is presented below:

![Figure 299: BMA Rates using the Curve in the dictionary](./Fig/12.png)

#### 4.16.1 EOD Testing

##### 4.16.1.1 Cashflow Tables and Manual Replication

Here we present the cashflow table for pay leg of the MuniSwap trade.

| SetDates | PayDates | DayCount | Coupon | Coupon-Man | PVLet | PV-Man | PV-Error |
|----------|----------|----------|--------|------------|-------|--------|----------|
| 20230426 | 20230426 | 0.246575 | 0.028693 | 0.028693 | 839747.819206 | 839747.819206 | 0.000000e+00 |
| 20230726 | 20230726 | 0.249315 | 0.032026 | 0.032026 | 936111.348549 | 936111.348549 | 1.164153e-10 |
| 20231026 | 20231026 | 0.252055 | 0.034104 | 0.034104 | 995441.267113 | 995441.267113 | 0.000000e+00 |
| 20240126 | 20240126 | 0.251868 | 0.034410 | 0.034410 | 991943.656791 | 991943.656791 | 1.164153e-10 |
| 20240426 | 20240426 | 0.248634 | 0.031446 | 0.031446 | 885555.578275 | 885555.578275 | 0.000000e+00 |
| 20240726 | 20240726 | 0.248634 | 0.028616 | 0.028616 | 798305.599794 | 798305.599794 | 1.164153e-10 |
| 20241026 | 20241026 | 0.252831 | 0.025959 | 0.025959 | 741606.158275 | 741606.158275 | 0.000000e+00 |
| 20250127 | 20250127 | 0.248829 | 0.024668 | 0.024668 | 677489.200334 | 677489.200334 | 1.164153e-10 |
| 20250428 | 20250428 | 0.249315 | 0.024299 | 0.024299 | 663760.161898 | 663760.161898 | 0.000000e+00 |
| 20250728 | 20250728 | 0.249315 | 0.024083 | 0.024083 | 653160.711440 | 653160.711440 | 0.000000e+00 |
| 20251027 | 20251027 | 0.249315 | 0.024319 | 0.024319 | 654946.309075 | 654946.309075 | 1.164153e-10 |
| 20260126 | 20260126 | 0.249315 | 0.024983 | 0.024983 | 668170.478618 | 668170.478618 | 0.000000e+00 |
| 20260427 | 20260427 | 0.249315 | 0.026151 | 0.026151 | 694564.037133 | 694564.037133 | 1.164153e-10 |
| 20260727 | 20260727 | 0.249315 | 0.027446 | 0.027446 | 723888.524764 | 723888.524764 | 1.164153e-10 |

Table 123: Pay Leg Cash Flow Table for MuniSwap trade. It can be seen Manual and DBA numbers are in excellent agreement with each other.

##### 4.16.1.2 Stability Tests For the considered MuniSwap, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 300-302 show the obtained PVs, Flatdeltas, and Flatgammas of the MuniSwap when the underlying IR curve is shifted, respectively. By shifting the IR Curve, the SIFMA rate increases thus the present value increases, although discount factor decreases, but as the tenor of the trade is not big, floating rate will dominant the discount factor effect. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 300: PV of the MuniSwap as a function of curve shifts.](./Fig/13-1.png)

![Figure 301: Flatdelta of the MuniSwap as a function of curve shifts.](./Fig/13-2.png)

![Figure 302: Flatgamma of the MuniSwap as a function of curve shifts.](./Fig/14-1.png)

b) Stability with respect to risk factor shifts

Figures 303 to 305 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying Spot Libor Spreads are shifted. In all the cases, observed behaviour is deemed to be smooth, as expected.

![Figure 303: PV of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/14-2.png)

![Figure 304: Flatdelta of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/14-3.png)

![Figure 305: Flatgamma of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/15-1.png)

Figures 306 to 308 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying Muni Ratio spreads are shifted. We can observe that, as the MuniRatio shifts increase, Muni Rate will increase, results in increase in coupon of payer leg and then increase in PV.

![Figure 306: PV of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/15-2.png)

![Figure 307: Flatdelta of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/15-3.png)

![Figure 308: Flatgamma of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/16-1.png)

Figures 309 to 311 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying discount spreads are shifted. We can observe that, as the usdfr Discount shifts increase, discount factor will decrease, results in decrease in PV of the leg.

![Figure 309: PV of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/16-2.png)

![Figure 310: Flatdelta of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/16-3.png)

![Figure 311: Flatgamma of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/17-1.png)

##### 4.16.1.3 Taylor Test Figure 312 shows the PV of the MuniSwap computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 312: PV of the MuniSwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/17-2.png)

##### 4.16.1.4 Comparison with Other Models MuniSwap is defined only for DBX, thus this testing is not applicable.

#### 4.16.2 CCAR Testing

In this section, we test the MuniSwap trade as described in Subsection 4.16 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.16.2.1 Scenario Curves Figure 313 shows the scenario curves for the underlying rate affecting the MuniSwap trade.

![Figure 313: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)

##### 4.16.2.2 Stability Tests
a) Stability with respect to Curve Shifts

Figures 314-316 show the obtained PVs, Flatdeltas, Flatgammas of the MuniSwap when the underlying IR curve is shifted, respectively. in particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 314: PV of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18-1.png)

![Figure 315: Flatdelta of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18-2.png)

![Figure 316: Flatgamma of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-1.png)

b) Stability with respect to risk factor shifts

Presented below figures shows the PVs, FLATDELTA and FLATGAMMA of the Repo in the Base, CCAR1 and CCAR2 scenarios when the underlying Muni Ratio Spreads are shifted.

![Figure 317: PV of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-2.png)

![Figure 318: Flatdelta of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-3.png)

![Figure 319: Flatgamma of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-1.png)

Presented below figures shows the PVs, FLATDELTA and FLATGAMMA of the Repo in the Base, CCAR1 and CCAR2 scenarios when the underlying usdfr Discount Spreads are shifted.

![Figure 320: PV of the MuniSwap as a function of Discount Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-2.png)

![Figure 321: Flatdelta of the MuniSwap as a function of Discount Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-3.png)

whereas $M_0$ is the Spot value of index at Valuation Date i.e. 183.2036. Then 56 reduces to

$$PV = N * M_0 * \frac{DFors(T_L)}{DFors(T_V)} \tag{59}$$

Presented below is the index values of SONI as a function of time.

## SONI (GBP) Index Values

![Figure 271: Implied Cash Values of Index as function of time.](./Fig/1.png)

Following are the details about the dates.

|              |  Log 1     |
|--------------|------------|
| SetDate($T_2$)       | 19/02/2025 |
| LastSetDate($T_1$)   | 04/01/2027 |
| EndDate($T_L$)       | 04/01/2028 |
| Valuation Date($T_V$) | 07/02/2019 |

Table 120: Rolldate, EffectiveDate and EndDate for each of the legs in the swap.

The valuation date is 7th February, 2019. Notional is rescaled to 10000 and denominated in GBP.

#### 4.15.1 EOD Testing

##### 4.15.1.1 Cashflow Table and Manual Replication

Here we present the relevant cashflow of the trade and manual, DBA calculations of the PV of the trade.

| - | T1 | Coupon-DBA | Coupon-Man | PV-DBA | PV-Man | PV Diff. |
|---|---|------------|------------|--------|--------|----------|
| 4th Jan, 2027 | 198.987 | 198.987 | 1.808E6 | 1.808E6 | 0 |

Table 121: Manual and DBA calculated PV of the FundMMldx_Single trade. It can be seen that number are in excellent agreement with each other.

##### 4.15.1.2 Stability Tests For the considered FundMMldx_Single, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 272-274 show the obtained PVs, Flatdeltas, and Flatgammas of the FundMMldx_Single when the underlying IR curve is shifted, respectively. Indeed the fixed amount to is higher than the OIS rate that is paid by the first leg. By shifting the IR curve, the discount factor decreases thus the present value decreases. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 272: PV of the FundMMldx_Single as a function of curve shifts.](./Fig/2-1.png)

![Figure 273: Flatdelta of the FundMMldx_Single as a function of curve shifts.](./Fig/2-2.png)

![Figure 274: Flatgamma of the FundMMldx_Single as a function of curve shifts.](./Fig/3.png)

##### 4.15.1.3 Taylor Test Figure 549 shows the PV of the FundMMldx_Single computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 275: PV of the FundMMldx_Single as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/3-2.png)

##### 4.15.1.4 Comparison with Other Models Figures 276-278 shows the PV, Flatdelta and FlatGamma differences as a function of curve shifts when calculated with other available models and compared with the DBSMC model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 276: PV of the FundMMldx_Single as a function of curve shifts.](./Fig/4-1.png)

![Figure 277: Flatdelta of the FundMMldx_Single as a function of curve shifts.](./Fig/4-2.png)

![Figure 278: Flatgamma of the FundMMldx_Single as a function of curve shifts.](./Fig/4-3.png)

#### 4.15.2 CCAR Testing

In this section, we test the FundMMldx_Single trade as described in Subsection 4.15 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.15.2.1 Scenario Curves Figure 279 shows the scenario curves for the underlying rate affecting the FundMMldx_Single trade.

![Figure 279: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/5.png)

##### 4.15.2.2 Stability Tests For the considered FundMMldx_Single trade, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

a) Stability with respect to Curve Shifts

Figures 280, 281 and 282 show the obtained NetValues, Flatdeltas and Flatgammas of the FundMMldx_Single when the underlying YieldCurve is shifted, respectively. In particular, we can observe that the NetValues, Flatdelta and Flatgamma profiles change smoothly under the considered shifts in all scenarios, as expected.

![Figure 280: NetValue of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5-1.png)

![Figure 281: FLATDELTA of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5-2.png)

![Figure 282: FLATGAMMA of the FundMMldx_Single as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/6-1.png)

##### 4.15.2.3 Taylor Approximation under CCAR Eventually, Figures 283 and 284 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 283: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/6-2.png)

![Figure 284: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/6-3.png)

##### 4.15.2.4 Comparison with Other Models Figures 285-286, Figures 287-288 and Figures 289-290 show the PV, Flatdelta and FlatGamma differences respectively as a function of curve shifts when calculated with other model, namely DBX, and compared with the DBSMC model.

![Figure 285: NetValue difference to the DBSMC Model of the FundMMldx_Single as a function of yieldcurve shifts for the CCAR1 scenario under DBX model.](./Fig/7-1.png)

![Figure 286: NetValue difference to the DBSMC Model of the FundMMldx_Single as a function of yieldcurve shifts for the CCAR2 scenario under DBX model.](./Fig/7-2.png)

![Figure 287: FLATDELTA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR1 scenario under DBX model.](./Fig/7-3.png)

![Figure 288: FLATDELTA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR2 scenario under DBX model.](./Fig/7-4.png)

![Figure 289: FLATGAMMA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR1 scenario under DBX model.](./Fig/8-1.png)

![Figure 290: FLATGAMMA difference to the DBSMC Model of the FundMMldx_Single as a function of yield curve shifts for the CCAR2 scenario under DBX model.](./Fig/8-2.png)

#### 4.15.3 IRRBB Testing

In this section, we test the FundMMldx_Single trade as described in Subsection 4.15 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.15.3.1 Scenario Curves Figure 291 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 291: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/8-3.png)

##### 4.15.3.2 Stability Tests

For the considered FundMMldx_Single, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that we plot all scenario curves in a single plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 292-297 show the obtained PVs of the FundMMldx_Single in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 292: PV of the FundMMldx_Single under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/9-1.png)

![Figure 293: PV of the FundMMldx_Single under curve shifts for the Base scenario and the parallel scenarios.](./Fig/9-2.png)

![Figure 294: PV of the FundMMldx_Single under curve shifts for the Base scenario and the short scenarios.](./Fig/9-3.png)

![Figure 295: PV of the FundMMldx_Single under curve shifts for the Base scenario and the long scenarios.](./Fig/9-4.png)

![Figure 296: PV of the FundMMldx_Single under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/10-1.png)

![Figure 297: PV of the FundMMldx_Single under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/10-2.png)

#### 4.15.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the FundMMldx_Single trade as described in Subsection 4.15.

Table 122 lists the underlying risk factors of the FundMMldx_Single. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 298.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|------|----------|-----------|------------|------------|
| IRCURVE | GBP | GBP | OISSPREAD | YES |
| IRCURVE | GBP | GBP | SWAP | YES |

Table 122: Risk factors for the FundMMldx_Single.

![Figure 298: Transition of the PV of the FundMMldx_Single in the up and down stressed scenarios.](./Fig/11.png)

### 4.16 Product Testing : MuniSwap

A MuniSwap is an interest rate swap where the reference rate is a municipal swap index such as the US SIFMA Municipal Swap index. The product we consider in this test, templated in SWAP in DBAnaIytics, is an single leg consisting of quarterly 3M SIFMA rates from 6th August, 2007 to 6th August, 2027.

MunlSpreads are inputed as Spread column in MuniRatio subtable of the CURVE object.

More precisely, PV of the the leg writes, as follows:

$$PV = N \sum_{j=2}^{n} DF_{zcr}(T_j) * \Delta(T_{j-1}, T_j) * BMA(T_{j-1}, T_j) \tag{60}$$

whereas $BMA(T_{j-1}, T_j)$ is calculated as weighted average of $BMA$ rates over an interval of 1 week between $T_{j-1}$ and $T_j$ and writes as follows:

$$BMA(T_{j-1}, T_j) = \frac{\sum_{k=1}^{N_j} w_{k,j} * BMA(T_{j,k}, T_{j,k+1})}{\sum_{k=1}^{N_j} w_{k,j}} \tag{61}$$

where $N$ is the notional, $w_{k,j}$ are weights giving the time fraction between $T_{j,k+1}$ and $T_{j,k}$, $\Delta(t, T)$ is the time fraction (in years) between $t$ and $T$. The notional is 120k USD. The valuation date is 2023-01-31.

A plot of 3M BMA rates as a function of time is presented below:

![Figure 299: BMA Rates using the Curve in the dictionary](./Fig/12.png)

#### 4.16.1 EOD Testing

##### 4.16.1.1 Cashflow Tables and Manual Replication

Here we present the cashflow table for pay leg of the MuniSwap trade.

| SetDates | PayDates | DayCount | Coupon | Coupon-Man | PVLet | PV-Man | PV-Error |
|----------|----------|----------|--------|------------|-------|--------|----------|
| 20230426 | 20230426 | 0.246575 | 0.028693 | 0.028693 | 839747.819206 | 839747.819206 | 0.000000e+00 |
| 20230726 | 20230726 | 0.249315 | 0.032026 | 0.032026 | 936111.348549 | 936111.348549 | 1.164153e-10 |
| 20231026 | 20231026 | 0.252055 | 0.034104 | 0.034104 | 995441.267113 | 995441.267113 | 0.000000e+00 |
| 20240126 | 20240126 | 0.251868 | 0.034410 | 0.034410 | 991943.656791 | 991943.656791 | 1.164153e-10 |
| 20240426 | 20240426 | 0.248634 | 0.031446 | 0.031446 | 885555.578275 | 885555.578275 | 0.000000e+00 |
| 20240726 | 20240726 | 0.248634 | 0.028616 | 0.028616 | 798305.599794 | 798305.599794 | 1.164153e-10 |
| 20241026 | 20241026 | 0.252831 | 0.025959 | 0.025959 | 741606.158275 | 741606.158275 | 0.000000e+00 |
| 20250127 | 20250127 | 0.248829 | 0.024668 | 0.024668 | 677489.200334 | 677489.200334 | 1.164153e-10 |
| 20250428 | 20250428 | 0.249315 | 0.024299 | 0.024299 | 663760.161898 | 663760.161898 | 0.000000e+00 |
| 20250728 | 20250728 | 0.249315 | 0.024083 | 0.024083 | 653160.711440 | 653160.711440 | 0.000000e+00 |
| 20251027 | 20251027 | 0.249315 | 0.024319 | 0.024319 | 654946.309075 | 654946.309075 | 1.164153e-10 |
| 20260126 | 20260126 | 0.249315 | 0.024983 | 0.024983 | 668170.478618 | 668170.478618 | 0.000000e+00 |
| 20260427 | 20260427 | 0.249315 | 0.026151 | 0.026151 | 694564.037133 | 694564.037133 | 1.164153e-10 |
| 20260727 | 20260727 | 0.249315 | 0.027446 | 0.027446 | 723888.524764 | 723888.524764 | 1.164153e-10 |

Table 123: Pay Leg Cash Flow Table for MuniSwap trade. It can be seen Manual and DBA numbers are in excellent agreement with each other.

##### 4.16.1.2 Stability Tests For the considered MuniSwap, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 300-302 show the obtained PVs, Flatdeltas, and Flatgammas of the MuniSwap when the underlying IR curve is shifted, respectively. By shifting the IR Curve, the SIFMA rate increases thus the present value increases, although discount factor decreases, but as the tenor of the trade is not big, floating rate will dominant the discount factor effect. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 300: PV of the MuniSwap as a function of curve shifts.](./Fig/13-1.png)

![Figure 301: Flatdelta of the MuniSwap as a function of curve shifts.](./Fig/13-2.png)

![Figure 302: Flatgamma of the MuniSwap as a function of curve shifts.](./Fig/14-1.png)

b) Stability with respect to risk factor shifts

Figures 303 to 305 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying Spot Libor Spreads are shifted. In all the cases, observed behaviour is deemed to be smooth, as expected.

![Figure 303: PV of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/14-2.png)

![Figure 304: Flatdelta of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/14-3.png)

![Figure 305: Flatgamma of the MuniSwap as a function of SpotLiborSpread shifts.](./Fig/15-1.png)

Figures 306 to 308 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying Muni Ratio spreads are shifted. We can observe that, as the MuniRatio shifts increase, Muni Rate will increase, results in increase in coupon of payer leg and then increase in PV.

![Figure 306: PV of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/15-2.png)

![Figure 307: Flatdelta of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/15-3.png)

![Figure 308: Flatgamma of the MuniSwap as a function of MuniRatio spread shifts.](./Fig/16-1.png)

Figures 309 to 311 show the PVs, FLATDELTA and FLATGAMMA of the MuniSwap when the underlying discount spreads are shifted. We can observe that, as the usdfr Discount shifts increase, discount factor will decrease, results in decrease in PV of the leg.

![Figure 309: PV of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/16-2.png)

![Figure 310: Flatdelta of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/16-3.png)

![Figure 311: Flatgamma of the MuniSwap as a function of usdfr Discount spread shifts.](./Fig/17-1.png)

##### 4.16.1.3 Taylor Test Figure 312 shows the PV of the MuniSwap computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 312: PV of the MuniSwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/17-2.png)

##### 4.16.1.4 Comparison with Other Models MuniSwap is defined only for DBX, thus this testing is not applicable.

#### 4.16.2 CCAR Testing

In this section, we test the MuniSwap trade as described in Subsection 4.16 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.16.2.1 Scenario Curves Figure 313 shows the scenario curves for the underlying rate affecting the MuniSwap trade.

![Figure 313: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)

##### 4.16.2.2 Stability Tests
a) Stability with respect to Curve Shifts

Figures 314-316 show the obtained PVs, Flatdeltas, Flatgammas of the MuniSwap when the underlying IR curve is shifted, respectively. in particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 314: PV of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18-1.png)

![Figure 315: Flatdelta of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18-2.png)

![Figure 316: Flatgamma of the MuniSwap as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-1.png)

b) Stability with respect to risk factor shifts

Presented below figures shows the PVs, FLATDELTA and FLATGAMMA of the Repo in the Base, CCAR1 and CCAR2 scenarios when the underlying Muni Ratio Spreads are shifted.

![Figure 317: PV of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-2.png)

![Figure 318: Flatdelta of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19-3.png)

![Figure 319: Flatgamma of the MuniSwap as a function of MuniRatios Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-1.png)

Presented below figures shows the PVs, FLATDELTA and FLATGAMMA of the Repo in the Base, CCAR1 and CCAR2 scenarios when the underlying usdfr Discount Spreads are shifted.

![Figure 320: PV of the MuniSwap as a function of Discount Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-2.png)

![Figure 321: Flatdelta of the MuniSwap as a function of Discount Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20-3.png)

![Figure 322: Flatgamma of the MuniSwap as a function of Discount Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/1-1.png)

##### 4.16.2.3 Taylor Approximation under CCAR Eventually, Figures 323 and 324 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 323: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/1-2.png)

![Figure 324: NetValue of the FundMMldx_Single as a function of yieldcurve shifts when computed by DBAPricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/1-3.png)

#### 4.16.3 IRRBB Testing

In this section, we test the stability of the MuniSwap trade as described in Subsection 4.16 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.16.3.1 Scenario Curves Figure 325 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 325: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/2-1.png)

##### 4.16.3.2 Stability Tests For the considered MuniSwap, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 326-331 show the obtained PVs of the MuniSwap in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 326: PV of the MuniSwap under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/2-2.png)

![Figure 327: PV of the MuniSwap under curve shifts for the Base scenario and the parallel scenarios.](./Fig/2-3.png)

![Figure 328: PV of the MuniSwap under curve shifts for the Base scenario and the short scenarios.](./Fig/3-1.png)

![Figure 329: PV of the MuniSwap under curve shifts for the Base scenario and the long scenarios.](./Fig/3-2.png)

![Figure 330: PV of the MuniSwap under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/3-3.png)

![Figure 331: PV of the MuniSwap under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/3-4.png)

Figures 332-337 show the obtained PVs of the MuniSwap in the respective scenarios when the USD Libor spreads are shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 332: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/4-1.png)

![Figure 333: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and the parallel scenarios.](./Fig/4-2.png)

![Figure 334: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and the short scenarios.](./Fig/4-3.png)

![Figure 335: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and the long scenarios.](./Fig/4-4.png)

![Figure 336: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/5-1.png)

![Figure 337: PV of the MuniSwap under SpotLibor Spread shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/5-2.png)

Figures 338-343 show the obtained PVs of the MuniSwap in the respective scenarios when the USD Muni ratio spreads are shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 338: PV of the MuniSwap under Muni rtamaatic Spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/5-3.png)

![Figure 339: PV of the MuniSwap under Muni ratio Spread shifts for the Base scenario and the parallel scenarios.](./Fig/5-4.png)

![Figure 340: PV of the MuniSwap under Muni ratio Spread shifts for the Base scenario and the short scenarios.](./Fig/6-1.png)

![Figure 341: PV of the MuniSwap under Muni ratio Spread shifts for the Base scenario and the long scenarios.](./Fig/6-2.png)

![Figure 342: PV of the MuniSwap under Muni ratio Spread shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/6-3.png)

![Figure 343: PV of the MuniSwap under Muni ratio Spread shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/6-4.png)

Figures 344-349 show the obtained PVs of the MuniSwap in the respective scenarios when the usdfr Discount spreads are shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 344: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/7-1.png)

![Figure 345: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and the parallel scenarios.](./Fig/7-2.png)

![Figure 346: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and the short scenarios.](./Fig/7-3.png)

![Figure 347: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and the long scenarios.](./Fig/7-4.png)

![Figure 348: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/8-1.png)

![Figure 349: PV of the MuniSwap under usdfr Discount Spread shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/8-2.png)

#### 4.16.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the MuniSwap trade as described in Subsection 4.16.

Table 124 lists the underlying risk factors of the MuniSwap. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 350.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|------|----------|-----------|------------|------------|
| IRCURVE | USD | USD | MUNIRATIO | YES |
| IRCURVE | USD | USD | SPOTLIBORSPREAD(*) | YES |
| IRCURVE | USD | USD | SWAP | YES |
| IRCURVE | USD | usdfr | DISCOUNTSPREAD(*) | YES |

Table 124: Risk factors for the MuniSwap. It is to be noted, Min/max shocks for asterisk (*) marked risk factors are not available, hence not included in the calculation.

![Figure 350: Transition of the PV of the MuniSwap in the up and down stressed scenarios.](./Fig/8-3.png)

### 4.17 Product Testing : Repo

The tested product is a Repurchase Agreement (Repo), where the seller of a security agrees to buy it back from a buyer at a later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. Then PV for the tested product writes as follows:

$PV = N * \sum_{i=1}^{n} DF_{Funding}(T_i) * \Delta_i * (L_n + s) \tag{62}$

Whereas, $DF_{Funding}(T_i)$, $\Delta_i$, $L_n, s$ denotes Discount factor at $T_i$ using discount spreads of funding name corplite_eur_eur_$, day count fraction between $T_{i-1}$ and $T_i$, 3M Libor Rate at date $T_i$ and spread (set at 0.8%) respectively.

In the trade in consideration, the valuation date is 23/10/2020 and the currency is USD. Notional is -500 and denominated in USD. RollDate, EffectiveDate and EndDate are summarised in Table 125.

|   | Leg 1 |
|---|-------|
| RollDate | 23/04/2020 |
| EffectiveDate | 23/04/2020 |
| EndDate | 24/04/2023 |

Table 125: Rolldate, EffectiveDate and EndDate for the leg in the contract.

#### 4.17.1 EOD Testing

##### 4.17.1.1 Cashflow Table and Manual Replication

Here we present the cashflow table of the underlying trade. Manual and DBA prices and error between the two. It is seen, Manual and DBA numbers are in excellent agreement with each other.

| SetDates | PayDates | DayCount | Coupon | Coupon-Man | PVLot | PV-Man | PV-Error |
|----------|----------|----------|--------|------------|-------|--------|----------|
| 20201023 | 20210125 | 0.257534 | 0.010091 | 0.010091 | -1.297572 | -1.297572 | 2.220446e-16 |
| 20210125 | 20210423 | 0.241096 | 0.010304 | 0.010304 | -1.238632 | -1.238632 | 0.000000e+00 |
| 20210423 | 20210723 | 0.249315 | 0.010073 | 0.010073 | -1.250263 | -1.250263 | 2.220446e-16 |
| 20210723 | 20211025 | 0.257534 | 0.009985 | 0.009985 | -1.278028 | -1.278028 | -2.220446e-16 |
| 20211025 | 20220124 | 0.249315 | 0.010121 | 0.010121 | -1.251406 | -1.251406 | -2.220446e-16 |
| 20220124 | 20220425 | 0.249315 | 0.010480 | 0.010480 | -1.292630 | -1.292630 | 0.000000e+00 |
| 20220425 | 20220725 | 0.249315 | 0.010770 | 0.010770 | -1.324847 | -1.324847 | -2.220446e-16 |
| 20220725 | 20221024 | 0.249315 | 0.010932 | 0.010932 | -1.340968 | -1.340968 | 0.000000e+00 |
| 20221024 | 20230123 | 0.249315 | 0.011143 | 0.011143 | -1.362915 | -1.362915 | 2.220446e-16 |
| 20230123 | 20230424 | 0.249315 | 0.011440 | 0.011440 | -1.394983 | -1.394983 | 2.220446e-16 |
| 20230424 | 20230424 | 1.000000 | 1.000000 | 1.000000 | -489.095451 | -489.095451 | 0.000000e+00 |

Table 126: Cashflow table and Manual calculation of Repo Trade.

##### 4.17.1.2 Stability Tests For the considered Repo, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 351-353 show the obtained PVs, Flatdeltas, and Flatgammas of the Repo when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 351: PV of the Repo as a function of curve shifts.](./Fig/10-1.png)

![Figure 352: Flatdelta of the Repo as a function of curve shifts.](./Fig/10-2.png)

![Figure 353: Flatgamma of the Repo as a function of curve shifts.](./Fig/10-3.png)

b) Stability with respect to risk factor shifts

Figures 354 to 356 show the PVs, FLATDELTA and FLATGAMMA of the Repo when the underlying OISSpreads shifted. We can observe that, as the OISSpread shifts increase, the discount factor decreases which in turn decreases the PV.

![Figure 354: PV of the Repo as a function of OISSpread shifts.](./Fig/11-1.png)

![Figure 355: Flatdelta of the Repo as a function of OISSpread shifts.](./Fig/11-2.png)

![Figure 356: Flatgamma of the Repo as a function of OISSpread shifts.](./Fig/11-3.png)

##### 4.17.1.3 Taylor Test Figure 357 shows the PV of the Repo computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 357: PV of the Repo as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/12-1.png)

##### 4.17.1.4 Comparison with Other Models Figures 358-360 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 358: PV of the Repo as a function of curve shifts.](./Fig/12-2.png)

![Figure 359: Flatdelta of the Repo as a function of curve shifts.](./Fig/12-3.png)

![Figure 360: Flatgamma of the Repo as a function of curve shifts.](./Fig/13-1.png)

#### 4.17.2 CCAR Testing

In this section, we test the Repo trade as described in Subsection 4.17 under the CCAR 2022 scenarios and compare them with the Base scenario.

##### 4.17.2.1 Scenario Curves Figure 361 shows the scenario curves for the underlying rate affecting the Repo.

![Figure 361: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/13-2.png)

##### 4.17.2.2 Stability Tests For the considered Repo, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

a) Stability with respect to Curve Shifts

Figures 362-364 show the obtained PVs, Flatdeltas, Flatgammas of the Repo when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 362: PV of the Repo as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/14-1.png)

![Figure 363: Flatdelta of the Repo as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/14-2.png)

![Figure 364: Flatgamma of the Repo as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/14-3.png)

b) Stability with respect to risk factor shifts

Presented below figures shows the PVs, FLATDELTA and FLATGAMMA of the Repo in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and BasisSpreads are shifted, respectively.

![Figure 365: PV of the Repo as a function of OIS Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/15-1.png)

![Figure 366: Flatdelta of the Repo as a function of OIS Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/15-2.png)

![Figure 367: Flatgamma of the Repo as a function of OIS Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/15-3.png)

![Figure 368: PV of the Repo as a function of Basis Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/16-1.png)

![Figure 369: Flatdelta of the Repo as a function of Basis Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/16-2.png)

![Figure 370: Flatgamma of the Repo as a function of Basis Spread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/16-3.png)

##### 4.17.2.3 Taylor Approximation under CCAR Eventually, Figures 371 and 372 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 371: PV of the Repo as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/17-1.png)

![Figure 372: PV of the Repo as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/17-2.png)

##### 4.17.2.4 Comparison with Other Models Figures 373-374, 375-376 and 377-378 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

We now compare the same dictionary when calculated with the other models, namely DBX, DBL, DBM, DBSMC. As there is not qualitative difference we report only the differences with respect to DBOPT.

![Figure 373: PV difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/17-3.png)

![Figure 374: PV difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/17-4.png)

![Figure 375: Flatdelta difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/18-1.png)

![Figure 376: Flatdelta difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/18-2.png)

![Figure 377: Flatgamma difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/18-3.png)

![Figure 378: Flatgamma difference to the DBOPT model of the Repo as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/18-4.png)

#### 4.17.3 IRRBB Testing

In this section, we test the stability of the Repo trade as described in Subsection 4.17 under the IRRBB scenarios and compare them with the Base scenario.

##### 4.17.3.1 Scenario Curves Figure 379 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 379: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/19.png)

##### 4.17.3.2 Stability Tests For the considered Repo, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 380-385 show the obtained PVs of the Repo in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 380: PV of the Repo under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/19-1.png)

![Figure 381: PV of the Repo under curve shifts for the Base scenario and the parallel scenarios.](./Fig/19-2.png)

![Figure 382: PV of the Repo under curve shifts for the Base scenario and the short scenarios.](./Fig/20-1.png)

![Figure 383: PV of the Repo under curve shifts for the Base scenario and the long scenarios.](./Fig/20-2.png)

![Figure 384: PV of the Repo under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/20-3.png)

![Figure 385: PV of the Repo under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/20-4.png)

#### 4.17.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the Repo trade as described in Subsection 4.17.

Table 127 lists the underlying risk factors of the Repo. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 386.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
|------|----------|-----------|------------|------------|
| IRCURVE | USD | USD | BASISSPREAD-FEDFUND | YES |
| IRCURVE | USD | USD | DISCOUNTSPREAD | YES |
| IRCURVE | USD | USD | OISSPREAD | YES |
| IRCURVE | EUR | EUR | | YES |
| IRCURVE | EUR | EUR | SWAP | YES |

Table 127: Risk factors for the Repo.

![Figure 386: Transition of the PV of the Repo in the up and down stressed scenarios.](./Fig/1.png)

### 4.18 Product Testing : EvergreenStockBorrow

A StockBorrow transaction is a transaction in which the transferee (borrower), gets securities transferred against appropriate collateral subject to a commitment that he will return equivalent securities to the transferor (lender) at a future date with a fee. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower. In an EverGreen StockLend, the remaining tenor does not change(is pushed each day) as long as either party does not call the trade. Once the trade is called, the tenor is fixed.

We consider a trade in GENSWAAP template in which leg1 pays and receives notional sum of 9.4E6 at 27th January, 2023 and 8th May, 2023 respectively. Hence PV of the leg1, denoted by $$PV_{Leg1}$$ writes as follows:

$$PV_{Leg1} = 940200 + DF_{Libor}(T_F)$$ (62)

Similarly, leg2 pays a fixed coupon of 1 unit from 27th January, 2023 to 8th May, 2023 on $$(T_F)$$ 8th May, 2023. Hence PV of the leg2, denoted by $$PV_{Leg2}$$ writes as follows:

$$PV_{Leg2} = -6066.9 + 1 * DF_{Libor}(T_F)$$ (63)

### 4.18.1 EOD Testing

#### 4.18.1.1 Cashflow Table and Manual Replication

Presented below is the cashflow table for leg1 for the trade. It can be seen that DBA and Manual obtained PV numbers are in good agreement with each other

| SetDates | PayDates | DiscFact | Notional | PvLot | PV-Man | PV-Error |
| --- | --- | --- | --- | --- | --- | --- |
| 20230127 | 20230508 | 0.993104 | 9402000 | 9.34e+06 | 9.34e+06 | 0.0 |

Table 128: Cashflow table and Manual Replication for Leg1 for the EvergreenStockBorrow Trade.

Presented below is the cashflow table for leg2 for the trade. It can be seen that DBA and Manual obtained PV numbers are in good agreement with each other.

| SetDates | PayDates | DiscFact | Notional | PvLot | PV-Man | PV-Error |
| --- | --- | --- | --- | --- | --- | --- |
| 20230127 | 20230508 | 0.993104 | -6066.9 | -6025.06388 | -6025.06388 | 0.0 |

Table 129: Cashflow table and Manual Replication for Leg2 for the EvergreenStockBorrow Trade.

#### 4.18.1.2 Stability Tests

For the considered EvergreenStockBorrow, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 743-745 show the obtained PVs, Flatdeltas, and Flatgammas of the EvergreenStockBorrow when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 387: PV of the EvergreenStockBorrow as a function of curve shifts.](./Fig/2.png)
![Figure 388: Flatdelta of the EvergreenStockBorrow as a function of curve shifts.](./Fig/2.png)
![Figure 389: Flatgamma of the EvergreenStockBorrow as a function of curve shifts.](./Fig/3.png)

b) Stability with respect to risk factor shifts

As SWAP is the only risk factor, no further testing is presented at this point.

#### 4.18.1.3 Taylor Test

Figure 746 shows the PV of the EvergreenStockBorrow computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 390: PV of the EvergreenStockBorrow as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/3.png)

#### 4.18.1.4 Comparison with Other Models

Figures 749-751 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 391: PV of the EvergreenStockBorrow as a function of curve shifts.](./Fig/4.png)
![Figure 392: Flatdelta of the EvergreenStockBorrow as a function of curve shifts.](./Fig/4.png)
![Figure 393: Flatgamma of the EvergreenStockBorrow as a function of curve shifts.](./Fig/4.png)

### 4.18.2 CCAR Testing

In this section, we test the EvergreenStockBorrow trade as described in Subsection 4.18 under the CCAR 2022 scenarios and compare them with the Base scenario.

#### 4.18.2.1 Scenario Curves

Figure 394 shows the scenario curves for the underlying rate affecting the EvergreenStockBorrow.

![Figure 394: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/5.png)

#### 4.18.2.2 Stability Tests

For the considered EvergreenStockBorrow, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

a) Stability with respect to Curve Shifts

Figures 395-397 show the obtained PVs, Flatdeltas, Flatgammas of the EvergreenStockBorrow when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 395: PV of the EvergreenStockBorrow as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5.png)
![Figure 396: Flatdelta of the EvergreenStockBorrow as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/5.png)
![Figure 397: Flatgamma of the EvergreenStockBorrow as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/6.png)

b) Stability with respect to risk factor shifts

As SWAP is the only risk factor, no further testing is presented at this point.

#### 4.18.2.3 Taylor Approximation under CCAR

Eventually, Figures 398 and 399 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 398: PV of the EvergreenStockBorrow as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/6.png)
![Figure 399: PV of the EvergreenStockBorrow as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/6.png)

#### 4.18.2.4 Comparison with Other Models

Figures 400-401, 402-403 and 404-405 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

![Figure 400: PV difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/7.png)
![Figure 401: PV difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/7.png)
![Figure 402: Flatdelta difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/7.png)
![Figure 403: Flatdelta difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/7.png)
![Figure 404: Flatgamma difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/8.png)
![Figure 405: Flatgamma difference to the DBOPT model of the EvergreenStockBorrow as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/8.png)

### 4.18.3 IRRBB Testing

In this section, we test the stability of the EvergreenStockBorrow trade as described in Subsection 4.18 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.18.3.1 Scenario Curves

Figure 406 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 406: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/8.png)

#### 4.18.3.2 Stability Tests

For the considered EvergreenStockBorrow, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 407-412 show the obtained PVs of the EvergreenStockBorrow in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 407: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/9.png)
![Figure 408: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and the parallel scenarios.](./Fig/9.png)
![Figure 409: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and the short scenarios.](./Fig/9.png)
![Figure 410: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and the long scenarios.](./Fig/9.png)
![Figure 411: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/10.png)
![Figure 412: PV of the EvergreenStockBorrow under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/10.png)

### 4.18.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the EvergreenStockBorrow trade as described in Subsection 4.18.

Table 130 lists the underlying risk factors of the EvergreenStockBorrow. In particular, we can observe that the product is sensitive to all the risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 413.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | SWAP | YES |

Table 130: Risk factors for the EvergreenStockBorrow.

![Figure 413: Transition of the PV of the EvergreenStockBorrow in the up and down stressed scenarios.](./Fig/11.png)

### 4.19 Product Testing : TreasuryYieldLockUnissued

We consider a TreasuryYieldLockUnissued product. The product can be described as in the following: An agreement to fix the yield of a specified Treasury bond on a specified future date. The agreed rate is called the lock rate. When the date arrives, the prevailing yield of the bond is compared to the lock yield and a cash settlement is made based on the difference.

The present value of the product is calculated as

$$DF_{OIS}(T_f) * DV01 * Notional * (K - TreasuryRate)$$ (64)

In our specific case the $$K$$ is 1.922%, and the TreasuryRate is the addition of 10Y Treasury spread and swap rate. Notional is 25 USD. $$DF(T_f)$$ denotes the maturity date i.e 18th August, 2026. The valuation date is 28/07/2016. The domestic currency is USD.

Presented below is the treasury rate as a function of time to maturity from valuation date.

![Figure 414: Treasury Rates for the USD curve](./Fig/11.png)

### 4.19.1 EOD Testing

#### 4.19.1.1 Cashflow Table and Manual Replication

Following table describes the cashflow of the trade and manual replication of the PV. It can be seen that Manual and DBA calculated prices are in excellent agreement with each other.

| PayDates | DiscFact | DV01 | Trea. Rate | Trea. Rate-Man | PVLot | PV-Man | PV-Error |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 20160818 | 0.999829 | 9.246302 | 0.015164 | 0.015164 | 0.937459 | 0.937459 | 1.55e-15 |

Table 131: Manual Replication of the trade.

#### 4.19.1.2 Stability Tests

For the considered TreasuryYieldLockUnissued, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 415-417 show the obtained PVs, Flatdeltas, and Flatgammas of the TreasuryYieldLockUnissued when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 415: PV of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/12.png)
![Figure 416: Flatdelta of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/12.png)
![Figure 417: Flatgamma of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/13.png)

b) Stability with respect to risk factor shifts

Figures 418 to 420 show the PVs, FLATDELTA and FLATGAMMA of the TreasuryYieldLockUnissued when the underlying OISSpreads shifted. We can observe that, as the OISSpread shifts increase, the discount factor decreases which in turn decreases the PV.

![Figure 418: PV of the TreasuryYieldLockUnissued as a function of OISSpread shifts.](./Fig/13.png)
![Figure 419: Flatdelta of the TreasuryYieldLockUnissued as a function of OISSpread shifts.](./Fig/13.png)
![Figure 420: Flatgamma of the TreasuryYieldLockUnissued as a function of OISSpread shifts.](./Fig/14.png)

Figures 421 to 423 show the PVs, FLATDELTA and FLATGAMMA of the TreasuryYieldLockUnissued when the underlying MuniRatio spreads are shifted. We can observe that, as the Treasury shifts increase, Treasury rate increases, results in decrease in coupon and then decrease in PV.

![Figure 421: PV of the TreasuryYieldLockUnissued as a function of Treasury spread shifts.](./Fig/14.png)
![Figure 422: Flatdelta of the TreasuryYieldLockUnissued as a function of Treasury spread shifts.](./Fig/14.png)
![Figure 423: Flatgamma of the TreasuryYieldLockUnissued as a function of Treasury spread shifts.](./Fig/15.png)

#### 4.19.1.3 Taylor Test

Figure 424 shows the PV of the TreasuryYieldLockUnissued computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 424: PV of the TreasuryYieldLockUnissued as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/15.png)

#### 4.19.1.4 Comparison with Other Models

Figures 425-427 shows the PV, Flatdelta and Flatgamma difference as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 425: PV of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/16.png)
![Figure 426: Flatdelta of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/16.png)
![Figure 427: Flatgamma of the TreasuryYieldLockUnissued as a function of curve shifts.](./Fig/16.png)

### 4.19.2 CCAR Testing

In this section, we test the TreasuryYieldLockUnissued trade as described in Subsection 4.19 under the CCAR 2022 scenarios and compare them with the Base scenario.

#### 4.19.2.1 Scenario Curves

Figure 428 shows the scenario curves for the underlying rate affecting the TreasuryYieldLockUnissued trade.

![Figure 428: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/17.png)

#### 4.19.2.2 Stability Tests

For the considered TreasuryYieldLockUnissued trade, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

a) Stability with respect to Curve Shifts

Figures 429, 430 and 431 show the obtained NetValues, Flatdeltas and Flatgammas of the TreasuryYieldLockUnissued when the underlying YieldCurve is shifted, respectively. In particular, we can observe that the NetValues, Flatdelta and Flatgamma profiles change smoothly under the considered shifts in all scenarios, as expected.

![Figure 429: NetValue of the TreasuryYieldLockUnissued as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/17.png)
![Figure 430: FLATDELTA of the TreasuryYieldLockUnissued as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/17.png)
![Figure 431: FLATGAMMA of the TreasuryYieldLockUnissued as a function of YieldCurve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)

b) Stability with respect to risk factor shifts

Presented below plots show the PVs, Flat Deltas and Flat Gammas of the TreasuryYieldLockUnissued in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and Treasuryspreads are shifted.

![Figure 432: NetValue of the TreasuryYieldLockUnissued as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)
![Figure 433: FLATDELTA of the TreasuryYieldLockUnissued as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)
![Figure 434: FLATGAMMA of the TreasuryYieldLockUnissued as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)

![Figure 435: NetValue of the TreasuryYieldLockUnissued as a function of TreasurySpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)
![Figure 436: FLATDELTA of the TreasuryYieldLockUnissued as a function of TreasurySpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)
![Figure 437: FLATGAMMA of the TreasuryYieldLockUnissued as a function of TreasurySpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/20.png)

#### 4.19.2.3 Taylor Approximation under CCAR

Eventually, Figures 438 and 439show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 438: NetValue of the TreasuryYieldLockUnissued as a function of yieldcurve shifts when computed by DBApricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/20.png)
![Figure 439: NetValue of the TreasuryYieldLockUnissued as a function of yieldcurve shifts when computed by DBApricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/20.png)

#### 4.19.2.4 Comparison with Other Models

Figures 440-441 and Figures 442-443 and Figures 444-445 show the PV, Flatdelta and Flatgamma difference respectively as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

![Figure 440-441: NetValue Comparison with DBX, DBM, DBL TreasuryYieldLockUnissued](./Fig/16.png)
![Figure 442-443: FLATDELTA Comparison with DBX, DBM, DBL TreasuryYieldLockUnissued](./Fig/16.png)
![Figure 444-445: FLATGAMMA Comparison with DBX, DBM, DBL TreasuryYieldLockUnissued](./Fig/16.png)

### 4.19.2.4 Comparison with Other Models

![Figure 440: NetValue difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR1 scenario under DBX, DBL, DBM, DBSMC models](./Fig/1.png)
![Figure 441: NetValue difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR2 scenario under DBX, DBL, DBM, DBSMC models](./Fig/1.png)

![Figure 442: FLATDELTA difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR1 scenario under DBX, DBL, DBM, DBSMC models](./Fig/1.png)
![Figure 443: FLATDELTA difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR2 scenario under DBX, DBL, DBM, DBSMC models](./Fig/1.png)

![Figure 444: FLATGAMMA difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR1 scenario under DBX, DBL, DBM, DBSMC models](./Fig/2.png)
![Figure 445: FLATGAMMA difference to the DBOPT Model of the TreasuryYieldLockUnissued as a function of yieldcurve shifts for the CCAR2 scenario under DBX, DBL, DBM, DBSMC models](./Fig/2.png)

### 4.19.3 IRRBB Testing

In this section, we test the stability of the TreasuryYieldLockUnissued trade as described in Subsection 4.19 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.19.3.1 Scenario Curves

Figure 446 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 446: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/2.png)

#### 4.19.3.2 Stability Tests

For the considered TreasuryYieldLockUnissued, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 447-452 show the obtained PVs of the TreasuryYieldLockUnissued in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 447: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/3.png)
![Figure 448: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and the parallel scenarios.](./Fig/3.png)
![Figure 449: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and the short scenarios.](./Fig/3.png)
![Figure 450: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and the long scenarios.](./Fig/3.png)

![Figure 451: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/4.png)
![Figure 452: PV of the TreasuryYieldLockUnissued under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/4.png)

Figures 453-456 show the obtained PVs of the TreasuryYieldLockUnissued in the respective scenarios when the underlying treasury spreads are shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 453: PV of the TreasuryYieldLockUnissued under Treasury spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/4.png)
![Figure 454: PV of the TreasuryYieldLockUnissued under Treasury spread shifts for the Base scenario and the parallel scenarios.](./Fig/4.png)

Table 132: Risk factors for the TreasuryYieldLockUnissued. Note that for the risk factor TREASURYSPREAD, the given shocks are 0.

![Figure 459: Transition of the PV of the TreasuryYieldLockUnissued in the up and down stressed scenarios.](./Fig/5.png)

### 4.20 Product Testing : CertificateOfDepositFix

We consider a CertificateOfDepositFix product. A money market instrument issued by a depository institution as evidence of a time deposit to an institutional investor for amounts exceeding 10 million. A certificate of deposit has a fixed term, usually up to one year. At the end of the term, the deposit is returned with interest or returned at par if it was issued at a discount. This product pays a fixed rate of interest.

For the testing, we consider a trade in GENSWAP security template, where Leg1 receives notional at termination date of the contract $(T_f)$ (i.e 5th September, 2047), so PV of the leg1, denoted by $PV^{Leg1}$, writes as follows:

$$PV^{Leg1} = N * DF_{Libor}(T_f)$$ (65)

whereas leg2 receives one cashflow at contract termination date with coupon accruing yearly at $r_y$. Denote PV of the leg 2 by $PV^{Leg2}$, writes as follows:

$$PV^{Leg2} = N * DF_{Libor}(T_f) * Coupon$$ (66)

where $Coupon$ is the total accrued rate on yearly basis from the accrual date (5 September, 2017) to contract termination date $(T_f = 5th September, 2047)$ at $K$ i.e. 5.26%. $N$ is 30 mn AUD. Mathematically, $Coupon$ is implemented in COUPONACCRUAL in DBAanalytics and writes as follows, denote $K_n$ as $n^{th}$ coupon from the contract effective date.

$$
\begin{align}
Coupon &= K_n + K_{n-1} \cdot (1 + K_n) + ... + K_1 \cdot (1 + K_n) \cdot (1 + K_{n-1}) \cdot ... (1 + K_2) \\
&= K + K (1 + K) + K (1 + K)^2 + ... + K(1 + K)^{n-1} \\
&= K \cdot \frac{(1 + K)^n - 1}{(1 + K) - 1} \\
&= (1 + K)^n - 1
\end{align}
$$ (67)

Where n denotes total number of accruals, in our case it's 30 based on 30 yearly accrued coupons.

### 4.20.1 EOD Testing

#### 4.20.1.1 CashFlow and Manual Replication

Presented below is the cashflow table and manual PV calculations for leg 1:

| PayDates | DiscFact | DF_Man | PvLot | PV-Man | PV-Error |
| --- | --- | --- | --- | --- | --- |
| 20470905 | 0.581189 | 0.581189 | -1.74e+07 | -1.74e+07 | 0.0 |

Table 133: Cashflow table for leg1.

Similarly, presented below is the table for leg 2.

| PayDates | AccruedCoupon | DiscFact | PvLot | PV-Man | PV-Error |
| --- | --- | --- | --- | --- | --- |
| 20470905 | 3.654799 | 0.581189 | -6.37E7 | -6.37E7 | 0.0 |

Table 134: Cashflow table for leg2.

#### 4.20.1.2 Stability Tests

For the considered CertificateOfDepositFix, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 460-462 show the obtained PVs, Flatdeltas, and Flatgammas of the CertificateOfDepositFix when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 460: PV of the CertificateOfDepositFix as a function of curve shifts.](./Fig/7.png)
![Figure 461: Flatdelta of the CertificateOfDepositFix as a function of curve shifts.](./Fig/7.png)
![Figure 462: Flatgamma of the CertificateOfDepositFix as a function of curve shifts.](./Fig/7.png)

b) Stability with respect to risk factor shifts

As SWAP is the only risk factor, no further testing is presented at this point.

#### 4.20.1.3 Taylor Test

Figure 463 shows the PV of the CertificateOfDepositFix computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 463: PV of the CertificateOfDepositFix as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/8.png)

#### 4.20.1.4 Comparison with Other Models

Figures 464-466 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 464: PV of the CertificateOfDepositFix as a function of curve shifts.](./Fig/8.png)
![Figure 465: Flatdelta of the CertificateOfDepositFix as a function of curve shifts.](./Fig/8.png)
![Figure 466: Flatgamma of the CertificateOfDepositFix as a function of curve shifts.](./Fig/9.png)

### 4.20.2 CCAR Testing

In this section, we test the CertificateOfDepositFix trade as described in Subsection 4.20 under the CCAR 2022 scenarios and compare them with the Base scenario.

#### 4.20.2.1 Scenario Curves

Figure 467 shows the scenario curves for the underlying rate affecting the CertificateOfDepositFix.

![Figure 467: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/9.png)

#### 4.20.2.2 Stability Tests

For the considered CertificateOfDepositFix, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

a) Stability with respect to Curve Shifts

Figures 468-470 show the obtained PVs, Flatdeltas, Flatgammas of the CertificateOfDepositFix when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 468: PV of the CertificateOfDepositFix as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/10.png)
![Figure 469: Flatdelta of the CertificateOfDepositFix as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/10.png)
![Figure 470: Flatgamma of the CertificateOfDepositFix as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/10.png)

b) Stability with respect to risk factor shifts

As SWAP is the only risk factor, no further testing is presented at this point.

#### 4.20.2.3 Taylor Approximation under CCAR

Eventually, Figures 471 and 472 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 471: PV of the CertificateOfDepositFix as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/11.png)
![Figure 472: PV of the CertificateOfDepositFix as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/11.png)

#### 4.20.2.4 Comparison with Other Models

Figures 473-474, 475-476 and 477-478 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

![Figure 473: PV difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/11.png)
![Figure 474: PV difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/11.png)

![Figure 475: Flatdelta difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/12.png)
![Figure 476: Flatdelta difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/12.png)

![Figure 477: Flatgamma difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/12.png)
![Figure 478: Flatgamma difference to the DBOPT model of the CertificateOfDepositFix as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/12.png)

### 4.20.3 IRRBB Testing

In this section, we test the stability of the CertificateOfDepositFix trade as described in Subsection 4.20 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.20.3.1 Scenario Curves

Figure 479 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 479: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/13.png)

#### 4.20.3.2 Stability Tests

For the considered CertificateOfDepositFix, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 480-485 show the obtained PVs of the CertificateOfDepositFix in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 480: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/13.png)
![Figure 481: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and the parallel scenarios.](./Fig/13.png)
![Figure 482: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and the short scenarios.](./Fig/14.png)
![Figure 483: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and the long scenarios.](./Fig/14.png)
![Figure 484: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/14.png)
![Figure 485: PV of the CertificateOfDepositFix under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/14.png)

### 4.20.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the CertificateOfDepositFix trade as described in Subsection 4.20.

Table 135 lists the underlying risk factors of the CertificateOfDepositFix. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 486.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | AUD | AUD | SWAP | YES |

Table 135: Risk factors for the CertificateOfDepositFix.

![Figure 486: Transition of the PV of the CertificateOfDepositFix in the up and down stressed scenarios.](./Fig/15.png)

### 4.21 Product Testing : CorpBondDistressed, MR : 2023Apr13 - BUCKST - 19860

Corp bond is fixed income obligation issued by a corporate (including financial sector entity) as a security or loan note (including bearer, dematerialised, registered, schuldscheindarlehen and other similar obligations). Principal and interest flows are on scheduled dates with final redemption at a stated final maturity date. In the event of the issuer's default the bondholder's claim is against the insolvency estate of the issuer and final recovery receipt and settlement is determined by restructuring or bankruptcy process and subject to the seniority of the bondholder's claim vs other creditors of the issuer. This product is a corporate bond which may have any combination of characteristics making it a "distressed" bond as defined in the contractual terms but where the willingness to pay the contractually defined cashflows is considered materially low, usually due to impaired issuer creditworthiness or a default event has already occurred via failure to pay obligated cashflows, entering bankruptcy or insolvency proceedings, or a capital restructuring such that it is unlikely to fully meet its contractual obligations. The value of a position in the instrument is assessed in a 'price-based' framework with market/fair value pricing determined by idiosyncratic assessment of any near-term scheduled payments being made and the ultimate amount of outstanding claim that will be recoverable, and sensitivities to term cashflow discounting risk factors are disregarded. For an exposure in distressed status it is assumed that any original contractual bilateral options such as call/prepayment rights are economically ineffective either due to contractual proscriptions resulting from distressed status or funding replacement being inaccessible or prohibitively expensive. If an issuer is more heavily distressed or explicitly defaulted it will be assumed that contractually scheduled interest payments will not be made so no ongoing interest accrual is recognised, but in some situations such as very recent perceived deterioration in creditworthiness there may still be an expectation that near-term interest payments will be paid and interest accrual will still be recognised.

The approach is to handle bond in price based not model derived valuation. This means that the bond is handled as an asset and price is the price in the screen. In that sense, the details of the bond (e.g. callable / credit contingency) does not have any impact in the price. In DBAanalytics, this is achieved using setting the flag PriceBased to YES and price is obtained from the MKTDATA object.

In the MKTDATA object, price is quoted as of Bond settlement date which 1 business date from valuation date. Hence the PV of the trade writes as follows:

$$PV = Notional * DF_{OIS}(T_{BondSettle}) * Price/100$$ (68)

Where Notional is -1,635,000 USD, Bond Settlement Date is 4th June 2019, valuation date is 3rd June 2019. Dirty price quoted is 93.

### 4.21.1 EOD Testing

#### 4.21.1.1 Cashflow Table and Manual Replication

Presented below is the PV Replication table for the trade. It is seen that Manual computed PV is in excellent agreement with the DBA one.

| ValuationDate | 3rd June, 2019 |
| --- | --- |
| BondSettleDate | 4th June, 2019 |
| DiscFact | 0.999934 |
| SpotDirtyPrice | 93 |
| FwdDirtyPrice | 92.99382 |
| DBA Price | -1520448.949976 |
| Man Price | -1520448.949976 |
| Error | 0.0 |

Table 136: Manual Replication of PV of the CorpBondDistressed Trade.

#### 4.21.1.2 Stability Tests

For the considered CorpBondDistressed, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to curve shifts

Figures 487-489 show the obtained PVs, Flatdeltas, and Flatgammas of the CorpBondDistressed when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 487: PV of the CorpBondDistressed as a function of curve shifts.](./Fig/16.png)
![Figure 488: Flatdelta of the CorpBondDistressed as a function of curve shifts.](./Fig/16.png)
![Figure 489: Flatgamma of the CorpBondDistressed as a function of curve shifts.](./Fig/17.png)

b) Stability with respect to risk factor shifts

No dependency is seen for OIS spread shifts as we are discounting the cashflows at one business date from valuation date.

#### 4.21.1.3 Taylor Test

Figure 490 shows the PV of the CorpBondDistressed computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 490: PV of the CorpBondDistressed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/17.png)

#### 4.21.1.4 Comparison with Other Models

Currently model is implemented in DBL. Hence, no comparison is presented at this point.

### 4.21.2 CCAR Testing

In this section, we test the CorpBondDistressed trade as described in Subsection 4.21 under the CCAR 2022 scenarios and compare them with the Base scenario.

#### 4.21.2.1 Scenario Curves

Figure 491 shows the scenario curves for the underlying rate affecting the CorpBondDistressed.

![Figure 491: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/18.png)

#### 4.21.2.2 Stability Tests

For the considered CorpBondDistressed, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2022 scenarios.

a) Stability with respect to Curve Shifts

Figures 492-494 show the obtained PVs, Flatdeltas, Flatgammas of the CorpBondDistressed when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 492: PV of the CorpBondDistressed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)
![Figure 493: Flatdelta of the CorpBondDistressed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)
![Figure 494: Flatgamma of the CorpBondDistressed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/19.png)

b) Stability with respect to risk factor shifts

As SWAP is the only risk factor, no further testing is presented at this point.

#### 4.21.2.3 Taylor Approximation under CCAR

Eventually, Figures 495 and 496 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 495: PV of the CorpBondDistressed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/20.png)
![Figure 496: PV of the CorpBondDistressed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/20.png)

### 4.21.3 IRRBB Testing

In this section, we test the stability of the CorpBondDistressed trade as described in Subsection 4.21 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.21.3.1 Scenario Curves

Figure 497 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 497: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/20.png)

#### 4.21.3.2 Stability Tests

For the considered CorpBondDistressed, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 498–503 show the obtained PVs of the CorpBondDistressed in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 498: PV of the CorpBondDistressed under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/1.png)

![Figure 499: PV of the CorpBondDistressed under curve shifts for the Base scenario and the parallel scenarios.](./Fig/2.png)

![Figure 500: PV of the CorpBondDistressed under curve shifts for the Base scenario and the short scenarios.](./Fig/3.png)

![Figure 501: PV of the CorpBondDistressed under curve shifts for the Base scenario and the long scenarios.](./Fig/4.png)

![Figure 502: PV of the CorpBondDistressed under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/5.png)

![Figure 503: PV of the CorpBondDistressed under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/6.png)

### 4.21.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the CorpBondDistressed trade as described in Subsection 4.21.

Table 137 lists the underlying risk factors of the CorpBondDistressed. In particular, we can observe that the product is sensitive to all its risk factors. Given the PV of the trade is based on discounting of price which is one business day from valuation date, shocks are not available, hence no testing is presented at this point.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | USD | USD | SWAP | YES (*) |
| IRCURVE | USD | USD | OISSPREAD | NO |
| BONDPRICEBASEDMKTDATA | USD | PRICEBASEDMKTDATA | YES(*) | YES(*) |

Table 137: Risk factors for the CorpBondDistressed. It is to be noted, no shocks are available for * marked risk factors.

### 4.22 Product Testing : EqDeltaOne_QISSwap

#### 4.22.0.1 Index Description

Underlying index (Ticker : DBDCONIA_QIS) tracks 1B LIBOROIS rate and is calculated as follows. Denote $IL(t)$ as Index level at time $t$ and is calculated as follows:

$$IL(T) = IL(0) \cdot (1 + L_{OIS}(t, t + 1B))$$

Where $L_{OIS}(.)$ denotes the 1B OIS forward rate.

A forward on the OIS strategy forces an investor to buy/sell their strategy position at a predetermined future date at a predetermined price. OIS strategies are modelled with a flat forward. Risk is reported to the strategy rather than decomposed to the underlyings of the strategy.

#### 4.22.0.2 Trade Description

We consider such a security in DELTAONE template which is used to model a cashflow which can be cancelled by the client. Given the existing fees, it is assumed that the client cancels the deal on valuation date. As a result, the PV (denominated in EUR) of the deal writes as follows:

$$PV = Notional \cdot DF(Funding, T_{Pay}) \cdot [IL(ValuationDate) - IL(AccrualBegin)] - Fees$$

Where $IL(t)$ denotes the index value of the underlying at time $t$, $DF(.)$ denotes the discount factor which is 1.0 as trade is valued on curve valuation date. More trade details are provided below:

* Pay Date ($T_{Pay}$): 14 September, 2024
* Accrual Begin: 21 June, 2024
* Valuation Date: 11 September, 2024
* Notional: 10, 000 EUR(scaled)
* Fees: 0
* Funding Name: ecd – desk – funding – eur

#### 4.22.1 EOD Testing

##### 4.22.1.1 Cashflow Replication

Here we present the cashflow replication of the said deal. In order to calculate the $IL(t)$, a synthetic trade is created in EQOPI security template to mimic the index. Then we calculate the coupon and hence the PV manually using the equation 70 and we see DBA PV and manually PVs are in close agreement with each other. The tests are passed.

| SetDates | LastSetDates | PayDates | Notional | IL(t, DBA) | IL(t, Man) | DBA PV | Man. PV | Error |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20240621 | 20240911 | 20240914 | 1 | 146.442 | 146.442 | 1.244 | 1.244 | 0.0 |

Table 138: Cashflow replication of the EqDeltaOne_QISSwap Deal. Note that replication is done for 1 EUR notional.

##### 4.22.1.2 Stability Tests

For the considered trade, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to EUR RFR Curve

Figures 504-506 show the obtained PV, Flatdelta, and Flatgamma of the EqDeltaOne_QISSwap when the underlying EUR RFR curve is shifted, respectively. It can be seen as on increasing rates, 1B forward rate increases hence discount factor will have a negative impact than an increasing trend in PV as corroborated from the below plots. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 504: PV of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/7.png)

![Figure 505: Flatdelta of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/8.png)

![Figure 506: Flatgamma of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/9.png)

b) Stability with respect to Basis Spreads

Figures 507-509 show the obtained PV, Flatdelta, and Flatgamma of the EqDeltaOne_QISSwap when the underlying EUR Basis spreads are shifted, respectively. It can be seen as on increasing spreads, 1B forward rate increases hence increasing trend in PV as corroborated from the below plots. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered spread shifts, as expected.

![Figure 507: PV of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/10.png)

![Figure 508: Flatdelta of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/11.png)

![Figure 509: Flatgamma of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/12.png)

c) Stability with respect to Discount Spreads

Figures 510-512 show the obtained PV, Flatdelta, and Flatgammas of the EqDeltaOne_QISSwap when the underlying EUR Discount spreads for the funding name are shifted, respectively. It can be seen as on increasing relevant spreads, discount factor decreases with no impact on forwards, PV is expected to decrease. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered spread shifts, as expected.

![Figure 510: PV of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/13.png)

![Figure 511: Flatdelta of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/14.png)

![Figure 512: Flatgamma of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/15.png)

#### 4.22.1.3 Taylor Test

Figure 513 shows the PV of the EqDeltaOne_QISSwap computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 513: PV of the EqDeltaOne_QISSwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/16.png)

#### 4.22.1.4 Comparison with Other Models

This product is only approved for DBSMC model, hence no model benchmarking test is presented at this point.

### 4.22.2 CCAR Testing

In this section, we test the EqDeltaOne_QISSwap trade as described in Subsection 4.22 under the recent CCAR 2023 scenarios and compare them with the Base scenario.

#### 4.22.2.1 Scenario Curves

Figure 514 shows the scenario curves for the underlying rate affecting the EqDeltaOne_QISSwap.

![Figure 514: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/17.png)

#### 4.22.2.2 Stability Tests

For the considered trade, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

a) Stability with respect to EUR RFR Curve

Figures 515-517 show the obtained PV, Flatdelta, and Flatgamma of the EqDeltaOne_QISSwap when the underlying EUR RFR curve is shifted, respectively under Base and CCAR scenarios.

![Figure 515: PV of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/18.png)

![Figure 516: Flatdelta of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/19.png)

![Figure 517: Flatgamma of the EqDeltaOne_QISSwap as a function of curve shifts.](./Fig/20.png)

b) Stability with respect to Basis Spreads

Figures 518-520 show the obtained PV, Flatdelta, and Flatgamma of the EqDeltaOne_QISSwap when the underlying EUR Basis spreads are shifted, respectively under Base and CCAR scenarios.

![Figure 518: PV of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/21.png)

![Figure 519: Flatdelta of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/22.png)

![Figure 520: Flatgamma of the EqDeltaOne_QISSwap as a function of EUR Basis spread shifts.](./Fig/23.png)

c) Stability with respect to Discount Spreads

Figures 521-523 show the obtained PV, Flatdelta, and Flatgammas of the EqDeltaOne_QISSwap when the underlying EUR Discount spreads for the funding name are shifted, respectively under Base and CCAR scenarios.

![Figure 521: PV of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/24.png)

![Figure 522: Flatdelta of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/25.png)

![Figure 523: Flatgamma of the EqDeltaOne_QISSwap as a function of EUR Discount spread shifts.](./Fig/26.png)

#### 4.22.2.3 Taylor Approximation under CCAR

Eventually, Figures 524 and 525 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 524: PV of the EqDeltaOne_QISSwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/27.png)

![Figure 525: PV of the EqDeltaOne_QISSwap as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/28.png)

#### 4.22.2.4 Comparison with Other Models

This product is only approved for DBSMC model, hence no model benchmarking test is presented at this point.

### 4.22.3 IRRBB Testing

In this section, we test the stability of the EqDeltaOne_QISSwap trade as described in Subsection 4.22 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.22.3.1 Scenario Curves

Figure 526 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 526: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/29.png)

#### 4.22.3.2 Stability Tests

a) Stability with respect to EUR RFR Curve

For the considered EqDeltaOne_QISSwap, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 527-532 show the obtained PVs of the EqDeltaOne_QISSwap in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 527: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/30.png)

![Figure 528: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and the parallel scenarios.](./Fig/31.png)

![Figure 529: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and the short scenarios.](./Fig/32.png)

![Figure 530: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and the long scenarios.](./Fig/33.png)

![Figure 531: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/34.png)

![Figure 532: PV of the EqDeltaOne_QISSwap under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/35.png)

b) Stability with respect to EUR Basis Spreads

For the considered EqDeltaOne_QISSwap, we test the stability of the PV under absolute shifts of the EUR Basis spreads for the Base and the IRRBB scenarios. Figures 533-538 show the obtained PVs of the EqDeltaOne_QISSwap in the respective scenarios when the discount spreads is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered Basis spread shifts.

![Figure 533: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/36.png)

![Figure 534: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the parallel scenarios.](./Fig/37.png)

![Figure 535: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the short scenarios.](./Fig/38.png)

![Figure 536: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the long scenarios.](./Fig/39.png)

![Figure 537: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/40.png)

![Figure 538: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/41.png)

c) Stability with respect to Discount Spreads

Figures 539-544 show the obtained PV, Flatdelta, and Flatgammas of the EqDeltaOne_QISSwap when the underlying EUR Discount spreads for the funding name are shifted, respectively under Base and IRRBB scenarios.

![Figure 539: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and all IRRBB scenarios.](./Fig/42.png)

![Figure 540: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the parallel scenarios.](./Fig/43.png)

![Figure 541: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the short scenarios.](./Fig/44.png)

![Figure 542: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the long scenarios.](./Fig/45.png)

![Figure 543: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/46.png)

![Figure 544: PV of the EqDeltaOne_QISSwap under Basis spread shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/47.png)

### 4.22.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the EqDeltaOne_QISSwap trade as described in Subsection 4.22.

Table 139 lists the underlying risk factors of the EqDeltaOne_QISSwap. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 545.

| Type | Currency | AssetName | RiskFactor | Sensitivity | Shocks Available |
| --- | --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | BASISSPREAD-EONIA/OIS-1B | YES | NO |
| IRCURVE | EUR | EUR | DISCOUNTSPREAD | YES | NO |
| IRCURVE | EUR | EUR | SPOTLIBORSPREAD-3M | YES | NO |
| IRCURVE | EUR | EUR | SWAP | YES | YES |
| INDEXMKTDATA | EUR | .DBDCONIA_QIS | FORWARD | NO | NO |

Table 139: Risk factors for the EqDeltaOne_QISSwap.

![Figure 545: Transition of the PV of the EqDeltaOne_QISSwap in the up and down stressed scenarios.](./Fig/48.png)

### 4.23 Product Testing : IRIndexSingle_DURBIAS, MR : 2024Jun07-SCHAARN-21780

In this section, we covers the testing for full approval of the product IRIndexSingle_DURBIAS which is covered in Mars Request 2024Jun07-SCHAARN-21780.

#### 4.23.1 Index Description

The underlying index (Ticker : DBDRUS10) tracks the performance of a 10Y fixed-for-floating swap, where receiver receives coupon Annually at 4.3% and pays 1Y SOFR rate (RateIndexType - LIBOROIS) annually. Underlying swap runs from 30th April, 2024 to 28th April, 2034. Swap is struck at par on swap effective date. Swap is denominated in USD.

#### 4.23.2 Index Calculation

On each index trading day, underlying index value is calculated as follows:

$$IL(t) = IL(0) \cdot (1 + PV_{t,Fixed} - PV_{0,Fixed} - (PV_{t,Float} - PV_{0,Float}))$$
$$= IL(0) \cdot (1 + PV_{t,Fixed} - PV_{0,Float});$$
$$= IL(0) + PV_{SWAP}$$

Where $IL(t), IL(0)$ denotes the index value at index trading day $t$ and at swap effective date i.e. 30th April, 2024. $IL(0) = 185.8116$.

#### 4.23.3 Product Description

The deal is templated in a DELTAONE DBA security which is used to model a cashflow which can be cancelled by the client. Given the existing fees, it is assumed that the client cancels the deal on valuation date. As a result, the PV (denominated in USD) of the deal writes as follows:

$$PV = Notional \cdot DF(T_{Pay}) \cdot [IL(ValuationDate) - IL(AccrualBegin)] - Fees$$

Where $IL(t)$ denotes the index value of the underlying at time $t$, $DF(.)$ denotes the discount factor which is 1.0 as trade is valued on curve valuation date. More trade details are provided below:

* Valuation Date ($T_{val}$): 29 May, 2024
* Accrual Begin: 23 May, 2024
* Notional: 104, 549.67 USD
* Fees: 0

#### 4.23.4 Index Replication and CashFlow Tables

In this section, work is presented to replicate the Durabis Index.In order to do so, a synthetic trade is created in SWAP template to mimic the index. Following are the trade details used.

| Property | Receive Leg | Pay Leg |
| --- | --- | --- |
| Notional | 185.8116 | 185.8116 |
| EffectiveDate | 20240430 | 20240430 |
| RollDate | 20240430 | 20240430 |
| EndDate | 20340428 | 20340428 |
| Frequency | ANNUALLY | ANNUALLY |
| SetFraction | 0 | 1 |
| DaysOffset | 0 | 0 |
| ArrearInterval | 1y | 0m |
| RateCities | LDN,NYT | LDN,NYT |
| RateAverageType | NOAVG | EONIA |
| RateLookInterval | UNSET | 1b |
| RateIndexType | FIXED | LIBOROIS |
| RateIndexSubType | UNSET | SOFR |
| RateStartingTime | 0y | 0y |
| RateTerm | 12m | 1b |
| RateBasis | ACT/360 | ACT/360 |
| RateCurrency | USD | USD |
| RateFixingInfo | NONE | USD-SOFR |
| Power | 1 | 1 |
| Multiplier | 0 | 1 |
| Spread | 0.0429598645 | 0 |
| PayBasis | ACT/360 | ACT/360 |
| PayCurrency | USD | USD |

Table 140: Trade details used in SWAP to replicate the Duration Bias Index.

Now we present the Cashflowtable for receive leg and pay leg respectively of the synthetic swap.

| SetDates | PayDates | DayCount | Coupon | PVLot |
| --- | --- | --- | --- | --- |
| 20240430 | 20250430 | 1.013889 | 0.04296 | 7.715096 |
| 20250430 | 20260430 | 1.013889 | 0.04296 | 7.374048 |
| 20260430 | 20270430 | 1.013889 | 0.04296 | 7.077302 |
| 20270430 | 20280428 | 1.011111 | 0.04296 | 6.784689 |
| 20280428 | 20290430 | 1.019444 | 0.04296 | 6.575614 |
| 20290430 | 20300430 | 1.013889 | 0.04296 | 6.284893 |
| 20300430 | 20310430 | 1.013889 | 0.04296 | 6.038321 |
| 20310430 | 20320430 | 1.016667 | 0.04296 | 5.814973 |
| 20320430 | 20330429 | 1.011111 | 0.04296 | 5.553251 |
| 20330429 | 20340428 | 1.011111 | 0.04296 | 5.330985 |

Table 141: Receive leg cash flow table of the synthetic SWAP.

| SetDates | PayDates | DayCount | Coupon | PVLot |
| --- | --- | --- | --- | --- |
| 20250430 | 20250430 | 1.013889 | 0.052789 | 9.480336 |
| 20260430 | 20260430 | 1.013889 | 0.045615 | 7.829779 |
| 20270430 | 20270430 | 1.013889 | 0.041355 | 6.812895 |
| 20280428 | 20280428 | 1.011111 | 0.039828 | 6.250059 |
| 20290430 | 20290430 | 1.019444 | 0.039531 | 6.050730 |
| 20300430 | 20300430 | 1.013889 | 0.040000 | 5.851859 |
| 20310430 | 20310430 | 1.013889 | 0.040275 | 5.660965 |
| 20320430 | 20320430 | 1.016667 | 0.040578 | 5.492536 |
| 20330429 | 20330429 | 1.011111 | 0.040952 | 5.293758 |
| 20340428 | 20340428 | 1.011111 | 0.041235 | 5.116966 |

Table 142: Pay leg cash flow table of the synthetic SWAP.

Now we present the cashflow table of the DELTAONE deal, where coupon and PV is manually calculated and compared against DBA values. It is seen that numbers are in close agreement with each other. The tests are passed.

| SetDates | LastSetDates | PayDates | Notional | Coupon | Coupon_Man | PVLet | PV_Man | Error |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20240523 | 20240529 | 20240529 | 104549.67 | -1.7936 | -1.7936 | -187522.4 | -187522.4 | 3.0E-09 |

Table 143: Manual Replication of the Coupon and PV of the IRIndexSingle_DURBIAS trade.

#### 4.23.5 EOD Testing

##### 4.23.5.1 Stability Testing : USD RFR Curve Shift

Here we checked the Stability of PV, Flat Delta and Flat Gamma of the IRIndexSingle_DURBIAS trade as detailed in 4.23 under parallel shifts of the USD curve. In particular, we can observe that the profiles change smoothly under the considered USD RFR curve shifts in all scenarios, as expected. When rates are increasing, discount factor decreases and at the same time floating coupon increases, and as swap is long dated, decrease in discounting effect is more than increase in floating rates, hence PV is expected to decrease with increase in curve shift.

![Figure 546: PV of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/49.png)

![Figure 547: FLATDELTA (USD) of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/50.png)

![Figure 548: FLATGAMMA (USD) of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/51.png)

#### 4.23.5.2 Taylor Test

Figure 549 shows the PV of the IRIndexSingle_DURBIAS computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 549: PV of the IRIndexSingle_DURBIAS as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/52.png)

### 4.23.6 CCAR Testing

In this section, we test the IRIndexSingle_DURBIAS trade as described in 4.23 under the recent CCAR 2023 scenarios and compare them with the Base scenario.

#### 4.23.6.1 Scenario Curves

Presented below chart shows the scenario curves for the underlying rate curves affecting this product under Base and latest CCAR scenarios.

![Figure 550: Plot of the zero rate of USD Curve under the Base scenario and the CCAR scenarios.](./Fig/53.png)

For the considered IRIndexSingle_DURBIAS, we test the stability of the PV, Flatdelta Flatgamma and FXDelta under absolute shifts of the underlying IR curve and relative shifts of FX Curve under the Base scenario and under latest CCAR 2023 scenarios.

#### 4.23.6.2 Stability Testing : USD RFR Curve Shift

![Figure 551: PV of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/54.png)

![Figure 552: FLATDELTA (USD) of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/55.png)

![Figure 553: FLATGAMMA (USD) of the IRIndexSingle_DURBIAS as a function of USD curve shifts.](./Fig/56.png)

#### 4.23.6.3 Taylor Expansion Consistency Testing

Now we show the Taylor series based Approximate PVs for the said trade. Here we simultaneously shift the underlying curves and FX assets and checked the PV profile and calculated the relative difference of DBA and Manual calculated Taylor Approximated PV. Overall, The 3D plot surface plot shows PV changes smoothly under underlying curve shifts and FX Spot shifts. The contour plot of relative errors shows the close match between DBA and Taylor approximated numbers with differences only being significant for large moves in risk factors. This is expected and results shows adequacy of Delta and Gamma risks for risk management.

#### CCAR1 Scenarios

Figure 554 shows the PV of the IRIndexSingle_DURBIAS computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for considered shift.

![Figure 554: PV of the IRIndexSingle_DURBIAS as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/57.png)

#### CCAR2 Scenarios

Figure 555 shows the PV of the IRIndexSingle_DURBIAS computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for considered shift.

![Figure 555: PV of the IRIndexSingle_DURBIAS as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/58.png)

### 4.23.7 IRRBB Testing

In this section, we test the stability of the IRIndexSingle_DURBIAS trade as described in section 4.23 under the IRRBB scenarios and compare them with the Base scenario.

#### 4.23.7.1 Scenario Curves

Presented below chart shows the scenario curves for the underlying rate curves affecting this product. The effects of each scenario are as expected by their names, for example, the parallel up is a parallel shift of the base curve.

![Figure 556: Plot of the zero rate of USD Curve under the Base scenario and the IRRBB scenarios.](./Fig/59.png)

#### 4.23.7.2 Stability Testing : USD RFR Curve Shift

We test the stability of the PV under absolute shifts of the USD Curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered shifts.

![Figure 557: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/60.png)

![Figure 558: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and the parallel scenarios.](./Fig/61.png)

![Figure 559: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and the short scenarios.](./Fig/62.png)

![Figure 560: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and the long scenarios.](./Fig/63.png)

![Figure 561: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/64.png)

![Figure 562: PV of the IRIndexSingle_DURBIAS under USD curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/65.png)

### 4.23.8 MultiVariate Testing

In this section, we show the results of the multivariate test for the IRIndexSingle_DURBIAS trade as described in Subsection 4.23.

Table 144 lists the underlying risk factors of the IRIndexSingle_DURBIAS. In particular, we can observe that the product is sensitive to all its risk factors. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 563.

| Type | Currency | AssetName | RiskFactor | Sensitivity | MRM Shock Available |
| --- | --- | --- | --- | --- | --- |
| IRCURVE | USD | USD | SWAP | YES | YES |
| INDEXMKTDATA | USD | DBDRUS10 | FORWARD | YES | NO |

Table 144: Risk factors for the IRIndexSingle_DURBIAS.

![Figure 563: Transition of the PV of the IRIndexSingle_DURBIAS in the up and down stressed scenarios.](./Fig/66.png)

### 4.24 Model Parameter Testing

#### 4.24.1 CURVE

The model parameters that belong to the CURVE object and their corresponding rules are described in Table 145.

| Rule | MinCond. ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| CURVE0017_48_R | NO | CURVE:: NATURALTOLERANCE | leq | 10 | See Section 4.24.1.11 |
| CURVE0017_48_R | NO | CURVE:: NATURALTOLERANCE | likes | *d | See Section 4.24.1.11 |
| Rules0446_2_R | NO | CURVE:: CASH:: BASECURVE | in | NONE, LIBOR, LIBOR-*, OIS, OIS-* | See Section 4.24.1.14 |
| CURVE0007_73_R | YES | CURVE:: BASERATETYPE | neq | OIS | |
| CURVE0007_73_R | NO | CURVE:: OISUSEBASECURVE | in | NO, YES, HYBRID | See Section 4.24.1.9 |
| CURVE0013_96_R | NO | CURVE:: TURNMETHOD | in | CONSTANT_CASH, CONSTANT_FORWARD, PARALLEL_ZERO | See Section 4.24.1.2 |
| Rules0130_2_R | NO | CURVE:: BASERATETYPE | in | LIBOR, LIBOR-*, OIS, OIS-* | See Section 4.24.1.17 |
| Rules0127_2_R | YES | CURVE:: USETYPE | in | DISCOUNTBASIS, LIBOR | |
| Rules0127_3_R | YES | CURVE:: SPREADBUILDMETHOD | unlike | "-" | |
| Rules0127_3_R | NO | CURVE:: SPREADBUILDMETHOD | in | CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD | See Section 4.24.1.8 |
| CURVE0006_75_R | NO | CURVE:: RECALIBMETHOD | in | APPROX, EXACT, EXACT_FORCED | See Section 4.24.1.10 |
| Rules0658_1_A | NO | CURVE:: MUNILIBORFLOORWEDGE | between | 0, 0.1 | See Section 4.17, [21] |
| CURVE0004_80_R | NO | CURVE:: CURVETYPE | in | LIBOR, SPREAD, CCYBASIS, BASIS, RBA | See Section 4.24.1.16 |
| CURVE0023_82_R | NO | CURVE:: HYBRIDCONSTANTFORWARDCONNECTION | in | LINEAR, QUADRATIC | See Section 4.24.1.7 |
| CURVE0020_76_R | NO | CURVE:: OISDATECOMPRESSION | in | NO, YES | See Section 4.24.1.13 |
| CURVE0010_92_R | NO | CURVE:: SPOTLIBORUSEBASECURVE | in | NO, YES | See Section 4.24.1.9 |
| Rules0126_4_R | YES | CURVE:: CASH:: SPREADBUILDMETHOD | unlike | "-" | |
| Rules0126_4_R | NO | CURVE:: CASH:: SPREADBUILDMETHOD | in | CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD | See Section 4.24.1.8 |
| Rules0129_7_R | YES | CURVE:: *SPREADS:: SPREADBUILDMETHOD | like | "-" | |
| Rules0129_7_R | NO | CURVE:: *SPREADS:: SPREADBUILDMETHOD | in | LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD | See Section 4.24.1.8 |
| Rules0125_2_R | NO | CURVE:: TURNSPREADEXTRAPOLATIONS:: EXTRAPOLATION | in | PERIODIC, QUARTEREND | See Section 4.24.1.12 |
| Rules0699_1_A | NO | CURVE:: MUNILIBORFLOORWEDGE | between | 0, 0.1 | See Section 4.17, [21] |
| CURVE0005_55_R | NO | CURVE:: EXTRAPMETHOD | in | CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE | See Section 4.24.1.5 |
| CURVE0044_4_R | NO | CURVE:: AVERAGINGCONVEXITY | eq | VOL | OK |
| Rules0123_12_R | NO | CURVE:: TREASURYUSEBASECURVE | in | NO, YES | See Section 4.24.1.9 |
| CURVE0019_94_R | NO | CURVE:: CCYUSEBASECURVE | in | NO, YES | See Section 4.24.1.9 |
| CURVE0002_97_R | NO | CURVE:: BUILDMETHOD | in | CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD | See Section 4.24.1.6 |
| Rules0126_3_R | YES | CURVE:: SPREADBUILDMETHOD | like | "-" | |
| Rules0128_8_R | NO | CURVE:: SPREADBUILDMETHOD | in | LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD | See Section 4.24.1.8 |
| Rules0697_1_A | NO | CURVE:: MUNILIBORFLOORWEDGE | between | 0, 0.1 | See Section 4.17, [21] |
| CURVE0003_95_R | NO | CURVE:: CASHTOFUTURE | in | EXACT, EXACTCASH, EXACTCASH-1, CASHPRIORITY, LINEAR, NONE | See Section 4.24.1.3 |
| CURVE0011B_35_R | YES | CURVE:: SPREADBUILDMETHOD | unlike | "-" | |
| CURVE0011B_35_R | NO | CURVE:: SPREADBUILDMETHOD | in | LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD | See Section 4.24.1.8 |
| CURVE0001_55_R | NO | CURVE:: ADDPAR | in | NONE, LINEAR | See Section 4.24.1.1 |
| CURVE0015_82_R | NO | CURVE:: USETYPE | in | CROSSCCY, SWAP, COUNTERBASIS, LIBOR, INFLATION, TREASURY, CONVERTIBILITY | See Section 4.24.1.16 |
| CURVE0011D_31_R | YES | CURVE:: *SPREADS:: SPREADBUILDMETHOD | unlike | "-" | |
| CURVE0011D_31_R | NO | CURVE:: *SPREADS:: SPREADBUILDMETHOD | in | LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD | See Section 4.24.1.8 |
| CURVE0009_92_R | NO | CURVE:: SMOOTHFUTURES | in | NO, YES, BACKWARD, BACKWARDDAILY | See Section 4.24.1.4 |

Table 145: CURVE parameters and their rules, along with the obtained validation results.

##### 4.24.1.1 AddPar

The curve property AddPar controls the interpolation technique used to insert implied par swap rates between quoted ones. Allowed values in production are NONE and LINEAR. DBA recommends not using the feature (i.e., using AddPar = NONE). The feature controls interpolation of swap rate levels by adding synthetic swap instruments whose maturities are from coupon dates of registered swap instruments. The levels of these synthetic swap instruments are coming from interpolation in linear (AddPar = LINEAR).

![Figure 564: Graph showing par Swap rates profile. When Addpar is set to LINEAR DBA interpolates linearly between the swap rates given in the Swap table. The results behave as expected.](./Fig/67.png)

![Figure 565: Graph showing ZeroRates when AddPar = LINEAR and AddPar = LINEAR. As expected the graphs are similar to the SwapRate.](./Fig/68.png)

##### 4.24.1.2 TurnMethod

The TurnMethod property dictates how rates should be calculated when one future completely encloses another, i.e. when an enclosing future both settles before and matures after another future - a situation that typically occurs when a turn future is enclosed by the first quarterly future. Even after both futures have been repriced, a further constraint is required to describe how the rates in the two segments of the enclosing future that neighbour the turn future are related. There are three possible settings:

- CONSTANT_CASH, the default setting, which forces the cash rates across the two segments to be equal.
- CONSTANT_FORWARD, which forces the forward rates across the two segments to be equal.
- PARALLEL_ZERO, which forces the gradients of the zero rates across the two segments to be equal.

So, it was checked first whether the futures are repriced correctly. In all cases, futures table for curve is presented below.

| Settle | Maturity | Price | Convexity | Reprice-CC | Diff-CC | Reprice-CF | Diff-CF | Reprice-PZ | Diff-PZ |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20150520 | 20150820 | 9999.9 | 0 | 9999.9 | -7.3e-12 | 9999.9 | -7.3e-12 | 9999.9 | -7.3e-12 |
| 20150617 | 20150917 | 10000.3 | 0 | 10000.2 | -3.6e-12 | 10000.3 | -3.6e-12 | 10000.3 | -3.6e-12 |
| 20150916 | 20151216 | 10000.3 | 0 | 10000.3 | -1.1e-11 | 10000.3 | -1.1e-11 | 10000.3 | 1.1e-11 |
| **20151216** | **20160316** | **10000.5** | **0** | **10000.5** | **1.8e-12** | **10000.5** | **1.8e-12** | **10000.5** | **1.8e-11** |
| 20151231 | 20160104 | 10000 | 0 | 10000.0 | 4.9e-11 | 10000.0 | 4.9e-11 | 10000.0 | 1.5e-10 |
| 20160316 | 20160616 | 10000.8 | 0 | 10000.8 | 0.0e+00 | 10000.8 | 0.0e+00 | 10000.8 | 0.0e+00 |
| 20160615 | 20160915 | 10001.3 | 0 | 10001.3 | -1.1e-11 | 10001.3 | -1.1e-11 | 10001.3 | -1.1e-11 |
| 20160921 | 20161221 | 10000.8 | 0 | 10000.8 | 3.6e-12 | 10000.8 | 3.6e-12 | 10000.8 | 3.6e-12 |
| 20161221 | 20170321 | 9999.6 | 0 | 9999.6 | -1.8e-12 | 9999.6 | -1.8e-12 | 9999.6 | -1.8e-12 |
| 20170315 | 20170615 | 9998.0 | 2e-05 | 9998.0 | -1.8e-12 | 9998.0 | -1.8e-12 | 9998.0 | -1.8e-12 |

Table 146: Table showing repriced futures for TurnMethod parameter values. It is seen futures are repriced correctly especially turn future one (marked in bold) and future enclosing the turn future (marked as *) with adequate accuracy for values CONSTANT_CASH (CC), CONSTANT_FORWARD (CF) and PARALLEL_ZERO (PZ).

Next, we check whether settings are correctly implemented and checked using the repricing instruments in curve object.

| Parameter | Metric | Segment1 Value | Segment2 Value | Abs Error |
| --- | --- | --- | --- | --- |
| CONSTANT_CASH | Cash Rate | -5.266e-5 | -5.266e-5 | 3.6e-15 |
| CONSTANT_FORWARD | Forward Rate | -5.266e-5 | -5.266e-5 | 2.2e-10 |
| PARALLEL_ZERO | Zero Rate Gradient | 4.377e-5 | 4.377e-5 | 1.2e-9 |

Table 147: Table repricing rates across segments of the TurnFuture. It is seen values across segments are in-line with each other with adequate accuracy for all the parameter values. Segment1 refer to period between 16th December 2015 to 31st December 2015 whereas segment2 refers to the period between 4th January 2016 to 16th March 2016.

![Figure 566: From RHS CONSTANT_CASH and CONSTANT_FUTURE, fair rate between either side of the turn future is seen to be equal and LHS, it is seen zero rates profile is parallel for the segments consistent with table 147.](./Fig/69.png)

In conclusion, it is observed for TurnMethod, futures are repriced correctly with adequate accuracy for all the values. All the setting mentioned above is consistent with the visual assessment for the said method. In case of PARALLEL_ZERO, overnight forwards have relatively lower jump than other parameter values.

##### 4.24.1.3 CashToFuture

This property used to specify the interpolation rule when cash and future instruments are overlapped. Possible values allowed in production are NONE, LINEAR, EXACT, EXACTCASH, CASHPRIORITY, EXACTCASH-1.

- When CashToFuture equals NONE, the curve starts the futures bootstrap using the stub rate implied by the shortest cash instrument to mature after the first futures settlement date. The potential problem with this method is that it sometimes causes spot rates to jump suddenly close to the first futures settlement date.
- In LINEAR mode, curve creates a NEW synthetic cash instrument which matures on first futures settlement date with a cash rate being the linear interpolation between instruments that mature either side of the first futures settlement date.
- In EXACT mode, all cash and future instruments are repriced exactly and sometimes leads to jumps in Overnight forward rates.
- In EXACTCASH, curve creates a NEW synthetic cash instrument which matures on first futures settlement date and cash stub rate is calculated such that cash and future instruments are repriced exactly.
- In EXACTCASH-1 mode, which is a small variant of the EXACTCASH which support multiple cash with different maturity and different settlement date. The idea is to keep only one cash overlapped with futures. If there are more than one cashes overlapped with futures, then cash with smallest maturity date is chosen for curve construction.
- In CASHPRIORITY mode, cash instruments have a precedence over Futures/FRAs which is in stark contrast to the StanislavLevyInterpolation in general where Futures/FRAs have precedence over cash instruments. So the Futures that mature before the cash are not included in curve construction and futures are truncated to settle on the maturity date of the last cash instrument.

First we plotted Overnight forward rates for variation in CashToFuture mode from settlement date to first future settlement date. Also cash stub rate was calculated with variation in cash stub duration which is given by the number of days between cash settlement date and first future settlement date. Cash stub rate is the implied rate between curve settlement date to first future settlement date.

![Figure 567: Overnight Forward rates & Cash stub rates profile with days. It is seen till first future settlement date, forwards are constant which are in expected lines as these are instruments built in CONSTANT_FORWARD set-up in short end of the curve. Around first future settlement date, a slight jump in forward rate is observed. As overlapping between cash and future increases which in-turn leads to decrease in cash stub duration, cash stub rates are lower and vice-versa.](./Fig/70.png)

![Figure 568: Overnight Forward rates & Cash stub rates profile with days. It is seen till first future settlement date, forwards are constant which are in expected lines as these are instruments built in CONSTANT_FORWARD set-up in short end of the curve. Around first future settlement date, a slight jump in forward rate is observed. If compared to NONE mode (see figure 567), it is seen there is one less jump than NONE mode, as a new synthetic cash instrument is made to mature on first future settlement date.](./Fig/71.png)

![Figure 569: Overnight Forward rates & Cash stub rates profile with days. It is seen till first future settlement date, forwards are constant which are in expected lines as these are instruments built in CONSTANT_FORWARD set-up in short end of the curve. As there are no synthetic cash instrument is made and all instruments are repriced exactly.](./Fig/72.png)

![Figure 570: Overnight Forward rates & Cash stub rates profile with days. It is seen till first future settlement date, forwards are constant which are in expected lines as these are instruments built in CONSTANT_FORWARD set-up in short end of the curve. Around first future settlement date, a slight jump in forward rate is observed. If compared to NONE mode (see figure 567), it is seen there is one less jump than NONE mode, as a new cash instrument is made to mature on first future settlement date.](./Fig/73.png)

![Figure 571: Overnight Forward rates & Cash stub rates profile with days for CashToFuture = CASHPRIORITY.](./Fig/74.png)

##### 4.24.1.4 SmoothFutures

Smoothfutures designed to smooth the curve construction at times when one futures are nested. Testing for this parameter is done is previous section (see §4.1.2.3 for more details) hence no testing is presented in this section.

##### 4.24.1.5 ExtrapMethod and ExtrapTime

Property Extrapmethod defines the methodology of extrapolation of rates beyond ExtrapTime (if specified) or the maturity of the longest quoted market instrument (otherwise).The values which are allowed in production are NATIVE (NONE), CONSTANT_FORWARD , CONSTANT_ZERO and CONSTANT_PAR. In NATIVE mode, curve extrapolates the continuously compounded zero rate linearly from the last time point. In CONSTANT_FORWARD mode, continuously compounded forward rate is assumed to be constant after ExtrapTime. In CONSTANT_ZERO, zero rates are assumed to be constant after ExtrapTime.

First we checked the discount factors and applicable rates to check the same.

![Figure 572: Zero rate profile for ExtrapMethod = NATIVE. In NATIVE mode, zero-rates are linearly extrapolated.](./Fig/75.png)

![Figure 573: Zero Rates and Overnight forward rate profile for ExtrapMethod = CONSTANT_FORWARD. In CONSTANT_FORWARD mode, continuously compounded forward rate is constant.](./Fig/76.png)

![Figure 574: Zero rate profile for ExtrapMethod = CONSTANT_ZERO. As detailed above, in CONSTANT_ZERO mode, zero-rates are assumed to be constant after ExtrapTime. In our specific case, ExtrapTime is 70Y.](./Fig/77.png)

![Figure 575: Zero Rates and Swap rates profile for ExtrapMethod = CONSTANT_PAR. As detailed above, in CONSTANT_PAR mode, par swap rates are assumed to be constant after last time point.](./Fig/78.png)

### 4.24.1.6 BuildMethod

Firstly, we see how BuildMethod works. This controls interpolation of the base curve (the curve built off Cash/Futures/Swaps ignoring spread sub tables). Then we build LIBOR CURVE with various BuildMethod in the worksheet "3m,1d,1d Forward" sheet. We test the following BuildMethod which could be used by the Bank:

- LINEAR_ZERO
- CONSTANT_FORWARD
- HYBRID_CONSTANT_FORWARD
- HYBRID_FORWARD
- QUADRATIC_FORWARD

Interpolation in math is found in Curve Type III document [1].

DBA's recommendation is HYBRID_CONSTANT_FORWARD because:

1. It is possible typically to input granular front end instruments (Cash and Futures). In that case, spline interpolation like HYBRID_FORWARD or QUADRATIC_FORWARD would introduce oscillation. With granular input, CONSTANT_FORWARD interpolation would allow us to control interpolation as we want.
2. One will see curve risks with QUADRATIC_FORWARD has big risk spill over. This is because the curve is too smooth.

Curve interpolation has extensively tested in 4.1.2.1.

### 4.24.1.7 HybridConstantForwardConnection

HybridConstantForwardConnection is designed to specify the bridge which links the last future maturity to the first swap maturity. In current curve framework, curve is constructed in CONSTANT_FORWARD till the last maturity point, then in HYBRID_FORWARD from first swap maturity. Possible values to specify the linkage are LINEAR and QUADRATIC. When set to QUADRATIC (default), the first instrument of the long end is built in ratis spline interpolation. When set in LINEAR, first instrument is built using linear interpolation. This property goes with curve property BuildMethod set to HYBRID_CONSTANT_FORWARD.

Here we checked the discount factors and overnight forward rates variation.

![Figure 576: Zero Rates presented in left with varying values for said parameter. As zero rates are averaged over an interval, significant variations is zero rates is not observed for the applicable period.
In right Overnight forward rates are presented. It is seen during period of transition, linear interpolation is used between time pegs for LINEAR mode whereas quadratic spline fitting is used for the Quadratic mode.](./Fig/79.png)

### 4.24.1.8 SpreadBuildMethod

SpreadBuildMethod property is used to control the interpolation in discounting spreads over the backbone curve (built using Cash, Futures/FRAs and Swaps) (like OISSpreads, CCYSpreads, DiscountSpreads and so on) and forecasting spreads (like SpotLiborSpreads, BasisSpreads and so on). Allowed values in production are:

- LINEAR_ZERO
- CONSTANT_FORWARD
- HYBRID_FORWARD
- HYBRID_CONSTANT_FORWARD
- QUADRATIC_FORWARD
- QUADRATIC_CONSTANT_FORWARD.

Testing for this particular parameter is conducted in detail in above section 4.1.2.2, hence no additional tests are presented at this point.

### 4.24.1.9 UseBaseCurve

Curve uses UseBaseCurve property to specify whether to use curves runs while building discounting/forecasting curves. For example, when OISUseBaseCurve = NO (i.e. Z_OIS) the backbone curve is not used, namely

$$DF_{OIS}(t) = Adj_{OIS-base}(t).$$

On the other hand, YES implies bootstrap OIS forecasting/discounting curves by building the adjustment factors on a backbone base curve (curve constructed using Cash, Futures/FRAs and Swaps).

$$DF_{OIS}(t) = DF_{base}(t)Adj_{OIS-base}(t).$$

Similarly CCYUseBaseCurve, SpotLiborUseBaseCurve and TreasuryUseBaseCurve controls usage of backbone curve for CCY, Spot Libor spreads and Treasury discounting/forecasting.

OISUseBaseCurve and CCYUseBaseCurve also support the value HYBRID. When SpreadBuildMethod is HYBRID_CONSTANT_FORWARD and the column SpreadBuildMethod is given in the OISSpreads and/or the CCYSpreads subtable then the CONSTANT_FORWARD instruments will be built with UseBaseCurve NO and the HYBRID_FORWARD instruments with UseBaseCurve YES. The cross over point from NO to YES is the same as from CONSTANT_FORWARD to HYBRID_FORWARD and the discount factor of the base curve at the cross over point is used to join the two segments.

Below, we test OISUseBaseCurve on USD sample curve with valuation date 19 March 2019.

![Figure 577: Plots showing 1d forward rates for front end (left) and long end (right) of the curve. In HYBRID mode, forward profiles are mixture of NO and YES. In SpreadBuildMethod HYBRID_CONSTANT_FORWARD, curve uses NO till the point curve uses CONSTANT_FORWARD and after that it uses HYBRID_FORWARD. The crossover point is 1Y.](./Fig/80.png)

![Figure 578: Plots showing zero rates for front end (left) and long end(right) of the curve.](./Fig/81.png)

Below, we test SpotLiborUseBaseCurve for the AUD with valuation date 29 March 2019.

![Figure 579: Plots showing 1d forward rates for front end (left) and long end (right) of the curve.](./Fig/82.png)

![Figure 580: Plots showing zero rates for front end (left) and long end(right) of the curve.](./Fig/83.png)

Presented below are the results for CCYUseBaseCurve. A sample GBP curve dated on 17th December 2018 is considered for testing. CCY spreads are relative to USD in this case.

![Figure 581: Plots showing 1d forward rates for front end (left) and long end (right) of the curve.](./Fig/1.png)

![Figure 582: Plots showing zero rates for front end (left) and long end(right) of the curve.](./Fig/2.png)

We now consider TreasuryUseBaseCurve for the HKD curve with valuation date 21 February 2020.

## Treasury 1b Forward Rates

![Figure 583: Plots showing 1d forward rates for front end (left) and long end (right) of the curve.](./Fig/3.png)

![Figure 584: Plots showing zero rates for front end (left) and long end(right) of the curve.](./Fig/4.png)

#### 4.24.1.10 RecalibMethod

RecalibMethod = EXACT/EXACTFORCED was introduced to calculate discounting with a foreign funding name keeping the condition below for all t.

$$DF^{DOM}(t) = DF^{CCY}(t)/DF^{FX}(t)DF_{fx}^{fx}(t)$$

EXACTFORCED does the same interpolation as EXACT but would throw an error when we cannot recalibrate (e.g., when we do not have USD CURVE when calculating EUR discounting with USD funding). RecalibMethod = APPROX (default) calculates discount factors on nodes of the domestic DiscountSpreads subtable and re-interpolate discount factor curve with SpreadBuildMethod.

#### 4.24.1.11 NaturalTolerance

NaturalTolerance was introduced not to incorrectly apply LIBOR frequency basis (e.g. 6m-3m basis) to "Natural" rates (RateIndexType = NATURAL) used by legacy trades. For example, if we pay quarterly floating payments, in real cases, we pay 3m LIBOR when calculation period is actually begin + 3m. This can be adjusted from the floating rate definition by adjusting LIBOR calculations. However, in some cases, the floating coupon accrual periods and the length of the period could be slightly different from 3m. Since we don't want to apply 6m-3m basis or 1m-3m basis for this tiny mismatch, we introduce a tolerance, NaturalTolerance, to turn off the adjustments.

When requesting a LIBOR rate that lies between two basis curves (say 4M LIBOR curve when we have 3M and 6M), curve linearly interpolate the rates obtained from the 3M and 6M curves.

$$L_m(T_1,T_2) = L_n(T_1,T_2) + \frac{YF(L_m) - YF(3m)}{YF(6m) - YF(3m)}(L_m(T_1,T_2) - L_n(T_1,T_2))$$

where $YF(.)$ denotes the YearFraction function. When dealing with RateIndexType = NATURAL, which pays/receives the floating rate from set date to paydate and these dates may be different from market standard tenors like 1m, 3m, 6m and so on. For example, if tenor is 3M1D, spotlibor adjustment would be an interpolation between 3M LIBOR curve and 6M LIBOR curve, which would introduce a small risk on 6m-3m basis. With NaturalTolerance, such interpolation is not performed when the tenor in question lies within NaturalTolerance of any one of the SpotLiborSpreads tenors of the LilorBasis. Possible values are any interval less or equal to 10D.

Here we checked the impact of interpolation (if any) for LIBOR tenor curves without natural tolerance. Then we checked 6m-3m*D basis (where * is varied from 1 to 9) with varying natural tolerance.

![Figure 585: On Forward rates and 3M Forward rates using 3M LIBOR curves and interpolated 3M*D LIBOR curves profile. As all the profiles almost overlapping on 3M ones and hence, impact of interpolation is deemed to be insignificant on LIBOR tenor forecasting curves for tenor closest to 3M.](./Fig/5.png)

Then we checked the 6m-3m*D LIBOR basis rates with various NaturalTolerance levels.

![Figure 586: Overnight forward rate basis between 6m and 3M*D LIBOR curves varying NaturalTolerance levels. In all the cases, it is seen that, basis profiles completely overlaps over each other for LIBOR tenors less or equal to 3m plus a given NaturalTolerance level which justifies the rule.](./Fig/6.png)

#### 4.24.1.12 TurnSpreadExtrapolations::Extrapolation

The TurnSpreadExtrapolations subtable was introduced to efficiently handle turn spikes for CCY spreads. Cross currency/FX trading wants to give CCY turn spreads on each quarter end only for the front end (which can be estimated from FX forward slopes) then extrapolate quarter end turn spreads after that by DBAnatytics. Only allowed value in production is PERIODIC-QUARTEREND which means we extrapolate quarter end turn spreads.

As this parameter takes a single value hence no work is presented in this section.

#### 4.24.1.13 OISDateCompression

This property is extensively tested in previous section and hence no work is presented in this section. See 4.1.2.8 for more details.

#### 4.24.1.14 Cash::BaseCurve

The parameter column BaseCurve in the Cash subtable allows the user to input directly in the Cash subtable the OIS/Libor rate rather than through the Spreads Subtable. Possible values are None, LIBOR, LIBOR+, OIS and OIS+. As this just gives an alternative way to input the OIS/Libor rates and these are throughly tested in the MVR, hence we present no work at this point. We refer to the corresponding section for testing of the same.

We now cover the parameters:

* UseType
* CurveType
* UseType and BaseRateType

#### 4.24.1.15 CurveType

The bank is moving to the unified DS2 curve framework. The non-DS2 curve is used only for legacy reasons. In this legacy CURVE framework, UseType determines meaning of "Spreads" and CurveType controls forecasting/discounting (i.e. if we use LIBOR curve or spread curve). This means we need to set up different CURVE for product type.

Currently DBA uses different rules according to the model used. For DBOPT, which is the default convention in utility-functions (DiscFact, FwdRate and so on) uses following rules for calculating forwards and discount rates. Allowed values in production are LIBOR, SPREAD, BASIS, RBASIS and CCYBASIS.

| CurveType | DiscountCurve | ForecastCurve |
| --- | --- | --- |
| LIBOR | LIBOR | LIBOR |
| SPREAD | SPREAD | SPREAD |
| BASIS | SPREAD | LIBOR |
| RBASIS | LIBOR | SPREAD |
| CCYBASIS | SPREAD | LIBOR |

For term structure models(DBM, DBX, DBK and DBL), DBA uses following table for computing forward rates and discount factors.

| CurveType | DiscountCurve | ForecastCurve |
| --- | --- | --- |
| LIBOR | LIBOR | LIBOR |
| SPREAD | SPREAD | SPREAD |
| BASIS | SPREAD | SPREAD |
| RBASIS | LIBOR | LIBOR |
| CCYBASIS | SPREAD | LIBOR |

The application of the parameters will be validated in the corresponding models and no work is presented in this section.

#### 4.24.1.16 UseType

UseType specifies the meaning of spreads subtables in the curve framework. The drawback is only one spread can be used at a time. In order to overcome this, from DS2 onwards, DISCOUNTBASIS is designed to cover all product types by a single curve. Possible values used in the production are LIBOR, DISCOUNTBASIS, CROSSCCY, CROSSCCYSWAP, INFLATION, TREASURY and CONVERTIBILITY.

In LIBOR mode, curve for a single tenor is constructed with the help of cash, Future/FRAs and swap market instruments hence spread subtables are irrelevant in the curve construction which implies CurveType is irrelevant.

From DS2 onwards, DISCOUNTBASIS was introduced to cover all product types in a single curve framework.

Throughout the validation, UseType LIBOR and DISCOUNTBASIS is covered extensively and hence no work is presented in this section.

Similarly For UseType INFLATION is not in the scope of this validation and hence no work is presented in this section.

UseType = CROSSCCY and CROSSCCYSWAP

UseType = CROSSCCYSWAP / CROSSCCY means Spreads are cross currency spreads. In the DS2 framework, the spreads are implied to CCYSpreads subtable. Legacy framework is neither based on the bootstrapping framework cannot handle cross currency spreads (that is, settlement in different CCY than the CCY on which the Basis points).

In the sheet "Price CROSSCCYSWAP", we describe the difference between "CROSSCCY" and "CROSSCCYSWAP" by pricing 10y interest rate swaps and 10y cross currency swaps. For instance, UseType = CROSSCCYSWAP reprices both interest rate swaps and cross currency swaps with spread discounting (by shifting both forecasting and discounting from base LIBOR curve). On the other hand, CROSSCCY does not re-price interest rate swaps because this does not adjust LIBOR forecasting curve. Then the curves with UseType = CROSSCCY cannot be used for pricing interest rate swaps. Below are detailed equations.

$$\sum_{j=1}^{n_{DOM}} (L_j^{DOM}(T_{j-1},T_j) + s^{CCY})D(t,T_j)\Delta_j = 1 - D(t,T_m)$$

whereas $L_j^{DOM}(T_{j-1},T_j)$ is the forward rate calculated from the base curve and discount factors are calculated from the spread curve. Hence with this method, there would be error in valuation of single currency swaps.

On the other hand, in CROSSCCYSWAP, a pair of equations simultaneously solved from using fixed-floating par swap coupons from foreign fixed-floating swap market and spreads for the foreign leg in cross currency swaps. While calculation forward rates are calculated from the LIBOR curve and discount factors from spread curve. The convention for variable notations are same as detailed in model description section.

from foreign fixed-floating swap market:

$$\sum_{j=1}^{n_{FOR}} D^{FOR}(t,T_j)L_j^{FOR}(T_{j-1},T_j)\Delta_j = C_R^{FOR} \sum_{j=1}^{n_{FOR}} D^{FOR}(t,T_j)Delta_j$$

and from fair spread in the non-resettable cross currency swap:

$$D^{DOM}(t,T) + \sum_{j=1}^{n_{DOM}} D^{DOM}(t,T_j)L_j^{DOM}(T_{j-1},T_j) + s^{DOM}\Delta_j = D^{FOR}(t,T) + \sum_{j=1}^{n_{FOR}} D^{FOR}(t,T_j)L_j^{FOR}(T_{j-1},T_j) + s^{FOR}\Delta_j$$

Putting eqn. (76) in eqn. (77) and simplifying we obtain,

$$1 + s^{DOM} \sum_{j=1}^{n_{DOM}} D^{DOM}(t,T_j)\Delta_j = D^{FOR}(t,T) + s^{FOR} \sum_{j=1}^{n_{FOR}} D^{FOR}(t,T_j)\Delta_j + C_R^{FOR} \sum_{j=1}^{n_{FOR}} D^{FOR}(t,T_j)\Delta_j$$

The advantage f using CROSSCCYSWAP over CROSSCCY is both single currency swaps and cross currency can be repriced consistently in one framework.

This was checked repricing swaps and currency swaps of inputted instruments in curve.

| Settle | Maturity | Freq | Basis | Spread | Reprice-CROSSCCY | Reprice-CROSSCCYSWAP | Diff (CROSSCCY) | Diff (CROSSCCYSWAP) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20200225 | 20200303 | QUARTERLY | ACT/365 | -0.00548226 | -0.00546 | -0.00546 | -3.5e-08 | -3.5e-08 |
| 20200225 | 20200325 | QUARTERLY | ACT/365 | -0.00466219 | -0.00466 | -0.00466 | 1.1e-15 | 5.3e-16 |
| 20200225 | 20200427 | QUARTERLY | ACT/365 | -0.00361679 | -0.00362 | -0.00362 | 5.1e-16 | -1.1e-16 |
| 20200225 | 20200526 | QUARTERLY | ACT/365 | -0.00362177 | -0.00362 | -0.00362 | 1.1e-09 | 1.1e-09 |
| 20200225 | 20200626 | QUARTERLY | ACT/365 | -0.00421801 | -0.00422 | -0.00422 | 1.4e-14 | 1.4e-14 |
| 20200225 | 20200727 | QUARTERLY | ACT/365 | -0.00341116 | -0.00343 | -0.00343 | 2.6e-14 | 2.6e-14 |
| 20200225 | 20200825 | QUARTERLY | ACT/365 | -0.00338951 | -0.00339 | -0.00339 | -5.0e-17 | -1.6e-17 |
| 20200225 | 20201125 | QUARTERLY | ACT/365 | -0.00341753 | -0.00342 | -0.00342 | 7.7e-11 | 7.7e-11 |
| OB | 1Y | QUARTERLY | ACT/365 | -0.00346682 | -0.00350 | -0.00350 | 6.9e-17 | 3.1e-13 |
| OB | 18M | QUARTERLY | ACT/365 | -0.00351736 | -0.00362 | -0.00362 | 2.0e-13 | 6.5e-13 |
| OB | 2Y | QUARTERLY | ACT/365 | -0.00340237 | -0.00340 | -0.00340 | 2.3e-15 | 5.8e-13 |
| OB | 3Y | QUARTERLY | ACT/365 | -0.00336522 | -0.00336 | -0.00336 | -1.4e-17 | 7.3e-13 |
| OB | 4Y | QUARTERLY | ACT/365 | -0.00342644 | -0.00343 | -0.00343 | 2.1e-16 | 4.8e-13 |
| OB | 5Y | QUARTERLY | ACT/365 | -0.00354454 | -0.00356 | -0.00356 | 5.9e-15 | 1.1e-13 |
| OB | 6Y | QUARTERLY | ACT/365 | -0.00367706 | -0.00368 | -0.00368 | 4.5e-15 | 1.9e-13 |
| OB | 7Y | QUARTERLY | ACT/365 | -0.00378883 | -0.00379 | -0.00379 | 7.0e-15 | 3.0e-14 |
| OB | 10Y | QUARTERLY | ACT/365 | -0.00402281 | -0.00402 | -0.00402 | 3.9e-13 | 2.9e-11 |
| OB | 12Y | QUARTERLY | ACT/365 | -0.00423062 | -0.00431 | -0.00431 | 1.5e-13 | 1.7e-12 |
| OB | 15Y | QUARTERLY | ACT/365 | -0.00469271 | -0.00499 | -0.00499 | -4.1e-18 | -3.9e-17 |
| OB | 20Y | QUARTERLY | ACT/365 | -0.00521009 | -0.00591 | -0.00591 | 4.5e-13 | 8.1e-17 |
| OB | 30Y | QUARTERLY | ACT/365 | -0.00523226 | -0.00603 | -0.00603 | 2.3e-15 | 2.3e-15 |

Table 151: Table repricing cross currency swap spreads in both CROSSCCY and CROSSCCYSWAP modes. It is seen in both modes, swap spreads are repriced with adequate accuracy.

Then it was checked whether the swap coupons are repriced correctly or not and is presented below.

| Settle | Maturity | Freq | Basis | Coupon | Reprice-BaseCurve | Reprice-CROSSCCY | Diff (BaseCurve) | Diff (CROSSCCY) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| OB | 1Y | QUARTERLY | ACT/365 | 0.0184 | 0.01840 | 0.01840 | 1.4e-15 | 7.8e-07 |
| OB | 18M | QUARTERLY | ACT/365 | 0.0175 | 0.01750 | 0.01750 | 2.8e-13 | 2.2e-07 |
| OB | 2Y | QUARTERLY | ACT/365 | 0.0160 | 0.01600 | 0.01600 | 1.3e-13 | 3.3e-06 |
| OB | 3Y | QUARTERLY | ACT/365 | 0.0162 | 0.01620 | 0.01620 | 8.3e-13 | 4.8e-06 |
| OB | 4Y | QUARTERLY | ACT/365 | 0.0158 | 0.01580 | 0.01570 | 2.1e-13 | 5.5e-06 |
| OB | 5Y | QUARTERLY | ACT/365 | 0.0156 | 0.01560 | 0.01550 | 2.5e-14 | 6.0e-06 |
| OB | 6Y | QUARTERLY | ACT/365 | 0.0155403 | 0.01555 | 0.01554 | 6.6e-17 | 5.5e-06 |
| OB | 7Y | QUARTERLY | ACT/365 | 0.0155 | 0.01550 | 0.01540 | 2.7e-16 | 5.4e-06 |
| OB | 10Y | QUARTERLY | ACT/365 | 0.0158 | 0.01580 | 0.01590 | 3.0e-12 | -2.5e-06 |
| OB | 12Y | QUARTERLY | ACT/365 | 0.0159 | 0.01590 | 0.01590 | 2.6e-11 | -2.1e-06 |
| OB | 15Y | QUARTERLY | ACT/365 | 0.0156 | 0.01560 | 0.01550 | 4.6e-12 | 8.8e-06 |
| OB | 20Y | QUARTERLY | ACT/365 | 0.0152256 | 0.01523 | 0.01520 | 2.5e-11 | 2.4e-06 |
| OB | 30Y | QUARTERLY | ACT/365 | 0.0148500 | 0.01485 | 0.01481 | 2.3e-17 | 4.0e-05 |

Table 152: Table repricing single currency swaps using basecurve and using curve in CROSSCCY mode. It is seen, in CROSSCCY mode, par swap repricing leads to discrepancy between quoted ones and one implied from the mode. However, in basecurve mode, par swap rates are repriced correctly with adequate accuracy.

| Settle | Maturity | Freq | Basis | Coupon | Reprice-BaseCurve | Reprice-CROSSCCYSWAP | Diff (BaseCurve) | Diff (CROSSCCYSWAP) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| OB | 1Y | QUARTERLY | ACT/365 | 0.0184 | 0.01840 | 0.01840 | 1.4e-15 | -3.1e-12 |
| OB | 18M | QUARTERLY | ACT/365 | 0.0175 | 0.01750 | 0.01750 | 2.8e-13 | -4.5e-13 |
| OB | 2Y | QUARTERLY | ACT/365 | 0.0160 | 0.01600 | 0.01600 | 1.3e-13 | -5.0e-13 |
| OB | 3Y | QUARTERLY | ACT/365 | 0.0162 | 0.01620 | 0.01620 | 8.3e-13 | -7.3e-13 |
| OB | 4Y | QUARTERLY | ACT/365 | 0.0158 | 0.01580 | 0.01580 | 2.1e-13 | -4.8e-13 |
| OB | 5Y | QUARTERLY | ACT/365 | 0.0156 | 0.01560 | 0.01560 | 2.5e-14 | -1.0e-13 |
| OB | 6Y | QUARTERLY | ACT/365 | 0.0155403 | 0.01555 | 0.01555 | 6.6e-17 | -1.9e-13 |
| OB | 7Y | QUARTERLY | ACT/365 | 0.0155 | 0.01550 | 0.01550 | 2.7e-16 | -2.3e-14 |
| OB | 10Y | QUARTERLY | ACT/365 | 0.0158 | 0.01580 | 0.01580 | 3.0e-12 | -2.6e-11 |
| OB | 12Y | QUARTERLY | ACT/365 | 0.0159 | 0.01590 | 0.01590 | 2.6e-11 | -1.7e-13 |
| OB | 15Y | QUARTERLY | ACT/365 | 0.0156 | 0.01560 | 0.01560 | 4.6e-12 | 3.5e-12 |
| OB | 20Y | QUARTERLY | ACT/365 | 0.0152256 | 0.01523 | 0.01523 | 2.5e-11 | -2.3e-17 |
| OB | 30Y | QUARTERLY | ACT/365 | 0.0148500 | 0.01485 | 0.01485 | 2.3e-17 | 8.7e-16 |

Table 153: Table repricing single currency swaps using basecurve and using curve in CROSSCCYSWAP mode. It is seen, in both modes, swap coupons are repriced correctly with adequate accuracy.

To summarize, in CROSSCCY and CROSSCCYSWAP modes, cross currency swaps are repriced correctly with adequate accuracy. In CROSSCCY mode, swaps repricing revealed mispricing in single currency swaps whereas in CROSSCCYSWAP single currency swap is repriced with reasonable accuracy.

UseType = TREASURY

UseType = TREASURY means Spreads are swap spreads against LIBOR rate (which relates to TreasurySpreads). When looking at the sheet "CURVE Build TREASURY", We see SwapRate ( CurveType = LIBOR ) calculates LIBOR swap rates and SwapRate ( CurveType = SPREAD ) calculates treasury yield. And the sheet reconciles inputted treasury spreads. In the sheet "Treasury DiscFact" and "Treasury FwdRate" sheet, we calculate discount factors and forward rates with various CurveType to see how discounting and forecasting curves are chosen.

$$\frac{D(T_0) - D(T_m)}{\sum_{i=1}^{m} D(T_i)\Delta_i} = \frac{D_{base}(T_0) - D_{base}(T_m)}{\sum_{i=1}^{m} D_{base}(T_i)\Delta_i} + s$$

Here we calculated swap rate based on treasury curve and repriced the treasury spreads for a sample JPY curve dated on 21st Feb. 2020.

| Settle | Maturity | Freq | Basis | Spread | Reprice-Treasury Swap Rate | Reprice-BaseCurve Swap Rate | Reprice-Spreads | Diff (Spreads) |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20200225 | 20210225 | SEMI | ACT/ACT | -0.00111923 | -0.00037 | -0.00095 | -0.00112 | 3.2e-11 |
| 20200225 | 20220225 | SEMI | ACT/ACT | -0.00090604 | -0.00121 | -0.00091 | -0.00091 | 2.2e-17 |
| 20200225 | 20230225 | SEMI | ACT/ACT | -0.00087068 | -0.00233 | -0.00147 | -0.00086 | 5.4e-17 |
| 20200225 | 20250225 | SEMI | ACT/ACT | -0.00075522 | -0.00227 | -0.00140 | -0.00088 | 5.7e-16 |
| 20200225 | 20300225 | SEMI | ACT/ACT | -3.62759e-05 | -0.00047 | -0.00044 | -0.00004 | 1.7e-11 |
| 20200225 | 20350225 | SEMI | ACT/ACT | 0.00032922 | 0.00043 | 0.00010 | 0.00032 | 3.0e-12 |
| 20200225 | 20380225 | SEMI | ACT/ACT | 0.00035858 | 0.00091 | 0.00055 | 0.00036 | 1.5e-15 |
| 20200225 | 20420225 | SEMI | ACT/ACT | 0.00075141 | 0.00174 | 0.00098 | 0.00075 | 1.9e-11 |

Table 154: Table repricing Treasury spreads using basecurve and treasury curve. It can be seen spreads are repriced exactly with adequate accuracy.

UseType = CONVERTIBILITY

For UseType CONVERTIBILITY, curve specifies that the curve need not to be bootstrapped like any other curve but the rates are derived from the constituent curves and convertibility rates specified in the object. Convertibility rates (CR) are defined as follows:

$$CR(t,T) = \left(\frac{F^{OFFSHORE}(t,T)}{F^{ONSHORE}(t,T)} - 1\right) \frac{1}{T-t}$$

whereas $F^{OFFSHORE}(t,T)$ and $F^{ONSHORE}(t,T)$ denotes offshore and onshore FX Forwards resp.,

and FXForwards are calculated as:

$$F_{DOM/FOR}(t,T) = F_{DOM/FOR}(t,t) \frac{D^{FOR}(t,T)}{D^{DOM}(t,T)}$$

Here we tested a sample convertibility curve dated on 28th April 2015. Denote DOM1 and FOR1 as Onshore FX Forward currencies (for this case, it is BRL and US$) and DOM2, FOR2 as Offshore FX forward currencies (BRC & US$), then the discount factor for the convertibility curve is always calculated using the following formula:

$$D^{DOM2}(t,T) = D^{DOM1}(t,T) \frac{D^{FOR2}(t,T)}{D^{FOR1}(t,T)} \frac{1}{1 + CR(t,T)(T-t)}$$

Here we checked discount factors for typical convertibility curve and benchmarked against the values obtained using DBA "CurveFunction" and "DerivedDiscFacts". Presented below are the profiles.

![Figure 587: Here we checked the discount factors calculated manually and using DBA function. It is seen, both are in good agreement with each other.](./Fig/11.png)

#### 4.24.1.17 BaseRateType

BaseRateType is applicable when UseType is DISCOUNTBASIS or LIBOR. Allowed values in production are LIBOR, LIBOR-Tenor, OIS and OIS-RateIndexType.

In LIBOR, the curve is built using Cash/Futures/Swaps is LIBOR curve with tenor = LiborBasis. For LIBOR-Tenor, curve from Cash/Futures/Swaps is LIBOR curve with given Tenor. For OIS, curve from Cash/Futures/Swaps is OIS curve and LiborBasis is ignored. In OIS-RateIndexType, curve from Cash/Futures/Swaps is OIS curve with given RateIndexSubType. This is equivalent to setting BaseRateType OIS and BaseRateIndexSubType RateIndexType (like SOFR or ESTER).

Testing for LIBOR and DISCOUNTBASIS is presented throughout the validation and hence no work is presented in this section. Testing for LIBOR and DISCOUNTBASIS with different BaseRateIndexTypes (SOFR and ESTER) is also presented in the section 4.1.1.1, 8.12. Hence no work is presented in this section.

### 4.24.2 FUNDINGVOL

The model parameters that belong to the FUNDINGVOL object and their corresponding rules are described in Table 155.

FUNDINGVOL parameters are extensively tested in the DS4 documentation(See [17]).

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| FUNDINGVOL0009_2_R | NO | FUNDINGVOL:: NUMBERRUNS | geq | 1 | See Section 12.11, [17] |
| FUNDINGVOL0018_2_R | NO | FUNDINGVOL:: VOLNAME | eq | FUNDINGVOL | OK |
| Rate0022_3_R | NO | FUNDINGVOL:: ADJUSTCONVEXITY | eq | YES | OK |
| FUNDINGVOL0017_2_R | NO | FUNDINGVOL:: VOLMODE | in | BDT, LVTY, LVMR, TVMR | See Section 12.11, [17] |
| FUNDINGVOL0021_2_R | NO | FUNDINGVOL:: FRONTLATTICEFREQ | unset | | See Section 12.11, [17] |
| Rate0279_2_R | NO | FUNDINGVOL:: CALCZEROCOUPONCONVEXITY | eq | NO | OK |
| Rate0278_2_R | NO | FUNDINGVOL:: CALCLIBOR | in | NO, YES | See Section 12.11, [17] |
| FUNDINGVOL0008_2_R | NO | FUNDINGVOL:: INTEGRATIONFREQ | geq | 12 | See Section 12.11, [17] |
| Rate0445_7_R | NO | FUNDINGVOL:: POLYORDER | in | 1200, 1200-0.25 | See Section 12.11, [17] |
| FUNDINGVOL0015_2_R | NO | FUNDINGVOL:: USEFXVOLS | in | NO, YES | See Section 12.11, [17] |
| Rate0092_9_R | YES | FUNDINGVOL:: ADJUSTCONVEXITY | eq | YES | |
| Rate0082_9_R | NO | FUNDINGVOL:: NUMBERSIMS | geq | 10000 | See Section 12.11, [17] |
| Rate0494_3_R | NO | FUNDINGVOL:: FLOORSMOOTHING | eq | NO | OK |
| FUNDINGVOL0022_2_R | NO | FUNDINGVOL:: FREQTIMEVEC | unset | | See Section 12.11, [17] |
| FUNDINGVOL0006_2_R | NO | FUNDINGVOL:: FLOORCALCMETHOD | in | ANALYTIC | See Section 12.11, [17] |
| FUNDINGVOL0016_2_R | NO | FUNDINGVOL:: VARIANCEREDUCTION | in | ANTITHETIC, ANTITHETICPURE, ORTHOGONAL | See Section 12.11, [17] |
| FUNDINGVOL0019_2_R | NO | FUNDINGVOL:: REINVESTSPREADCALCMETHOD | eq | EXACT | OK |
| FUNDINGVOL0013_2_R | NO | FUNDINGVOL:: SWITCHCALCMETHOD | in | SEMIANALYTIC | See Section 12.11, [17] |
| FUNDINGVOL0010_2_R | NO | FUNDINGVOL:: NUMBERSIMS | geq | 10000 | See Section 12.11, [17] |
| FUNDINGVOL0020_8_R | NO | FUNDINGVOL:: STATEMAXFRACTION | eq | 0.25 | OK |
| Rate0277_2_R | NO | FUNDINGVOL:: CALCINFLATIONCONVEXITY | eq | NO | OK |
| Rate0280_2_R | NO | FUNDINGVOL:: CALCANNUITYMAPPINGCONVEXITY | eq | NO | OK |
| FUNDINGVOL0023_5_R | NO | FUNDINGVOL:: DECAYTIME | unset | | See Section 12.11, [17] |
| FUNDINGVOL0014_2_R | NO | FUNDINGVOL:: SWITCHINDICATORWEDGE | geq | 0.0001 | See Section 12.11, [17] |

Table 155: FUNDINGVOL parameters and their rules, along with the obtained validation results.

### 4.24.3 CMT

The model parameters that belong to the CMT object and their corresponding rules are described in Table 156.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| CMT0001_23_A | NO | CMT:: CMTMODE | eq | MATRIX | See [22], Section 13. |
| CMT0002_15_R | NO | CMT:: NATURALTOLERANCE | leq | 10 | See Section 4.24.1.11. |
| CMT0002_15_R | NO | CMT:: NATURALTOLERANCE | like | *d | See Section 4.24.1.11. |

Table 156: CMT parameters and their rules, along with the obtained validation results.

### 4.24.4 MODEL

The model parameters that belong to the DBL object and their corresponding rules are described in Table 157.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| DBX0012_36_R | NO | MODEL:: COMPRESSIONFREQ | geq | 4 | See [24], Section 13. |
| DBX0012_36_R | YES | MODEL:: MODELNAME | eq | DBX | |
| DBL0001_8_R | NO | MODEL:: AVERAGECOMPRESSION | in | NONE, EXPONENTIAL, EXPONENTIAL.* | See [25], Section 13. |
| DBL0001_8_R | YES | MODEL:: MODELNAME | eq | DBL | |
| DBX0005A_23_R | NO | MODEL:: AVERAGECOMPRESSION | in | NONE, EXPONENTIAL, EXPONENTIAL.*, SYNCHRONISED, SYNCHRONISED.* | See [24], Section 13. |
| DBX0005A_23_R | YES | MODEL:: MODELNAME | eq | DBX | |
| GeneralRule0006_45_R | NO | MODEL:: RECALIBCURVES | in | NO, YES | See [22], Section 13. |
| DBX0055_20_R | YES | MODEL:: MODELNAME | eq | DBX | |
| DBX0055_20_R | NO | MODEL:: QACALIBRATIONTYPE | eq | CALIBRATE | OK |
| GeneralRule0006_29_R | NO | MODEL:: USENEWSVD | in | NO, ALQLIB | See [24], Section 13. |
| DBX0045A_26_R | NO | MODEL:: INDEXCOMPRESSION | in | NONE, EXPONENTIAL, EXPONENTIAL.*, SYNCHRONISED, SYNCHRONISED.* | See [24], Section 13. |
| DBX0045A_26_R | YES | MODEL:: MODELNAME | eq | DBX | |
| Rate0088_2_R | NO | MODEL:: PAYOFFSMOOTHINGUSETIMESCALING | not exists | | OK |
| DBX0003_45_R | YES | MODEL:: MODELNAME | eq | DBX | |
| DBX0003_45_R | NO | MODEL:: VALUEMODE | eq | VALUEDATE | OK |
| DBX0011_37_R | NO | MODEL:: COMPRESSIONDIRECTION | in | FORWARD, BACKWARD | See [24], Section 13. |
| DBX0011_37_R | YES | MODEL:: MODELNAME | eq | DBX | |
| Rate0067_2_R | NO | MODEL:: MINIMUMPAYOFFSMOOTHINGWEDGE | not exists | | OK |
| GeneralRule0004_6_R | NO | MODEL:: MODELMODE | in | PRICE, PRICEVALUETWODAY | See [22], Section 13. |
| GeneralRule0010_3_R | NO | MODEL:: TOLERANCE | eq | 0 | OK |
| Rate0069_9_R | YES | MODEL:: CONVEXITYTOLERANCE | exists | | |
| Rate0069_9_R | NO | MODEL:: CONVEXITYTOLERANCE | leq | 10 | See [22], Section 4.14. |

Table 157: MODEL parameters and their rules, along with the obtained validation results.

### 4.24.5 FIXING

The model parameters that belong to the FIXING object and their corresponding rules are described in Table 158.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| FIXING0002A_19_R | YES | FIXING:: NATURALTOLERANCE | like | *d | |
| FIXING0002A_19_R | NO | FIXING:: NATURALTOLERANCE | leq | 10 | See [22], Section 13. |
| FIXING0002B_19_R | YES | FIXING:: NATURALTOLERANCE | like | *w | |
| FIXING0002B_19_R | NO | FIXING:: NATURALTOLERANCE | leq | 1 | See [22], Section 13. |
| FIXING0001_40_R | NO | FIXING:: INTERPOLATENATURAL | in | YES, NO | See [22], Section 13. |

Table 158: FIXING parameters and their rules, along with the obtained validation results.

### 4.24.6 FUNDING

The model parameters that are orthogonal to the RateDeterministic model and thus apply in general are described in Table 159.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| FUNDING0001_10_R | NO | FUNDING:: TYPE | eq | SPOTEX | OK |

Table 159: FUNDING parameters and their rules, along with the obtained validation results.

### 4.24.7 SECURITY

The model parameters that belong to the SECURITY object and their corresponding rules are described in Table 160.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| Credit0116_1_R | NO | SECURITY:: PIKTYPE | eq | NONE | OK |
| Credit0116_1_R | YES | SECURITY:: SECURITYNAME | eq | BOND | |
| Rate0370_2_R | NO | SECURITY:: PREPAYMODEL | eq | | OK |

Table 160: SECURITY parameters and their rules, along with the obtained validation results.

### 4.24.8 MKTDATA

The model parameters that belong to the MKTDATA object and their corresponding rules are described in Table 161.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| MKTDATA_BOND0002_4_R | NO | MKTDATA:: FORWARDPRICINGMETHOD | eq | NONE | See [27], Section 13. |
| MKTDATA_BOND0002_4_R | YES | MKTDATA:: TYPE | eq | BOND | |
| EquiBase0031_1_R | NO | MKTDATA:: VOLINDEXVOL | not exists | | OK |
| MKTDATA_EXCHANGE0002_2_R | NO | MKTDATA:: FORWARDPRICINGMETHOD | in | NONE, PROCEEDS, CDCOMPOUNDING | See [27], Section 13. |
| MKTDATA_EXCHANGE0002_2_R | YES | MKTDATA:: TYPE | eq | EXCHANGE | |
| MKTDATA_MM0079_4_R | NO | MKTDATA:: REPOTYPE | in | FORWARD, TERM | See Section 4.24.8.3. |
| MKTDATA_MM0079_4_R | YES | MKTDATA:: TYPE | eq | MM | |
| MKTDATA_MM0002_4_R | NO | MKTDATA:: REPOSHIFTTYPE | in | ABSOLUTE, RELATIVE | See Section 4.24.8.2 |
| MKTDATA_MM0002_4_R | YES | MKTDATA:: TYPE | eq | MM | |
| MKTDATA_MM0001_5_R | NO | MKTDATA:: APPLYYIELDCURVE | in | FORWARD, DISCOUNT, LIBOR, DISCOUNT*, OIS, LIBOR*, TREASURY, OIS* | See Section 4.24.8.1 |
| MKTDATA_MM0001_5_R | YES | MKTDATA:: TYPE | eq | MM | |

Table 161: MKTDATA parameters and their rules, along with the obtained validation results.

| SetDate | mmReturn |
| --- | --- |
| 18/07/2012 | 1825.49506 |
| 18/07/2013 | 1825.49506 |
| 18/07/2014 | 1913.26659 |
| 18/07/2015 | 2006.18127B |
| 18/07/2016 | 2103.04713 |
| 18/07/2017 | 2204.65676 |
| 18/07/2018 | 2308.83396 |
| 18/07/2019 | 2415.51574' |
| 18/07/2020 | 2524.63452 |
| 18/07/2021 | 2636.63206 |
| 18/07/2022 | 2753.15515'l |
| 18/07/2023 | 2873.85877 |
| 18/07/2024 | 2998.92941 |

Table 164: SimuTable for the MM::OIS Rate Index type.

For the security, we then examine its PV vis-a-vis' corresponding parallel curve shifts when the parameter ApplyYieldCurve takes on the values 'FORECAST', 'DISCOUNT', 'OIS', 'LIBOR', 'LIBOR-6m', and 'TREASURY'. The obtained results are illustrated in Figures 588 and 589 and show the PV reacts as expected under parallel rate curve shifts.

| | | | Simulation - PV | | |
| --- | --- | --- | --- | --- | --- |
| | LIBOR+3M | | 153.804 | 153.804 | 0.00e+00 |
| | OIS-ESTER | | 151.914 | 151.914 | 0.00e+00 |
| | TREASURY | | 152.714 | 152.714 | 0.00e+00 |

Table 162: Manual and DBA implied Cash values of the MM index on the forward date.

To test the parameter RepoShiftType, we consider the Simulation dictionary with SimuType = 'CASHFLOW' as described in Section 4.24.8.1 and assess the impact of the parameter for the values 'ABSOLUTE' and 'RELATIVE' on the PV when the RepoShift parameter is set to equally spaced values from -0.02 to 0.02. The obtained results are shown in Figure 590. In particular, we can see that when setting the parameter RepoShiftType to 'ABSOLUTE' the PV is decreasing with increasing RepoShift values while the PV remains constant when it is set to 'RELATIVE'. The latter behaviour can be explained by the fact that when dividing two simulated rates as it is done in the simulation dictionary to compute the PV, the shifts by which the repo rates are multiplied cancel each other out in the dividend and divisor.

#### 4.24.8.1 MKTDATA::ApplyYieldCurve

The parameter ApplyYieldCurve controls which curves are used for MM securities index, that is, 'FORECAST', 'DISCOUNT', 'OIS', 'LIBOR', 'LIBOR-6m', and 'TREASURY'. The obtained results are shown in Figures 588 and 589 for different settings of ApplyYieldCurve with the parameter RepoShiftType set to the values 'ABSOLUTE' and 'RELATIVE'.

![Figure 588: PV of the Simulation security of SimuType = 'CASHFLOW' as a function of the parallel USD curve shifts, when the parameter ApplyYieldCurve is set to the values 'FORECAST', 'DISCOUNT', and 'OIS'.](./Fig/17.png)

![Figure 589: PV of the Simulation security of SimuType = 'CASHFLOW' as a function of the parallel USD curve shifts, when the parameter ApplyYieldCurve is set to the values 'LIBOR', 'LIBOR-6m', and 'TREASURY'.](./Fig/17.png)

#### 4.24.8.2 MKTDATA::RepoShiftType

The parameter RepoShiftType controls whether repo value shifts, as specified by the RepoShift parameter, are ABSOLUTE or RELATIVE. For ABSOLUTE shifts, the specified shift is added to each repo value. For RELATIVE shifts, each repo value is multiplied by the shift. The default value is ABSOLUTE.

![Figure 590: PV of the Simulation security of SimuType = 'CASHFLOW' as a function of the parameter RepoShift with the parameter RepoShiftType set to the values 'ABSOLUTE' and 'RELATIVE'.](./Fig/17.png)

#### 4.24.8.3 MKTDATA::RepoType

The parameter RepoType controls how repo securities shift, as specified by the parameter ApplyYieldCurve = 'CASHFLOW'. We ran function of parallel USD curve shifts, when the parameter RepoType is set to the values 'FORWARD' and 'TERM'.

![Figure 591: PV of the Simulation security of SimuType = 'CASHFLOW' as a function of the parallel USD curve shifts, when the parameter RepoType is set to the values 'FORWARD' and 'TERM'.](./Fig/18.png)

#### 4.24.9 PRICINGINFO

The model parameters that belong to the PRICINGINFO object and their corresponding rules are described in Table 165.

| Rule | MinCond, ParameterLabel | Operator | Values | Testing |
| --- | --- | --- | --- | --- |
| Rate0700_1_A | NO | PRICINGINFO:: PRICINGINFOTYPE | in | AUTOCALIBRATION, ALTOBASIS, BARRIER, BARRIERINFO, REPORT, SETTLEDCASH, MODELVOLJUMPCALIBRATION, SECURITYCALIBRATION, FXLOCALCORRINFO, FXLOCALVOLS, FIXINGRISK, CONTRACTDATES, LEGACYCURRENCY, UNDERLYINGMODELINFO | See [25], Section 4.7.5.14 | |

Table 165: PRICINGINFO parameters and their rules, along with the obtained validation results.

## 5 Model Uncertainty Identification, Measurement, and Management

### 5.1 Model Uncertainty and Identification

Sources of model uncertainty and deficiencies/weaknesses have identified and categorized in accordance with the classification define by the policy. Findings and Model limitations have been issued for the sources of uncertainty analysed.

Model deficiencies/weaknesses have been indented in section 2.8 and include an assessment for compensating controls.

Model imitation uncertainties have been identified and categorized into:
* Numerical techniques
* Methodology assumptions
* Implementation and deployment
* Missing Risk Factors
* Process Issues

### 5.2 Model Uncertainty Measurement and Management

The requirement for a valuation adjustment methodology to compensate for a model limitation is to be established and implemented by VC/GSA. The limitations assigned to the product model are detailed in the previous section. The table below detailed for each limitation whether or not the compensating control is applied to mitigate the limitations identified and the appropriateness of proposed measurement approaches has been assessed:

| Limitation ID | Reserve Policy | Limitation Assessed | RFU | reserve MVR |
| --- | --- | --- | --- | --- |

No limitions have been identified during the course of validation.

The table below detailed for each finding whether or not the compensating control is applied to mitigate the finding identified:

| Finding ID | Model weakness | Compensating control methodology | Control assessed |
| --- | --- | --- | --- |

There are no validation findings.

## 6. Control Assessment

When the pricing model is used as a servicer, please refer to top model validation report section on the control assessment of the servicer models.

### 6.1 Ongoing Performance Monitoring

The model performance monitoring relies on performance indicators defined by the Product Owners, product model users or control functions as necessary, to confirm that the model is performing as intended.

The following activities as linked to models are included in performance monitoring:

* Unexplained P&L due to model issues

* Relative size of model reserves taken at product-model pair level (relative to PV and or trade count). Month-on-month changes in the value of a specific model reserve in excess of 1m euros automatically triggers further scrutiny.

* VRM's output price testing results through IPV processes.

* Identification of risk instabilities produced by models.

* Feedback on model performance (e.g. hedging performance, market observations, historical back testing exceptions, calibration failures, consideration of pricing auction results successes, risk instabilities, significant collateral disputes due to model issues); and model failure, including technical model failures (identified through model development regression testing or other BAU processes).

The activities listed above must be prepared and presented to the MCWGs and during the year's annual attestation.

### 6.2 Data and Process Controls

#### 6.2.1 Conditions for Use

Table 166 and the subsequent listing provide the CfUs for the model parameter rules that apply to the RateDeterministic models.

| CFU ID | Rule | Business | Status | Last Change | ParamInfo |
| --- | --- | --- | --- | --- | --- |
| 626 | Rate0059 | RATES | Released/Released | 2024-10-02 | 2016-11-03 |
| 1028 | Rate0057 | RATES | Released/Released | 2021-06-13 | 2016-11-01 |
| 1029 | Rate0058 | RATES | Released/Approved | 2024-10-10 | 2016-11-01 |
| 1077 | Rate0092 | RATES | Released/Released | 2022-01-18 | 2019-06-13 |
| 1114 | EquiBase0031 | EQUITY | Released/Released | 2018-01-19 | 2018-01-19 |
| 11032 | CURVE0001 | SECURITIZATION | Released/Approved | 2024-11-01 | 2018-06-27 |
| 11036 | CURVE0002 | SECURITIZATION | Released/Approved | 2024-10-22 | 2018-07-10 |
| 11037 | CURVE0004 | SECURITIZATION | Released/Approved | 2024-11-01 | 2019-06-27 |
| 11038 | CURVE0009 | SECURITIZATION | Released/Approved | 2024-11-01 | 2019-06-27 |
| 11041 | CURVE0005 | SECURITIZATION | Released/Approved | 2024-11-01 | 2019-06-27 |
| 11044 | CURVE0019 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-06-27 |
| 11048 | CURVE0020 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-04-18 |
| 11051 | CURVE0118 | RATES | Released/Approved | 2024-10-10 | 2019-06-27 |
| 11054 | CURVE0018 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-06-27 |
| 11059 | CURVE0015 | SECURITIZATION | Released/Approved | 2024-10-31 | 2017-02-14 |
| 11062 | CURVE0112 | RATES | Released/Approved | 2024-10-10 | 2019-06-27 |
| 11063 | CURVE0017 | RATES | Released/Released | 2024-10-02 | 2019-06-27 |

### 6.2 Data and Process Controls

#### 6.2.1 Conditions for Use

Table 166 and the subsequent listing provide the CFUs for the model parameter rules that apply to the RateDeterministic models.

| CFU ID | Rule | Business | Status | Last Change | ParamInfo |
| --- | --- | --- | --- | --- | --- |
| 11068 | CURVE0008 | SECURITIZATION | Released/Approved | 2024-11-01 | 2019-06-27 |
| 11069 | CURVE0007 | RATES | Released/Approved | 2024-10-08 | 2020-07-08 |
| 11082 | GeneralRule0008 | RATES | Released/Released | 2024-10-02 | 2019-05-07 |
| 11084 | CURVE0029 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-06-27 |
| 11085 | CURVE0005 | SECURITIZATION | Released/Approved | 2024-11-01 | 2019-06-27 |
| 11089 | CURVE0019 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-06-27 |
| 11620 | Rate0123 | RATES | Released/Approved | 2024-10-09 | 2019-06-11 |
| 11622 | Rate0125 | RATES | Released/Released | 2024-06-27 | 2019-06-27 |
| 11623 | Rate0126 | RATES | Released/Released | 2023-11-21 | 2019-06-27 |
| 11624 | Rate0127 | RATES | Released/Released | 2022-06-27 | 2019-06-27 |
| 11625 | Rate0128 | RATES | Released/Released | 2022-06-27 | 2019-06-27 |
| 11626 | Rate0129 | RATES | Released/Approved | 2024-10-09 | 2019-06-27 |
| 11627 | Rate0130 | RATES | Released/Released | 2022-06-27 | 2020-07-08 |
| 12000 | Rate0277 | RATES | Released/Released | 2021-10-14 | 2019-06-13 |
| 12001 | Rate0278 | RATES | Released/Released | 2021-10-14 | 2020-08-12 |
| 12002 | Rate0279 | RATES | Released/Released | 2021-10-14 | 2019-06-13 |
| 12003 | Rate0280 | RATES | Released/Released | 2021-10-14 | 2019-06-13 |
| 12005 | Rate0282 | RATES | Released/Released | 2021-10-14 | 2019-06-13 |
| 12936 | DBX0012 | CREDIT | Released/Released | 2024-08-13 | 2019-04-18 |
| 12947 | DBX0055 | RATES | Released/Released | 2024-07-11 | 2019-06-27 |
| 12981 | DBX0005A | RATES | Released/Released | 2024-07-11 | 2014-08-26 |
| 12983 | DBX0045A | RATES | Released/Released | 2023-01-23 | 2016-11-01 |
| 12989 | DBX0011 | CREDIT | Released/Released | 2024-08-13 | 2019-04-18 |
| 12999 | DBX0003 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-04-18 |
| 13102 | CMT0002 | RATES | Released/Approved | 2024-10-10 | 2019-06-27 |
| 13147 | DBL0001 | RATES | Released/Released | 2024-10-02 | 2014-08-26 |
| 13155 | CMT0001 | RATES | Released/Approved | 2024-10-04 | 2019-06-27 |
| 13354 | FIXING0002A | RATES | Released/Approved | 2024-10-10 | 2019-07-27 |
| 13355 | FIXING0002B | RATES | Released/Released | 2024-10-02 | 2019-07-27 |
| 13381 | FIXING0001 | SECURITIZATION | Released/Approved | 2024-10-31 | 2019-05-03 |
| 13399 | GeneralRule0006 | RATES | Released/Released | 2024-08-02 | 2019-05-07 |
| 13421 | GeneralRule0004 | RATES | Released/Released | 2024-11-30 | 2019-03-27 |
| 13993 | MKTDATA_BOND0002 | CREDIT | Released/Released | 2023-11-21 | 2020-06-18 |
| 13994 | MKTDATA_EXCHANGE0002 | RATES | Released/Released | 2020-11-19 | 2020-08-18 |
| 13995 | Rate0370 | RATES | Released/Released | 2020-11-19 | 2020-09-16 |
| 13996 | GeneralRule0010 | RATES | Released/Released | 2020-11-19 | 2019-06-13 |
| 13997 | MKTDATA_MM0079 | RATES | Released/Released | 2021-01-29 | 2019-03-13 |
| 13998 | MKTDATA_MM0001 | RATES | Released/Released | 2022-03-07 | 2019-03-13 |
| 13999 | MKTDATA_MM0002 | RATES | Released/Released | 2021-01-29 | 2019-03-13 |
| 15695 | FUNDINGVOL0008 | CREDIT | Released/Released | 2021-10-14 | 2020-08-12 |
| 15696 | FUNDINGVOL0006 | CREDIT | Released/Released | 2023-09-29 | 2019-06-13 |
| 15705 | FUNDINGVOL0009 | CREDIT | Released/Released | 2021-10-14 | 2019-06-13 |
| 15706 | FUNDINGVOL0010 | CREDIT | Released/Released | 2021-10-14 | 2019-06-13 |
| 15707 | FUNDINGVOL0013 | CREDIT | Released/Released | 2023-09-29 | 2020-08-12 |
| 15708 | FUNDINGVOL0014 | CREDIT | Released/Released | 2021-10-14 | 2020-06-15 |
| 15709 | FUNDINGVOL0015 | CREDIT | Released/Released | 2021-10-14 | 2020-08-12 |
| 15710 | FUNDINGVOL0016 | CREDIT | Released/Released | 2021-10-14 | 2020-08-12 |
| 15711 | FUNDINGVOL0017 | CREDIT | Released/Released | 2021-10-14 | 2020-08-12 |
| 15712 | FUNDINGVOL0018 | CREDIT | Released/Released | 2021-10-14 | 2020-08-12 |
| 17773 | FUNDINGVOL0021 | RATES | Released/Released | 2024-10-07 | 2021-08-24 |
| 17774 | FUNDINGVOL0023 | RATES | Released/Approved | 2024-10-09 | 2021-08-24 |
| 17775 | FUNDING0001 | RATES | Released/Released | 2024-10-02 | 2021-08-24 |
| 17776 | FUNDINGVOL0019 | RATES | Released/Approved | 2024-10-08 | 2021-08-24 |
| 17777 | FUNDINGVOL0022 | RATES | Released/Approved | 2024-10-04 | 2021-08-24 |
| 17778 | CURVE0044 | SECURITIZATION | Released/Approved | 2024-11-01 | 2021-08-24 |
| 17779 | FUNDINGVOL0020 | RATES | Released/Approved | 2024-10-09 | 2021-08-11 |
| 17802 | Rate0445 | RATES | Released/Released | 2024-10-02 | 2020-08-15 |
| 17803 | Rate0446 | RATES | Released/Approved | 2024-10-09 | 2019-06-27 |
| 17826 | Credit0116 | CREDIT | Released/Approved | 2024-10-14 | 2021-03-10 |
| 18487 | Rate0494 | RATES | Released/Approved | 2024-10-07 | 2020-06-15 |
| 19522 | Rate0697 | RATES | Released/Released | 2023-05-15 | 2019-12-09 |
| 19523 | Rate0698 | RATES | Released/Released | 2023-05-15 | 2019-12-09 |
| 19524 | Rate0699 | RATES | Released/Released | 2023-05-15 | 2019-12-09 |
| 19525 | Rate0700 | RATES | Released/Released | 2023-05-15 | 2017-10-30 |
| 20023 | Rate0780 | RATES | Released/Released | 2023-09-26 | 2023-09-26 |

Table 166: CFU rules for RateDeterministic.
Status: Status of the Subcondition and Condition for Use.
Last Change: Date when there was a last change of the Condition for Use.
ParamInfo: The last date when any parameter used in the CFU was created or updated, corresponds to the ParamInfo dependency date.
The table is generated from MARS data available at 16/12/2024 05:06

Below we present the conditions for use, imposed for RateDeterministic model in further details:

**CFU ID:** 626
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** MODEL::ConvexityTolerance exists
**Target Conditions:** MODEL::ConvexityTolerance [(*)[d]] < 10

**CFU ID:** 1028
**Model Configurations:** DBOPT::RateMarketDeterministic and DBOPT::ForwardRateDeterministic.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** MODEL::MinimumPayoffSmoothingWedge not exists

**CFU ID:** 1029
**Model Configurations:** DBOPT::RateMarketDeterministic and DBOPT::ForwardRateDeterministic.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** MODEL::PayoffSmoothingUseTimeScaling not exists

**CFU ID:** 1077
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** FUNDINGVOL::AdjustConvexity == YES
**Target Conditions:** FUNDINGVOL::NumberSims ≥ 10000

**CFU ID:** 1114
**Model Configurations:** DBX-ShortRateDeterministic
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** MKTDATA::VolIndexVol not exists

**CFU ID:** 11032
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::AddPairs(NONE, LINEAR)

**CFU ID:** 11036
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::BuildMethod∈(CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)

**CFU ID:** 11037
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::CurveType∈(LIBOR, CCYBASIS, SPREAD, BASIS, RBASIS)

**CFU ID:** 11038
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::SmoothFutures∈(NO, YES, BACKWARD, BACKWARDDAILY)

**CFU ID:** 11041
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::ExtrapMethod∈(CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE)

**CFU ID:** 11044
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::CCYUseBaseCurve∈(NO, YES)

**CFU ID:** 11048
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::OISDateCompression∈(NO, YES)

**CFU ID:** 11051
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::SpreadBuildMethod not like ".*"
**Target Conditions:** CURVE::SpreadBuildMethod∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD)

**CFU ID:** 11054
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::TurnMethod∈(CONSTANT_CASH, CONSTANT_FORWARD, PARALLEL_ZERO)

**CFU ID:** 11059
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::UseType∈(CROSSCCYSWAP, DISCOUNTBASIS, LIBOR, INFLATION, TREASURY, CONVERTIBILITY, CROSSCCY)

**CFU ID:** 11062
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::Spreads::SpreadBuildMethod not like ".*"
**Target Conditions:** CURVE::Spreads::SpreadBuildMethod∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD, QUADRATIC_CONSTANT_FORWARD)

**CFU ID:** 11063
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::NaturalTolerance [(*)[d]] ≤ 10 and CURVE::NaturalTolerance like "*d"

**CFU ID:** 11068
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::RecalibMethod∈(APPROX, EXACT, EXACTFORCED)

**CFU ID:** 11069
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::BaseRateType ≠ OIS
**Target Conditions:** CURVE::OISUseBaseCurve∈(NO, YES, HYBRID)

**CFU ID:** 11082
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** MODEL::RecalibCurves∈(NO, YES)

**CFU ID:** 11084
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::HybridConstantForwardConnection∈(LINEAR, QUADRATIC)

**CFU ID:** 11085
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::CashToFuture∈(EXACT, EXACTCASH, EXACTCASH-1, CASHPRIORITY, LINEAR, NONE)

**CFU ID:** 11089
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::SpotLiborUseBaseCurve∈(NO, YES)

**CFU ID:** 11620
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::TreasuryUseBaseCurve∈(NO, YES)

**CFU ID:** 11622
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** -
**Target Conditions:** CURVE::TurnSpreadExtrapolations::Extrapolation∈(PERIODIC-QUARTEREND)

**CFU ID:** 11623
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::Cash::SpreadBuildMethod not like ".*"
**Target Conditions:** CURVE::Cash::SpreadBuildMethod∈(CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)

**CFU ID:** 11624
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::SpreadBuildMethod not like ".*"
**Target Conditions:** CURVE::SpreadBuildMethod∈(CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)

**CFU ID:** 11625
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::SpreadBuildMethod like ".*"
**Target Conditions:** CURVE::SpreadBuildMethod [(*)*]∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD) and CURVE::SpreadBuildMethod not like "QUADRATIC_CONSTANT_FORWARD"

**CFU ID:** 11626
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::Spreads::SpreadBuildMethod like ".*"
**Target Conditions:** CURVE::Spreads::SpreadBuildMethod [(*)*]∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD) and CURVE::Spreads::SpreadBuildMethod not like "QUADRATIC_CONSTANT_FORWARD"

**CFU ID:** 11627
**Model Configurations:** All model configurations.
**PRDS Products:** All approved products.
**Rule usage logic:** IF (Minimum Conditions) THEN (Check Target Conditions)
**Minimum Conditions:** CURVE::UseType∈(DISCOUNTBASIS, LIBOR)
**Target Conditions:** CURVE::BaseRateType∈(LIBOR, LIBOR+*, OIS, OIS+*)

### 6.2.2 Stress test parameters Ranges

Table 249 gives an overview of the range of risk factor shifts used for each product group.

| Group | Product | Test | IRCURVE Swap | IRCURVE Discountspread | IRCURVE Spotliborspread | IRCURVE OISspread |
|-------|---------|------|--------------|------------------------|--------------------------|-------------------|
| (1.1) | Cashflow | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |         | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |         | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.1) | SecurityCollateralReceived | EOD | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |                            | CCAR | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |                            | IRRBB | [-5%,+5%] | [-5%,+5%] | NA | NA |
| (1.1) | CashBalance | EOD | [-5%,+5%] | NA | NA | [-5%,+5%] |
| (1.2) | IRFundingMMFloat | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                  | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.2) | InternalFundingDepoTermOISBullet | EOD | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |                                  | CCAR | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |                                  | IRRBB | [-5%,+5%] | [-5%,+5%] | NA | NA |
| (1.3) | IRSwapBasis | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       | IRSwapFltFlt | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       | OISwap | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.4) | IRFuture | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |         | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |         | IRRBB | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
| (1.5) | FundMMIdx_Single | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                  | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                  | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
|       | IRIndexSingle_DURBIAS | EOD | [-5%,+5%] | NA | NA | NA |
|       |                        | CCAR | [-5%,+5%] | NA | NA | NA |
|       |                        | IRRBB | [-15%,+15%] | NA | NA | NA |
| (1.6) | MuniSwap | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |         | CCAR | [-5%,+5%] | [-4%,+5%] | [-4%,+5%] | [-4%,+5%] |
|       |         | IRRBB | [-3%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.7) | Repo | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       | EvergreenStockBorrow | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                      | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.7) | CouponPaySell | EOD | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |              | CCAR | [-5%,+5%] | [-5%,+5%] | NA | NA |
|       |              | IRRBB | [-5%,+5%] | [-5%,+5%] | NA | NA |
| (1.8) | TreasuryYieldLockUnissued | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                          | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] |
|       |                          | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] |
| (1.9) | CertificateOfDepositFix | EOD | [-5%,+5%] | NA | NA | NA |
|       |                        | CCAR | [-5%,+5%] | NA | NA | NA |
|       |                        | IRRBB | [-15%,+15%] | NA | NA | NA |
| (1.10) | CorpBondDistressed | EOD | [-5%,+5%] | NA | NA | NA |
|        |                   | CCAR | [-5%,+5%] | NA | NA | NA |
|        |                   | IRRBB | [-15%,+15%] | NA | NA | NA |
| (IV.1) | EqDeltaOne_OISSwap | EOD | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | NA |
|        |                   | CCAR | [-5%,+5%] | [-5%,+5%] | [-5%,+5%] | NA |
|        |                   | IRRBB | [-15%,+15%] | [-15%,+15%] | [-15%,+15%] | NA |

Table 249: Risk Factor Table.

### 6.3 Usage controls

Model risk monitor the model and product combinations that have not been approved that must not be used by product model users for books and records fair value measurements or external regulatory reporting. The Model Usage Exception Report completed by relevant functions monitors and reports instances of model usage exceptions. As per model use section of the pricing model risk policy, the usage exceptions in the Model Usage Exception Report are reported under the following categories:

* Model Exception (use of an unapproved model is based on approved model inventory in MARS).
* P-M Exception (product not approved for the approved model selection is based on approved product-model approval inventory in PRDS).
* Blank PRDS Product (trade not tagged with a PRDS product name).
* Model Parameter Usage Exceptions (trade using model parameter values which are not allowed based on prescribed conditions for use is based on MARS CFU/model rules).
* Unapproved dispersion.

Model and product combinations that have not been approved through MoRM's validation processes as well as retired and superseded models must not be used by product model users for books and records fair value measurements or external risk reporting.

Interim controls are put in place over exceptions to manage, monitor and mitigate the risk of inappropriate or inaccurate model usage by product-model users. Exceptions must be remediated within a defined threshold period. Remediation activities could include a trade re-booking or the migration of a trade to an approved model. The validity of product tags assigned to trades by product-model users is independently verified by MRC through the Product Tagging Validation or PTV process.

### 6.4 Change Control

For Pricing models, implementation refers to DBA releases and deployment refers to integrating them into risk calculators.

The DBAnalytics code which is comprised of the C++ modelling/interface code and compilation directives files, the regression testRJ files, their benchmarkRZ results, and the OnlineHelp are all maintained in source control auditable repositories. The code modifications releases are made and classified as part of the pricing change process.

DBAnalytics are responsible for the daily production of binary executables for DEV, BETA, and PROD builds of the library. These are available from DBA website for download. The actual deployment of these binaries into the risk systems is officially end-of-day PnL is the responsibility of the technology teams who maintain these systems. Since DBA is a common analytic to all systems and the model change will be applicable to all (whilst at different time horizon according to system release), the pricing model change usage control key principle relies on:

* The pricing model change process including classification and validation of model change. DBA will create a model parameter to enable and disable the model change. Model risk will control the release of the model change by adding a model parameter rule for any model change pending review.
* Monitoring model usage controls through continuous tracking of trades to detect the use of unapproved models.
* Implementation controls through mandatory use of strategic risk library and calculators, source control and release procedure.

### 6.5 Results from Annual Model Review

SR11-7 introduces the concept of an annual model review for each model as follows: Banks should conduct a periodic review - at last annually but more frequently if warranted - of each model to determine whether it is working as intended and if the existing validation activities are sufficient. Such a validation could simply affirm previous validation work, suggest updates to previous validation activities, or call for additional validation activities. All pricing models within the approved model inventory must be subject to the Annual Model Review to determine whether the models continue to be valid and appropriate for the intended use given current market conditions and whether associated controls remain sufficient. The performance of all active pricing models is assessed over the course of the year through on-going model performance monitoring.

As per the policy, the annual model review will consider

* Proposed global Model Risk Scorecard overrides to inherent risk rating :
  None.
* Model performance: Please refer to section "Ongoing Performance Monitoring".
  With the exception of the issues listed and described below (please list and describe relevant instances reported including subsequent completed actions) ongoing performance monitoring reported in insert year did not reveal unexpected or inaccurate results attributable to model performance.
* Other relevant indicators not captured by the above, such as:
  - Changes in academic theory related to modelling that would require new models/changes to existing models:
    None identified.
  - Changes in the market that have rendered some model assumptions to be inappropriate or insufficient:
    None observed.
  - Model development regression testing indicated potential issues with the model:
    None observed.

Approval Decision : the annual model review process proposed outcome was that the RateDeterministic was re-attested by the MCWG.

## 7. Document Change History

### 7.1 Change History Post July 15, 2015

| Revision | Author | Date | Comment |
| --- | --- | --- | --- |
| r12618 | andre loerx | 2015-07-31 | GoLive with model consolidation for RateDeterministic. (Attach new document in MARS) |
| r12666 | andre loerx | 2015-07-31 | Fix Document Change History. |
| r13117 | vicente mataix pastor | 2015-08-18 | Fixing typos in DepoDemagdFloatOpenEnd and adding payment replication figure. |
| r13125 | vicente mataix pastor | 2015-08-18 | Moving version changes to right box |
| r13131 | vicente mataix pastor | 2015-08-18 | removing duplicated changes |
| r13857 | andre loerx | 2015-09-22 | Add testing for Cashflow, Cashflow.OTVCashGuarantee and Cashflow.SECProdCashGuarantee approval. |
| r15169 | andre loerx | 2015-12-04 | Added p/m pairs for term deposit products, cash loans and cashflow products. Added product description (Sec. 2) and test evidence section (A.4). Added Sec. 4.5 on term deposits. |
| r15477 | andre loerx | 2015-12-17 | Added testing for Repo and RepoReverse priced with DBOPT and DBC-ANALYTIC. |
| r15479 | andre loerx | 2015-12-17 | Changed Pref/Alt status to alternative for Repo and RepoReverse. |
| r15585 | andre loerx | 2015-12-18 | Changed Pref/Alt status to preferred for Repo and RepoReverse. (It was accidentally changed to alternative.) |
| r15858 | andre loerx | 2015-12-22 | Add testing for EqInternalCashAdj priced with (DBCANALYTIC-)RateDeterministic (cf. Sec. A.4). The booking is identical to regular products. |
| r16294 | andre loerx | 2016-01-28 | Remove OISSwapPreXCDI from approved model list. Target model for this product is RateDeterministic_FXDeterministic. |
| r16303 | andre loerx | 2016-01-28 | Removed product description for OISSwapPreXCDI from Section 2. |
| r19094 | jason doukas | 2016-05-16 | Added clearing house spread testing. |
| r19241 | ching hwa eu | 2016-05-20 | added approved products under DS4 |
| r19284 | jason doukas | 2016-05-23 | Added testing for curves with more than normal number of instruments. |
| r19285 | jason doukas | 2016-05-23 | Fix Jenkins errors |
| r19286 | jason doukas | 2016-05-23 | Fix Jenkins errors |
| r19292 | jason doukas | 2016-05-23 | Fix Jenkins errors |
| r19294 | jason doukas | 2016-05-23 | Revert to version 19241. Debugging Jenkins errors. |
| r19333 | jason doukas | 2016-05-23 | Adding testing for curves with more than the normal number of market instruments (dense curve). |
| r20857 | jason doukas | 2016-07-01 | Revalidation DBA version 330. Tests have been rewritten in python. |
| r21508 | andre loerx | 2016-07-22 | a) Added testing and approval for DepoTermFix, DepoTermFlt on DBC-ANALYTIC b) Added testing and approval on CashCollateralReceived on DBCANALYTIC c) Added testing and approval on FixedCashflowFee on DBOPT d) Removing testing and approval for TBillBasisSwap on DBOPT |
| r21662 | andre loerx | 2016-07-29 | Added testing for FeeAccrual and TreasuryYieldLock. |
| r21679 | andre loerx | 2016-07-29 | Removed TreasuryYieldLock from approved p/m pair list. This trade need further development by DSA. |
| r21918 | andre loerx | 2016-08-11 | Added testing for DepoTermFlt priced with DBOPT. |
| r21922 | andre loerx | 2016-08-11 | Add missing testing files for DepoTermFlt on DBOPT. |
| r23269 | jeremie salouf girard | 2016-10-10 | Committing files for OISForward |
| r23306 | timothy brere-ton | 2016-10-12 | Added testing of MMD TRS product. |
| r23318 | timothy brere-ton | 2016-10-12 | added comment to MMD TRS testing |
| r23334 | jeremie salouf girard | 2016-10-12 | Modifying PRDS description for OISForward |
| r23348 | jeremie salouf girard | 2016-10-13 | Same update |
| r23878 | timothy brere-ton | 2016-10-25 | Updated to remove Jenkins errors. |
| r23966 | timothy brere-ton | 2016-10-26 | changes to resolve Jenkins errors |
| r25333 | ching hwa eu | 2016-11-30 | added CashCollateralPledged to list of approved products. |
| r25406 | ching hwa eu | 2016-12-02 | test evidence for OpenRepoFixed and OpenRepoFloat |
| r25408 | ching hwa eu | 2016-12-02 | |
| r25409 | ching hwa eu | 2016-12-02 | added figures for open repo tests |
| r25410 | ching hwa eu | 2016-12-02 | test evidence for open repos |
| r25411 | ching hwa eu | 2016-12-02 | test evidence for open repos |
| r25413 | ching hwa eu | 2016-12-02 | added figures |
| r25457 | ching hwa eu | 2016-12-05 | deleted log file |
| r25468 | ching hwa eu | 2016-12-05 | |
| r25494 | ching hwa eu | 2016-12-05 | deleted .out file |
| r25495 | ching hwa eu | 2016-12-05 | fixed typo |
| r26177 | ching hwa eu | 2017-01-10 | added IRSwapFxFix to list of approved products for DS4. |
| r26628 | ching hwa eu | 2017-01-30 | added explanation and testing for OIS Date Compression (Release Note: 420_00094_R) |
| r26682 | timothy brere-ton | 2017-01-31 | Resolved Jenkins error. |
| r26692 | damon nury | 2017-02-01 | Added rates test for eqSPAC. |
| r26693 | damon nury | 2017-02-01 | Added .py file for eqSPAC |
| r26695 | damon nury | 2017-02-01 | Added dictionary eqSPAC |
| r26696 | damon nury | 2017-02-01 | Added eqSPAC. |
| r26697 | damon nury | 2017-02-01 | Added Model testing file with eqSPAC testing. |
| r26705 | damon nury | 2017-02-01 | Re-added document. |
| r26728 | damon nury | 2017-02-02 | Re-added RateDeterministic.tex |
| r26871 | scott murphy | 2017-02-07 | Fix model rule. |
| r26928 | tom stone | 2017-02-07 | Validation of DBOPT.RateDeterministic for IRRBB usage for IRFuture, IRSwapBasis, IRSwapFxFlt, OISwap, DepoTermFlt, DepoTermFixedBullet, DepoTermFixVariableNotional, DepoTermFltVariableNotional, DepoDemandFloatOpenEnd, OpenRepoFixed, OpenRepoFlt. |
| r27465 | timothy brere-ton | 2017-02-15 | Updating MVR to resolve Jenkins errors. |
| r27507 | timothy brere-ton | 2017-02-15 | Updated MVR to resolve Jenkins errors. |
| r27516 | timothy brere-ton | 2017-02-15 | Updated MVR to further resolve Jenkins errors. |
| r27567 | timothy brere-ton | 2017-02-16 | Updated MVR to resolve Jenkins errors. |
| r27937 | tom stone | 2017-03-03 | Updated IRRBB approval coverage to include RepoReverse product for DBOPT.RateDeterministic. |
| r28123 | benjamin abel | 2017-03-16 | Added testing evidence for non-OTC trades: RepoTriParty, DepoDemandFixedOpenEnd |
| r28128 | benjamin abel | 2017-03-16 | Added additional tests ffor non-OTC trades: RepoTriParty, DepoDemandFixedOpenEnd |
| r28190 | timothy brere-ton | 2017-03-20 | Updating MVR on behalf of Benjamin Abel. |
| r28210 | timothy brere-ton | 2017-03-20 | Corrected typographical errors. |
| r28328 | tom stone | 2017-03-24 | Document promoted from UAT with formatting change to correct erroneous Jenkins error creation. |
| r28376 | scott murphy | 2017-05-10 | Removed IRXCcySwapMTM. |
| r29444 | tom stone | 2017-05-12 | Approval of DepoTermFix for DBOPT.RateDeterministic. IRRBB approval for IRFundingMMFloat, IRFundingMMFixed and DepoTermFix. Removal from approval of IRXccySwapMTM. |
| r29539 | scott murphy | 2017-05-19 | Added testing for IRFundingMMOpenEndCallAcc |
| r29543 | scott murphy | 2017-05-19 | Update test listing |
| r29563 | scott murphy | 2017-05-22 | Update product listing to include IRFundingMMOpenEndCallAcc |
| r29707 | ismael sco-braffy | 2017-05-30 | Update of the IRRBB section. |
| r29708 | ismael sco-braffy | 2017-05-30 | Amendments to IRRBB section + IRFundingMMO! IRRBB approval. |
| r29710 | ismael sco-braffy | 2017-05-30 | IRFundingMMO! IRRBB approval + amendments to the IRRBB section. |
| r29818 | scott murphy | 2017-06-05 | FundMMIndex_Single testing added |
| r29832 | scott murphy | 2017-06-06 | FundMMIdx_Single adjusted |
| r29977 | scott murphy | 2017-06-09 | Added IRRBB testing for IRFundingMMOpenEndCallAcc |
| r30014 | timothy brere-ton | 2017-06-12 | Updated MVR to resolve Jenkins error. |
| r30051 | timothy brere-ton | 2017-06-13 | Updated MVR to resolve Jenkins error. |
| r30208 | scott murphy | 2017-06-20 | Added testing for StockBorrow and StockLend. Updated tags for RepoTerm and RepoOpen. |
| r30219 | scott murphy | 2017-06-20 | Testing for StockBorrow and StockLend only without update for other tags due to PRDS issue. |
| r30228 | scott murphy | 2017-06-21 | StockBorrow and StockLend in executive summary. |
| r30246 | scott murphy | 2017-06-21 | Table of contents correction. |
| r30250 | scott murphy | 2017-06-21 | Added RepoOpen tag. |
| r30343 | scott murphy | 2017-06-23 | Removed OpenRepoFixed and OpenRepoFloat tags. |
| r30900 | scott murphy | 2017-07-12 | Added RepoTerm tag. |
| r30957 | vicente mataix pastor | 2017-07-12 | Adding CCAR testing. |
| r35361 | scott murphy | 2017-08-03 | Added RepoEvergreen and RepoExtendable. |
| r35775 | scott murphy | 2017-08-08 | Added RepoEvergreen and RepoExtendable to IRRBB testing |
| r35787 | scott murphy | 2017-08-08 | Added RepoEvergreen and RepoExtendable to IRRBB testing |
| r36009 | scott murphy | 2017-08-10 | Added DBC DBOPT comparison for IRFundingMMFixed and IRFundingMMFloat. |
| r36027 | scott murphy | 2017-08-10 | Added DBC DBOPT comparison for IRFundingMMFixed and IRFundingMMFloat. |
| r36386 | scott murphy | 2017-08-15 | Removed DepoTermOISBullet. |
| r36480 | scott murphy | 2017-08-16 | Removed blank product tag. |
| r38196 | ching hwa eu | 2017-09-14 | added IRXCcySwapFixFix and IRXCcySwapFixFlt to list of PRDS products approved for DS4. |
| r38541 | scott murphy | 2017-09-20 | Validation findings and model changes added. |
| r38598 | ching hwa eu | 2017-09-21 | Kannon tradable approved which includes the PRDS products IRSwapFxFlt and OISwap |
| r38689 | scott murphy | 2017-09-22 | Validation findings and model changes updated. |
| r40095 | scott murphy | 2017-11-06 | Added testing for model change 500_00029_R (clearing spreads). |
| r40102 | scott murphy | 2017-11-06 | Updated model rule 626 (Rate00069) so that Convexity.Tolerance must be set to 10d now (previously 7d). |
| r40818 | ching hwa eu | 2017-12-08 | added comment, multicurrency DS4 with floor and switch approved |
| r41263 | scott murphy | 2018-01-11 | Update to include Cashflow.Eq871m-NRA. |
| r41267 | scott murphy | 2018-01-11 | Update to include Cashflow.Eq871m-FATCA. |
| r41342 | scott murphy | 2018-01-18 | IRRBB testing for RepoExtendable. |
| r41348 | scott murphy | 2018-01-18 | IRRBB testing for RepoExtendable. |
| r41473 | scott murphy | 2018-01-29 | Corrected typo in IRRBB section. |
| r41509 | timothy brere-ton | 2018-01-30 | Resolving Jenkins errors. |
| r42956 | scott murphy | 2018-04-05 | IRFundingMMOpenEndCallAcc added to groups. |
| r43356 | scott murphy | 2018-04-25 | Updated product description table. |
| r50548 | scott murphy | 2018-06-29 | Reval Q2 2018. |
| r50773 | scott murphy | 2018-07-05 | Validation findings closed due to release notes 620_00020_R and 620_00004_R. |
| r50796 | scott murphy | 2018-07-06 | Add MARS request ID to recent findings closed. |
| r51005 | scott murphy | 2018-07-10 | Added model rule on BuildMethod. |
| r51126 | scott murphy | 2018-07-16 | Update model rule and IRFundingMMFloatMVOL. |
| r51238 | ching hwa eu | 2018-07-18 | added SOFR Rates |
| r51542 | ching hwa eu | 2018-07-25 | The IRSwapFxFlt is also approved for the use of BOND OIS spread vol for multiple collaterals of the same currency (e.g. bond and cash collateral). |
| r51807 | marek olek-siewicz | 2018-07-31 | mars tables injected |
| r52483 | timothy brere-ton | 2018-08-17 | Changed PRDS tag of TreasuryYieldLock to TreasuryYieldLockUnissued |
| r52496 | timothy brere-ton | 2018-08-21 | Retagged treasuryyieldlock as treasuryyieldlockunissued. |
| r52511 | timothy brere-ton | 2018-08-22 | Updated tex with phantom character to trigger compilation. |
| r52528 | gianluca lau-leri | 2018-08-22 | Changed the model from alternative to preferred for MuniSwap. Added MuniSwap testing. |
| r53988 | murpsco | 2018-09-25 | IRIndexSingle_MM added. |
| r55990 | lauigla | 2018-10-25 | Cleaned up testing for MuniSwap |
| r57124 | runaeri | 2018-12-21 | Revalidation Q4 2018. |
| r57128 | runaeri | 2018-12-21 | jenkins logs |
| r57213 | runaeri | 2019-01-15 | Q4 2018 Revalidation, IRRBB, and CCAR: typo fixes and stylistic updates |
| r58169 | runaeri | 2019-03-07 | minor corrections |
| r58446 | runaeri | 2019-03-29 | |
| r58669 | runaeri | 2019-04-12 | typo correction |
| r58759 | euchi | 2019-05-09 | added testing for SOFR and ESTER CURVE |
| r59962 | brerlim | 2019-09-19 | Updating Model Rule 1077. |
| r60165 | euchi | 2019-10-15 | added back Q4 2018 Revalidation |
| r60166 | euchi | 2019-10-15 | updated url for testing evidence |
| r60167 | euchi | 2019-10-15 | added test evidence for SOFR and ESTER |
| r60178 | euchi | 2019-10-16 | updating Model Rule 1077 to all parts of the document |

## 8. Product Testing

### 8.1 Product Testing: Fee.Remittance

Figure 595 shows the PV of the Fee.Remittance when the underlying OISSpreads are shifted. In particular, the higher the spread shift, the lower the discount factor and hence the lower the PV.

![Figure 595: PV of the Fee.Remittance as a function of OIS spread shifts.](./Fig/1.png)

##### 8.1.1.2 Taylor Test

Figure 596 shows the PV of the Fee.Remittance computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 596: PV of the Fee.Remittance as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/2.png)

##### 8.1.1.3 Comparison with Other Models

Figures 597-599 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 597: PV of the Fee.Remittance as a function of curve shifts.](./Fig/3.png)

![Figure 598: Flatdelta of the Fee.Remittance as a function of curve shifts.](./Fig/4.png)

![Figure 599: Flatgamma of the Fee.Remittance as a function of curve shifts.](./Fig/5.png)

##### 8.1.2 CCAR Testing

In this section, we test the Fee.Remittance trade as described in Subsection 8.1 under the CCAR 2020 scenarios and compare them with the Base scenario.

###### 8.1.2.1 Scenario Curves

Figure 600 shows the scenario curves for the underlying rate affecting the Fee.Remittance.

![Figure 600: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/6.png)

###### 8.1.2.2 Stability Tests

For the considered Fee.Remittance, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

##### a) Stability with respect to Curve Shifts

Figures 601-603 show the obtained PVs, Flatdeltas, Flatgammas of the Fee.Remittance when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected. Also, note that the impact of the CCAR2 scenario on the considered instrument is larger than the impact of the CCAR1 scenario.

![Figure 601: PV of the Fee.Remittance as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/7.png)

![Figure 602: Flatdelta of the Fee.Remittance as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/8.png)

![Figure 603: Flatgamma of the Fee.Remittance as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/9.png)

##### b) Stability with respect to risk factor shifts

Figure 604 shows the PVs of the Fee.Remittance in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads are shifted.

![Figure 604: PV of the Fee.Remittance as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/10.png)

###### 8.1.2.3 Taylor Approximation under CCAR

Eventually, Figures 605 and 606 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 605: PV of the Fee.Remittance as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/11.png)

![Figure 606: PV of the Fee.Remittance as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/12.png)

###### 8.1.2.4 Comparison with Other Models

Figures 607-608, 609-610 and 611-612 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

![Figure 607: PV difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/13.png)

![Figure 608: PV difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/14.png)

![Figure 609: Flatdelta difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/15.png)

![Figure 610: Flatdelta difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/16.png)

![Figure 611: Flatgamma difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/17.png)

![Figure 612: Flatgamma difference to the DBOPT model of the Fee.Remittance as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/18.png)

##### 8.1.3 IRRBB Testing

In this section, we test the stability of the Fee.Remittance trade as described in Subsection 8.1 under the IRRBB scenarios and compare them with the Base scenario.

###### 8.1.3.1 Scenario Curves

Figure 613 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 613: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/19.png)

###### 8.1.3.2 Stability Tests

For the considered Fee.Remittance, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 614-619 show the obtained PVs of the Fee.Remittance in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 614: PV of the Fee.Remittance under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/20.png)

![Figure 615: PV of the Fee.Remittance under curve shifts for the Base scenario and the parallel scenarios.](./Fig/21.png)

![Figure 616: PV of the Fee.Remittance under curve shifts for the Base scenario and the short scenarios.](./Fig/22.png)

![Figure 617: PV of the Fee.Remittance under curve shifts for the Base scenario and the long scenarios.](./Fig/23.png)

![Figure 618: PV of the Fee.Remittance under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/24.png)

![Figure 619: PV of the Fee.Remittance under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/25.png)

##### 8.1.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the Fee.Remittance trade as described in Subsection 8.1.

Table 251 lists the underlying risk factors of the Fee.Remittance. In particular, we can observe that the product is sensitive to all its risk factors. As a result, the transitions of the PV under the up and down stressed scenario are both flat, as shown in Figure 620.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |

Table 251: Risk factors for the Fee.Remittance.

![Figure 620: Transition of the PV of the Fee.Remittance in the up and down stressed scenarios.](./Fig/26.png)

### 8.2 Product Testing: IRFundingMMFixed

We consider a IRFundingMMFixed product. An IRFundingMMFixed is a cash loan or deposit for a fixed term and at a fixed rate whose purpose is to fund a trading book.

The considered IRFundingMMFixed trade is taken from production and has the following key features:

- The product is a GENSWAP security with one leg.
- The leg receives semi-annually coupon at the floating rate LIBOR + 1% (in DBA, the floating rate is set using the Multiplier = 1 and the RateIndexType being the reference rate). Hence, for the leg it holds PV = N * DF * △, where DF is the discount factor, N is the notional and C is the coupon rate.
- The original notional is 5036.8 and denominated in INR.
- The valuation date is 23/10/2020.
- The roll and effective date is 11/12/2018. The end date is 11/12/2023.

##### 8.2.1 EOD Testing

###### 8.2.1.1 Stability Tests

For the considered IRFundingMMFixed, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

##### a) Stability with respect to curve shifts

Figures 621-623 show the obtained PVs, Flatdeltas, and Flatgammas of the IRFundingMMFixed when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 621: PV of the IRFundingMMFixed as a function of curve shifts.](./Fig/27.png)

![Figure 622: Flatdelta of the IRFundingMMFixed as a function of curve shifts.](./Fig/28.png)

![Figure 623: Flatgamma of the IRFundingMMFixed as a function of curve shifts.](./Fig/29.png)

##### b) Stability with respect to risk factor shifts

Figures 624 and 625 show the PV of the IRFundingMMFixed when the underlying OISSpreads and CCYRates are shifted, respectively. In particular, the higher the spread shifts, the lower the discount factor and hence the lower the PV. Moreover, higher the Currency rates shift, lower the discount factor in foreign funding, and hence lower its PV.

![Figure 624: PV of the IRFundingMMFixed as a function of OISSpread shifts.](./Fig/30.png)

![Figure 625: PV of the IRFundingMMFixed as a function of Currency Rates shifts.](./Fig/31.png)

###### 8.2.1.2 Taylor Test

Figure 626 shows the PV of the IRFundingMMFixed computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 626: PV of the IRFundingMMFixed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/32.png)

###### 8.2.1.3 Comparison with Other Models

Figures 627-629 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 627: PV of the IRFundingMMFixed as a function of curve shifts.](./Fig/33.png)

![Figure 628: Flatdelta of the IRFundingMMFixed as a function of curve shifts.](./Fig/34.png)

![Figure 629: Flatgamma of the IRFundingMMFixed as a function of curve shifts.](./Fig/35.png)

##### 8.2.2 CCAR Testing

In this section, we test the IRFundingMMFixed trade as described in Subsection 8.2 under the CCAR 2020 scenarios and compare them with the Base scenario.

###### 8.2.2.1 Scenario Curves

Figure 630 shows the scenario curves for the underlying rate affecting the IRFundingMMFixed.

![Figure 630: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/36.png)

###### 8.2.2.2 Stability Tests

For the considered IRFundingMMFixed, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

##### a) Stability with respect to Curve Shifts

Figures 631-633 show the obtained PVs, Flatdeltas, Flatgammas of the IRFundingMMFixed when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 631: PV of the IRFundingMMFixed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/37.png)

![Figure 632: Flatdelta of the IRFundingMMFixed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/38.png)

![Figure 633: Flatgamma of the IRFundingMMFixed as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/39.png)

##### b) Stability with respect to risk factor shifts

Figures 634 and 635 show the PVs of the IRFundingMMFixed in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and CCYRates are shifted, respectively.

![Figure 634: PV of the IRFundingMMFixed as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/40.png)

![Figure 635: PV of the IRFundingMMFixed as a function of Currency rates shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/41.png)

###### 8.2.2.3 Taylor Approximation under CCAR

Eventually, Figures 636 and 637 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 636: PV of the IRFundingMMFixed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/42.png)

![Figure 637: PV of the IRFundingMMFixed as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/43.png)

###### 8.2.2.4 Comparison with Other Models

Figures 638-639, 640-641 and 642-643 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBL, DBM, DBSMC, and compared with the DBOPT model.

![Figure 638: PV difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/44.png)

![Figure 639: PV difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/45.png)

![Figure 640: Flatdelta difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/46.png)

![Figure 641: Flatdelta difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/47.png)

![Figure 642: Flatgamma difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/48.png)

![Figure 643: Flatgamma difference to the DBOPT model of the IRFundingMMFixed as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/49.png)

##### 8.2.3 IRRBB Testing

In this section, we test the stability of the IRFundingMMFixed trade as described in Subsection 8.2 under the IRRBB scenarios and compare them with the Base scenario.

###### 8.2.3.1 Scenario Curves

Figure 644 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 644: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/50.png)

###### 8.2.3.2 Stability Tests

For the considered IRFundingMMFixed, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 645-650 show the obtained PVs of the IRFundingMMFixed in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 645: PV of the IRFundingMMFixed under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/51.png)

![Figure 646: PV of the IRFundingMMFixed under curve shifts for the Base scenario and the parallel scenarios.](./Fig/52.png)

#### 8.2.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the IRFundingMMFixed trade as described in Subsection 8.2.

Table 252 lists the underlying risk factors of the IRFundingMMFixed. In particular, we can observe that the product is sensitive to all its risk factors for which there are shocks available. The resulting transitions of the PV under the up and down stressed scenario are shown in Figure 651.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | INR | INR | CCYRATE* | YES |
| IRCURVE | INR | INR | OISSPREAD | YES |
| IRCURVE | INR | INR | SWAP | YES |
| IRCURVE | USD | USD | BASISSPREAD:FEDFUND | YES |
| IRCURVE | USD | USD | DISCOUNTSPREAD | YES |
| IRCURVE | USD | USD | OISSPREAD | YES |
| IRCURVE | USD | USD | SPOTLIBORSPREAD | YES |
| IRCURVE | USD | USD | SWAP | YES |

Table 252: Risk factors for the IRFundingMMFixed. Note that for the risk factors marked with *, there are no shocks available.

![Figure 651: Transition of the PV of the IRFundingMMFixed in the up and down stressed scenarios.](./Fig/651.png)

### 8.3 Product Testing: StockLend

A transaction in which the transferor (lender), transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) will return equivalent securities at a future date in return for a fee. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower.

In the trade in consideration in this section, the valuation date is 23/10/2020 and the currency is EUR. RollDate, EffectiveDate and EndDate are summarised in Table 253.

| | Leg 1 |
| --- | --- |
| RollDate | 06/10/2020 |
| EffectiveDate | 06/10/2020 |
| EndDate | 29/09/2021 |

Table 253: RollDate, EffectiveDate and EndDate for each of the legs in the swap.

This security is templated in CCYSWAP, where one leg receiving LIBOROIS rate accrued till the end date and the principal payments on the end date. Notional is set at 1.028 and denominated in EUR.

##### 8.3.1 EOD Testing

###### 8.3.1.1 Stability Tests

For the considered StockLend, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

##### a) Stability with respect to curve shifts

Figures 652-654 show the obtained PVs, Flatdeltas, and Flatgammas of the StockLend when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 652: PV of the StockLend as a function of curve shifts.](./Fig/652.png)

![Figure 653: Flatdelta of the StockLend as a function of curve shifts.](./Fig/653.png)

![Figure 654: Flatgamma of the StockLend as a function of curve shifts. Note that the order of the Flatgamma is negligible with respect to 10,000 notional.](./Fig/654.png)

##### b) Stability with respect to risk factor shifts

Figure 655 and 656 show the PV of the StockLend when the underlying OISSpreads and BasisSpreads are shifted, respectively. In particular, the higher the spread shift, the higher the floating rates and the coupon of the first leg, respectively, and hence the higher the PV.

![Figure 655: PV of the StockLend as a function of OIS spread shifts.](./Fig/655.png)

![Figure 656: PV of the StockLend as a function of Basis spread shifts.](./Fig/656.png)

Note that, as cash flows are discounted using the funding name "DOMOIS" which is nothing but OIS spreads over LIBOR curve, no additional testing is done at this point.

###### 8.3.1.2 Taylor Test

Figure 657 shows the PV of the StockLend computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for small shifts.

![Figure 657: PV of the StockLend as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/657.png)

###### 8.3.1.3 Comparison with Other Models

Figures 658-660 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 658: PV of the StockLend as a function of curve shifts.](./Fig/658.png)

![Figure 659: Flatdelta of the StockLend as a function of curve shifts.](./Fig/659.png)

![Figure 660: Flatgamma of the StockLend as a function of curve shifts.](./Fig/660.png)

##### 8.3.2 CCAR Testing

In this section, we test the StockLend trade as described in Subsection 8.3 under the CCAR 2020 scenarios and compare them with the Base scenario.

###### 8.3.2.1 Scenario Curves

Figure 661 shows the scenario curves for the underlying rate affecting the StockLend.

![Figure 661: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/661.png)

###### 8.3.2.2 Stability Tests

For the considered StockLend, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

##### a) Stability with respect to Curve Shifts

Figures 662-664 show the obtained PVs, Flatdeltas, Flatgammas of the StockLend when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected. Also, note that the impact of the CCAR2 scenario on the considered instrument is larger than the impact of the CCAR1 scenario.

![Figure 662: PV of the StockLend as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/662.png)

![Figure 663: Flatdelta of the StockLend as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/663.png)

![Figure 664: Flatgamma of the StockLend as a function of curve shifts for the scenarios Base, CCAR1 and CCAR2. Flatgamma for the base case are deemed to be negligeble with respect to 10000 notional.](./Fig/664.png)

##### b) Stability with respect to risk factor shifts

Figure 665-666 shows the PVs of the StockLend in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and BasisSpreads are shifted respectively.

![Figure 665: PV of the StockLend as a function of OISSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/665.png)

![Figure 666: PV of the StockLend as a function of BasisSpread shifts for the scenarios Base, CCAR1 and CCAR2.](./Fig/666.png)

Note that, as cash flows are discounted using the funding name "DOMOIS" which is nothing but OIS spreads over LIBOR curve, no additional testing is done at this point.

###### 8.3.2.3 Taylor Approximation under CCAR

Eventually, Figures 667 and 668 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 667: PV of the StockLend as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR1 scenario.](./Fig/667.png)

![Figure 668: PV of the StockLend as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation under the CCAR2 scenario.](./Fig/668.png)

###### 8.3.2.4 Comparison with Other Models

Figures 669-670, 671-672 and 673-674 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBM and compared with the DBOPT model.

![Figure 669: PV difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/669.png)

![Figure 670: PV difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/670.png)

![Figure 671: Flatdelta difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/671.png)

![Figure 672: Flatdelta difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/672.png)

![Figure 673: Flatgamma difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR1 scenario under different models.](./Fig/673.png)

![Figure 674: Flatgamma difference to the DBOPT model of the StockLend as a function of curve shifts for the CCAR2 scenario under different models.](./Fig/674.png)

##### 8.3.3 IRRBB Testing

In this section, we test the stability of the StockLend trade as described in Subsection 8.3 under the IRRBB scenarios and compare them with the Base scenario.

###### 8.3.3.1 Scenario Curves

Figure 675 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 675: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/675.png)

##### 8.3.3.2 Stability Tests

For the considered StockLend, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 676-681 show the obtained PVs of the StockLend in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 676: PV of the StockLend under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/676.png)

![Figure 677: PV of the StockLend under curve shifts for the Base scenario and the parallel scenarios.](./Fig/677.png)

![Figure 678: PV of the StockLend under curve shifts for the Base scenario and the short scenarios.](./Fig/678.png)

![Figure 679: PV of the StockLend under curve shifts for the Base scenario and the long scenarios.](./Fig/679.png)

![Figure 680: PV of the StockLend under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/680.png)

![Figure 681: PV of the StockLend under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/681.png)

#### 8.3.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the StockLend trade as described in Subsection 8.3.

Table 254 lists the underlying risk factors of the StockLend. In particular, we can observe that the product is sensitive to all its risk factor, except for SWAP. As a result, the transitions of the PV under the up and down stressed scenario are both flat, as shown in Figure 682.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | BASISSPREAD:EONIAOIS | YES |
| IRCURVE | EUR | EUR | DISCOUNTSPREAD | YES |
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | NO |

Table 254: Risk factors for the StockLend.

![Figure 682: Transition of the PV of the StockLend in the up and down stressed scenarios.](./Fig/682.png)

### 8.4 Product Testing: EverGreenRepoReverse, MARS req - 2021Jan22-RESTCOS-16569

The tested product is a Repurchase Agreement (Repo), where the purchaser of a security agrees to sell it back to the seller at a later date. The spot sale results in transfer of money to the borrower in exchange for legal transfer of the security to the lender, while the forward contract ensures repayment of the loan + interest to the lender and return of the collateral of the borrower. In an EverGreen RepoReverse, the remaining tenor does not change(is pushed each day) as long as either party does not call the trade. Once the trade is called, the Tenor is fixed.

In the trade in consideration in this section, the valuation date is 18/01/2021 and the currency is EUR. RollDate, EffectiveDate and EndDate are summarised in Table 255.

| | Leg 1 |
| --- | --- |
| RollDate | 20/05/2020 |
| EffectiveDate | 20/05/2020 |
| EndDate | 19/03/2021 |

Table 255: RollDate, EffectiveDate and EndDate for each of the legs in the swap.

This security is templated in CCYSWAP, where one leg receiving LIBOROIS rate accrued till the end date and the principal payments on the end date. Notional is set at 53.35 and denominated in EUR.

#### 8.4.1 EOD Testing

##### 8.4.1.1 Stability Tests

For the considered EverGreenRepoReverse, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors.

##### a) Stability with respect to curve shifts

Figures 683-685 show the obtained PVs, Flatdeltas, and Flatgammas of the EverGreenRepoReverse when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 683: PV of the EvergreenRepoReverse as a function of curve shifts.](./Fig/683.png)

![Figure 684: Flatdelta of the EvergreenRepoReverse as a function of curve shifts.](./Fig/684.png)

![Figure 685: Flatgamma of the EvergreenRepoReverse as a function of curve shifts.](./Fig/685.png)

##### b) Stability with respect to risk factor shifts

Figure 686 shows the PV of the EverGreenRepoReverse when the underlying OISSpreads is shifted.

![Figure 686: PV of the EvergreenRepoReverse as a function of OISSpread shifts.](./Fig/686.png)

##### 8.4.1.2 Taylor Test

Figure 687 shows the PV of the EverGreenRepoReverse computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 687: PV of the EvergreenRepoReverse as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/687.png)

##### 8.4.1.3 Comparison with other models

Figures 688-690 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 688: PV of the EvergreenRepoReverse as a function of curve shifts.](./Fig/688.png)

![Figure 689: Flatdelta of the EvergreenRepoReverse as a function of curve shifts.](./Fig/689.png)

![Figure 690: Flatgamma of the EvergreenRepoReverse as a function of curve shifts.](./Fig/690.png)

#### 8.4.2 CCAR Testing

In this section, we test the EverGreenRepoReverse trade as described in Subsection 8.4 under the CCAR 2020 scenarios and compare them with the Base scenario.

##### 8.4.2.1 Scenario Curves

Figure 691 shows the scenario curves for the underlying rate affecting the EverGreenRepoReverse.

![Figure 691: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/691.png)

##### 8.4.2.2 Stability Tests

For the considered EverGreenRepoReverse, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios.

##### a) Stability with respect to curve shifts

Figures 692-694 show the obtained PVs, Flatdeltas, Flatgammas of the EverGreenRepoReverse when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 692: PV of the EvergreenRepoReverse as a function of curve shifts.](./Fig/692.png)

![Figure 693: Flatdelta of the EvergreenRepoReverse as a function of curve shifts.](./Fig/693.png)

![Figure 694: Flatgamma of the EvergreenRepoReverse as a function of curve shifts.](./Fig/694.png)

##### b) Stability with respect to risk factor shifts

Figure 695 shows the PVs of the EverGreenRepoReverse in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads are shifted.

![Figure 695: PV of the EvergreenRepoReverse as a function of OISSpread shifts.](./Fig/695.png)

##### 8.4.2.3 Taylor Test

Figures 696 and 697 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 696: PV of the EvergreenRepoReverse in ccar1 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/696.png)

![Figure 697: PV of the EvergreenRepoReverse in ccar2 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/697.png)

##### 8.4.2.4 Comparison with other models

Figures 698-699, 700-701, and 702-703 show the PV, Flatdelta and Flatgamma resp. difference as a function of curve shifts when calculated with other models, namely DBX, DBM, DBSMC, and compared with the DBOPT model. The product is not priced using DBL model in DBA.

![Figure 698: PV of the EvergreenRepoReverse in ccar1 scenario as a function of curve shifts.](./Fig/698.png)

![Figure 699: PV of the EvergreenRepoReverse in ccar2 scenario as a function of curve shifts.](./Fig/699.png)

![Figure 700: FlatDelta of the EvergreenRepoReverse in ccar1 scenario as a function of curve shifts.](./Fig/700.png)

![Figure 701: FlatDelta of the EvergreenRepoReverse in ccar2 scenario as a function of curve shifts.](./Fig/701.png)

![Figure 702: FlatGamma of the EvergreenRepoReverse in ccar1 scenario as a function of curve shifts.](./Fig/702.png)

![Figure 703: FlatGamma of the EvergreenRepoReverse in ccar2 scenario as a function of curve shifts.](./Fig/703.png)

#### 8.4.3 IRRBB Testing

In this section, we test the stability of the EverGreenRepoReverse trade as described in Subsection 8.4 under the IRRBB scenarios and compare them with the Base scenario.

##### 8.4.3.1 Scenario Curves

Figure 704 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

#### 8.4.3.2 Stability Tests

For the considered EverGreenRepoReverse, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 705–710 show the obtained PVs of the EverGreenRepoReverse in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 704: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/704.png)

![Figure 705: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/705.png)

![Figure 706: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and the parallel scenarios.](./Fig/706.png)

![Figure 707: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and the short scenarios.](./Fig/707.png)

![Figure 708: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and the long scenarios.](./Fig/708.png)

![Figure 709: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/709.png)

![Figure 710: PV of the EverGreenRepoReverse under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/710.png)

#### 8.4.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the Fee.Remittance trade as described in Subsection 8.4.

Table 256 lists the underlying risk factors of the Fee.Remittance.

In particular, we can observe that the product is sensitive to all its risk factors. As a result, the transitions of the PV under the up and down stressed scenario are both flat, as shown in Figure 711.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |
| IRCURVE | EUR | EUR | DISCOUNTSPREAD | YES |

![Figure 711: Transition of the PV of the EverGreenRepoReverse in the up and down stressed scenarios.](./Fig/711.png)

### 8.5 Product Testing : EverGreenStockLend, MARS REQ - 2021Jan22-RESTCOS-16569

A StockLend transaction in which the transferor (lender), transfers securities against appropriate collateral subject to a commitment that the transferee (borrower) will return equivalent securities at a future date in return for a fee. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower. In an EverGreen StockLend, the remaining tenor does not change (is pushed each day) as long as either party does not call the trade. Once the trade is called, the Tenor is fixed.

In the trade in consideration in this section, the valuation date is 18/01/2021 and the currency is EUR. RollDate, EffectiveDate and EndDate are summarised in Table 257.

| | Leg 1 |
| --- | --- |
| RollDate | 14/08/2020 |
| EffectiveDate | 14/08/2020 |
| EndDate | 22/03/2021 |

Table 257: RollDate, EffectiveDate and EndDate for each of the legs in the swap.

This security is templated in CCYSWAP, where one leg receiving LIBOROIS rate accrued till the end date and the principal payments on the end date. Notional is set at 53.35 and denominated in EUR.

#### 8.5.1 EOD Testing

##### 8.5.1.1 Stability Tests

For the considered EverGreenStockLend, we test the stability of the PV, Flatdelta, and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors. a) Stability with respect to curve shifts Figures 712–714 show the obtained PVs, Flatdeltas, and Flatgammas of the EverGreenRepoReverse when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 712: PV of the EvergreenStockLend as a function of curve shifts.](./Fig/712.png)

![Figure 713: Flatdelta of the EvergreenStockLend as a function of curve shifts.](./Fig/713.png)

![Figure 714: Flatgamma of the EvergreenStockLend as a function of curve shifts.](./Fig/714.png)

b) Stability with respect to risk factor shifts Figures 715–716 show the PV of EverGreenStockLend when the underlying OISSpreads and BasisSpreads are shifted.

![Figure 715: PV of the EvergreenStockLend as a function of OISSpread shifts.](./Fig/715.png)

![Figure 716: PV of the EvergreenStockLend as a function of BasisSSpread shifts.](./Fig/716.png)

#### 8.5.1.2 Taylor Test

Figure 717 shows the PV of the EvergreenStockLend computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 717: PV of the EvergreenStockLend as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/717.png)

#### 8.5.1.3 Comparison with other models

Figures 718–720 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

#### 8.5.2 CCAR Testing

#### 8.5.2.2 Stability Tests

For the considered EverGreenStockLend, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios. a) Stability with respect to curve shifts Figures 722–724 show the obtained PVs, Flatdeltas, Flatgammas of the EverGreenStockLend when the underlying IR curves is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 721: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/721.png)

![Figure 722: PV of the EvergreenStockLend as a function of curve shifts.](./Fig/722.png)

![Figure 723: Flatdelta of the EvergreenStockLend as a function of curve shifts.](./Fig/723.png)

![Figure 724: Flatgamma of the EvergreenStockLend as a function of curve shifts.](./Fig/724.png)

b) Stability with respect to risk factor shifts Figure 725–726 show the PVs of the EverGreenRepoReverse in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and BasisSpreads are shifted.

![Figure 725: PV of the EvergreenStockLend as a function of OISSpread shifts.](./Fig/725.png)

![Figure 726: PV of the EvergreenStockLend as a function of BasisSpread shifts.](./Fig/726.png)

#### 8.5.2.3 Taylor Test

Figures 727 and 728 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 727: PV of the EvergreenStockLend in ccar1 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/727.png)

![Figure 728: PV of the EvergreenStockLend in ccar2 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/728.png)

#### 8.5.2.4 Comparison with other models

Figures 729-730, 731-732, and 733-734 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other models, namely DBX, DBM, and compared with the DBOPT model. The product is not priced using DBL and DBSMC models in DBA.

![Figure 729: PV of the EvergreenStockLend in ccar1 scenario as a function of curve shifts.](./Fig/729.png)

![Figure 730: PV of the EvergreenStockLend in ccar2 scenario as a function of curve shifts.](./Fig/730.png)

![Figure 731: FlatDelta of the EvergreenStockLend in ccar1 scenario as a function of curve shifts.](./Fig/731.png)

![Figure 732: FlatDelta of the EvergreenStockLend in ccar2 scenario as a function of curve shifts.](./Fig/732.png)

![Figure 733: FlatGamma of the EvergreenStockLend in ccar1 scenario as a function of curve shifts.](./Fig/733.png)

![Figure 734: FlatGamma of the EvergreenStockLend in ccar2 scenario as a function of curve shifts.](./Fig/734.png)

#### 8.5.3 IRRBB Testing

In this section, we test the stability of the EverGreenRepoReverse trade as described in Subsection 8.5 under the IRRBB scenarios and compare them with the Base scenario.

#### 8.5.3.1 Scenario Curves

Figure 735 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 735: Plot of the zero rate under the Base scenario and the IRRBB scenarios.](./Fig/735.png)

#### 8.5.3.2 Stability Tests

For the considered EverGreenStockLend, we test the stability of the PV under absolute shifts of the underlying IR curve for the Base and the IRRBB scenarios. Note that for each considered shift, we first show a plot of the Base scenario and all IRRBB scenarios, before we split the IRRBB scenarios into meaningful groups for better clarity.

Figures 736-741 show the obtained PVs of the EverGreenStockBorrow in the respective scenarios when the underlying IR curve is shifted. In all figures, we can observe that the PV profiles behave as expected and change smoothly under the considered curve shifts.

![Figure 736: PV of the EvergreenStockLend under curve shifts for the Base scenario and all IRRBB scenarios.](./Fig/736.png)

![Figure 737: PV of the EvergreenStockLend under curve shifts for the Base scenario and the parallel scenarios.](./Fig/737.png)

![Figure 738: PV of the EvergreenStockLend under curve shifts for the Base scenario and the short scenarios.](./Fig/738.png)

![Figure 739: PV of the EvergreenStockLend under curve shifts for the Base scenario and the long scenarios.](./Fig/739.png)

![Figure 740: PV of the EvergreenStockLend under curve shifts for the Base scenario and the steepener/flattener scenarios.](./Fig/740.png)

![Figure 741: PV of the EvergreenStockLend under curve shifts for the Base scenario and the negative steepener/flattener scenarios.](./Fig/741.png)

#### 8.5.4 MultiVariate Testing

In this section, we show the results of the multivariate test for the Fee.Remittance trade as described inSubsection 8.5.

Table 258 lists the underlying risk factors of the Fee.Remittance.

In particular, we can observe that the product is sensitive to all its risk factors. As a result, the transitions of the PV under the up and down stressed scenario are both flat, as shown in Figure 742.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | OISSPREAD | YES |
| IRCURVE | EUR | EUR | SWAP | YES |
| IRCURVE | EUR | EUR | DISCOUNTSPREAD | YES |
| IRCURVE | EUR | EUR | BASISSPREAD-EONIAQIS | YES |

Table 258: Risk factors for the EverGreenStockLend.

![Figure 742: Transition of the PV of the EverGreenStockLend in the up and down stressed scenarios.](./Fig/742.png)

### 8.6 Product Testing : EverGreenStockBorrow, MARS REQ - 2021Jan22-RESTCOS-16569

A StockBorrow transaction is a transaction in which the transferee (borrower), gets securities transferred against appropriate collateral subject to a commitment that he will return equivalent securities to the transferor (lender) at a future date with a fee. Although the lender temporarily loses ownership, he still retains the benefit of any corporate actions or income payments associated with the securities on loan. However, a lender will lose the voting rights associated with the stock. The lender has the right to recall securities on loan at any time, unless otherwise agreed with the borrower. In an EverGreen StockLend, the remaining tenor does not change(is pushed each day) as long as either party does not call the trade. Once the trade is called, the Tenor is fixed.

In the trade in consideration in this section, the valuation date is 18/01/2021 and the currency is EUR. RollDate, EffectiveDate and EndDate are summarised in Table 259.

| | Leg 1 |
| --- | --- |
| RollDate | 14/08/2020 |
| EffectiveDate | 14/08/2020 |
| EndDate | 22/03/2021 |

Table 259: RollDate, EffectiveDate and EndDate for each of the legs in the swap.

This security is templated in CCYSWAP, where one leg receiving LIBOROIS rate accrued till the end date and the principal payments on the end date. Notional is set at 53.35 and denominated in EUR.

#### 8.6.1 EOD Testing

##### 8.6.1.1 Stability Tests

For the considered EverGreenStockBorrow, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and the stability of the PV under shifts of relevant risk factors. a) Stability with respect to curve shifts Figures 743-745 show the obtained PVs, Flatdeltas, and Flatgammas of the EverGreenRepoReverse when the underlying IR curve is shifted, respectively. From the figures, we can observe that the PV, Flatdelta, and Flatgamma profiles change smoothly under the considered curve shifts, as expected.

![Figure 743: PV of the EvergreenStockBorrow as a function of curve shifts.](./Fig/743.png)

![Figure 744: Flatdelta of the EvergreenStockBorrow as a function of curve shifts.](./Fig/744.png)

![Figure 745: Flatgamma of the EvergreenStockBorrow as a function of curve shifts.](./Fig/745.png)

b) Stability with respect to risk factor shifts Figures 746-747 show the PV of EverGreenStockBorrow when the underlying OISSpreads and BasisSpreads is shifted.

![Figure 746: PV of the EvergreenStockBorrow as a function of OISSpread shifts.](./Fig/746.png)

![Figure 747: PV of the EvergreenStockBorrow as a function of BasisSSpread shifts.](./Fig/747.png)

##### 8.6.1.2 Taylor Test

Figure 748 shows the PV of the EvergreenStockBorrow computed by the DBA pricing formula and the Taylor approximation under curve shifts. We can observe a close match between both computations for all shifts.

![Figure 748: PV of the EvergreenStockBorrow as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/748.png)

##### 8.6.1.3 Comparison with other models

Figures 749-751 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other available models and compared with the DBOPT model. The obtained results reveal that the errors between the models are insignificant in all cases.

![Figure 749: PV of the EvergreenStockBorrow as a function of curve shifts.](./Fig/749.png)

![Figure 750: Flatdelta of the EvergreenStockBorrow as a function of curve shifts.](./Fig/750.png)

![Figure 751: Flatgamma of the EvergreenStockBorrow as a function of curve shifts.](./Fig/751.png)

#### 8.6.2 CCAR Testing

In this section, we test the EverGreenStockBorrow trade as described in Subsection 8.6 under the CCAR 2020 scenarios and compare them with the Base scenario.

##### 8.6.2.1 Scenario Curves

Figure 752 shows the scenario curves for the underlying rate affecting the EverGreenStockBorrow.

![Figure 752: The zero rates as a function of time from the Valuation Date for the scenarios Base, CCAR1 and CCAR2.](./Fig/752.png)

##### 8.6.2.2 Stability Tests

For the considered EverGreenStockBorrow, we test the stability of the PV, Flatdelta and Flatgamma under absolute shifts of the underlying IR curve and various risk factors for the Base and the CCAR 2020 scenarios. a) Stability with respect to curve shifts Figures 753-755 show the obtained PVs, Flatdeltas, Flatgammas of the EverGreenStockBorrow when the underlying IR curve is shifted, respectively. In particular, we can observe that the PV, Flatdelta and Flatgamma profiles change smoothly under the considered curve shifts in all scenarios, as expected.

![Figure 753: PV of the EvergreenStockBorrow as a function of curve shifts.](./Fig/753.png)

![Figure 754: Flatdelta of the EvergreenStockBorrow as a function of curve shifts.](./Fig/754.png)

![Figure 755: Flatgamma of the EvergreenStockBorrow as a function of curve shifts.](./Fig/755.png)

b) Stability with respect to risk factor shifts Figures 756-757 show the PVs of the EverGreenRepoReverse in the Base, CCAR1 and CCAR2 scenarios when the underlying OISSpreads and BasisSpreads are shifted.

![Figure 756: PV of the EvergreenStockBorrow as a function of OISSpread shifts.](./Fig/756.png)

![Figure 757: PV of the EvergreenStockBorrow as a function of BasisSpread shifts.](./Fig/757.png)

##### 8.6.2.3 Taylor Test

Figures 758 and 759 show the PVs computed by the DBA pricing formula and the Taylor approximation as the curve is shifted under the CCAR1 and CCAR2 scenarios.

![Figure 758: PV of the EvergreenStockBorrow in ccar1 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/758.png)

![Figure 759: PV of the EvergreenStockBorrow in ccar2 scenario as a function of curve shifts when computed by the DBA pricing formula and the Taylor approximation.](./Fig/759.png)

##### 8.6.2.4 Comparison with other models

Figures 760-761, 762-763, and 764-765 show the PV, Flatdelta and Flatgamma differences as a function of curve shifts when calculated with other models, namely DBX, DBM, and compared with the DBOPT model. The product is not priced using DBL and DBSMC models in DBA.

![Figure 760: PV of the EvergreenStockBorrow in ccar1 scenario as a function of curve shifts.](./Fig/760.png)

![Figure 761: PV of the EvergreenStockBorrow in ccar2 scenario as a function of curve shifts.](./Fig/761.png)

![Figure 762: FlatDelta of the EvergreenStockBorrow in ccar1 scenario as a function of curve shifts.](./Fig/762.png)

![Figure 763: FlatDelta of the EvergreenStockBorrow in ccar2 scenario as a function of curve shifts.](./Fig/763.png)

![Figure 764: FlatGamma of the EvergreenStockBorrow in ccar1 scenario as a function of curve shifts.](./Fig/764.png)

![Figure 765: FlatGamma of the EvergreenStockBorrow in ccar2 scenario as a function of curve shifts.](./Fig/765.png)

#### 8.6.3 IRRBB Testing

In this section, we test the stability of the EverGreenRepoReverse trade as described in Subsection 8.6 under the IRRBB scenarios and compare them with the Base scenario.

##### 8.6.3.1 Scenario Curves

Figure 766 shows the scenario curves for the underlying rate affecting this product. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

Table 264: Table shows numerical agreement in the DBA and GMVG price of a demand deposit.

We test the DBA pricing of the demand depo against an independent GMVG implementation for different shift scenarios (we bump the rates in the FIXING object). In Figure 807, we see no PV difference between DBA and GMVG.

![Figure 807: Comparison of DBA and GMVG price of a demand deposit under different interest rates shifts. Test shows no PV difference.](./Fig/807.png)

We test the DBA pricing of the demand depo against an independent GMVG implementation for different notional adjustment frequencies. In Figure 808, we see no PV difference between DBA and GMVG.

![Figure 808: Comparison of DBA and GMVG price of a demand deposit for different notional adjustment frequencies. Test shows no PV difference.](./Fig/808.png)

We test the DBA pricing of the demand depo against an independent GMVG implementation for different rebalance notional dates. In Figure 809, we see no PV difference between DBA and GMVG for notional adjustment frequency = WEEKLY, and in Figure 810, we see no PV difference between DBA and GMVG for notional adjustment frequency = MONTHLY.

![Figure 809: Comparison of DBA and GMVG price of a demand deposit for different rebalance notional dates, and the notional adjustment frequency set WEEKLY. Test shows no PV difference.](./Fig/809.png)

![Figure 810: Comparison of DBA and GMVG price of a demand deposit for different rebalance notional dates, and the notional adjustment frequency set MONTHLY. Test shows no PV difference.](./Fig/810.png)

We test the DBA pricing of the demand depo against an independent GMVG implementation for different notional roll dates. In Figure 811, we see no PV difference between DBA and GMVG for notional adjustment frequency = WEEKLY, and in Figure 812, we see no PV difference between DBA and GMVG for notional adjustment frequency = MONTHLY.

![Figure 811: Comparison of DBA and GMVG price of a demand deposit for different notional roll dates, and the notional adjustment frequency set WEEKLY. Test shows no PV difference.](./Fig/811.png)

![Figure 812: Comparison of DBA and GMVG price of a demand deposit for different notional roll dates, and the notional adjustment frequency set MONTHLY. Test shows no PV difference.](./Fig/812.png)

All tests show numerical agreement between DBA and the independent GMVG pricing for the demand deposit.

### 8.9 Product Testing : IRFundingMMFloat

In this section, we test the DBAnalytics implementation against the independent implementation MVQL for the model DBOPT. RateDeterministic to price the product IRFundingMMFloat, a cash loan or deposit for a fixed term at a floating rate whose purpose is to fund a trading book which typically consists of paying the notional at the start date, quarterly receiving 3m LIBOR (plus spread) and receiving back the notional at the end date.

For the testing, we look at the following trade: We receive 100 EUR at start date 01-Dec-2017, then pay quarterly 3m LIBOR until the end date 01-Dec-2027 when we pay back the notional. The valuation date is 02-Sep-2014.

Figure 813 shows the DBA and MVQL price of the IRFundingMMFloat for parallel curve shifts from -100 bps to 500 bps. The price is slightly decreasing: For higher rates, the higher receiving leg is offset by the larger discounting to be applied on the notional received on the end date. The difference between DBA and MVQL price is not material.

Figure 814 shows the DBA and MVQL price of the IRFundingMMFloat for spreads from -1.0% to 2.0%. Since the spread is received, the graph increases. The difference between DBA and MVQL price is not material.

![Figure 813: PV of a IRFundingMMFloat for parallel curve shifts from -100 bps to 500 bps, calculated with DBA and MVQL. The price is slightly decreasing: For higher rates, the higher receiving leg is offset by the larger discounting to be applied on the notional received on the end date. DBA and MVQL prices match. The notional is 100 EUR.](./Fig/813.png)

![Figure 814: PV of a IRFundingMMFloat for different spreads from -100 bps to 200 bps, calculated with DBA and MVQL. Since the spread is received, the graph increases. DBA and MVQL prices match. The notional is 100 EUR.](./Fig/814.png)

### 8.10 Product Testing : IRSwapFixFlt

A 10 year EUR receiver swap priced at par (with a 187bp fixed rate) was considered for the analysis.

The 10 year receiver swap was configured within 2 different SECURITY templates: PLAINSWAP and CCYSWAP. PLAINSWAP can be used to book plain vanilla interest rate swaps, whereas CCYSWAP can be used to book cross currency swaps.

The following DBAnalytics MODELS were included for comparisons: DBOPT; DBCANALYTIC; and DBX. DBOPT and DBCANALYTIC use analytic calculation methods, and DBX uses Monte Carlo methods.

The following DBOPT DICTIONARY configurations were used:
* NOVOL: Meaning no interest rate VOL (volatility) objects were included in the DICTIONARY
* LVTY: Meaning an LVTY interest rate VOL object was included in the DICTIONARY
* SABR: Meaning a DBOPTVOL interest rate VOL object was included in the DICTIONARY

The following DBX DICTIONARY configurations were used:

* LVTV: Meaning an LVTV interest rate VOL object was included in the DICTIONARY

The following DBM DICTIONARY configurations were used:

* LVTV: Meaning an LVTV interest rate VOL object was included in the DICTIONARY

The following DBL DICTIONARY configurations were used:

* LVTV: Meaning an LVTV interest rate VOL object was included in the DICTIONARY

The following DBSMC DICTIONARY configurations were used:

* LVTV: Meaning an LVTV interest rate VOL object was included in the DICTIONARY

The table below shows the mapping between these DICTIONARY configurations and the equivalent Model Validation MODELINFO mappings. We have presented the MVModelName of the whole DICTIONARY if all objects are used in pricing. In reality when objects are ignored in pricing they are ignored by MODELINFO.

| Dictionary setup | Equivalent MVMODELNAME |
| --- | --- |
| DBOPT-NOVOL | DBOPT-RateDeterministic |
| DBOPT-LVTV | DBOPT-ForwardRate |
| DBOPT-SABR | DBOPT-RatesMarket |
| DBCANALYTIC-LVTV | DBCANALYTIC-ForwardRate |
| DBX-LVTV | DBX-ShortRate |
| DBM-LVTV | DBM-ForwardRateDeterministic |
| DBL-LVTV | DBL-ShortRateDeterministic |
| DBSMC-LVTV | DBSMC-ShortRateDeterministic |

In addition to the various DICTIONARY configurations that can be used a manual Excel spreadsheet pricer which uses standard interface functions to extract discount factors and forward rates from the interest rate CURVE object was included in the analysis.

Three MODEL/VOL configurations were considered in the analysis:

(1) CalcIntrinsic set to 1 âȘ so that effectively all VOL objects are ignored and intrinsic calculations are performed
(2) CalcIntrinsic set to 0 âȘ so that a full pricing is performed without ignoring VOL objects (unless the pricing calculation does so automatically)
(3) CalcIntrinsic set to 0 and zero volatility inputted into VOL objects âȘ so that a full pricing is performed with zero volatility

The rationale for the various MODEL configurations are that internally when CalcIntrinsic is set to 1 then different calculation code can be called that knows to ignore volatilities. In Monte-Carlo simulations this is achieved by simulating just 1 path with zero volatility âȘ which by construction is centered to the relevant forwards. In PDE models such as DBX (not considered

here) the PDE grid is reduced to 3 points centered around the forwards with zero volatility (so no diffusion occurs). In analytic models such as DBOPT when calcIntrinsic is active, volatilities are ignored and pricing occurs. All other calculations that would require volatility for their calculation are substituted with intrinsic calculations. For a more detailed summary see DBA research paper [15].

Figures 815 -âȘ 820 show the NetValue and Delta of the receivers swap as a function of parallel interest rate shocks (measured in basis points). All model configurations are compared together âȘ including the manual spreadsheet calculation. Curve shocks are taken to relatively extreme limits (down 1000 to up 2000). All values are within numerical precision of each other âȘ including the manual calculation. Since we are receiving fixed any increase in rates leads to us having to pay more on the floating leg so the price of the swap decreases with increasing rates. The convexity observed is a result of the effect of increasing rates on the discounting âȘ increasing rates means we will discount more heavily which will slightly reduce the impact of the increasing cost of the floating leg. DBOPT-SABR fails (see in Figures 817 - 820) that the DBOPT-SABR lines drop to zero) the non-intrinsic calculations where we have a forward below the lower boundary of rates within the SABR model (defined by the DBOPTVOL.ZEROSHIFT parameters). The other models do not fail any of the calculations even in extreme limits.

![Figure 815: IRSwap NetValue as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 1](./Fig/1.png)

![Figure 816: IRSwap DELTA as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 1](./Fig/2.png)

![Figure 817: IRSwap NetValue as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 0](./Fig/3.png)

![Figure 818: IRSwap DELTA as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 0](./Fig/4.png)

![Figure 819: IRSwap NetValue as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 0 and volatility is 0.](./Fig/5.png)

![Figure 820: IRSwap DELTA as a function of interest rate CURVE shocks in bps when MODEL.CalcIntrinsic = 0 and volatility is 0.](./Fig/6.png)

Tables 265 and 266, and Figure 821 show NetValues, Deltas and CashFlows of the receiver swap for a 100bps curve shock. All model configurations are compared to the manual spreadsheet calculation.

| Dictionary | NetValue | Rec | Pay | ModelConfiguration | Difference |
| --- | --- | --- | --- | --- | --- |
| MANUAL | -8.800782 | 16.878418 | 25.6792 |  | NetValue | Rec | Pay |
| DBCANALYTIC_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBCANALYTIC-ShortRateDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |
| DBOPT-NOVOL_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBOPT-RatesMarketDeterministic | 7.1054e-15 | -3.5527e-15 | 1.0658e-14 |
| DBOPT-LVTV_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBOPT-RatesMarketDeterministic | 7.1054e-15 | -3.5527e-15 | 1.0658e-14 |
| DBOPT-SABR_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBOPT-RatesMarketDeterministic | 7.1054e-15 | -3.5527e-15 | 1.0658e-14 |
| DBOPT-LVTV_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBOPT-RatesMarketDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |
| DBOPT-SABR_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBOPT-RatesMarketDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |
| DBX-LVTV_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBX-ShortRateDeterministic | 7.1054e-15 | -3.5527e-15 | 3.5527e-15 |
| DBX-LVTV_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBX-ShortRateDeterministic | -7.1054e-15 | -3.5527e-15 | 3.5527e-15 |
| DBM-LVTV_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBM-ForwardRateDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |
| DBM-LVTV_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBM-ForwardRateDeterministic | 0 | -3.5527e-15 | -3.5527e-15 |
| DBL-LVTV_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBL-ShortRateDeterministic | 4.1922e-13 | 0 | 4.1922e-13 |
| DBL-LVTV_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBL-ShortRateDeterministic | 4.1922e-13 | 0 | 4.1922e-13 |
| DBSMC-LVTV_CCYSWAP | -8.800782 | 16.878418 | 25.6792 | DBSMC-ShortRateDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |
| DBSMC-LVTV_PLAINSWAP | -8.800782 | 16.878418 | 25.6792 | DBSMC-ShortRateDeterministic | -3.5527e-15 | -3.5527e-15 | 0 |

Table 265: IRSwap NetValue, RecLeg PV and PayLeg PV for a 100bps parallel curve shock.

| Dictionary | DELTA | Manual | ModelConfiguration | Relative Difference |
| --- | --- | --- | --- | --- |
| DBCANALYTIC_CCYSWAP | 83409.749915 | 83409.749915 | DBCANALYTIC-ShortRateDeterministic | 0.0 |
| DBOPT-NOVOL_CCYSWAP | 83409.749915 | 83409.749915 | DBOPT-RatesMarketDeterministic | 0.0 |
| DBOPT-LVTV_CCYSWAP | 83409.749915 | 83409.749915 | DBOPT-RatesMarketDeterministic | 0.0 |
| DBOPT-SABR_CCYSWAP | 83409.749915 | 83409.749915 | DBOPT-RatesMarketDeterministic | 0.0 |
| DBOPT-LVTV_PLAINSWAP | 83409.749915 | 83409.749915 | DBOPT-RatesMarketDeterministic | 0.0 |
| DBOPT-SABR_PLAINSWAP | 83409.749915 | 83409.749915 | DBOPT-RatesMarketDeterministic | 0.0 |
| DBX-LVTV_CCYSWAP | 83409.749915 | 83409.749915 | DBX-ShortRateDeterministic | 0.0 |
| DBX-LVTV_PLAINSWAP | 83409.749915 | 83409.749915 | DBX-ShortRateDeterministic | 0.0 |
| DBM-LVTV_CCYSWAP | 83409.749915 | 83409.749915 | DBM-ForwardRateDeterministic | 0.0 |
| DBM-LVTV_PLAINSWAP | 83409.749915 | 83409.749915 | DBM-ForwardRateDeterministic | 0.0 |
| DBL-LVTV_CCYSWAP | 83409.749914 | 83409.749914 | DBL-ShortRateDeterministic | 0.0 |
| DBL-LVTV_PLAINSWAP | 83409.749914 | 83409.749914 | DBL-ShortRateDeterministic | 0.0 |
| DBSMC-LVTV_CCYSWAP | 83409.749915 | 83409.749915 | DBSMC-ShortRateDeterministic | 0.0 |
| DBSMC-LVTV_PLAINSWAP | 83409.749915 | 83409.749915 | DBSMC-ShortRateDeterministic | 0.0 |

Table 266: IRSwap DELTA for a 100bps parallel curve shock.

![Figure 821: Cashflows of the fixed/float IRSwap for a 100bps parallel curve shock.](./Fig/7.png)

Next we present the effect of discounting while valuing a vanilla IRSwap.

A par swap rate is a weighted average of forward rates, where the weights are discount factors for the dates when the forward cash flows are paid. If the par rate is to remain the same, forward rates at the back end need to be lowered to offset the effect of higher discount factors. The difference between forwards arrived at using OIS discounting and those arrived at using Libor discounting would itself be directly depend on the OIS-Libor spread curve.

In this test we use a CSA swap Libor curve for valuation date July 25, 2013. We also take a EUR 100mn notional 10y receive 5% fixed against 3m Libor, when the 10y par swap rate is 1.9%.

### 8.11 Open Repo

An open repo is a repo agreement without an end date for termination. Contract is terminated anytime at either party's discretion. Payment at termination can be based on fixed or floating rate.

First, we look at open repos with fixed rate payments. We test the DBA pricer against an independent GMVG implementation. In the base case, we have the following setting:

| ValuationDate | 02-Nov-2016 |
| --- | --- |
| RebalanceNotionalDate | 25-Oct-2016 |
| NotionalAdjustmentFrequency | ZERO |
| Spread (fixed rate) | 0.7% |
| DateBump | FORWARD (HolidayCities: NYC) |

We test the DBA pricing of the open repo with fixed rate payment against an independent GMVG implementation for different fixed rates. In Figure 824, we see no PV difference between DBA and GMVG.

![Figure 824: Comparison of DBA and GMVG price of an open repo with fixed rate payment for different fixed rates. Test shows no PV difference.](./Fig/8.png)

We test the DBA pricing of the open repo with fixed rate payment against an independent GMVG implementation for different rebalance notional dates. In Figure 825, we see no PV difference between DBA and GMVG.

![Figure 825: Comparison of DBA and GMVG price of an open repo with fixed rate payment for different rebalance notional dates. Test shows no PV difference.](./Fig/9.png)

Next, we look at open repos with floating rate payments. We test the DBA pricer against an independent GMVG implementation. In the base case, we have the following setting:

| ValuationDate | 02-Nov-2016 |
| --- | --- |
| RebalanceNotionalDate | 20-Oct-2016 |
| NotionalAdjustmentFrequency | ZERO |
| Spread | 0.35% |
| DateBump | FORWARD (HolidayCities: NYC) |

We test the DBA pricing of the open repo with floating rate payment against an independent GMVG implementation for different bumps of past rates (in the FIXING object). In Figure 826, we see no PV difference between DBA and GMVG.

![Figure 826: Comparison of DBA and GMVG price of an open repo with floating rate payment for different fixed rates. Test shows no PV difference.](./Fig/10.png)

We test the DBA pricing of the open repo with floating rate payment against an independent GMVG implementation for curve shifts. In Figure 827, we see no PV difference between DBA and GMVG.

![Figure 827: Comparison of DBA and GMVG price of an open repo with floating rate payment for different fixed rates. Test shows no PV difference.](./Fig/11.png)

We test the DBA pricing of the open repo with floating rate payment against an independent GMVG implementation for different rebalance notional dates. In Figure 828, we see no PV difference between DBA and GMVG.

![Figure 828: Comparison of DBA and GMVG price of an open repo with floating rate payment for different rebalance notional dates. Test shows no PV difference.](./Fig/12.png)

### 8.12 SOFR/ESTER Based Swap

We test a quarterly fixed for floating swap with 3y maturity, the floating rate based on SOFR.

Figure 829 shows the SOFR and OIS 3m forward rates for different maturities of the curve which is used for pricing our swap.

![Figure 829: Comparison between SOFR and OIS 3m forward rates for different maturities.](./Fig/13.png)

Figure 829 shows stable PV and basis spread delta ladder when bumping SOFR-OIS spreads.

![Figure 830: Stable PV and basis spread delta ladder for SOFR-OIS spread bumps.](./Fig/14.png)

Next, we present the PV ladder of the product with respect to shifts in different risk factors.

Figure 831 shows the PV ladder of the FEDFUND +10bps vs SOFR 10y swap for bumps of curve, ois spreads and basis spreads.

![Figure 831: Figure shows PV ladder for the FEDFUND - SOFR 10y swap.](./Fig/15.png)

Figure 832 shows the PV ladder of the FEDFUND +10bps vs SOFR 6m into 3m for bumps of curve, ois spreads and basis spreads.

![Figure 832: Figure shows PV ladder for the FEDFUND - SOFR 6m into 3m futures.](./Fig/16.png)

Figure 833 shows the PV ladder of the EONIA/OIS -8bps vs ESTER 10y swap for bumps of curve, ois spreads and basis spreads.

![Figure 833: Figure shows PV ladder for the EONIA - ESTER 10y swap.](./Fig/17.png)

### 8.13 Consolidation Testing

The following six MV model names:

DBOPT-RatesMarketDeterministic
DBCANALYTIC-RateDeterministic
DBX-RateDeterministic
DBSMC-RateDeterministic
DBL-RateDeterministic
DBM-RateDeterministic

are currently approved for valuing linear rates products.

In order to consolidate the 'dispersion' of Product/MODEL combinations that are currently approved for trading, unification of these six MV model names into the new name:

RateDeterministic

has been proposed.

Our objective is to show that, despite the different implementations, the underlying model does exactly the same calculations when valuing linear trades.

Under this hypothesis, each approved product must necessarily return the same PV when priced under each of the four different models. Testing this hypothesis will be the central aim of this investigation. In what follows, we describe the validation processes that we undertook, and summarize the results and issues that arose out of those investigations.

In the following we test the approved products.

IRSwapBasis
IRSwapFixFlt
IRSwapFixFix
IRSwapFiduciary
FRA
IRSwapIdx
IRFuture
IRFundingMMFixed
IRFundingNameSwap
IRFundingMMFloat
IRFundingMMOI
OISSwap
OIFuture
OISFuture
DepoTermFloatBullet
DepoTermFixedBullet
DepoTermFltVariableNotional
DepoTermFixVariableNotional

IRXCcySwapBasis
IRXCcySwapFixFlt
IRXCcySwapFixFix
FeeAccrual
FXForward
FXSpot
FXSwap
MuniSwap
TreasuryYieldLock
RepoTerm
InternalFundingDepoTermFixedBullet
InternalFundingDepoTermFloatBullet
InternalFundingDepoTermOISBullet
InternalFundingLoanTermFixedBullet
InternalFundingLoanTermFloatBullet
InternalFundingLoanTermOISBullet

Cashflow
Cashflow.FX
Cashflow.Trailer
Cashflow.Sec.ProdCashGuarantee
Cashflow.OTCCashGuarantee
Repo
RepoReverse
EqInternalCashAdj
DepoTermFix

where we took most of the example (benchmark) dictionaries for various implementations⁴, such as DBOPT, DBCANALYTIC, DBX, DBL and DBSMC, from our model inventory database or the dbRiskStore/uRap. Others examples were provided by FO for different valuation dates.⁵

Furthermore, note that the reason that the cross currency basis swaps appear on this list is that these securities are internally split into the two legs and each priced separately, and model info works similarly, hence the use of a single currency model on a cross currency trade.

New dictionaries were created for each of the original âŻbenchmarkâȘ dictionaries by changing the model. The PVs for each model were then compared for each product. In some cases, in order to price the same product using different MODEL objects, several ancillary objects in the dictionary were required to be modified or added.

Our results are presented in the tables in Figures 268, 269, 270, 271 and 272. The price, $PV$, of the original dictionary is shown in the Benchmark column in each of the tables. Price differences are shown in the adjacent columns.

For each product, the reconfigured dictionary is required to either give the same price as the benchmark (up to an difference of 1e-8) or throw an appropriate error message (cf. Table 267). Any departures from this criteria are highlighted in red. We observed some minor discrepancies between the DBL implementation and the other implementations. According to DBAanalytics (Peter Auer, email 26/02/2015 14:49), DBAnalytics internally do not distinguish between doubles smaller than 1e-8, which makes the observed differences reasonable.

⁴Note that not all product/implementation combinations as used by FO
⁵Some dictionaries price securities tagged as DepoTermCallableFloatBullet (instead of DepoTermFloatBullet) or DepoTermCallableFixAmortizing (instead of DepoTermFixAmortizing). However, these trades do NOT exhibit any callable feature. The trades will be retagged by FO. In this investigation we use the proper PRDS name tags.

(01) DBC cannot perform rate set on this security type!
(02) Security type CCYSWAP is not implemented in DBL!
(03) Property RecCurrencyNotional not found in ExtraResults for ModelPrice lookup
(04) Security type BRAND is not implemented in DBOPT!
(05) Pricing of the DBONDSECURITY is not allowed in DBSMC/DBOPT!
(06) DBC cannot price a Security of type SWAP with ModelType ANALYTIC!
(07) DBC doesn't support FundingName for security DENSWAP.
(08) DBC doesn't support FundingName for security PLAINSWAP.
(09) DBC cannot price a Security of type EROPTION with ModelType ANALYTIC!
(10) ForecastFX is not yet implemented!
(11) DBC cannot price a Security of type DENSWAP with ModelType ANALYTIC!
(12) swap.Type not implemented in DBX/DBL, use DBX instead
(13) OptionType = FEDFUNDFUTURE / EONIAFUTURE are not implemented for DBTWODIM/DBL - pe use DBOPT/DBSMC instead!
(14) All Currencies must be different. Currency AUD in CURVE #2 is already used in CURVE #1.
(15) All Currencies must be different. Currency AUD in CURVE 2 is already used in CURVE 1.
(16) All Currencies must be different. Currency JPY in CURVE #2 is already used in CURVE #1.
(17) All Currencies must be different. Currency JPY in CURVE 2 is already used in CURVE 1!
(18) Skewed vol is not allowed for dbopt pricing.
(19) DBC doesn't support FundingName for security SWAP.
(20) Can't fit stochvols. Please check your volatility inputs.
(21) RateAverageType = CDI is not supported in DBOPT currently!
(22) AverageType CDI not supported in cModelTree
(23) Only AverageType = NOAVG (i.e. no averaging) is supported in DBSMC currently!
(24) DOMESTIC and FOREIGN currency can't be the same (USD) with more than one DBOPTVOL/DBXVOL in the dictionary
(25) All Currencies must be different. Currency DOMESTIC in VOL.DummyVol is already used in VOL.%DummyVol
(26) Rate Index Type RMA is not implemented in PDE module!
(27) Rate Index Type "BMA" is not implemented!
(28) Security type DELTAONE is not implemented in DBL!
(29) CMTFIXEDPV not implemented for this Lookup!
(30) DBC cannot price a Security of type HEDGEDBTR with ModelType ANALYTIC!

Table 267: Error Messages

| Trade Book | Trade Details | Securities | Benchmark | DBCANALYTIC | Alternative Model Price | DBSMC | DBX | DBM | DBOPT | Price Difference |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| [Multiple rows of pricing results data for various trade books] |

Table 268: Pricing results for various trade books taken from GMVG's model inventory database or the dbRiskStore/uRap priced in DBOPT-RatesMarketDeterministic (benchmark).

In order to avoid misreporting of result values, the IgnoreMissingObjs property in the EXTRAINFO should be set to NO. Using DBAanlytic would throw an error resulting in wrong (zero) PV. Currently, if an EXTRASREC object to price multiple books. To make this work IgnoreMissingObjs was set to YES. Moreover, note that EXTRAINFO objects are only applied in DBA dictionaries for MODEL.ExtraResults = 2.

We emphasize that the way FO has set up the EXTRAINFO to price multiple books does NOT give wrong PVs in DBOPT. It simply does not allow to change the model implementation. We belief that the issue discussed is more a booking issue rather than a modeling issue and, therefore, do not define any 'conditions for use' on EXTRAINFO.IgnoreMissingObjs and MODEL.ExtraResults.

[Additional tables 269-272 showing pricing results for various dictionaries]

### 8.14 Product Testing: Ring-Fence List

In this section as part of the MARS request ID22396 we test the products on the ring-fence list, which have RateDeterministic assigned as the corresponding model.

##### 8.14.1 Tests per product summary

In this subsection we consider stress test scenarios for the products on the list above. First, we briefly summarise the tests done. Then, we proceed to present results for the tested products in subsequent sections.

Please find below the Table 273 of tests done for each product on the list. Note, that the products have been bucketed by similarity and only one product from each bucket had been tested.

| Product name | EOD | Taylor | CCAR | IRRBB | MultiVar | Manual PV |
| --- | --- | --- | --- | --- | --- | --- |
| CashBalance | • | ○ | ○ | ○ | ○ | ○ |
| FXCashBalance | ○ | ○ | ○ | ○ | ○ | ○ |
| CouponPaySell | • | • | • | • | • | • |
| CouponPayBuy | ○ | ○ | ○ | ○ | ○ | ○ |
| InternalFundingDepoTermOISBullet | • | • | • | • | • | • |
| InternalFundingLoanTermOISBullet | ○ | ○ | ○ | ○ | ○ | ○ |
| SecurityCollateralPledged | • | • | • | • | • | • |
| SecurityCollateralPledged | ○ | ○ | ○ | ○ | ○ | ○ |

Table 273: Test summary table.

Note, that CashBalance product is held for day so that no accrual occurs and its net value simply always equals its notional. As the latter does not depend on the interest rates it straightforwardly follows that the value of CashBalance is insensitive to changes in interest rate and so no testing can really be done nor is required. We do, however, consider the cashflow for an extended pay date that allows for accrual. In that case we observe that the product's value and sensitivities behave smoothly and as expected. Further note, that FXCashBalance product is similar to the CashBalance one with the difference being that FXCashBalance is a dual currency cash balance.

##### 8.14.2 CouponPaySell and CouponPayBuy

As the two products are similar, we shall focus on CouponPaySell.

We consider a CouponPaySell product. A CouponPaySell is a coupon received on securities lending.

###### 8.14.2.1 Model inputs

The main features of the CouponPaySell product are summarised in the Table 274.

| DBA Type | SWAP |
| --- | --- |
| Currency | EUR |
| ReportUnit | One |
| ValuationDate | 30/09/2024 |
| PayDate | 01/10/2024 |
| DiscountSpread | RepoDiscountSpread |

Table 274: CouponPaySell model inputs.

The PV is given by
$$PV = N \times DF,$$
(84)

where $N$ is the Notional and $DF$ is the discount factor accounting for the spread.

Pricing the original trade's dictionary using the DBA function DBPrice in the relevant mode one obtains the results summarised in Table 275.

| PV | 234226.83 |
| --- | --- |
| Delta | 0.996475 |
| Gamma | -0.000004 |

Table 275: CouponPaySell model outputs.

For the stress tests the pay date was extended to 01/10/2028 in order to make sensitivities clearly visible. We further set the Notional to 10000 for convenience.

###### 8.14.2.2 EOD

In this subsection we consider the stability of the PV and sensitivities of the CouponPaySell product EOD scenario.

Figure 834 shows the dependence of the PV of CouponPaySell on a parallel shift by an absolute amount of the CURVE. Observe, that PV decreases with increasing curve shifts due to the increased discounting of the bond cash flows.

Figure 835 shows the dependence of the PV of CouponPaySell on a parallel shift by an absolute amount of the discount spreads used to bootstrap the discount curve corresponding to the funding rate of the trade in question. Note, that a shift to the discount spread has a similar effect on the PV to that of the CURVE shift as shifting the interest rates influences the PV through the discount factors.

![Figure 834: IR curve shift](./Fig/18.png)
![Figure 835: Discount spread shift](./Fig/19.png)

Figure: PV of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

The Figures below show the dependence of the risk sensitivities of CouponPaySell on a parallel shift of the CURVE and the RepoDiscountSpread by an absolute amount.

![Figure 836: IR curve shift](./Fig/20.png)
![Figure 837: Discount spread shift](./Fig/21.png)

Figure: FLATDELTA of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

![Figure 838: IR curve shift](./Fig/22.png)
![Figure 839: Discount spread shift](./Fig/23.png)

Figure: FLATGAMMA of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

We then compare the PV dependence on a parallel shift of the CURVE by an absolute amount with approximations given by Taylor polynomials. The maximum order of the Taylor polynomial considered corresponds to the maximum order of the risk sensitivity computed, i.e. order 2 for CURVE shifts.

![Figure 840: PV of CouponPaySell under absolute parallel shifts of interest rate curve computed using DBA and using Taylor approximation.](./Fig/24.png)

##### 8.14.2.3 IRRBB

In this subsection we consider the impact of IRRBB shocks on the price and sensitivities of the CouponPaySell product. The settings for the stress tests in this subsection are similar those in the EOD one, with the difference being the term structure of interest rates where the zero rates are bumped by appropriate amounts specified for each IRRBB scenario.

Firstly, we observe the effects of the IRRBB shocks on the EUR zero rates in Figures 841.

![Figure 841: Zero rate curve of EUR under IRRBB scenarios used for pricing CouponPaySell.](./Fig/25.png)

The dictionaries one obtains after applying the IRRBB shocks yield the following prices and sensitivities as outlined in Table 276.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | 236226.8301 | 236226.8301 | 0.0654754829 | 0.0654754829 | -0.0000040372 | -0.0000040372 |
| Parallel up | 236213.8054 | 236213.8054 | 0.0654718977 | 0.0654718977 | -0.0000040369 | -0.0000040369 |
| Parallel down | 236239.7655 | 236239.7655 | 0.0654790682 | 0.0654790682 | -0.0000040374 | -0.0000040374 |
| Steepener | 236234.1243 | 236234.1243 | 0.0654775046 | 0.0654775046 | -0.0000040373 | -0.0000040373 |
| Flattener | 236217.2064 | 236217.2064 | 0.0654728155 | 0.0654728155 | -0.0000040370 | -0.0000040370 |
| Short up | 236213.8454 | 236213.8454 | 0.0654718639 | 0.0654718639 | -0.0000040370 | -0.0000040370 |
| Short down | 236239.8155 | 236239.8155 | 0.0654790821 | 0.0654790821 | -0.0000040374 | -0.0000040374 |
| Long up | 236225.5666 | 236225.5666 | 0.0654751299 | 0.0654751299 | -0.0000040371 | -0.0000040371 |
| Long down | 236228.1036 | 236228.1036 | 0.0654758359 | 0.0654758359 | -0.0000040372 | -0.0000040372 |
| Steepener neg | 236219.5361 | 236219.5361 | 0.0654734612 | 0.0654734612 | -0.0000040371 | -0.0000040371 |
| Flattener neg | 236236.4542 | 236236.4542 | 0.0654781504 | 0.0654781504 | -0.0000040373 | -0.0000040373 |

Table 276: CouponPaySell, IRRBB model outputs vs manual replication.

The Figures 842, 843 and 844 show the dependence of the PV and risk sensitivities of CouponPaySell on a parallel shift of the CURVE by an absolute amount under the BASE and IRRBB stress test scenarios.

![Figure 842: PV of CouponPaySell under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the PV under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios.](./Fig/26.png)

![Figure 843: FLATDELTA of CouponPaySell under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/27.png)

![Figure 844: FLATGAMMA of CouponPaySell under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/28.png)

The Figures 845, 846 and 847 show the dependence of the PV and risk sensitivities of CouponPaySell on a parallel shift of the discount spread by an absolute amount under the BASE and IRRBB stress test scenarios.

![Figure 845: PV of CouponPaySell under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the PV under shifts of discount spread is smooth under all of the considered IRRBB scenarios.](./Fig/29.png)

![Figure 846: FLATDELTA of CouponPaySell under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/30.png)

![Figure 847: FLATGAMMA of CouponPaySell under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/31.png)

##### 8.14.2.4 CCAR

In this subsection we consider the impact of CCAR shocks on the price and sensitivities of the CouponPaySell product.

Firstly, we observe the effects of the CCAR shocks on the EUR zero rates in Figure 848.

![Figure 848: Zero rate curve of EUR under CCAR scenarios used for pricing CouponPaySell.](./Fig/32.png)

The dictionaries one obtains after applying the CCAR shocks yield the following prices and sensitivities as outlined in Table 277.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | 236226.8301 | 236226.8301 | 0.0654754829 | 0.0654754829 | -0.0000040372 | -0.0000040372 |
| CCAR1 | 236225.9991 | 236225.9991 | 0.063311 | 0.063311 | -0.0000054295 | -0.0000054295 |
| CCAR2 | 236220.2289 | 236220.2289 | 0.063262 | 0.063262 | -0.0000054211 | -0.0000054211 |

Table 277: CouponPaySell CCAR model outputs vs manual replication.

The figures 849 - 854 below show the dependence of the PV and risk sensitivities of CouponPaySell under the CCAR shock scenarios on a parallel shift by an absolute amount of the CURVE and the discount spreads used to bootstrap the discount curve corresponding to the funding rate of the considered trade.

The variation of the PV and risk sensitivities is consistent across the three scenarios. The PV is highest in the BASE scenario and lowest in the CCAR2 scenario.

![Figure 849: IR curve shift](./Fig/33.png)
![Figure 850: Discount spread shift](./Fig/34.png)

Figure: PV of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

![Figure 851: IR curve shift](./Fig/35.png)
![Figure 852: Discount spread shift](./Fig/36.png)

Figure: FLATDELTA of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

##### 8.14.2.5 MultiVar

In this section we consider the PV and risk sensitivities in the Up and Down multivariate scenarios.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | EUR | EUR | SWAP | Yes |
| IRCURVE | EUR | EUR | REPODISCOUNTSPREAD | Yes |

Table 278: Risk factors of CouponPaySell for the MultiVar test

![Figure 853: IR curve shift](./Fig/37.png)
![Figure 854: Discount spread shift](./Fig/38.png)

Figure: FLATGAMMA of CouponPaySell under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

We observe in Figure 855 that the PV behaves smoothly and as expected in both scenarios.

![Figure 855: PV of CouponPaySell MultiVar scenario stress test.](./Fig/39.png)

#### 8.14.3 InternalFundingDepoTermOISBullet and InternalFundingLoanTermOISBullet

InternalFundingDepoTermOISBullet and InternalFundingLoanTermOISBullet have appeared in the MVR for RateDeterministic, where they fell in the bucket with tested product IRFundingMMFloat, which is a cash loan or deposit for a fixed term and at a fixed rate whose purpose is to fund a trading book. As the two products are similar, we shall focus on InternalFundingDepoTermOISBullet.

We consider an InternalFundingDepoTermOISBullet product. An InternalFundingDepoTermOISBullet is a cash deposit for a fixed term and at a daily averaging rate such as EONIA, whose purpose is to fund a trading book.

##### 8.14.3.1 Model inputs

The main features of the InternalFundingDepoTermOISBullet product are summarised in the Table 279.

| DBA Type | GENSWAP |
| --- | --- |
| Currency | USD |
| ReportUnit | M |
| ValuationDate | 30/09/2024 |
| RefDate | 20/12/2022 |
| EffectiveDate | 26/10/2022 |
| EndDate | 20/12/2024 |
| Frequency | QUARTERLY |
| Multiplier | 1 |
| Spread | 0.0123 |
| RateBasis | ACT/360 |
| DiscountSpread | usdsfr |

Table 279: InternalFundingDepoTermOISBullet model inputs.

The trade considered only has one leg and it is given in Table 280.

* Pay Dates coincide with AccrualEnd dates.
* The FixedPayments for the two fixed paylets are 100 and -100, respectively.
* Rate Term is "1B" for the floating payments and "" for the fixed.
* Rate Frequency and RateDecompFrequency are set to "ZERO".
* LookInterval is "1B" for the floating payments and "NONE" for the fixed.

| AccrualBegin | AccrualEnd | SetDate | AccrualType | RateIndex | RateIndexSubType | RateSet | AverageType |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 20221026 | 20221220 | 20221026 | "COUPONACCRUAL" | "FIXED" | "UNSET" | 0.0000000000 | "NOAVG" |
| 20221026 | 20221220 | 20221026 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0374655000 | "EONIA" |
| 20221220 | 20230320 | 20221220 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0445446000 | "EONIA" |
| 20230320 | 20230620 | 20230320 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0495987000 | "EONIA" |
| 20230620 | 20230920 | 20230620 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0522824000 | "EONIA" |
| 20230920 | 20231220 | 20230920 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0536236000 | "EONIA" |
| 20231220 | 20240320 | 20231220 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0558294000 | "EONIA" |
| 20240320 | 20240620 | 20240320 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0593588000 | "EONIA" |
| 20240620 | 20240920 | 20240620 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0587139000 | "EONIA" |
| 20240920 | 20241220 | 20240920 | "COUPON" | "LIBOROIS" | "SOFR" | 0.0483753319 | "EONIA" |
| 20241220 | 20241220 | 20241220 | "COUPONACCRUAL" | "FIXED" | "UNSET" | 0.0000000000 | "NOAVG" |

Table 280: Leg 1 paylet inputs table.

where $N$ is the notional, $C$ is the coupon rate, $DF$ is the discount factor and $\Delta$ is the day count fraction with the appropriate RateBasis. Note, that for this particular trade the valuation date is past the accrual begin date, so the fixing rate provided is used to compute EONIA.

The EONIA rate is computed as follows. One compounds the rate between successive look dates and then divides by the day count fraction from the first look date till the last look date

$$r_{EONIA}(t_i, t_j) = \frac{1}{\Delta_{i, j}} \left( \prod_{k=0}^{n_{accr}-1} (1 + r_{t_{k+1}} \Delta_{t_k, t_{k+1}}) - 1 \right),$$
(86)

where $n_{accr}$ is the number of days in the accrual period and $r_k$ is the rate on date $t$.

The net value of the leg is computed by summing up the floating coupon payments and adding the fixed payments at the beginning and at the end of the trade.

$$PV = \sum_{i=0}^{n-1} PV(t_i, t_{i+1}) + PV_0 + PV_n,$$
(87)

where $n$ is the number of coupons and $PV_0, PV_n$ are the fixed payments.

Pricing the trade's dictionary using the DBA function DBPrice in the relevant mode one obtains the results summarised in Table 282.

Note, that since the valuation date of 30/09/2024 for the considered trade is close to the final pay date of 20/12/2024 the product's PV is dominated by the final two paylets' PVs as the cash flows that occured in the past do not contribute to the net value.

Further note, that we have changed the notional from -100 to -10000 for the stress tests.

##### 8.14.3.2 EOD

In this subsection we consider the stability of the PV and sensitivities of the InternalFundingDepoTermOISBullet product EOD stress test scenario.

![Figure 858: IR curve shift](./Fig/40.png)
![Figure 859: Discount spread shift](./Fig/41.png)

Figure: FLATDELTA of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

The Figures 856 and 859 show the dependence of the FLATDELTA of InternalFundingDepoTermOISBullet on a parallel shift of the CURVE and the DiscountSpread usdsfr. The FLATDELTA under DiscountSpread usdsfr shifts varies with the PV profile.

![Figure 856: IR curve shift](./Fig/42.png)
![Figure 857: Discount spread shift](./Fig/43.png)

Figure: PV of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

Figure 856 shows the dependence of the PV of InternalFundingDepoTermOISBullet on a parallel shift by an absolute amount of the CURVE. Observe, that the PV increases with increasing curve shift due to the increased discounting of the bond cash flows and the negative notional.

Figure 857 shows the dependence of the PV of InternalFundingDepoTermOISBullet on a parallel shift by an absolute amount of the discount spreads used to bootstrap the discount curve corresponding to the funding rate of the trade in question. Note, that a shift to the discount spreads has a similar effect on the PV to that of the CURVE shift as shifting the interest rates influences the PV through the discount factors.

The Figures below show the dependence of the risk sensitivities of InternalFundingDepoTermOISBullet on a parallel shift of the CURVE and the DiscountSpread by an absolute amount.

![Figure 862: PV of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve computed using DBA and using Taylor approximation.](./Fig/44.png)

Figure 862 shows the Taylor polynomials with respect to a parallel shift of the CURVE by an absolute amount. At the point of expansion the polynomials are tangent to the PV and, as expected, provide a good approximation in the neighbourhood of this point.

##### 8.14.3.3 IRRBB

In this subsection we consider the impact of IRRBB shocks on the price and sensitivities of the InternalFundingDepoTermOISBullet product. The settings for the stress tests in this subsection are similar those in the EOD one, with the difference being the term structure of interest rates where the zero rates are bumped by appropriate amounts specified for each IRRBB scenario.

Firstly, we observe the effects of the IRRBB shocks on the USD zero rates in Figures 863.

![Figure 863: Zero rate curve of USD under IRRBB scenarios used for pricing InternalFundingDepoTermOISBullet.](./Fig/45.png)

The dictionaries one obtains after applying the IRRBB shocks yield the following prices and sensitivities as outlined in Table 283.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | -100.4420 | -100.4420 | -0.0000345564 | -0.0000345564 | 0.0000000054 | 0.0000000054 |
| Parallel up | -100.4352 | -100.4352 | -0.0000345244 | -0.0000345244 | 0.0000000054 | 0.0000000054 |
| Parallel down | -100.4489 | -100.4489 | -0.0000345885 | -0.0000345885 | 0.0000000054 | 0.0000000054 |
| Steepener | -100.4464 | -100.4464 | -0.0000345755 | -0.0000345755 | 0.0000000054 | 0.0000000054 |
| Flattener | -100.4361 | -100.4361 | -0.0000345301 | -0.0000345301 | 0.0000000054 | 0.0000000054 |
| Short up | -100.4339 | -100.4339 | -0.0000345194 | -0.0000345194 | 0.0000000053 | 0.0000000053 |
| Short down | -100.4502 | -100.4502 | -0.0000345935 | -0.0000345935 | 0.0000000054 | 0.0000000054 |
| Long up | -100.4410 | -100.4410 | -0.0000345506 | -0.0000345506 | 0.0000000054 | 0.0000000054 |
| Long down | -100.4431 | -100.4431 | -0.0000345619 | -0.0000345619 | 0.0000000054 | 0.0000000054 |
| Steepener neg | -100.4377 | -100.4377 | -0.0000345373 | -0.0000345373 | 0.0000000054 | 0.0000000054 |
| Flattener neg | -100.4479 | -100.4479 | -0.0000345828 | -0.0000345828 | 0.0000000054 | 0.0000000054 |

Table 283: InternalFundingDepoTermOISBullet, IRRBB model outputs vs manual replication.

The Figures 864, 865 and 866 show the dependence of the PV and risk sensitivities of InternalFundingDepoTermOISBullet on a parallel shift of the CURVE by an absolute amount under the BASE and IRRBB stress test scenarios.

The Figures 867, 868 and 869 show the dependence of the PV and risk sensitivities of InternalFundingDepoTermOISBullet on a parallel shift of the discount spread by an absolute amount under the BASE and IRRBB stress test scenarios.

![Figure 864: PV of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the PV under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios.](./Fig/46.png)

![Figure 865: FLATDELTA of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/47.png)

![Figure 866: FLATGAMMA of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/48.png)
55555
#### PV against discount spread shifts for IRRBB scenarios and base scenario

![Figure 867: PV of InternalFundingDepoTermOISBullet under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the PV under shifts of discount spread is smooth under all of the considered IRRBB scenarios.](./Fig/1.png)

#### FLATDELTA against discount spread shifts for IRRBB scenarios and base scenario

![Figure 868: FLATDELTA of InternalFundingDepoTermOISBullet under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/2.png)

#### FLATGAMMA against discount spread shifts for IRRBB scenarios and base scenario

![Figure 869: FLATGAMMA of InternalFundingDepoTermOISBullet under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/3.png)

#### 8.14.3.4 CCAR

In this subsection we consider the impact of CCAR shocks on the price and sensitivities of the InternalFundingDepoTermOISBullet product.

Firstly, we observe the effects of the CCAR shocks on the USD zero rates in Figure 870.

![Figure 870: Zero rate curve of USD under CCAR scenarios used for pricing InternalFundingDepoTermOISBullet.](./Fig/4.png)

The dictionaries one obtains after applying the CCAR shocks yield the following prices and sensitivities as outlined in Table 284.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | -100.4420 | -100.4420 | -0.0000345564 | -0.0000345564 | 0.0000000054 | 0.0000000054 |
| CCAR1 | -100.4404 | -100.4404 | -0.0000334936 | -0.0000334936 | 0.0000000052 | 0.0000000052 |
| CCAR2 | -100.4370 | -100.4370 | -0.0000334564 | -0.0000334564 | 0.0000000052 | 0.0000000052 |

Table 284: InternalFundingDepoTermOISBullet CCAR model outputs vs manual replication.

The figures 871 - 876 below show the dependence of the PV and risk sensitivities of InternalFundingDepoTermOISBullet under the CCAR shock scenarios on a parallel shift by an absolute amount of the CURVE and the discount spreads used to bootstrap the discount curve corresponding to the funding rate of the considered trade.

#### Price of InternalFundingDepoTermOISBullet against shifts of USD rate

![Figure 871: IR curve shift](./Fig/5.png)

#### Price of InternalFundingDepoTermOISBullet against shifts of DiscountSpread usdsfrr

![Figure 872: Discount spread shift](./Fig/5.png)

Figure: PV of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

The variation of the PV and risk sensitivities is consistent across the three scenarios. The PV is highest in the CCAR2 scenario and lowest in the BASE scenario.

#### FLATDELTA of InternalFundingDepoTermOISBullet against shifts of USD rate

![Figure 873: IR curve shift](./Fig/5.png)

#### FLATDELTA of InternalFundingDepoTermOISBullet against shifts of DiscountSpread usdsfrr

![Figure 874: Discount spread shift](./Fig/5.png)

Figure: FLATDELTA of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

#### FLATGAMMA of InternalFundingDepoTermOISBullet against shifts of USD rate

![Figure 875: IR curve shift](./Fig/6.png)

#### FLATGAMMA of InternalFundingDepoTermOISBullet against shifts of DiscountSpread usdsfrr

![Figure 876: Discount spread shift](./Fig/6.png)

Figure: FLATGAMMA of InternalFundingDepoTermOISBullet under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

#### 8.14.3.5 MultiVar

In this section we consider the PV and risk sensitivities in the Up and Down multivariate scenarios.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | USD | USD | SWAP | Yes |
| IRCURVE | USD | USD | DISCOUNTSPREAD | Yes |

Table 285: Risk factors of InternalFundingDepoTermOISBullet for the MultiVar test.

The PV is observed to behave smoothly and as expected under the considered MultiVar scenarios in Figure 877.

###### MultiVar Test of InternalFundingDepoTermOISBullet

![Figure 877: PV of InternalFundingDepoTermOISBullet MultiVar scenario stress test.](./Fig/7.png)

#### 8.14.4 SecurityCollateralRecieved and SecurityCollateralPledged

As the two products are similar, we shall focus on SecurityCollateralRecieved.

Note, that the original Dictionary for SecurityCollateralRecieved had Notional set to 0, which we changed to 10000 in order to produce meaningful tests. We further set the RebalanceNotionalDate to 2025/01/01 to make the trade longer.

We consider a SecurityCollateralRecieved product. A SecurityCollateralRecieved is a coupon received on securities lending.

##### 8.14.4.1 Model inputs

The considered SecurityCollateralRecieved trade dictionary has the following key features:

| DBA type | DELTAONE |
| --- | --- |
| Currency | JPY |
| ReportUnit | M |
| ValuationDate | 30/09/2024 |
| RebalanceNotionalDate | 01/10/2024 |
| DiscountSpread | jpyjpgovt |

Table 286: SecurityCollateralRecieved model inputs.

The PV is given by

$$PV = N \times DF,$$

where $N$ is the Notional and $DF$ is the discount factor accounting for the spread.

The original Notional is 0, which we have changed to 10000 for the testing. Further, the RebalanceNotionalDate was extended to 01/01/2025 to make sensitivities clearly visible.

For the above discount factor accounting for the spread is $DF = 0.99977132295530347$, resulting Net Value is 9997.7132346053124, which matches the value 9.9977034605335 from the DBA function DBPrice up to the numerical error of $O(10^{-12})$.

##### 8.14.4.2 EOD

In this subsection we consider the stability of the PV and sensitivities of the SecurityCollateralRecieved product EOD stress test scenario.

Figure 878 shows the dependence of the PV of SecurityCollateralRecieved on a parallel shift by an absolute amount of the CURVE. Observe, that the PV increases with increasing curve shifts due to the increased discounting of the cash flows in the trade.

Figure 879 shows the dependence of the PV of SecurityCollateralRecieved on a parallel shift by an absolute amount of the discount spreads used to bootstrap the discount factors corresponding to the funding rate of the trade. In contrast, that a positive shift to the discount spreads has a similar effect on the PV to that of the CURVE shift, as shifting the interest rates influences the PV through the discount factors.

The Figures below show the dependence of the risk sensitivities of SecurityCollateralRecieved on a parallel shift of the CURVE and the DiscountSpread by an absolute amount.

| Property | Receive Leg | Pay Leg |
| --- | --- | --- |
| Notional | 10000 | 1 |
| SetDates | 01/10/2024 | 01/01/2025 |
| PayDates | 30/09/2024 | 01/01/2025 |
| DF | 1 | 0.9997713229553047 |
| Coupon | 0 | -10000 |
| PV | 10000 | -9997.7132 |

Table 287: Receive and pay legs' cash flows table.

#### Price of SecurityCollateralReceived against shifts of JPY rate

![Figure 878: IR curve shift](./Fig/9.png)

#### Price of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 879: Discount spread shift](./Fig/9.png)

Figure: PV of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

![Figure 880: IR curve shift](./Fig/9.png)

#### FLATDELTA of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 881: Discount spread shift](./Fig/9.png)

Figure: FLATDELTA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

The Figures 880 and 881 show the dependence of the FLATDELTA of SecurityCollateralReceived on a parallel shift of the CURVE and the DiscountSpread by an absolute amount. The FLATDELTA is negative and its behaviour is compatible with the PV profile.

#### FLATGAMMA of SecurityCollateralReceived against shifts of JPY rate

![Figure 882: IR curve shift](./Fig/10.png)

#### FLATGAMMA of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 883: Discount spread shift](./Fig/10.png)

Figure: FLATGAMMA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

The Figures 882 and 883 show the dependence of the FLATGAMMA of SecurityCollateralReceived on a parallel shift of the CURVE and the DiscountSpread by an absolute amount. The FLATGAMMA is small and its behaviour is compatible with the FLATDELTA profile.

We then compare the PV dependence on a parallel shift of the CURVE by an absolute amount with approximations given by Taylor polynomials. The maximum order of the Taylor polynomial considered corresponds to the maximum order of the risk sensitivity computed, i.e. order 2 for CURVE shifts.

![Figure 884: PV of SecurityCollateralReceived under absolute parallel shifts of interest rate curve computed using DBA and using Taylor approximation.](./Fig/10.png)

##### 8.14.4.3 IRRBB

In this subsection we consider the impact of IRRBB shocks on the price and sensitivities of the SecurityCollateralReceived product. The settings for the stress tests in this subsection are similar those in the EOD one, with the difference being the term structure of interest rates where the zero rates are bumped by appropriate amounts specified for each IRRBB scenario.

Firstly, we observe the effects of the IRRBB shocks on the JPY zero rates in Figure 885.

#### IRRBB Test Zero Rates

![Figure 885: Zero rate curve of JPY under IRRBB scenarios used for pricing SecurityCollateralReceived.](./Fig/11.png)

The dictionaries one obtains after applying the IRRBB shocks yield the following prices and sensitivities as outlined in Table 288.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | 2.2868 | 2.2868 | -0.25468222 | -0.25468222 | 0.00012698 | 0.00012698 |
| Parallel up | 27.7106 | 27.7106 | -0.25403457 | -0.25403457 | 0.00012666 | 0.00012666 |
| Parallel down | -23.2018 | -23.2018 | -0.25533151 | -0.25533151 | 0.00012731 | 0.00012731 |
| Steepener | -4.9236 | -4.9236 | -0.25468260 | -0.25468260 | 0.00012708 | 0.00012708 |
| Flattener | 14.2038 | 14.2038 | -0.25437849 | -0.25437849 | 0.00012683 | 0.00012683 |
| Short up | 21.6682 | 21.6682 | -0.25418770 | -0.25418770 | 0.00012674 | 0.00012674 |
| Short down | -17.1635 | -17.1635 | -0.25517769 | -0.25517769 | 0.00012723 | 0.00012723 |
| Long up | 8.3038 | 8.3038 | -0.25452879 | -0.25452879 | 0.00012691 | 0.00012691 |
| Long down | -3.7399 | -3.7399 | -0.25483574 | -0.25483574 | 0.00012706 | 0.00012706 |
| Steepener neg | 9.4922 | 9.4922 | -0.25449867 | -0.25449867 | 0.00012689 | 0.00012689 |
| Flattener neg | -9.6505 | -9.6505 | -0.25499631 | -0.25499631 | 0.00012714 | 0.00012714 |

Table 288: SecurityCollateralReceived, IRRBB model outputs vs manual replication.

The Figures 886 - 888 show the dependence of the PV and risk sensitivities of SecurityCollateralReceived on a parallel shift of the CURVE by an absolute amount under the BASE and IRRBB stress test scenarios.

The Figures 889, 890 and 891 show the dependence of the PV and risk sensitivities of SecurityCollateralReceived on a parallel shift of the discount spread by an absolute amount under the BASE and IRRBB stress test scenarios.

##### 8.14.4.4 CCAR

In this subsection we consider the impact of CCAR shocks on the price and sensitivities of the SecurityCollateralReceived product.

Firstly, we observe the effects of the CCAR shocks on the JPY zero rates in Figure 892.

The dictionaries one obtains after applying the CCAR shocks yield the following prices and sensitivities as outlined in Table 289.

| Scenario | PV | Man. PV | Delta | Man. Delta | Gamma | Man. Gamma |
| --- | --- | --- | --- | --- | --- | --- |
| Base | 2.2868 | 2.2868 | -0.25468 | -0.25468 | 0.00012698 | 0.00012698 |
| CCAR1 | 5.0430 | 5.0430 | -0.253432 | -0.25432 | 0.00012746 | 0.00012746 |
| CCAR2 | 6.8515 | 6.8515 | -0.253341 | -0.253341 | 0.00012739 | 0.00012739 |

Table 289: SecurityCollateralReceived CCAR model outputs vs manual replication.

The figures 893 - 898 below show the dependence of the PV and risk sensitivities of SecurityCollateralReceived under the

#### PV against rate shifts for IRRBB scenarios and base scenario for JPY

![Figure 886: PV of SecurityCollateralReceived under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the PV under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios.](./Fig/13.png)

#### FLATDELTA against rate shifts for IRRBB scenarios and base scenario for JPY

![Figure 887: FLATDELTA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/14.png)

#### FLATGAMMA against rate shifts for IRRBB scenarios and base scenario for JPY

![Figure 888: FLATGAMMA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the interest rate curve is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/15.png)

#### PV against discount spread shifts for IRRBB scenarios and base scenario

![Figure 889: PV of SecurityCollateralReceived under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the PV under shifts of discount spread is smooth under all of the considered IRRBB scenarios.](./Fig/16.png)

#### FLATDELTA against discount spread shifts for IRRBB scenarios and base scenario

![Figure 890: FLATDELTA of SecurityCollateralReceived under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATDELTA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the PV profile.](./Fig/17.png)

#### FLATGAMMA against discount spread shifts for IRRBB scenarios and base scenario

![Figure 891: FLATGAMMA of SecurityCollateralReceived under absolute parallel shifts of discount spread in IRRBB scenario stress test. Behaviour of the FLATGAMMA under shifts of the discount spread is smooth under all of the considered IRRBB scenarios and is consistent with the FLATDELTA behaviour.](./Fig/18.png)

#### CCAR Test Zero Rates

![Figure 892: Zero rate curve of JPY under CCAR scenarios used for pricing SecurityCollateralReceived.](./Fig/19.png)

CCAR shock scenarios on a parallel shift by an absolute amount of the CURVE and the discount spreads used to bootstrap the discount curve corresponding to the funding rate of the considered trade.

#### Price of SecurityCollateralReceived against shifts of JPY rate

![Figure 893: IR curve shift](./Fig/19.png)

#### Price of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 894: Discount spread shift](./Fig/19.png)

Figure: PV of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

The variation of the PV and risk sensitivities is consistent across the three scenarios. The PV is highest in the CCAR2 scenario and lowest in the BASE scenario.

#### FLATDELTA of SecurityCollateralReceived against shifts of JPY rate

![Figure 895: IR curve shift](./Fig/1.png)

#### FLATDELTA of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 896: Discount spread shift](./Fig/2.png)

Figure: FLATDELTA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

#### FLATGAMMA of SecurityCollateralReceived against shifts of JPY rate

![Figure 897: IR curve shift](./Fig/3.png)

#### FLATGAMMA of SecurityCollateralReceived against shifts of DiscountSpread jpyjpgovt

![Figure 898: Discount spread shift](./Fig/4.png)

Figure: FLATGAMMA of SecurityCollateralReceived under absolute parallel shifts of interest rate curve and discount spread in CCAR scenario stress test.

##### 8.14.4.5 MultiVar

In this section we consider the PV and risk sensitivities in the Up and Down multivariate scenarios.

| Type | Currency | AssetName | RiskFactor | Sensitivity |
| --- | --- | --- | --- | --- |
| IRCURVE | JPY | JPY | SWAP | Yes |
| IRCURVE | JPY | JPY | DISCOUNTSPREAD | Yes |

Table 290: Risk factors of SecurityCollateralReceived for the MultiVar test.

In Figure 899 it is observed that the PV behaves smoothly and as expected in both scenarios of the MultiVar test.

#### MultiVar Test of SecurityCollateralReceived

![Figure 899: PV of SecurityCollateralReceived MultiVar scenario stress test.](./Fig/5.png)

##### 8.14.5 CashBalance

We consider a CashBalance product. A CashBalance is a single currency cash balance relating to a settled trade(s). The FXCashBalance product is similar to CashBalance, so we focus on the latter.

The considered CashBalance trade is taken from production and has the following key features:

- The product is a STUB security with one leg.
- The PV is simply $PV = N \times DF$, where DF is the discount factor, N is the notional.
- The original notional is 101.07 with report unit M and is denominated in SEK.
- The original pay date is 15/11/2024.

Note, however, that CashBalance typically has a pay date coinciding with the valuation date, meaning no interest is gained. Thus, one would simply have $PV = N$.

###### 8.14.5.1 EOD

Below we briefly consider the EOD stress test scenarios.

As the CashBalance product typically does not accrue and so has its value unchanged, it would typically be unperturbed by interest rate shocks. We have changed the Notional to 100.00 and the pay date to 15/11/2025 to highlight what sensitivities would have been had the time to accrue been there. Then, we observe that PV and the sensitivities of CashBalance behave smoothly and as expected under the shifts of interest rate and OISSpread.

##### Price of CashBalance against shifts of SEK rate

![Figure 900: IR curve shift](./Fig/6.png)

##### Price of CashBalance against OISSpread

![Figure 901: Discount spread shift](./Fig/7.png)

Figure: PV of CashBalance under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

#### FLATDELTA of CashBalance against shifts of SEK rate

![Figure 902: IR curve shift](./Fig/8.png)

#### FLATDELTA of CashBalance against shifts of OISSpread

![Figure 903: Discount spread shift](./Fig/9.png)

Figure: FLATDELTA of CashBalance under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

#### FLATGAMMA of CashBalance against shifts of SEK rate

![Figure 904: IR curve shift](./Fig/10.png)

#### FLATGAMMA of CashBalance against shifts of OISSpread

![Figure 905: Discount spread shift](./Fig/11.png)

Figure: FLATGAMMA of CashBalance under absolute parallel shifts of interest rate curve and discount spread in EOD scenario stress test.

## References

[1] DBA Quant, "Model Document", DB Internal paper, December (2016).
[2] Andersen, L.B.G. and Piterbarg, V.V., Interest Rate Modeling. Volume 3: Products and Risk Management, Atlantic Financial Press, 2010.
[3] D. Beaglehole, Finite Difference Methods Used in DBSMC, Research Paper 00396, 2003.
[4] D. Beaglehole, Basis Curves, Research Paper 04378, 2004.
[5] Basel Committee on Banking Supervision, Interest rate in the banking book, Bank for International Settlements, http://www.bis.org/bcbs/publ/d368.pdf, April 2016

[6] A. Chebanier and H. Takayanagi, UseType = DISCOUNTBASIS with OISSpreads and CCYSpreads, Research Paper 07437, 2013.
[7] DBAnalytics DBAnalytics Testing Document – RateDeterministic, Research Pape
[8] DBAnalytics DBAnalytics Testing Document – RateDeterministic, Research Paper 08650, 2014.
[9] H. Takayanagi, DISCOUNTBASIS CURVE, Research Paper 07540, 2013.
[10] H. Takayanagi, Notes on Hybrid Forward Curve Bootstrap in DBA, Research Paper 07651, 2011.
[11] H. Takayanagi, DISCOUNTBASIS CURVE for Emerging Markets, Research Paper 07869, 2014.
[12] H. Takayanagi, Standardized Shock Primer. Type ii document, Deutsche Bank, September 2016.
[13] T. Silvey, SpotLiborSpreads, Research Paper 08115, 2014.
[14] P.O. Rieu, Primer on LV and LVSV model used in FX, Research Paper 08198, 2013.
[15] P. Taylor, Intrinsic Modeling in DBAnalytics: Interest Rates and FX, Research Paper 08647, 2014.
[16] H. Takayanagi, DS2 CURVE with OISSpreadFrontDates, Research Paper 09397, 2014.
[17] GMVG DS4-Yield curve with Funding volatility, Validation Document 2016.
[18] GMS. IRCurve Full-revaluation Risk Factor Model. Full Validation MR PST Model ID 2404, Deutsche Bank, October 2017.
[19] GMS. CrossRiskFactor Full-revaluation Risk Factor Model. Full Validation MR PST Model ID 2400, Deutsche Bank, January 2018.
[20] GMVG Tradable Swaps, Validation Document 2017.
[21] Model Validation Report (MVR) "DBX-ShortRateSkew_AssetMuni", DB Internal paper, 2018.
[22] GMVG, DBOPT-RatesMarketAFSABR, Model Validation Report, 2020.
[23] GMVG, RateDeterministic_FXDeterministic, Model Validation Report, 2023.
[24] GMVG, DBX-ShortRateSkew, Model Validation Report, 2020.
[25] GMVG, DBX-ShortRateSkew_FXSkew, Model Validation Report, 2023.
[26] GMVG, DBX-ShortRate, Model Validation Report, 2020.
[27] GMVG, DBFIXBond, Model Validation Report, 2020.
[28] Basel Committee on Banking Supervision, Interest rate in the banking book, Bank for International Settlements, April 2016.
[29] Hiromitsu Takayanagi. Standardized Shock Primer. Type iii document, Deutsche Bank, September 2016.
[30] GMS. IRCurve Full-revaluation Risk Factor Model, Full Validation MR PST Model ID 2404, Deutsche Bank, October 2017
[31] GMS. IRDBMVOL Full-revaluation Risk Factor Model. Full Validation MR PST Model ID 2405, Deutsche Bank, November 2017
[32] GMS. IRDBOPTVOL Full-revaluation Risk Factor Model. Full Validation MR PST Model ID 2406, Deutsche Bank, December 2017
[33] GMS. FXSpot/Repo/FXSpot Full-revaluation Risk. Full Validation MR PST Model ID 2413, Deutsche Bank, October 2017.
[34] GMS. FXMARKETVOL Full-revaluation Risk Factor Model. Full Validation MR PST Model ID 2414, Deutsche Bank, December 2017.
[35] BuildMethod, http://dr.gci.db.com/OnlineHelp/curve/properties/BuildMethod.htm, DBAnalytics Online Help.
[36] SpreadBuildMethod, http://dr.gci.db.com/OnlineHelp/curve/properties/SpreadBuildMethod.htm, DBAnalytics Online Help.
[37] G. Arniot, H. Takayanagi: CURVE and CMT Object Primer - Type III, Research Paper 08732, 2015.
[38] McRR, Libor Transition, 2021
[39] Pricing Model Key Operating Principles, Model Risk Management.