# {py:mod}`xsigmamodules.market.object_factory`

```{py:module} xsigmamodules.market.object_factory
```

```{autodoc2-docstring} xsigmamodules.market.object_factory
:allowtitles:
```

## Module Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`ObjectFactory <xsigmamodules.market.object_factory.ObjectFactory>`
  - ```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory
    :summary:
    ```
````

### API

`````{py:class} ObjectFactory(xml_path: str, data_root: str)
:canonical: xsigmamodules.market.object_factory.ObjectFactory

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory
```

```{rubric} Initialization
```

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory.__init__
```

````{py:method} _load_mappings(xml_path: str) -> typing.Dict[str, typing.Dict[str, str]]
:canonical: xsigmamodules.market.object_factory.ObjectFactory._load_mappings

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory._load_mappings
```

````

````{py:method} _match_pattern(id_pattern: str, id_value: str) -> typing.Optional[typing.Tuple[str, typing.List[str]]]
:canonical: xsigmamodules.market.object_factory.ObjectFactory._match_pattern

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory._match_pattern
```

````

````{py:method} contains(id_value: typing.Union[str, typing.Any]) -> bool
:canonical: xsigmamodules.market.object_factory.ObjectFactory.contains

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory.contains
```

````

````{py:method} create_object(id_value: typing.Union[str, typing.Any]) -> typing.Any
:canonical: xsigmamodules.market.object_factory.ObjectFactory.create_object

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory.create_object
```

````

````{py:method} _create_object_from_mapping(mapping: typing.Dict[str, str], params: typing.List[str]) -> typing.Any
:canonical: xsigmamodules.market.object_factory.ObjectFactory._create_object_from_mapping

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory._create_object_from_mapping
```

````

````{py:method} update_market_container(market_container: typing.Any, ids: typing.List[typing.Any]) -> None
:canonical: xsigmamodules.market.object_factory.ObjectFactory.update_market_container

```{autodoc2-docstring} xsigmamodules.market.object_factory.ObjectFactory.update_market_container
```

````

`````
