name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: [3.11]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Backend_Xsigma/package-lock.json

    - name: 🐍 Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install Backend Dependencies
      working-directory: ./Backend_Xsigma
      run: |
        npm ci
        pip install -r requirements.txt || echo "No requirements.txt found"

    - name: 🧪 Run Backend Tests
      working-directory: ./Backend_Xsigma
      run: |
        npm test || echo "No tests configured yet"

    - name: 🔍 Backend Linting
      working-directory: ./Backend_Xsigma
      run: |
        npm run lint || echo "No linting configured yet"

  # Frontend Tests
  frontend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Frontend_Xsigma/package-lock.json

    - name: 📦 Install Frontend Dependencies
      working-directory: ./Frontend_Xsigma
      run: npm ci

    - name: 🏗️ Build Frontend
      working-directory: ./Frontend_Xsigma
      run: npm run build

    - name: 🧪 Run Frontend Tests
      working-directory: ./Frontend_Xsigma
      run: |
        npm test || echo "No tests configured yet"

    - name: 🔍 Frontend Linting
      working-directory: ./Frontend_Xsigma
      run: |
        npm run lint || echo "No linting configured yet"

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔒 Run Security Audit (Backend)
      working-directory: ./Backend_Xsigma
      run: npm audit --audit-level=high || true

    - name: 🔒 Run Security Audit (Frontend)
      working-directory: ./Frontend_Xsigma
      run: npm audit --audit-level=high || true

  # Code Quality
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: 📊 CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, python

    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Documentation Check
  docs-check:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📚 Check README
      run: |
        if [ ! -f README.md ]; then
          echo "❌ README.md not found"
          exit 1
        fi
        echo "✅ README.md exists"

    - name: 📋 Check Contributing Guidelines
      run: |
        if [ ! -f CONTRIBUTING.md ]; then
          echo "❌ CONTRIBUTING.md not found"
          exit 1
        fi
        echo "✅ CONTRIBUTING.md exists"

    - name: 📄 Check License
      run: |
        if [ ! -f LICENSE ]; then
          echo "❌ LICENSE not found"
          exit 1
        fi
        echo "✅ LICENSE exists"
