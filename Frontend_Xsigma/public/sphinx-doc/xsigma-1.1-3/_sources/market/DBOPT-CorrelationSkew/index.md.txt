# DBOPT - Correlation Skew Models

## üìã **Vue d'Ensemble**

Le mod√®le **DBOPT-CorrelationSkew** est un framework de pricing analytique et Monte Carlo single horizon utilis√© pour l'√©valuation de d√©riv√©s sur un ou deux sous-jacents qui se fixent √† la m√™me date. Ce mod√®le utilise un mod√®le AFSABR pour la volatilit√© IR et PIV pour les volatilit√©s FX, EQ et Asset, avec une mod√©lisation sophistiqu√©e de la corr√©lation par copule de skew de corr√©lation.

---

## üéØ **Caract√©ristiques Principales**

### **Mod√®les Couverts**
- **DBOPT-RateDeterministic_FXMarket_AssetMarket_CorrelationSkew**
- **DBOPT-RateDeterministic_EquityBlackScholes_AssetMarket_CorrelationSkew**
- **DBOPT-RatesMarketAFSABR_FXMarket_EquityBlackScholes_CorrelationSkew**

### **Produits Support√©s**
- **HybMultiDigital*** - Digitaux hybrides multi-actifs
- **HybContingentOptMultiAssetBasket** - Options contingentes multi-actifs

### **Usages Approuv√©s**
- ‚úÖ **End of Day (EOD)** - √âvaluation et gestion des risques
- ‚úÖ **HistSim** - Simulations historiques
- ‚úÖ **CCAR** - Tests de stress r√©glementaires
- ‚úÖ **IRRBB** - Interest Rate Risk in Banking Book

---

## üèóÔ∏è **Architecture du Framework**

### **Approche Correlation Skew**
Le framework utilise une approche sophistiqu√©e de mod√©lisation de corr√©lation :
- **Distribution jointe** de 2 sous-jacents mod√©lis√©e par copule de skew de corr√©lation
- **Marginales** d√©riv√©es directement des volatilit√©s de march√©
- **Corr√©lation sticky strike** pour capturer le skew de corr√©lation

### **Composants Techniques**
```cpp
// Exemple d'impl√©mentation de copule Gaussienne dans Our project
class gaussian_copula : public copula {
private:
    size_t dim_;
    double* correlation_matrix_;
    double* cholesky_matrix_;

public:
    gaussian_copula(double rho) : dim_(2) {
        XSIGMA_CHECK(rho >= -1.0 && rho <= 1.0,
                     "Correlation parameter must be in [-1, 1]");

        // Cr√©ation matrice de corr√©lation 2x2
        correlation_matrix_ = new double[dim_ * dim_];
        correlation_matrix_[0] = 1.0;
        correlation_matrix_[1] = rho;
        correlation_matrix_[2] = rho;
        correlation_matrix_[3] = 1.0;

        // D√©composition de Cholesky
        cholesky_matrix_ = new double[dim_ * dim_];
        initialize_cholesky_decomposition();
    }

    double evaluate(const std::vector<double>& u) const override;
};
```
*Cette impl√©mentation C++ dans Our project montre la construction d'une copule Gaussienne avec validation des param√®tres de corr√©lation et d√©composition de Cholesky pour la simulation.*

---

## üìä **√âvaluation des Risques**

### **Global Model Risk Assessment**

| Mod√®le | Complexit√© | Incertitude | D√©pendance |
|--------|------------|-------------|------------|
| **DBOPT-RateDeterministic_FXMarket_AssetMarket** | HIGH | LOW | HIGH |
| **DBOPT-RateDeterministic_EquityBlackScholes_AssetMarket** | HIGH | LOW | HIGH |
| **DBOPT-RatesMarketAFSABR_FXMarket_EquityBlackScholes** | HIGH | LOW | HIGH |

**Justifications :**
- **Complexit√© HIGH** : Le mod√®le a plus d'un actif avec skew
- **Incertitude LOW** : Le mod√®le n'a pas de trades live
- **D√©pendance HIGH** : Les mod√®les de pricing ont une d√©pendance √©lev√©e

---

## üìö **Documentation D√©taill√©e**

```{toctree}
:maxdepth: 2
:caption: Documentation DBOPT-CorrelationSkew

executive_summary
introduction_model_validation
methodology_calibration
independent_validation_testing
product_testing_hybmultidigital
product_testing_contingentopt
```

### **Sections Principales**

#### **üìã Documentation Fondamentale**
- **[Executive Summary](executive_summary.md)** - R√©sum√© ex√©cutif et √©valuation globale des risques
- **[Introduction & Model Validation](introduction_model_validation.md)** - Scope, description des produits et m√©thodologie
- **[Methodology & Calibration](methodology_calibration.md)** - M√©thodologie CorrelationSkew et calibration TermSkew

#### **üî¨ Tests et Validation**
- **[Independent Validation Testing](independent_validation_testing.md)** - Tests de validation ind√©pendants et frameworks r√©glementaires

#### **üìä Tests de Produits Sp√©cifiques**
- **[Product Testing: HybMultiDigital](product_testing_hybmultidigital.md)** - Tests complets pour digitaux hybrides multi-actifs
- **[Product Testing: ContingentOpt](product_testing_contingentopt.md)** - Tests complets pour options contingentes multi-actifs

---

## üîß **Impl√©mentation Technique Avanc√©e**

### **Copule de Corr√©lation TermSkew**
Le framework utilise une copule sophistiqu√©e pour mod√©liser la corr√©lation sticky strike :

```cpp
// Impl√©mentation avanc√©e de la copule TermSkew dans Our project
class term_skew_copula_advanced : public correlation_skew_copula {
private:
    struct calibration_state {
        matrix<double> current_correlation_surface;
        std::vector<dual_digital_target> market_targets;
        double convergence_metric;
        int iteration_count;
    };

    calibration_state state_;

public:
    term_skew_copula_advanced(const std::vector<dual_digital_target>& targets) {
        state_.market_targets = targets;
        state_.iteration_count = 0;
        initialize_correlation_surface();
    }

    std::pair<double, double> generate_correlated_pair(
        double underlying_1_level,
        double underlying_2_level) const override {

        // Corr√©lation d√©pendante des niveaux (sticky strike)
        double correlation = interpolate_correlation_surface(
            underlying_1_level, underlying_2_level);

        // G√©n√©ration via copule Gaussienne avec corr√©lation ajust√©e
        return generate_gaussian_pair_with_correlation(correlation);
    }

    void calibrate_to_dual_digitals() {
        const int max_iterations = 1000;
        const double tolerance = 1e-6;

        for (int iter = 0; iter < max_iterations; ++iter) {
            // Pricing des digitaux duaux avec corr√©lation actuelle
            std::vector<double> model_prices = price_all_dual_digitals();

            // Calcul de l'erreur vs march√©
            double total_error = calculate_calibration_error(model_prices);

            if (total_error < tolerance) {
                break; // Convergence atteinte
            }

            // Ajustement de la surface de corr√©lation
            adjust_correlation_surface(model_prices);

            state_.iteration_count = iter;
            state_.convergence_metric = total_error;
        }
    }

private:
    double interpolate_correlation_surface(double s1, double s2) const {
        // Interpolation bilin√©aire dans la surface de corr√©lation
        return bilinear_interpolation(state_.current_correlation_surface, s1, s2);
    }
};
```
*Cette impl√©mentation C++ dans Our project montre la copule TermSkew avanc√©e avec calibration it√©rative aux digitaux duaux et corr√©lation sticky strike.*

---

## üéØ **Avantages Techniques du Framework**

### **‚úÖ Mod√©lisation de Corr√©lation Avanc√©e**
- **Corr√©lation non-param√©trique** riche pour capturer le skew de corr√©lation
- **Sticky strike correlation** selon les exigences business
- **Calibration intuitive** aux digitaux duaux et calls/puts duaux
- **Flexibilit√©** pour surfaces de corr√©lation complexes

### **‚úÖ Performance et Pr√©cision**
- **Convergence Monte Carlo** optimis√©e avec techniques de r√©duction de variance
- **Pr√©cision √©lev√©e** pour produits 2D complexes
- **Stabilit√© num√©rique** sous stress de corr√©lation extr√™me
- **Int√©gration native** avec DBAnalytics et Our project

### **‚úÖ Validation Compl√®te**
- **Tests exhaustifs** de convergence et stabilit√©
- **Validation crois√©e** avec mod√®les de copule alternatifs
- **Conformit√© r√©glementaire** (CCAR, IRRBB, HistSim)
- **Monitoring continu** des param√®tres de corr√©lation

---

## üìà **Cas d'Usage Sp√©cialis√©s**

### **Digitaux Hybrides Multi-Actifs**
```cpp
// Exemple d'usage pour digitaux hybrides dans Our project
class hybrid_digital_use_case {
public:
    void price_fx_equity_digital() {
        // Configuration du digital FX-Equity
        HybMultiDigital::digital_specification spec;
        spec.underlying_1_id = "EURUSD";
        spec.underlying_2_id = "SPX";
        spec.strike_1 = 1.10;  // EUR/USD strike
        spec.strike_2 = 4500;  // SPX strike
        spec.type = digital_type::CALL_CALL;
        spec.notional = 1000000; // 1M USD

        // Copule avec corr√©lation FX-Equity
        correlation_skew_copula copula(create_fx_equity_correlation_config());

        HybMultiDigital digital(spec, copula);

        // Pricing et sensibilit√©s
        double pv = digital.calculate_pv(market_data);
        auto sensitivities = digital.calculate_sensitivities(market_data);

        // Analyse des r√©sultats
        analyze_correlation_impact(pv, sensitivities);
    }
};
```

### **Options Contingentes Multi-Actifs**
- **Paniers commodity-equity** avec barri√®res multiples
- **Options FX-rates** contingentes sur niveaux de taux
- **Produits structur√©s** avec corr√©lations complexes
- **Instruments de hedging** multi-dimensionnels

---

## üîç **Surveillance et Contr√¥le Qualit√©**

### **Model Parameter Monitoring**
- **Surveillance automatis√©e** des param√®tres de corr√©lation via MARS
- **Alertes** sur d√©viations de corr√©lation significatives
- **Validation continue** des calibrations TermSkew
- **Monitoring** de la stabilit√© des copules

### **Contr√¥les de Coh√©rence**
- **Tests de r√©plication** quotidiens pour digitaux duaux
- **Validation crois√©e** avec mod√®les de corr√©lation alternatifs
- **Monitoring des √©carts** de pricing vs march√©
- **Analyse des tendances** de corr√©lation temporelles

---

*Cette documentation compl√®te du framework DBOPT-CorrelationSkew int√®gre les meilleures pratiques de Our project avec une validation rigoureuse et des impl√©mentations techniques avanc√©es pour le pricing de produits 2D avec corr√©lation sophistiqu√©e.*
