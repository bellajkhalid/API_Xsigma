# FX Market Model Validation Document

## 1 Executive Summary

The Global Model Risk Assessment is:

Global Model Risk Assessment

| | Rating | Justification |
| --- | --- | --- |
| Complexity | LOW | The model is analytic |
| Uncertainty | LOW | The model does not use any external feeder model or any other source of uncertainty |
| Reliance | HIGH | Pricing models have high reliance |

Table 2: Model risk assessment

The uncertainty rating has been determined based on consideration of model inputs, relevant model limitations, the risk factor representation required for the products being modelled, the nature of the numerical implementation and calibration approaches employed. The complexity rating has been determined based on consideration of the number and nature of risk factors modelled including their interdependency, the calibration approach employed, the mathematical specification of the model and where relevant, the sophistication of the broader processing environment of which the model is part. The reliance of all pricing models is high as the model outputs define the relevant officially reported metrics rather than merely informing them. Reduction of reliance on pricing model outputs is similarly inappropriate.

### 1.1 Summary of main validation results

The present report reviews the DBSMC-RateDeterministic_FXMarket model which represents the closed-form analytic implementation of a multi-currency model that assumes that the dynamics of the domestic and foreign interest rates are deterministic and the dynamics of the FX rate are given by a lognormal process whose volatility can have a non-parametric form (i.e. set by interpolating/extrapolating over the input volatility surface) or a parametric form (SA4, LABGD).

The testing performed in this report investigates the correct implementation of the model and its behaviour in normal market conditions (EOD) and in stressed market conditions (IRRBB, CCAR, MultiVar). The tests examine the robustness of the pricer w.r.t. the numerical methods in use and examine the impact of different model inputs and market parameters on the price and main risk sensitivities of the products in scope.

The auto-fitting procedure of the parametric forms SA4 PIV or LABGD PIV volatility to the input market volatility surfaces is well documented and dedicated tests assess the robustness of the auto-fitting. Further tests investigate whether no-arbitrage conditions (e.g. butterfly arbitrage which is equivalent to the probability density function of the underlying taking negative values) are satisfied when using PIV parametrisations of volatilities. Testing reveals that the no-arbitrage conditions are not violated in the cases that are considered in this report, see Section 4.4. Moreover, we provide testing evidence to illustrate that when a PIV vol is used instead of a DELTAVOL or STRIKEVOL, the prices and sensitivities of securities are calculated correctly, see Sections 4.5.1 - ?? and 4.6.1 - 4.6.1.4. Furthermore, the testing results show that within the interpolation region, the prices and the implied volatilities obtained by using an input vol object of type DELTAVOL and obtained by using the auto-fitted PIV object are in good agreement.

Additional tests examine various interpolation methods in strike and time direction and the impact of dayweights parameters. The report approves the natural cubic interpolation to be used in strike direction (InterpolationType = NATURALCUBICTIMESTRIKE, see CFU ID:550), as it is the least susceptible to arbitrage, and the flat volatility interpolation to be used in time direction (VolMode=CONSTANT_LV, see CFU ID:586).

As part of individual product testing, we perform a large spectrum of implementation and stress tests to show that the price and risk sensitivities computed in this model framework are accurate and their behavior is smooth and in line with expectations.

As a conclusion of the validation work, MoRM gives the models covered in this document full approval. The latest re-validation of DBSMC-RateDeterministic_FXMarket was performed using DBAnalytics Version 1110. Tests covering CCAR 2022 stress scenarios have been added in Q2 2022, using DBAnalytics v.1110. Since these tests cover EOD scenarios too for comparison purposes, these tests can be regarded as checking and confirming the correct behavior of the model in the context of DBAnalytics v.1110.

Subsequent material changes to the model must be submitted for validation.

The model DBSMC-RateDeterministic_FXMarketis a pricing models used for the following purposes: Generate asset and liability fair value measurements reported in official books and records and/or generate risk sensitivities (i.e. for End of Day risk management purpose and/or feeding Risk and Capital calculation) and re-price positions under stress scenarios as a servicer model, in the context of regulatory stress tests i.e. CCAR, in the Interest Risk in the Banking Book ("IRRBB") Delta EVE calculation or in the context of full revaluation ("Full Reval") of (Stress) Value at Risk (HistSim, SVAR). The model is developed and maintained by DBAnalytics and is provided via dlls for use in Microsoft Excel, Python, Perl, and is made available in Kannon and Risk Engine (amend as required).

The model DBSMC-RateDeterministic_FXMarketwith configurations

DBSMC-RateDeterministic_FXMarket[AUTO]
DBSMC-RateDeterministic_FXMarket

is recommended for use with the following products:

- FXEuroOpt
- FXDigitalOpt
- FXGeometricBasketOpt
- FXNonDeliverableEuroOpt

For the following usage(s):
- End of day valuation and risk management.
- As a servicer model employed in valuation subject to CCAR stress testing scenarios and HistSim Var.
- For the calculation of Delta EVE under Interest Rate Risk in the Banking Book.

The table below summarizes the valuation assessment per usage.

The review undertaken did not reveal any flaws in the theory or the relevant implementations.

Products labelled with "*" indicate that the approved model is primary.

The model assumptions are detailed in the model description section 2.5.

| Usage | Recommended for Use (RFU) |
| --- | --- |
| EOD | YES |
| HistSim | YES |
| CCAR | YES |
| IRRBB | YES |

Table 3: Validation Assessment

### 1.2 Limitations and Validation Findings Overview

#### 1.2.1 Findings

There are currently no validation findings requiring to be addressed.

#### 1.2.2 Model Limitations

For the model DBSMC-RateDeterministic_FXMarket, the following limitations have been identified, see Section 5.1 for further details:

• Missing Risk Factor[Interest Rate Volatility][ShortRateDeterministic]: The ShortRateDeterministic framework makes the assumption that interest rate uncertainty is not an important factor for pricing. This assumption is reasonable to the extent that cashflows are fixed (ie coupon settable equals valuedate), or linear in a natural rate (paydate equals rate maturity), or where cashflow uncertainty is dominated by volatility in other underlyings. [Lim ID 707].
• Missing Risk Factor[FX Volatility Smile][FXMarket]: The pricing of baskets relies on the construction of an index with lognormal dynamics from the baskets constituents. The model assumes a flat volatility smile for the index. The impact of the limitation can be assessed by benchmarking against alternative DBAnalytics models. We recommend GVG to monitor the uncertainty surrounding the limitation and compute uncertainty reserves, if deemed necessary. [Lim ID 1523]
• Missing Risk Factor[FX CORRELATION SKEW][FXMarket]: When pricing the multi-currency arithmetic basket options the FXMarket framework uses a three-moment matching approximation on the distribution of the basket variable. Therefore, higher order moments are not calibrated in this framework. This assumption is reasonable for markets that can be well approximated using only the first three moments. [Lim ID 2742]
• Calibration[Calibration Uncertainty][FXMarket]: The PIV/Auto calibration of the FXMarket model is sensitive to the choice of calibration targets and parameters of the calibration routine. Such calibration target choice and the calibration quality add uncertainty to the valuation. [Lim ID 4056]

Limitation 2605, previously linked to this model, was only relevant for the product FXBasketOpt, which is currently deactivated. In case the product were reapproved, limitation 2605 would have to be reinstated.

### 1.3 Control Overview

The table below lists the conditions for use that have been raised to address model weaknesses identified in the course of validation. These are classified as Model Rule and should be monitored though the automated Model Parameter Monitoring process. All conditions for use are logged in MARS. Model parameters approved values and appropriate ranges are detailed in the section 6 and the parameter classification and accurate functioning of model rules is confirmed in section 5.

| CfU ID | Monitoring Method | Rule Name | Status | Business | Last Change Date | Paraminfo Date |
| --- | --- | --- | --- | --- | --- | --- |
| 550 | Model Rule | FX0006 | Released | FX | 2017-10-11 | 2017-07-05 |
| 588 | Model Rule | FX0007 | Released | FX | 2017-10-11 | 2017-07-05 |
| 589 | Model Rule | FX0008 | Released | FX | 2017-10-11 | 2017-07-05 |
| 11032 | Model Rule | CURVE0001 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11036 | Model Rule | CURVE0002 | Released | CREDIT | 2022-06-15 | 2019-07-10 |
| 11038 | Model Rule | CURVE0009 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11041 | Model Rule | CURVE0026 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11044 | Model Rule | CURVE0019 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11054 | Model Rule | CURVE0013 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11063 | Model Rule | CURVE0017 | Released | RATES | 2022-02-04 | 2019-06-27 |
| 11085 | Model Rule | CURVE0023 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11089 | Model Rule | CURVE0010 | Released | CREDIT | 2022-06-15 | 2019-06-27 |
| 11823 | Model Rule | FX0014 | Released | FX | 2020-08-28 | 2020-07-29 |
| 11824 | Model Rule | FX0015 | Released | FX | 2020-08-28 | 2019-01-08 |
| 11825 | Model Rule | FX0016 | Released | FX | 2020-10-15 | 2019-05-07 |
| 11826 | Model Rule | FX0017 | Released | FX | 2020-10-15 | 2019-05-24 |
| 11827 | Model Rule | FX0018 | Released | FX | 2020-08-03 | 2019-01-08 |
| 11828 | Model Rule | FX0019 | Released | FX | 2020-08-03 | 2018-04-22 |
| 11829 | Model Rule | FX0020 | Released | FX | 2020-08-28 | 2020-07-29 |
| 11830 | Model Rule | FX0021 | Released | FX | 2020-10-15 | 2019-03-27 |
| 11831 | Model Rule | FX0022 | Released | FX | 2020-08-28 | 2020-07-29 |
| 11832 | Model Rule | FX0023 | Released | FX | 2020-08-28 | 2020-07-29 |
| 11833 | Model Rule | FX0024 | Released | FX | 2020-08-03 | 2020-07-29 |
| 11834 | Model Rule | FX0025 | Released | FX | 2020-10-15 | 2017-07-05 |
| 11835 | Model Rule | FX0026 | Released | FX | 2020-08-03 | 2020-07-29 |
| 11836 | Model Rule | FX0027 | Released | FX | 2020-08-03 | 2017-07-05 |
| 11837 | Model Rule | FX0028 | Released | FX | 2020-10-15 | 2019-05-07 |
| 11838 | Model Rule | FX0029 | Released | FX | 2020-12-16 | 2018-04-22 |
| 11839 | Model Rule | FX0030 | Released | FX | 2020-08-03 | 2017-10-30 |
| 13071 | Model Rule | CURVE0024 | Released | RATES | 2022-02-04 | 2020-07-08 |
| 13075 | Model Rule | CURVE0012 | Released | CREDIT | 2022-06-15 | 2019-08-11 |
| 13076 | Model Rule | CURVE0004A | Released | CREDIT | 2021-12-20 | 2019-06-27 |
| 16560 | Model Rule | FX0082 | Released | FX | 2020-12-09 | 2017-02-14 |
| 16561 | Model Rule | FX0083 | Released | FX | 2020-12-16 | 2019-06-27 |
| 16562 | Model Rule | FX0084 | Released | FX | 2021-12-16 | 2019-06-27 |
| 17547 | Model Rule | FX0085 | Released | FX | 2021-03-18 | 2016-10-10 |
| 17773 | Model Rule | FUNDINGVOL0021 | Released | RATES | 2022-05-11 | 2021-08-24 |
| 17774 | Model Rule | FUNDINGVOL0023 | Released | RATES | 2022-05-11 | 2021-08-24 |
| 17775 | Model Rule | FUNDINGVOL0001 | Released | RATES | 2022-05-11 | 2021-08-24 |
| 17776 | Model Rule | FUNDINGVOL0019 | Released | RATES | 2022-01-18 | 2021-08-24 |

| 17777 | Model Rule | FUNDINGVOL0022 | Released | RATES | 2022-05-11 | 2021-08-24 |
| 17779 | Model Rule | FUNDINGVOL0020 | Released | RATES | 2021-11-11 | 2021-08-11 |
| 17802 | Model Rule | Rates0445 | Released | RATES | 2021-11-11 | 2020-08-15 |
| 17828 | Model Rule | Rates0450 | Released | RATES | 2022-01-18 | 2021-09-24 |
| 17868 | Model Rule | MARKETVOL0020 | Released | FX | 2022-06-23 | 2020-08-25 |
| 18730 | Model Rule | BasketXXX5 | Approved | FX | 2022-06-23 | 2021-09-24 |

Table 4: Conditions for Use, imposed for DBSMC-RateDeterministic_FXMarket model.

## 2 Introduction to Model and Validation

### 2.1 Validation Scope

The scope of the validation is detailed in section 1.1.

Products with similar features from a valuation perspective are grouped together and tested as a single consistent group wherein testing results for a representative product are deemed applicable and able to confer equivalent inference to the whole product group. The product grouping logic is presented in section 2.2.

### 2.2 Product Description

The following table gives the description of the products in scope, as provided in RDSProduct:

| Product Name (Long Product Name) | Product Description |
| --- | --- |
| FxEuroOpt (FXEuropeanOption) | Gives the owner the right but not the obligation to exchange money denominated in one currency into another currency at a pre-agreed exchange rate on a specified date. |
| FXNonDeliverableEuroOpt (FXNonDeliverableEuroOpt) | Same value and risk as an FxEuroOpt except that delivery is a net amount of UnderCurrency converted using a spot fixing published on ExpiryDate. |
| FXDigitalOpt (FXSimpleExoticDigital) | A digital option is an option where a fixed payout is made under the conditions specified in the option's contract. These conditions are defined in terms of a barrier (or triggers. That is, it only matters where the reference rate is in relation to the barrier (above the barrier, below the barrier, or within/outside a defined range) on the option's expiry date. If the specified conditions are not met, there is no payout. |

### 2.3 Product Grouping

For efficiency purposes, as part of model validation testing, products are grouped according to their payoff features. Table 6 below shows the PRDS products with the corresponding features that are in scope for this model validation report. The test results for FX vanilla options also apply for digital and basket options because digitals can be replicated by plain vanillas, see 4.6.1, and baskets can be priced like vanillas, see 2.6.7. Note that the FxNonDeliverableEuroOpt can be treated the same as the FxEuroOpt and is therefore not tested within this document.

Table 6: DBSMC-RateDeterministic_FXMarket Product Grouping

| Product | Underlying | CouponStructure | BasketFunction |
| --- | --- | --- | --- |
| FxEuroOpt | FX | EuroCpn | |
| FXDigitalOpt | FX | DigiCpn | |
| FXGeometricBasketOpt | FXMulti | EuroCpn | Geometric |
| FXNonDeliverableEuroOpt | FX | EuroCpn | |

### 2.4 Model Inventories

The table below presents the model inventory for the DBSMC-RateDeterministic_FXMarket model at time of the last revalidation (Q2 2022).

| Product Name | Model Configuration | Trade Count | PV EUR (millions) | ABS PV EUR (millions) |
| --- | --- | --- | --- | --- |
| FXDigitalOpt | DBSMC-ShortRateDeterministic_FXMarket | 19 | -0.612011 | 0.612011 |
| FXDigitalOpt | DBSMC-ShortRateDeterministic_FXMarket[AUTO] | 1 | -0.549935 | 0.549935 |
| FXEuroOpt | DBSMC-ShortRateDeterministic_FXMarket | 609 | 4.045692 | 4.045692 |
| FXEuroOpt | DBSMC-ShortRateDeterministic_FXMarket[AUTO] | 3150 | -229.933900 | 229.933900 |
| FXNonDeliverableEuroOpt | DBSMC-ShortRateDeterministic_FXMarket | 28 | 0.975338 | 0.975338 |
| FXNonDeliverableEuroOpt | DBSMC-ShortRateDeterministic_FXMarket[AUTO] | 12 | 2.444013 | 2.444013 |

Table 7: Inventory of the DBSMC-RateDeterministic_FXMarket model as of 23/06/2022.

For the FXBasketOpt, currently deactivated, the BasketFunction takes the form of Arithmetic.

### 2.5 Model Description

The DBSMC-RateDeterministic_FXMarket model is approved for the products listed in Section 2.2 with the configurations:

DBSMC-RateDeterministic_FXMarket[AUTO]

DBSMC-RateDeterministic_FXMarket

#### 2.5.1 Model Documentation

The relevant model developer documentation and testing can be found in [19], [20] and [21]. The use of dayweights parameters in DBAnalytics is documented in [2]. Different DELTA conventions used in DBAnalytics are documented in the online help page for DBAnalytics.

#### 2.5.2 Model Assumptions

The DBSMC-RateDeterministic_FXMarket model relies on the following assumptions:

• The domestic and foreign interest rates are assumed to be deterministic.
• FX rate follows a lognormal process whose volatility can have non-parametric form or parametric form (SA4, LABGD).

#### 2.5.3 Model Inputs

##### 2.5.3.1 Market Inputs
The following market inputs are used by the DBSMC-RateDeterministic_FXMarket model:

• Interest Rate Curve: Constructed from market observables, such as cash rates, future and swap prices. The base curve is typically 3 month Libor, but other curves (e.g., OIS or 6 month Libor) can be constructed from it via spreads (again, from market observables).
• FX Implied volatilities: Constructed from the prices of vanilla options on FX for a set of strikes and maturities. The strikes can be specified directly, but they are more likely specified by the option's delta.

##### 2.5.3.2 Model parameters
The parameters of the model can be grouped in two main categories: model parameters and market parameters. Model parameters deal with the numerical implementation of the model as well as with the way the dynamics of the risk factors are simulated. The market parameters, mainly stored in the DBAnalytics objects CURVE and VOL, are market inputs used to construct the initial yield curve and market inputs representing the FX rate volatility parameters. For the comprehensive list of the model parameters, we refer to Table 4 and Section 4.8. In Section 4.8 the most important model parameters are explained and tested.

A significant difference in model parameters exists between models using a non-parametric FX rate volatility and models using a parametric FX rate volatility.

In the case of non-parametric volatility:

• The DBAnalytics object MARKETVOL can be of InputMode=DELTAVOL (the implied vols are given in terms of deltas) or InputMode=STRIKEVOL (the implied vols are given in terms of strikes). When InputMode=DELTAVOL, the property DeltaType determines how the delta values will be interpreted i.e. how to convert between deltas and strikes for puts and calls.

• The property InterpolationType specifies the interpolation method in strike space and whether the strike interpolation is first done in the time dimension, or in the strike dimension.
• The property InterpolationSpace specifies if the volatilities in the strike dimension are interpolated on the strike itself, on the log of the strike or on delta.
• The property InterpolationStrikes determines the strikes used for time interpolation and vol stripping.
• The property VolMode specifies the interpolation method in the time dimension.

In the case of parametric volatility:

• The MARKETVOL object is of InputMode=PARAMETRICVOL with the parametric form set by SkewType property. SkewType=SA4 or LABGD. Note that in the past, the model allowed for SkewType=SABR3FORMULAPD, configuration currently retired.
• The property SkewConvexityType allows the user to set a non-standard definition of SKEW and SMILE, but it is typically set to STANDARD.

The parameters stored in the CURVE objects are used to construct the domestic and foreign interest rate curves. The VOL object of VolName=DBGVOL and VolType=FXCURVE stores the FX spot rate. The parameters DayWeights stored in the VOL object corresponding to the FX rate volatility are used to increase and decrease the volatility for example to account for weekends or central bank decision days (see subsection 4.3). They are derived from observed implied volatilities of FX calls and puts. The parameters stored in the Offsets table found in the VOL object corresponding to the FX rate volatility are expiry-specific parallel shifts applied to the volatility surface or expiry-specific offsets applied to skew parameters.

### 2.6 Theoretical Overview

There are two main mathematical models underlying the DBSMC-RateDeterministic_FXMarket model. The first, which relies on the interpolation and extrapolation of the input market volatility data, we refer to as the non-parametric model. In this version of the model, the implied volatilities $$\sigma(K_i, T_j)$$ of traded liquid FX vanilla European options, at the discrete maturities $$T_j$$ and strikes $$K_i$$ are interpolated and extrapolated to obtain a continuous volatility surface. Options prices are then calculated from the interpolated volatility surface at any other expiry and strike by means of the Black-Scholes formula. The second version of the model assumes that the FX rate volatility follows a parametric form such as SA4 or LABGD, which is fitted to an input volatility surface of type DELTAVOL or STRIKEVOL.

We begin this section by recalling the definition of implied volatility and state the Black-Scholes formula before discussing the various interpolation methods used by DBAnalytics in the non-parametric volatility case. We present afterwards the parametric forms approved for FX rate volatility in the context of this model. We end the theoretical overview by describing the mathematical consistency and no-arbitrage conditions that must be satisfied by the model before presenting the pricing theory of geometric and arithmetic basket options.

#### 2.6.1 Implied volatilities for FX Derivatives

The implied volatility of a vanilla European FX option is defined implicitly using the closed-form formulas of the Black-Scholes model [1].

Recall that in the Black model, the price of a call (put) $$C(K,T)$$ ($$P(K,T)$$) with strike $$K$$ and maturity $$T$$ is given by:

$$C(K,T) = DF_{dom}(T)[F_T N(d_1) - K N(d_2)]$$ (1)
$$P(K,T) = DF_{dom}(T)[K N(-d_2) - F_T N(-d_1)]$$ (2)

where $$F_T$$ is the forward FX rate, related by no-arbitrage to the spot FX, $$S$$, by:

$$F_T = S \frac{DF_{for}(T)}{DF_{dom}(T)}$$, (3)

$$DF_{dom/for}(T)$$ is the domestic/foreign discount factor, $$d_1$$ and $$d_2$$ are defined by:

$$d_1 = \frac{\ln(F_T/K) + \sigma^2 T/2}{\sigma \sqrt{T}}$$ (4)

$$d_2 = \frac{\ln(F_T/K) - \sigma^2 T/2}{\sigma \sqrt{T}} = d_1 - \sigma \sqrt{T},$$ (5)

and the cumulative normal distribution function, $$N(x)$$, is defined by:

$$N(x) = \frac{1}{\sqrt{2\pi}} \int_{-\infty}^{x} e^{-\frac{t^2}{2}} dt$$ (6)

The implied volatility $$\sigma(K,T)$$, of a call (put) option is defined at strike, $$K$$, and maturity, $$T$$, as the value of $$\sigma$$ for which Equation 1 (Equation 2) returns the observed market price.

It is an empirically observed fact that the volatility observed in the market as a function of maturities and strikes is not constant but manifests a smile due to the breakdown of the assumptions of the Black-Scholes model.

#### 2.6.2 Non-parametric implied volatilities: Interpolation and Extrapolation methods

In the present model, the data needed to construct the implied volatility surface is found in a DBAnalytics MARKETVOL object of InputMode=DELTAVOL or STRIKEVOL. The MARKETVOL object supports a variety of interpolation and extrapolation methods in both strike and time dimensions.

By default (unless InterpolationType is set to TIMESTRIKE) the interpolation is first done in the time dimension.

The volatilities can be interpolated at constant strike (InterpolationSpace = STRIKE), constant log of the strike (InterpolationSpace = LOGSTRIKE) or at constant delta (InterpolationSpace = DELTA).

When InterpolationStrikes = NONE, no vol stripping is done, and time interpolation is done at fixed delta.

##### 2.6.2.1 Interpolation in the time direction
The various interpolation methods supported by DBAnalytics in time direction are controlled by the VolMode property. These include:

• CONSTANT_LV: flat forward volatility interpolation.
• PWCONST_L: piecewise constant to the left, i.e., for two consecutive maturities $$T_i$$ and $$T_{i+1}$$ with given volatilities $$\sigma_i$$ and $$\sigma_{i+1}$$ and $$T_i < t < T_{i+1}$$, $$\sigma_{exp}(t) = \sigma_i$$.
• PWCONST_R: piecewise constant to the right, i.e., for two consecutive maturities $$T_i$$ and $$T_{i+1}$$ with given volatilities $$\sigma_i$$ and $$\sigma_{i+1}$$ and $$T_i < t < T_{i+1}$$, $$\sigma_{exp}(t) = \sigma_{i+1}$$.
• CUBIC: cubic interpolation
• EXPONENTIAL: exponential interpolation.

We approve flat forward volatility interpolation VolMode = CONSTANT_LV, i.e. for two consecutive maturities for which the implied volatilities are given, the interpolation ensures that the forward volatility between those maturities is constant. More precisely, suppose the time points $T_0 = 0, T_1, \ldots, T_N$ are given, with respective implied volatilities (excluding the $t = T_0$ point) $\sigma_1, \ldots, \sigma_N$. Then the flat forward volatility interpolator is given by

$$
\sigma^{\text{flat fwd}}_{\text{imp}}(t) = \begin{cases}
\sigma_1, & t < T_1, \\
\sqrt{\frac{[\sigma^2_i T_i + \sigma^2_{i+1}(t - T_i)]}{t}}, & T_i \leq t < T_{i+1} \text{ for } i < N, \\
\sigma_N, & t \geq T_N,
\end{cases}
$$

where

$$
\sigma_{i,i+1} = \sqrt{\frac{\sigma^2_{i+1}T_{i+1} - \sigma^2_i T_i}{T_{i+1} - T_i}}
$$

is the forward volatility between $T_i$ and $T_{i+1}$. Then for any time points $t_0, t_1$, such that $T_i \leq t_0 < t_1 \leq T_{i+1}$, the forward volatility applicable between the times $t_0$ and $t_1$ is $\sigma_{i,i+1}$.

The reason to use flat forward volatility interpolation (VolMode = CONSTANT_LV) is that it ensures non-negative forward variance by construction. We provide examples in subsection 4.1 where the other interpolation methods listed above allow for negative forward variance.

### 2.6.2 Interpolation in the strike direction

DBAnalytics supports different interpolation methods for interpolating the implied volatility surface along the strike direction. The interpolation methods are selected through the property InterpolationType.

For the following interpolation methods, the interpolation is first done in time dimension and then in strike dimension. DBAnalytics supports the following interpolation methods in strike dimension:

• LINEAR: linear interpolation.
• NATURALCUBIC: cubic interpolation.
• COX8SPLINE: 8-Spline interpolation, calculated with the DeBoor-Cox algorithm³
• GVV/GVV5: the Gamma-Vanna-Volga cost framework.

DBAnalytics also supports an interpolation method (TIMESTRIKE) where interpolation in strike direction is done before interpolation in time direction. In that case, cubic interpolation in strike direction is used.

The most common potential interpolation issue is violation of no-arbitrage, which is prevented through CFU ID 17547. In the context of the model DBSMC-RateDeterministic_FXMarket, the only approved strike interpolation methods are NATURALCUBIC and TIMESTRIKE, because they are the methods least likely to produce arbitrage. Note that even NATURALCUBIC/TIMESTRIKE can generate arbitrageable surfaces if the input volatilities used in the interpolation are arbitrageable. In order to flag presence of butterfly arbitrage in the input volatilities, the CFU ID 17547 ArbitrageChecker-BUTTERFLY was set in place⁴.

The NATURALCUBIC method fits a cubic piecewise polynomial through the data points. Consider at time $T$ the $n + 1$ strike points $(K_i, \sigma_i)$ with $i = 0, \cdots n$ and $\sigma_i = \sigma(K_i, T)$. Define the line parameter, $t \in [0, 1]$, for each of the $n$ intervals $(K_i, K_{i+1})$ by:

$$
t = \frac{K - K_i}{K_{i+1} - K_i},
$$

then a cubic spline can be defined, one for each of the $n$ intervals, by:

$$
Y_i(t) = a_t + b_i t + c_i t^2 + d_i t^3,
$$

³The DeBoor-Cox calculation is explained in http://www.idav.ucdavis.edu/education/CAGDNotes/Deboor-Cox-Calculation.pdf  
⁴If butterfly arbitrage is present in the input volatilities the pricing dictionary will throw an error message e.g. "The marketvol naively is not arbitrage free. It contains Butterfly Arbitrage at Date: 20230502 and for strike: 0.9782020249."

for $i = 0, \cdots n – 1$. There are therefore $4n$ unknowns. The constraints are defined such that the splines pass through all data points with continuous first and second order derivatives, and so that the second order derivatives at the end points vanish ("Natural spline"):

Fixing the values at the data points gives:

$$
\begin{align}
Y_i(0) &= \sigma_i, \\
Y_i(1) = Y_{i+1}(0) &= \sigma_{i+1}, \text{ for } i = 0, \cdots n - 2, \\
Y_{n-1}(1) &= \sigma_n,
\end{align}
$$

resulting in $2 + 2(n - 1) = 2n$ conditions. Furthermore, equating the slopes at the interior data points gives:

$$
\frac{dY_i(1)}{dt} = \frac{dY_{i+1}(0)}{dt}, i = 0, \cdots n - 2,
$$

a further $n - 1$ conditions. Lastly, equating the second derivatives at the interior data points, and making them zero at the endpoints gives:

$$
\begin{align}
\frac{d^2Y_0(0)}{dt^2} &= 0, \\
\frac{d^2Y_i(1)}{dt^2} &= \frac{d^2Y_{i+1}(0)}{dt^2}, i = 0, \cdots n - 2, \\
\frac{d^2Y_{n-1}(1)}{dt^2} &= 0,
\end{align}
$$

a further $n + 1$ conditions. The total number of conditions $2n + n - 1 + n + 1 = 4n$ becoming equal to the number of unknowns. The solution to the resulting system of linear equations then uniquely determines the natural cubic piecewise polynomial.

### 2.6.2.3 Extrapolation

Two different extrapolation methods are supported in the DBAnalytics implementation of the DBSMC-RateDeterministic_FXMarket model. These extrapolation methods control how the implied volatility surface is continued either side of the smile beyond the outer lying strikes in the MARKETVOL object.

If ExtrapolationInputMode is set to VOL (default), then extrapolation of the spline is performed via the following algorithm. A minimum multiplier and a maximum multiplier are defined by the properties MinimumVol and MaximumVol. If the spline is trending upwards as it approaches the endpoint of the curve, then the last spline vol is multiplied by the maximum multiplier to get an asymptotic volatility, otherwise the last volatility is multiplied by the minimum multiplier. At each end of the spline the unique quadratic that matches the level and the slope of the curve at the endpoint and also attains its maximum value at the calculated extreme level is found.

If ExtrapolationInputMode is set to SPACE, then extrapolation of the spline is slightly different: the distance units are specified by InterpolationSpace (typically LOGSTRIKE). In this case, one specifies how far along the smile to go before the flat extrapolation begins. For any given maturity, the distance between the penultimate and final inputted points on either side of the smile is multiplied on the left (right) by SpaceMultLeft (SpaceMultRight). This defines the distance away from the final inputted point on the respective side of the smile at which we start extrapolating flat. Note that the properties MinimumVol and MaximumVol are ignored in this case.

### 2.6.3 Parametric Implied Volatility (PIV) and PIV AutoFit

The implied volatility surface can be described parametrically using a MARKETVOL object with InputMode PARAMETRICVOL, typically referred to as parametric implied volatility (PIV). The DBSMC-RateDeterministic_FXMarket model provides functionality for pricing with such a PIV object and also provides routines for auto-fitting (i.e. calibration) such a volatility to an input MARKETVOL of type DELTAVOL or STRIKEVOL.

In the case of PIVs, several functional forms are available in DBAnalytics: SA4, VW12, LA6GD, SABR3FORMULAPD and

SABR4. The choice of the functional form is made by the property SkewType, see subsection 4.8.9. The parameters of the volatility function are fitted from an input volatility surface using the MarketVolFunction PIVAutoFit. Testing around the above concepts can be found in Section 4.8.21. In the context of the DBSMC-RateDeterministic_FXMarket model, the only approved approved PIV parametrizations (SkewTypes) are SA4 (4 parameters functional) and LA6GD (6 parameters functional).

PIVs are defined by series of slices at several maturities $T_1, T_2, \ldots$. Each slice is described by the parametric form. Each PIV functional is expressed as a function of the normalized strike $z$ defined as

$$
z = \frac{\ln(K/F(0,T))}{\sigma_{ATMF}\sqrt{T}}
$$

where $K$ is the strike, $F(0,T)$ is the forward and $\sigma_{ATMF}$ represents the volatility corresponding to the ATMF strike. It is known that the scale of the strike axis is increasing with time. Therefore, working directly in the strike space will make difficult to express how far is the strike from the forward give that the distance will depend also on the time and volatility. The introduction of the normalized space has the role of expressing this distance as a number of standard deviations away from the forward (with the forward being at $z = 0$).

Three parameters are common to all functional forms: VOL, SKEW and SMILE. If the property SkewConvexityType is set to STANDARD (default setting), the interpolation of these parameters is the following:

$$
\begin{align}
VOL &= \sigma_{ATMF} \\
SKEW &= \frac{\partial}{\partial x}\left(\frac{\sigma^2(z)}{\sigma^2_{ATMF}}\right)|_{z=0} \\
SMILE &= \frac{\partial^2}{\partial z^2}\left(\frac{\sigma^2(z)}{\sigma^2_{ATMF}}\right)|_{z=0}
\end{align}
$$

Therefore, for small values of the normalized strike $z$ i.e. near the forward, the PIV function can be expanded under the form:

$$
\sigma^2(z) = \sigma^2_{ATMF}\left(1 + SKEW \cdot z + \frac{1}{2}SMILE \cdot z^2 + \ldots\right)
$$

The approved PIV parametrizations are SA4 (4 parameters form) and LA6GD (6 parameters form):

#### 2.6.3.1 SkewType SA4

The SA4 parametric form is given by

$$
\sigma(z) = VOL\left(\frac{1}{2}(1 + Bz) + \sqrt{\frac{1}{4}(1 + Bz)^2 + \frac{1}{2}Cz^2}\right)^{\frac{POWER}{2}}
$$

where

$$
B = \frac{SKEW}{POWER}, \quad C = \frac{1}{POWER}\left(SMILE - \frac{POWER - 1}{POWER}SKEW^2\right)
$$

and where the four slice parameters (VOL, SMILE, SKEW, POWER) are calibrated to the input volatility surface.

#### 2.6.3.2 SkewType LA6GD

The LA6GD parametric form is given by

$$
\sigma(z) = VOL\left(1 + \ln\left(Be^{Cz} + (1 - B)e^{-Pz}\right)\right)^{\frac{POWER}{2}}
$$

where

$$
A = \frac{B(1 - B)(AC_{wdj} + AP_{wdj})^2}{SMILE + (1 - POWER)(B \cdot AC_{wdj} - (1 - B)AP_{wdj})^2}, \quad B = \frac{SKEW + AP_{wdj}}{POWER + AP_{wdj}}, \quad C = \frac{AC_{wdj}}{A}, \text{ and } P = \frac{AP_{wdj}}{A}
$$

The parameters $AC_{wdj}$ and $AP_{wdj}$ represent the gradient of the implied volatility at larger and smaller strike limits, respectively. They are given by:

$$
\begin{align}
AC_{wdj} = AP_{scale} \cdot AP + \max\left(0, -\frac{SKEW}{POWER}\right) \text{ and } AC_{wdj} = AC_{scale} \cdot AC + \max\left(0, \frac{SKEW}{POWER}\right)
\end{align}
$$

where

$$
AC_{scale} = \sqrt{\frac{1}{4}\left(\frac{SKEW}{POWER}\right)^2 + \frac{1}{2}\left(\frac{SMILE}{POWER} + (1 - POWER)\left(\frac{SKEW}{POWER}\right)^2\right)} + \frac{1}{2}\frac{SKEW}{POWER}
$$

and

$$
AP_{scale} = AC_{scale} - \frac{SKEW}{POWER}
$$

The LA6GD parametric form depends on six slice parameters: VOL, SKEW, SMILE, POWER, AC and AP.

#### 2.6.3.3 Arbitrage Free PIV Surfaces

If badly specified, the PIV surface may contain arbitrage opportunities. In particular, in order to avoid butterfly arbitrage, one requires that

$$
\frac{\partial^2}{\partial K^2}C(K,T) > 0 \text{ for all } T,
$$

This is equivalent to requiring that the probability density function of the underlying extracted from the implied volatility surface should be nowhere negative (which is, of course, a requirement of probability density functions). Furthermore, there should be no calendar arbitrage i.e.

$$
\frac{\partial}{\partial T}\sigma_N(z)^2 T > 0 \text{ for all } z.
$$

DBA provides extensive functionality for checking that these conditions are satisfied, for example the property ArbitrageChecker, see [25], as well as the DBAnalytics function MarketVolFunctionCheckArb, see [26].

#### 2.6.3.4 PIV AutoFit

The auto-fit procedure fits a PIV to an input market volatility of type DELTAVOL or STRIKEVOL by choosing the PIV parameters at each time slice to minimize the least squares error in matching certain targets. Typically, these targets are either the prices / implied volatilities of certain options or a number of conditions that the implied volatility surface must satisfy.

### 2.6.4 DeltaType

There are several ways in which deltas⁵ are quoted in the market. These conventions include: pips spot delta, pips forward delta and mixtures of these.

The pips spot delta is the derivative of the option price with respect to the spot:

$$
\begin{align}
\Delta_{call,SPOTRISK} &= \frac{\partial C}{\partial S}, \\
\Delta_{put,SPOTRISK} &= \frac{\partial P}{\partial S}.
\end{align}
$$

The pips forward delta is the derivative of the option price, with respect to the Forward, divided by the domestic discount factor:

$$
\begin{align}
\Delta_{call,FORWARDRISK} &= \frac{1}{DF_{dom}(T)}\frac{\partial C}{\partial F_T}, \\
\Delta_{put,FORWARDRISK} &= \frac{1}{DF_{dom}(T)}\frac{\partial P}{\partial F_T}.
\end{align}
$$

⁵See section 3.2. in [4]. pp. 43-47.

Using Equation 1 and Equation 2 one finds:

$$
\begin{align}
\Delta_{call,FORWARDRISK} &= N(d_1), \\
\Delta_{put,FORWARDRISK} &= -N(-d_1),
\end{align}
$$

from which we note the useful identity:

$$
\Delta_{call,FORWARDRISK} - \Delta_{put,FORWARDRISK} = 1.
$$

Using the no-arbitrage relationship Equation 3 between the forward, $F_T$, and the spot FX rate, $S$, one obtains the following relationship between the two types of delta risks (for both calls and puts):

$$
\Delta_{SPOTRISK} = DF_{dom}(T)\frac{F_T}{S}\Delta_{FORWARDRISK}.
$$

from which it follows that:

$$
\Delta_{call,SPOTRISK} - \Delta_{put,SPOTRISK} = DF_{for}(T).
$$

Quotes given in the notation: "X"C ("X"P) i.e., 5C, 25C, 25P, 5P, are converted into Deltas using: $\Delta_{call} = X/100$ ($\Delta_{put} = -X/100$). Delta neutral (DN) means a portfolio consisting of positions with offsetting positive and negative deltas so that $\Delta_{call} + \Delta_{put} = 0$, or equivalently from Equation 26 and Equation 25, $\Delta_{call,SPOTRISK}(DN) = DF_{for}/2$ and $\Delta_{call,FORWARDRISK}(DN) = 1/2$.

In DBAnalytics, when using a MARKETVOL object of InputMode=DELTAVOL, the DeltaType property of the VOL object is used to specify the delta quote style convention.

For the pricing of vanilla FX options, we consider the following setups: DeltaType= FORWARDRISK and DeltaType= FORWARDRISK- interval. The DeltaType= FORWARDRISK setup uses the pips forward delta quote style convention. The DeltaType = FORWARDRISK-interval setup uses a mixture of quote style conventions. More specifically, for DeltaType= FORWARDRISK- interval, when:

• $T <$ interval, the quote style is pips spot delta (DeltaType = SPOTRISK);
• $T \geq$ interval, the quote style is pips forward delta (DeltaType = FORWARDRISK).

The market convention is to use the mixed quote style (DeltaType = FORWARDRISK-2Y) with pips spot delta for maturities less than 2 years and pips forward delta otherwise.

We note that since the difference between pips spot delta (DeltaType = SPOTRISK) and pips forward delta (DeltaType = FORWARDRISK) is just a scaling factor (see Equation 27), the test results for one quote style should carry over easily to the other.

### 2.6.5 SABR3FORMULAPD (retired configuration)

This section and its subsections are kept only for legacy purposes. The parametric form SABR3FORMULAPD is not used anymore in the pricing the products in scope of the model. The only two parametric configurations used at the moment (Q2 2020) are SA4 and LA6GD. In this section we discuss the mathematical model underlying the parametric version of the DBSMC-RateDeterministic_FXMarket model. This model is triggered when the InputMode = PARAMETRICVOL, SkewType = SABR3FORMULAPD and SkewConvexityType = SABR3 in the MARKETVOL object.

The regular SABR formula for implied volatility has problems on the wings, which sometimes exhibits butterfly arbitrage. This is corrected by the extrapolation formula used in MARKETVOL with SkewType=SABR3FORMULAPD, as we now discuss.

#### 2.6.5.1 Main equations

Let $S_0$ be the amount of DOMESTIC currency for one unit of FOREIGN currency (e.g., USD/EUR, is the price of 1 EUR in USD). Consider the forward exchange rate $F_t(T)$ for maturity $T$. At time 0 (i.e., today) one has from Equation 3:

$$
F_0(T) = \frac{D_0^{FOR}(T)}{D_0^{DOM}(T)}S_0,
$$

Under the measure of numeraire $D_t^{DOM}$, the forward exchange rate $F_t$ should be a martingale. To model its dynamics, we use the SABR model with shift and blend parameters set to zero, which corresponds to the following master equations:

$$
\begin{align}
dF_t &= \alpha_t F_t dW_t \\
d\alpha_t &= \alpha_t \nu dZ_t.
\end{align}
$$

where $W_t$ and $Z_t$ are two correlated Wiener processes with $d[W, Z]_t = \rho dt$, and the FX volatility $\alpha_t$ is assumed to start from some pre-defined value $\alpha_0$.

Note that SABR is mainly devoted to pricing European products, and is not very suitable for other types of securities such as Asian or American options.

#### 2.6.5.2 Analytic approximation

It is not possible to find exact analytical expressions for the distribution of $F_T$ or vanilla priors in the model (30) - (31). However, there exists an asymptotic expansion (see [7]) for an implied (lognormal) volatility of the European option with strike $K$ and maturity $T$:

$$
\hat{\theta}(K) = \frac{\alpha_0 z}{x(z)}\left\{1 + \left[\frac{1}{4}\rho\nu\alpha_0 + \frac{2-3\rho^2}{24}\nu^2\right]T\right\} + O(\nu^4 T^2),
$$

where

$$
z = \frac{\nu}{\alpha_0}\log F_0/K, \quad x(z) = \log\left(\frac{\sqrt{1-2\rho z + z^2} + z - \rho}{1-\rho}\right).
$$

Under typical market conditions, $\nu^2 T$ is relatively small, so the above approximation tends to be quite accurate. The SABR model has been standard in the industry for over 10 years.

#### 2.6.5.3 SABR parameters

To use SABR model (30) - (31), we need first to specify its parameters (apart from $F_0$, which is given by (29)). In DBAnalytics, this can be done using VOL object with InputMode=PARAMETRICVOL and SkewType=SABR3FORMULAPD. The volatility-of-volatility $\nu$ and the correlation $\rho$ can then be specified respectively as the SMILE and SKEW parameter in the subtable VolParameters.

The parameter $\alpha_0$, on the other hand, is not explicitly specified. Instead, we specify the ATM implied vol $\hat{\theta}(F_0)$ (VOL in the VolParameters subtable), from which $\alpha_0$ is then obtained by inverting the formula (32). Thus, for $K = F_0$ one has $z \to 0$ and $x/x(z) \to 1$ in (32), which therefore reduces to the quadratic equation in $\alpha_0$, the (positive) solution of which is given by:

$$
\alpha_0 = \frac{\sqrt{[1 + \frac{2-3\rho^2}{24}\nu^2 T]^2 + \rho\nu T\hat{\theta}(F_0)} - (1 + \frac{2-3\rho^2}{24}\nu^2 T)}{0.5\rho\nu T}.
$$

#### 2.6.5.4 Region of applicability

The SABR approximation (32) is well-behaved only for strikes which are reasonably close to the forward. Thus, the call price should be a decreasing and at the same time convex function of strike. However, for extreme values of $K$ both of these conditions can be violated if using $\hat{\theta}(K)$ given by (32), which can thus give prices that are not arbitrage-free, a clear demonstration of which is a negative pdf in some region of strike.

Hence, we use the approximated $\hat{\theta}(K)$ only in the region $K \in [K_-, K_+]$ where the corresponding formula is applicable. The boundaries $K_-$ and $K_+$ are taken as the strikes for which the so-called Pseudo-Delta is equal to a specified $p$ (given by the property INTERPOLATIONSTART in the VolParameters subtable of the VOL object) and $1 - p$, respectively:

$$
N\left(\frac{\log F_0/K_+}{\hat{\theta}(K_+)\sqrt{T}}\right) = p, \quad N\left(\frac{\log F_0/K_-}{\hat{\theta}(K_-)\sqrt{T}}\right) = 1 - p.
$$

The standard convention is to take $p = 0.05$, which corresponds to 90% of the distribution of $F_T$ being suitable for pricing using SABR approximation (32).

#### 2.6.5.5 Extrapolation

In the region where SABR approximation is not well-behaved, we need to do some kind of extrapolation to make the prices arbitrage-free. Thus, consider first the case of $K > K_+$. There are two possibilities:

1. The slope of the implied vol is negative ($\hat{\theta}'(K_+) < 0$): In this case we continue the behavior of implied volatility using the SABR approximation.

2. The slope of the implied vol is positive ($\hat{\theta}'(K_+) > 0$): In this case we find the implied volatility from the call prices $C(K)$ which are extrapolated using the formula

$$
C(K > K_+) = [C(K_+) - C'(K_+)(K - K_+)]e^{\frac{2C'(K_+)(K-K_+)/C(K_+)}{}}$$

where $C(K_+)$ is obtained from the SABR approximation (32). It can easily be checked that the above expression gives arbitrage-free prices (so that $C'(K) < 0$ and $C''(K) > 0$) and at the same time ensures continuity of $C(K)$ and $C'(K)$: $\lim_{x \to 0}[C(K_+ + \epsilon) - C(K_+)] = \lim_{x \to 0}[C'(K_+ + \epsilon) - C'(K_+)] = 0$. Note that $C''(K)$ is not continuous at $K = K_+$, but this does not cause any issues and does not lead to arbitrage.

Since changes in the sign of the slope of implied volatility for high strikes are not consistent with the market behavior, if $\hat{\theta}'(K)$ changes sign at some $K = K_{max}$ (so that $\hat{\theta}'(K_{max}) = 0$), then we extrapolate implied vol as flat beyond that point: $\hat{\theta}(K > K_{max}) = \hat{\theta}(K_{max})$.

For $K < K_-$ we apply the same approach as for $K > K_+$, but to the inverted currency pair (so that the region $K < K_-$ is mapped to $K > 1/K_-$), and then invert everything back to get the extrapolated volatilities.

### 2.6.6 Test methods

In this subsection we develop the testing methods with which we subject the model in order to ensure consistency and no arbitrage.

#### 2.6.6.1 Forward variance

Forward variance is the variance implied during a specified time interval in the future. It is calculated from the implied volatilities of options with expires set at the beginning and end of the desired time interval. Let $\sigma_0 = \sigma(t_0)$ and $\sigma_1 = \sigma(t_1)$ be the implied volatilities corresponding to expiry dates $t_0$ and $t_1$, respectively, where $t_1 \geq t_0$. By additivity of variance, we have:

$$
\sigma^2_1 t_1 = \sigma^2_0 t_0 + \sigma^2_{01}(t_1 - t_0),
$$

where $\sigma^2_{01}$ is the forward variance between $t_0$ and $t_1$. By solving Equation 37, we obtain that the forward variance is given by:

$$
\sigma^2_{01} = \frac{\sigma^2_1 t_1 - \sigma^2_0 t_0}{t_1 - t_0}
$$

Negative forward variance is nonsensical, therefore the r.h.s of Equation 38 must be positive for all times and any interpolation method which violates the positivity of the forward variance should be rejected.

#### 2.6.6.2 Put-Call parity

Put-call parity is a no-arbitrage condition given by:

$$
C(K,T) - P(K,T) = S \cdot DF_{for}(T) - K \cdot DF_{dom}(T),
$$

where $C$ and $P$ are prices of call and put options respectively where both have a strike $K$ and maturity $T$. $S$ is the FX spot rate at valuation and $DF_{for}(T)$ and $DF_{dom}(T)$ are the foreign and domestic discount factors respectively. The FX spot and strike are quoted in terms domestic currency per unit of foreign currency. Relation (39) is easily verified by comparing payoffs of both sides at maturity.

#### 2.6.6.3 Breeden-Litzenberger analysis

The following classic result shows that one can imply the probability density function of the option's underlying $S_T$ from a continuum of prices of vanilla options with different strikes and maturity $T$. From a mathematical point of view, these implied probability density functions (PDF) must be non-negative in order to be genuine PDFs. From a financial point of view, if an implied PDF takes negative values, it is equivalent to butterfly arbitrage. That is, any applicable non-negative payoff with support on the set of negative values of the implied risk-neutral function will have negative PV. In other words, the buyer is paid to enter an agreement which has zero risk of any loss.

Let $h(S_T)$ be the probability density function for underlying $S_T$ at time $T$ under the domestic risk-neutral measure. The risk-neutral price of a call option at strike $K$ and time $T$ is given by:

$$
C(K,T) = DF_{dom}(T)\int_{-\infty}^{\infty}(s - K)^+ h(s)ds.
$$

Taking the partial derivative with respect to the strike, $K$, results in:

$$
\frac{\partial C(K,T)}{\partial K} = DF_{dom}(T)\left(-1 + \int_{-\infty}^K h(s)ds\right).
$$

In other words, the risk-neutral cumulative distribution function (CDF) for underlying $S_T$ at time $T$ is given by:

$
CDF(S_T) = P(S_T < K) = \frac{1}{DF_{dom}(T)}\frac{\partial C(K,T)}{\partial K}|_{K=S_T} + 1.
$

Equation (42) is also known as Breeden-Litzenberger formula⁶. Taking the second partial derivative of the call option with respect to the strike we obtain the risk-neutral probability density function:

$
h(S_T) = \frac{1}{DF_{dom}(T)}\frac{\partial^2 C(K,T)}{\partial^2 K}|_{K=S_T}.
$

In order for the above quantities to correspond to a genuine probability distribution, the following no-arbitrage conditions need to be satisfied:

$
-1 \leq \frac{1}{DF_{dom}(T)}\frac{\partial C}{\partial K}|_{K=S_T} \leq 0,
$

from $0 \leq CDF(S_T) \leq 1$ and

$
\frac{1}{DF_{dom}(T)}\frac{\partial^2 C}{\partial K^2} \geq 0,
$

from $h(S_T) \geq 0$ respectively.

The equivalent no-arbitrage conditions can be obtained for puts from equations (44) and (45) and the put-call parity (Equation 39):

$
0 \leq \frac{1}{DF_{dom}(T)}\frac{\partial P}{\partial K}|_{K=S_T} \leq 1,
$

and

$
\frac{1}{DF_{dom}(T)}\frac{\partial^2 P}{\partial K^2} \geq 0.
$

⁶The Breeden-Litzenberger analysis is discussed in section 2.11 in [4], pp. 30–31.

### 2.6.7 Product pricing theory

In this section we describe the theory underlying the pricing of basket options in the DBSMC-RateDeterministic_FXMarket model.

#### 2.6.7.1 FXGeometricBasketOpt

The geometric basket call option has the payoff:

$
\max\left(\prod_{i=1}^{N} m_i\frac{(100X_i(T))^{\alpha_i}}{100} - K, 0\right),
$

where $X_1(T), \ldots, X_N(T)$ are the FX spot rates at maturity $T$ in the format CCY_i/USD (i.e., the amount in foreign currency of one US dollar), $\alpha_i$ are arbitrary powers, $m_i$ are arbitrary multipliers, and $K$ is the strike.

For the purpose of pricing, the spot rates $X_i(T)$ are assumed to be correlated geometric Brownian motion processes, obeying the stochastic differential equations:

$
dX_j = (r_j - r_0)X_j dt + \sigma_j X_j dW_j^d,
$

where $r_j$ is the foreign interest rate of the $j$th currency, $r_0$ is the domestic interest rate, $\sigma_j$ is the volatility of the $j$th currency pair and the $dW_j^d$ are a collection of Brownian motions satisfying:

$
d[W_i^d W_j^d] = \rho_{ij} dt,
$

where $\rho_{ij}$ are the correlations between the FX rates. The correlations $\rho_{ij}$ between the FX rates CCY_i/USD can be calculated⁷ from:

$
\rho_{ij} = \frac{\sigma_i^2 + \sigma_j^2 - \sigma_{i,j}^2}{2\sigma_i\sigma_j},
$

where $\sigma_{i,j}$ denotes the volatility of the cross FX rate CCY_i/CCY_j.

We define a state variable, $f$, for the particular product of rates appearing in Equation 49 by:

$
f(X_1, X_2, \ldots, X_N) = \prod_{i=1}^{N} m_i\frac{(100X_i(T))^{\alpha_i}}{100}.
$

Using the multi-dimensional Ito formula, the stochastic differential equation for $f$ can be written as:

$
\frac{df}{f} = \left\{\sum_{j=1}^{N}\alpha_j(r_j - r_0 - \frac{1}{2}\sigma_j^2) + \frac{1}{2}\sigma^2\right\}dt + \sigma dW_t,
$

where

$
\sigma dW_t = \sum_{j=1}^{N}\alpha_j\sigma_j dW_j^d,
$

and

$
\sigma = \sqrt{\sum_{i,j=1}^{N}\alpha_i\alpha_j\sigma_i\sigma_j\rho_{ij}}.
$

It is clear from Equation 54 that $f$ itself follows a geometric Brownian motion process, with variance, $\sigma^2 T$, and expected value:

$
\mathbb{E}[f] = 100^{\sum_{i=1}^{N}\alpha_i-N}\left[\prod_{i=1}^{N} m_i \hat{F}_i(T)\right]\exp\left\{\left(\sigma^2 - \sum_{i=1}^{N}\alpha_i^2\sigma_i^2\right)\frac{T}{2}\right\},
$

⁷See [4], p. 228, equation (10.3a)

where $\hat{F}_i$ is calculated as

$
\hat{F}_i(T) = F_i(T)^{\alpha_i}e^{(\alpha_i-\alpha_i^2)\frac{\sigma_i^2 T}{2}},
$

and where

$
F_i(T) = X_i(0)e^{(r_i-r_0)T},
$

is the forward FX rate for the $i$th currency at time $T$.

Therefore, the basket option can be priced as a simple call option using equation (1), with forward rate given by equation (57) and BS volatility, $\sigma$, given by Equation 56.

#### 2.6.7.2 FXBasketOpt (RETIRED PRODUCT)

The arithmetic basket call option has the payoff:

$
\max\left(\sum_{i=1}^{N} m_i X_i(T) - K, 0\right),
$

where $X_1(T), \ldots, X_N(T)$ are the FX spot rates at maturity $T$ (in the format CCY_i per USD), $m_i$ are multipliers and $K$ is the strike.

In general, the weighted sum:

$
Z(X_1, X_2, \ldots, X_N) = \sum_{i=1}^{N} m_i X_i(T),
$

is not lognormally distributed. Nevertheless, we can approximate the distribution of $Z$ by a blend distribution. A blend distribution has the parameterized form:

$
B = B_0\frac{\exp(\zeta N(0,1) - \zeta^2/2 + \eta) - \beta}{1 - \beta},
$

where $N(0,1)$ is the standard normal variable and $B_0$ is a constant parameter, $\zeta$ is called the volatility parameter, $\beta$ is called the blend parameter and $\eta$ is called the drift parameter.

For the three-moment matching method (ThreeMomentBracket = 1 in the model object), the first three central moments of the basket variable, $Z$, are matched to the first three central moments of the blend distribution. $B$, where the basket variable moments are calculated from the implied volatilities of the market data and the underlying FX rates, $X_i(T)$, are assumed to follow geometric Brownian motion processes.

We now briefly outline these steps, see also [6].

Assuming geometric Brownian motion processes (Equation 50) for $X_i$, we are able to write the (non-central) moments for the basket variable, $Z$, as:

$
\mathbb{E}[Z] = \sum_{i=1}^{N} m_i \hat{F}_i,
$

$
\mathbb{E}[Z^2] = \sum_{i=1}^{N}\sum_{j=1}^{N} m_i m_j F_i F_j \exp{\{\rho_{ij}\sigma_i\sigma_j T\}},
$

$
\mathbb{E}[Z^3] = \sum_{i=1}^{N}\sum_{j=1}^{N}\sum_{k=1}^{N} m_i m_j m_k F_i F_j F_k \exp{(\rho_{ij}\sigma_i\sigma_j + \rho_{ik}\sigma_i\sigma_k + \rho_{jk}\sigma_j\sigma_k)T},
$

where $F_i = F_i \cdot e^{(\frac{\sigma_i^2 T}{2})}$ and where $F_i$ are given by Equation 59, $\rho_{ij}$ are the correlations between $X_i$ and $X_j$ defined in Equation 51. When calculating these moments, we have used the multi-variable product rule:

$
d(X_i X_j) = X_i dX_j + dX_i X_j + dX_i dX_j.
$

The moments can then be evaluated by taking $\sigma_i$ from the implied market vols at time $T$, $\rho_{ij}$ from their correlations using Equation 52, and $F_i$ from the FX spot rates and discount factors using the no-arbitrage condition (Equation 29).

For any random variable, the central moments are defined by:

$
\overline{m_2} = \mathbb{E}[(Z - \mathbb{E}(Z))^2], \quad \overline{m_3} = \mathbb{E}[(Z - \mathbb{E}(Z))^3],
$

which can also be written in terms of the non-central moments as:

$
\overline{m_3} = \mathbb{E}[Z^3] - \mathbb{E}[Z]^3, \quad \overline{m_3} = \mathbb{E}[Z^3] - 3\mathbb{E}[Z]\mathbb{E}[Z^2] + 2\mathbb{E}[Z]^3.
$

The blend distribution is calibrated to the market data by matching the central moments of the blend distribution (which can be obtained analytically, see [6]) to those obtained from the market data using equations (67) leading to analytic relations between the blend distribution parameters and the market data.

The constant parameter $B_0$ can be trivially identified with the $t = 0$ value of the basket variable, $Z_0$.

One estimates the volatility parameter from:

$
\zeta = \sqrt{\ln(u + u^{-1} - 1)},
$

where

$
u = \left(1 + \frac{\overline{m_3}^{\frac{1}{3}}}{2\overline{m_2}^{\frac{1}{2}}} + \sqrt{\left(1 + \frac{\overline{m_3}^2}{2\overline{m_2}^3}\right)^2 - 1}\right)^{\frac{1}{3}}.
$

Then using the spot basket value, $Z_0$, the volatility parameter, $\zeta$, the first (non-central) moment, $\mathbb{E}[Z]$, and the central moments, $\overline{m_2}$ and $\overline{m_3}$, the blend parameter can also be estimated:

$
\beta = \frac{\overline{m_3} - \overline{m_3}\mathbb{E}[Z](\exp(\zeta^2) - 1)(\exp(\zeta^2) + 2)}{\overline{m_3} + \overline{m_3}(Z_0 - \mathbb{E}[Z])(\exp(\zeta^2) - 1)(\exp(\zeta^2) + 2)}.
$

Finally, the drift parameter is estimated using:

$
\eta = \ln\left\{\frac{(1 - \beta)\mathbb{E}[Z]}{Z_0} + \beta\right\}.
$

This completes the calibration of the blend distribution to the market data at time $T$. It is then assumed that the basket variable follows a blend model stochastic process at intermediate times.

The blend model process is given by:

$
\hat{B}_t = B_0\left\{\frac{\exp\left(\sigma^2 W_t + \mu^2 t - \frac{\sigma^2 t}{2}\right) - \beta}{1 - \beta}\right\},
$

where $W_t$ is a Brownian motion. At time $T$, $B_T$ has a blend distribution given by Equation 62 with:

$
\begin{align}
\zeta &= \sigma^2\sqrt{T}, \\
\eta &= \mu^2 T.
\end{align}
$

Under the assumption that the basket variable $Z$ follows the blend process (72), the payoff for the call option (60) becomes:

$
\max(B_T - K, 0).
$

The basket can then be priced by noting that the shifted variable:

$
B_t' = B_t + B_0\frac{\beta}{1-\beta}
$
is a geometric Brownian motion. Thus by simultaneously shifting the strike:

$$K' = K + B_0 \frac{\beta}{1 - \beta},$$ (77)

the pricing problem is reduced to that of an ordinary Black-Scholes pricing problem for a call option with payoff:

$$\max(B_T' - K', 0).$$ (78)

The price can then be calculated with equation (1), using the shifted strike: $$K' + Z_0 \frac{\beta}{1-\beta}$$, the shifted forward: $$F + Z_0 \frac{\beta}{1-\beta}$$, and the volatility: $$\zeta/\sqrt{T}$$.

For the two-moment matching method (ThreeMomentBracket = 0 in model object), $$Z$$ will have the same distribution as the individual underlyings – that is, $$Z$$ is lognormal.

Note that the lognormal model is a special case of the blend model with $$\beta = 0$$. To calibrate we avoid using any equations involving $$\overline{m_3}$$ (i.e., the third moment is not matched). Instead of 68, we retrieve $$\zeta$$ using:

$$\zeta = \sqrt{\ln\left(\frac{\mathbb{E}[Z^2]}{\mathbb{E}[Z]^2}\right)}.$$ (79)

### 2.7 Feeder and Servicer Models

The model DBSMC-RateDeterministic_FXMarkethas no direct servicer or feeder models.

### 2.8 Model Change Description

DBAnalytics model developers log model changes in release notes, which are available through a dedicated website. In the release note, model developers identify the scope of the change made for the Product-Model combination it is related to and how it can be identified through the library interface. Pricing model changes are categorised into major, minor, technical, non-model and other. The proposed change category is reviewed, and agreed by MoRM on the DBAnalytics website.

The changes not relating to pricing models or risk modes are currently not subject to validation, MoRM review the classification to ensure no pricing model related changes are misclassified. MoRM will only validate major and minor classified model changes.

### 2.9 Validation Outline

DBSMC-RateDeterministic_FXMarket model is tested for all the products in scope: european options, digital options and basket options. The testing, performed in normal market conditions (EOD) and stressed market conditions (IRRBB, CCAR, Multivar), examines the behaviour of the product's price and risk sensitivities under various shocks applied to relevant risk factors (FX spot, FX volatility, domestic and foreign interest rates). The results of the tests show that the behaviour of each product's price and risk sensitivities are smooth and in line with expectations. Additional tests compare the price of the products computed in DBAnalytics against independent implementation using the closed-form formulas and against alternative DBAnalytics models (DBK, DBX). The results of the tests confirm the correct implementation of the model. In particular, in the case of FXDigitalOpt, the price of computed in the present model matches the price of the equivalent call spread; in the case of FXGeometricBasketOpt, the prices match the prices of corresponding european vanilla options written on the auxiliary index process used in their pricing.

Further tests assess if various interpolation methods available in the DBAnalytics in time and strike dimensions satisfy the no-arbitrage conditions and examine the impact of the dayweights parameters. In terms of interpolation methods in time dimension, see Section 4.1, the flat forward volatility (VolMode = CONSTANT_LV), piecewise constant to the left/right (VolMode = PWCONST_L/PWCONST_R), cubic (VolMode = CUBIC) and exponential (VolMode = EXPONENTIAL) interpolations are tested. Based on the testing, only flat forward volatility interpolation is approved (VolMode = CONSTANT_LV), see CFU ID 588, since it is the least susceptible to arbitrage.

In terms of interpolation methods in strike dimension, see Section 4.2, the cubic (InterpolationType = NATURALCUBIC/TIMESTRIKE), linear (InterpolationType = LINEAR), and DeBoor-Cox B-Spline (InterpolationType = COXBSPLINE) interpolations are tested. The interpolation based on the Gamma-Vanna-Volga framework (InterpolationType = GVV/GVVS) is not tested because it is not approved for use. Based on the testing, only natural cubic interpolation (InterpolationType = NATURALCUBIC/TIMESTRIKE) is approved, see CFU ID 550, because it is the least susceptible to arbitrage.

The correct implementation of the parametric form SA4 has been tested in different sections of the document. The property VolTermStructures that controls the term structure of slice parameters (VOL, SMILE, SKEW, POWER) contained in a PARAMETRICVOL is documented in Section 4.8.10 and its correct implementation is tested in Section 4.8.21.

The auto-fitting procedure i.e. the model's ability to fit an SA4 PIV volatility to a MARKETVOL object of type DELTAVOL is tested in Section 4.4. The tests are performed in normal market conditions (EOD data) and extremely stressed conditions (when very large shifts are applied to the input data stored in the DN, HR and CVX term structures). The results show that the calibration errors are of extremely small magnitude (< 10e-10) in EOD conditions and remain very small in the majority of stressed scenarios, thus proving the robustness of the auto-fitting procedure. Additional testing checks whether negative probability functions are observed and thus Butterfly arbitrage exists. The test results show that the no-arbitrage condition is satisfied in all considered cases. Further tests, covering the SA4 and LABGD SkewTypes are performed in 4.8.21. The performance of the PIVAUTOFITIT function is tested also in the presence of different conventions for weights used in the fitting algorithm, see Section 4.8.17.

The various time conventions e.g., BusinessDaysPerYear, BusinessTimeVols, DayWeightInterpolation, etc have been documented and their correct implementation has been checked by comparing the values of the implied volatilities calculated in DBAnalytics under different time conventions against their values calculated analytically, see Section 4.3.7.

The property RestrikeType which defines the way in which the volatility surface is behaves when the spot value used in pricing deviates from the original spot value (corresponding to the time point when the original volatility surface is defined) is documented and tested in 4.8.11. This property is relevant in the computation of FXDELTA and FXGAMMAAVE, where assumptions are made regarding the volatility that is used in the calculation of the "bumped" PVs.

Tests covering CCAR 2022 stress scenarios have been added in Q2 2022, using DBAnalytics v.1110. Since these tests cover EOD scenarios too for comparison purposes, these tests can be regarded as checking and confirming the correct behavior of the model in the context of DBAnalytics v.1110.

### 2.10 Description of EOD Testing

Tests investigate the correct implementation of the model by comparing each product's price and risk sensitivity computed in DBAnalytics against their values computed via independent implementation or in alternative DBAnalytics pricing models (DBK, DBX). Further tests examine the behaviour of the price and risk sensitivities under shifts applied to the risk factors (domestic and foreign interest rate curves, FX spot, FX vol). A summary of the testing is the following:

FXEuroOpt:

1. The products tested are a vanilla option priced using a non-parametric volatility of type DELTAVOL and a vanilla option priced using a parametric SA4 type volatility in order to ensure that both model configurations behave as expected when shocks are applied to the risk factors.

2. Check that the price, implied BS volatility, SpotRiskDelta, FwdRiskDelta, Gamma and Vega are computed correctly by comparing their values computed in DBAnalytics against analytical calculations. This test is intended to check the correct implementation of the model as the listed parameters are computed using closed-form formulas, and thus can be independently replicated.

3. Check that FXDELTA and FXVEGA risk sensitivities are computed correctly in EOD and CCAR scenarios by comparing their values calculated in DBAnalytics against analytic computations based on the definitions of the risk sensitivities.

4. Test the behaviour of PVs under shifts of FX spot and interest rates and check the correctness of results by comparing DBAnalytics computed values against analytic computations.

5. Test the behaviour of PVs under shifts of FX volatility. Test the correct implementation of the SA4 formula.

6. Examine the behaviour FXDELTA and FXVEGA under shifts of various risk factors and compare their behaviour with that of SpotRiskDelta, FwdRiskDelta, Gamma and Vega computed in MODE Price.

FXDigitalOpt:

1. The testing covers a digital option priced using a non-parametric volatility of type DELTAVOL and a digital option priced using a parametric SA4 type volatility to ensure that both model configurations behave as expected when shocks are applied to the risk factors.

2. Check that the price, implied BS volatility and risk sensitivities Gamma and Vega are computed correctly by comparing the DBA results against analytical computations. This test is intended to check the correct implementation of the model.

3. Test the behaviour of the price under shifts of FX Spot, FX volatility and interest rates and compare the DBAnalytics results against alternative DBAnalytics models (DBX, DBK).

4. Check that FXDELTA, FXGAMMA and FXVEGA risk sensitivities are computed correctly in EOD and CCAR scenarios by comparing the DBA results against analytic computations based on the risk sensitivities' definitions.

5. Test the behaviour of the risk sensitivities under shifts of FX Spot, FX volatility and interest rates and check the correctness of the DBAnalytics results by comparing them against alternative DBAnalytics models (DBX, DBK).

6. Check the correct computation of the digital option price by comparing the DBAnalytics price against the price of an equivalent call spread.

FXGeometricBasketOpt:

1. We show that the price and risk sensitivities SpotRiskDelta, FwdRiskDelta, Gamma and Vega are computed correctly by comparing the DBA results against analytical computations. This test is intended to check the correct implementation of the model.

2. Show that the put-call parity holds in the case of the Geometric Basket Option.

3. Examine the behaviour of the price under shifts of FX Spot, FX volatility and interest rates.

4. Show that the risk sensitivities FXDELTA, FXGAMMA and FXVEGA are computed correctly in EOD and CCAR scenarios by comparing the DBA results against analytic computations based on the risk sensitivities' definitions.

These listed points have been tested in [28]. The present document contains additional EOD, CCAR and IRRBB testing on 3 dictionaries with recent market data, IR Rates curves and FX Vols as of Q2 2022.

### 2.11 Description of CCAR Scenarios and Testing

The CCAR methodology is included in the general stress testing framework as described in Standardized Shock Primer document [14]. This, in particular, includes a construction of CCAR stressed market data objects for adverse and severely adverse scenarios which have been reviewed and validated in [15], [16], [17], [18], [19].

The latest CCAR stress scenario testing was performed in Q2 2022 using the shock objects provided by Market Risk. For the purpose of these tests, CCAR market data objects are treated as given inputs and the main objective is to test the behaviour of a product-model pair in the CCAR stressed pricing contexts. For every product we perform stress tests to examine the stability of the price and sensitivities under the shifts of IR curves, FX spot and FX volatility. The testing covers three scenarios:

1. EOD Scenario: This is the market data used in end of day pricing on the valuation date and its presented in this section for comparison purposes.

2. CCAR 1: This is the Asset Bubble Burst - Q2 2022 scenario. In terms of the market data relevant to the testing product, shocks are applied to all relevant objects in the EOD pricing dictionary as given by Market Risk.

3. CCAR 2: This is the severe adverse 2022 FRB CCAR scenario. In terms of the market data relevant to the testing product, shocks are applied to all relevant objects in the EOD pricing dictionary as given by Market Risk.

### 2.12 Description of IRRBB scenarios and testing

In this section, we describe the Interest Rate Stress Tests according to a range of ten different scenarios defined under the RJBB framework. This framework is part of the Basel capital framework Pillar 2 (Supervisory Review Process), and was described also in [24]. The goal is to approve the behaviour and accuracy of the DBAnalytics implementation for all the components of the model under those scenarios. The BCBS document [23] describes eight Interest Rate shock scenarios that are required to be applied to IRRBB exposures in each currency for which a bank has material positions in the Banking Book. Eight Interest Rate currency dependent shock scenarios are prescribed that reflect currency-specific absolute interest rate shocks. Two of them (Steepener and Flattener) have been extended to take their opposite shift in order to define two additional scenarios: Steepener Negative and Flattener Negative. The IRRBB Interest Rate scenarios are summarized as follows:

1. Parallel shock up,
2. Parallel shock down,
3. Steepener shock (short rate down and long rates up),
4. Steepener negative shock (opposite Steepener shift),
5. Flattener shock (short rates up and long rates down),
6. Flattener negative shock (opposite Flattener shift),
7. Short Rates shock up,
8. Short Rates shock down,
9. Long Rates shock up,
10. Short Rates shock down.

For every product we perform stress tests to test the stability of the price and sensitivities under the shifts of IR curves, FX spot and FX volatility.

### 2.13 Description of MultiVar testing

The purpose of the test is to examine the robustness of the model in different stress scenarios: SVAR10d, SVAR1d, VAR10d, VAR1d. Typically SVAR1d/10d is the most severe. In each stress scenario, there exist two shock parameters for each risk factor. These shocks, when applied to the relevant market inputs allow to retrieve the highest and the lowest PV of the stress scenario. In order to determine the shocks that need to be applied at market input and model parameter levels such that the highest and lowest PV of the stress scenario are retrieved the following steps are performed:

• We identify the relevant risk factors of the model e.g. SWAP, OISSPREAD, CCYSPREAD, VOL etc.

• For each risk factor we compute the corresponding risk sensitivity e.g. FLATDELTA, FLATOISSPREAPDELTA, FLATCCYSPREADELTA, FLATVEGA etc.

• The sign of the risk sensitivity will determine the type of shock that needs to be applied to each market input and model parameter. This step is conditional on the shock availability (the list of shocks is provided by Market Risk) and shock type (relative or absolute). To exemplify, let $$VolInput(T_i), i = 1, ...n$$ represent a term structure used to define the interest rate volatility and assume that FLATVEGA > 0. This implies that in order to obtain the $$PV_{max}^{10d}$$, we perturb the each input from

above by $$VolInput(T_i)(1 + X) * ShockVolInput_{max}(T_i)), i = 1, ...n$$ and in order to obtain $$PV_{10d}^{min}$$, we perturb each input by $$VolInput(T_i)(1 + X) * ShockVolInput_{min}(T_i)), i = 1, ... n$$. We proceed analogously for the remaining risk factors – note that we need to take into account any sign conventions of the risk sensitivities.

The shocks can be applied through relative or absolute shifts. Typically the shocks applied to the curve objects are absolute and the shocks applied to the volatility objects are absolute or relative (The column BLEND decides the type of shocks: BLEND=0 implies relative shocks and BLEND=1 implies absolute shocks).

The lambda parameter is allowed to evolve from 0% to 100%. The resulting PV ladder corresponds to the PV change as a function of a fraction of the stress scenario considered, from 0% to 100%. This aims to show that the model is robust enough to price in extremely stressed scenarios similar to those seen during the 2008 crisis.

### 2.14 Risk Factor Tables

![Table 8: Risk factors (shift sizes applied to the risk factors) table for DBSMC-RateDeterministic_FXMarket model.](./Fig/table8.png)

Table 8: Risk factors (shift sizes applied to the risk factors) table for DBSMC-RateDeterministic_FXMarket model.
The shifts of the IR curve are absolute, the shifts of the IR vol, FX spot and FX vol are relative.

### 2.15 Engagement Process

The model developer documentation submitted in MARS request ID 16676 has been reviewed for sufficiency and completeness against the model approval request submission standards detailed in the Pricing Model Validation Key Operating Document [27]. The results of the initial review are detailed in Tables 3.5 and 3.5. The requirements which were not addressed fully were raised to DBAnalytics (MARS workflow ID 16676) to enhance and augment the materials submitted. The full requirements were ultimately addressed satisfactorily and are contained in MARS request ID 16676. (Include as appropriate) Outstanding developer

documentation requirements not addressed during or prior to validation are subject to the validation finding raised in section 5.16.

### 2.16 List of Validation Findings

Table 9: DBSMC-RateDeterministic_FXMarket Closed Findings

| Request ID | Start Date | Due Date | Request Status | Originator | Action Owner | Finding Severity |
| --- | --- | --- | --- | --- | --- | --- |
| 9082 | 26/10/2016 | 26/01/2018 | Finding Resolved | Souhail Hannouf | Pierre-Olivier Rieu | |

Table 10: DBSMC-RateDeterministic_FXMarket Open Findings

| Request ID | Start Date | Due Date | Request Status | Originator | Action Owner | Finding Severity |
| --- | --- | --- | --- | --- | --- | --- |

Request ID 9082

• Model Configurations

DBSMC-RateDeterministic_FXMarket

• PRDS Products

• Description

(Non-parametric) The user must ensure that the MARKETVOL vol inputs do not imply negative forward variance between time pegs.(Non-parametric). The interpolated volatility surface is not guaranteed to be arbitrage free. The user must ensure that the implied pdf is non-negative.

• Action

• Resolution

DBA has added the property "ArbitrageChecker" in marketvols (see release note RN_390_15). This property is being controlled by condition for use CfU 17547.

### 2.17 List of Validation Observation

As part of the validation of pricing models, MoRM may identify problems with the model that require an immediate implementation fix and cause further validation activities to be put on hold. Ownership, compensating controls, remediation actions and timelines will be discussed and monitored as part of the MCWGs. To raise a validation finding MoRM create a validation finding request in MARS, where the finding is described, responsible action owner is assigned and a deadline for remediation of the finding specified. MoRM can revoke the model approval if validation findings are not closed within agreed timelines. MoRM will only raise validation findings and not observations for pricing models. Due to the nature of model usage for valuation and risk management, matters identified must be addressed through concrete remediation.

There are currently no observations relevant to other stakeholders.

## 3 Assessment of Approach, Conceptual Soundness and Implementation

### 3.1 Assessment of Development and Modelling Data

The interest rates are deterministic and the dynamics for the FX underlying is Black-Scholes. The volatility can either be calibrated PIV to the market data or it can be strike-and-time interpolated from the market data. The instruments used for calibration are vanilla FX options with various maturities. The pricing of baskets uses only the delta neutral market volatility.

### 3.2 Assessment of Methodology and Calibration

The DBSMC-RateDeterministic_FXMarket model is calibrated to the market through a DBMVOL object. This DBMVOL object contains the implied BS volatilities for a range of strikes and maturities. There are two ways in which the calibration is performed. One way is to perform a polynomial interpolation to the market data of BS implied volatilities in both the strike and maturity direction. The shortcomings of this method is that it can frequently lead to arbitrage. The second way is done by providing a template parametric volatility object as a MODELVOL to the dictionary. This is most frequently done by choosing parameters for the parametric volatility, which minimize the square of the difference in prices at the provided data points. The advantage of this approach is that the parametric volatilities are specially chosen functions, which are less likely to lead to arbitragable prices. It is highly recommended that the latter approach is used in production.

### 3.3 Assessment of Model Assumptions and Limitations

The model assumptions are listed in Sections 2.5.2 and 1.2.2, respectively. In particular, the list of model assumptions and limitations is deemed complete and there is no relevant missing item that requires to be added to the current version of the documentation.

#### 3.3.1 Assessment of Model Assumptions

| Assumption | Conceptual Suitability |
| --- | --- |
| Deterministic Interest Rates | Assuming deterministic interest rates is reasonable for pricing FX products |
| Diffusive Dynamics | The randomness in the evolutions of the FX rate is assumed to be driven by diffusive processes (Brownian motion) |

| No arbitrage | It is assumed in the models that there are no arbitrages in the market. |
| --- | --- |

### 3.4 Expert Judgements in the Model

In addition to the model specification detailed in section 2.5, the market inputs specified in section 2.5.3.1 are subject to IPV process and the following model parameters are subject to the following expert judgement:

• InterpolationType
• InterpolationSpace
• InterpolationStrikes
• VolMode

### 3.5 Assessment of Model Documentation

Model users are responsible for seeking model validation for all new model and product combinations prior to use, through the submission of Model Approval Requests in line with the documentation standards set out by MoRM. Documentation should be sufficient to permit independent review and to facilitate potential replication and/or upgrade of the model by others, independent of the original developer.

The following steps are carried out in evaluating the Model Approval Request submissions:

• Upon being assigned to the Model Approval Request, the Primary Approver must review the submission to confirm completeness and adequacy against the minimum standards.

• If the Model Approval Request does not comply with submission standards or if additional information is required, the Primary Approver will reject the request and clearly document the reasons for this as well as follow up actions required by model owner/developer submitting the request, prior to resubmission.

MoRM will not commence validation until the Model Approval Request is accepted.

At any time during the validation process, MoRM have the right to request additional information they deem necessary for effective validation, even if outside the submission requirements listed in this document. MoRM may also ask for the model documents to be updated during the course of the validation. Additional supporting information obtained during the validation is also recorded in MARS.

The pricing model developer document requirements to check:

| Section | Content | MoRM check |
| --- | --- | --- |
| Executive summary | | |
| | Model Developer | |
| | Documentation Info | Yes |
| Market characteristic and market data | | |
| Market characteristic | | |
| | Market considerations | Yes |
| | Market instruments | Yes |
| | Market instrument treatment | Yes |
| | Other market data | Yes |
| Model Description | | |
| Model Dynamics | | |
| | Model assumptions | Yes |
| | Model parameters | Yes |
| | Model dynamics | Yes |
| | Model components | Yes |
| | Model implementation | Yes |
| Model calibration | | |
| | Model parameters calibration | Yes |
| Model risk sensitivities | | |
| | Modes which apply to the model | Yes |
| | Model risk sensitivities | Yes |
| Model weaknesses, limitations | | |
| | Weakness and limitation description | |
| | Model Restrictions (Conditions for Use) | |
| Conceptual Soundness | | |
| | Product scope | |
| | Justification for model selection | |
| Model controls | | |
| | Analytics Library and Version | |
| | Compensating controls | |
| | Model inputs controls | |
| Implementation testing and justification of model behaviour | | |
| Model configuration testing | | |
| References | | |

The pricing product model developer document requirements to check:

| Section | Content | MoRM check |
| --- | --- | --- |
| Executive summary | | |
| | Model Developer | |
| | Documentation Info | |
| | Model configuration | |
| | Product Owner | |
| | Business Area, Line or Asset Class | |
| | Risk Management Systems | |
| Products description | | |
| Product Scope | | |
| | PRDS name and definition | |
| | NPA Reference | |
| | Mathematical description of the payoff | |
| | Product contractual parameters | |
| | Product scripting | |
| Product grouping | | |
| | Product main characteristics and features | |
| Product model appropriateness | | |
| Model appropriateness for products it will be used for | | |
| | Product-Model Combination appropriateness | |
| Product Risk factor identification | | |
| | Key Risk factors | |
| | Risk sensitivities | |
| | Calibration instruments | |
| | Products calibration instrument choice | |
| Product model weakness identification | | |
| | Product Model Combination Limitations | |
| Model Configuration Testing and Results | | |
| Convergence and stability tests | | |
| Limiting case and alternative model testing | | |
| Calibration algorithm and risk sensitivities | | |
| Risk factor tests | | |
| | End of Day condition and VAR | |
| | CCAR and EBA conditions | |
| | RIB | |
| Testing evidence | | |

### 3.6 IT Implementation testing

For Pricing models, implementation refers to DBA releases and deployment refers to integrating them into risk calculators. The deployed model library executable code must be held in a secure and controlled environment or embedded in a system which is held in a secure and controlled environment.

DBAnalytics production system reconciliation: Independent model validation testing is undertaken using DBAnalytics. Since no additional processing of DBAnalytics is undertaken and no further external analytics are being run in strategic production systems, it can be assured that model output produced with a consistent version of DBAnalytics will yield equivalent results whether run locally by individual users or in official production systems.

## 4 Independent Validation Testing

In accordance with the key operating procedures and model testing standards we have tested the DBA implementation of the DBSMC-RateDeterministic_FXMarket model for accuracy, stability and robustness. These include comparisons of the model to alternative models, independent implementation of the model where possible, product testing and stress testing. The methods and main results of these tests are documented in the following subsections.

### 4.1 Volatility interpolation in the time direction

In this section we test the interpolation in the time direction, and in particular we check if negative forward variance can occur, see paragraph 2.6.6.1. We consider a European vanilla FX option on the USD/EUR currency pair with valuation date 20-April-2020 and a European vanilla FX option on the USD/AUD currency pair with valuation date 25-Oct-2019. The test results show that the flat forward volatility interpolation method VolMode= CONSTANT_LV produces forward variances that are non-negative even when non-constant dayweights are included.

#### 4.1.1 Flat forward volatility interpolation

We test the flat forward volatility interpolation method VolMode = CONSTANT_LV for weekly intervals, which is the approved time-interpolation method for the DBSMC-RateDeterministic_FXMarketmodel. The mathematical description of the method can be found in Equation 7.

Market data containing implied volatilities for options with maturities from one business day up to 10 years is used in the interpolation.

In the below figures, see 1, the forward variances in the intervals [$$i$$ weeks, $$i + 1$$ weeks] are displayed, covering the total 10 year period. In the case of the FXEuroOpt on the USD/AUD FX rate, where the input volatility is given only in terms of DN deltas, the graphs are constant between the benchmark maturities 1W, 2W, 1M, 2M, 3M, 6M,1Y, 2Y,...9Y and 10Y as expected by the flat forward interpolation method. In the case of the FXEuroOpt on the USD/EUR FX rate, the forward-variance is not piecewise constant, because the input volatility is given by a (DN,CVX,RR) structure with non-constant dayweights assigned for the first year.

The results show that, when using the flat forward volatility interpolation method, the forward variances are non-negative even when non-constant day weights are included. In fact, volatility dayweights (see section 4.3) only affect the scaling of the forward volatilities and therefore can not turn them negative.

See subsection 4.3 for a description of dayweights.

![Figure 1: Forward variance for options on the currency pair USD/EUR (left) and on the currency pair USD/AUD (right) in the interval [i weeks, i + 1 weeks]. The data covers a 10Y period beginning from the valuation date. No violation of the positivity of the forward variance is observed.](./Fig/1.png)

Figure 1: Forward variance for options on the currency pair USD/EUR (left) and on the currency pair USD/AUD (right) in the interval [i weeks, i + 1 weeks]. The data covers a 10Y period beginning from the valuation date. No violation of the positivity of the forward variance is observed.

The flat forward volatility interpolation method uses a constant forward volatility between subsequent time points specified in the MARKETVOL object. Therefore the forward volatilities between any two generic time points will be positive so long as the forward volatilities between the time points in the MARKETVOL are also positive.

![Figure 1: Forward variance interpolation](./Fig/1.png)

Figure 1: Forward variance for options on the currency pair USD/EUR (left) and on the currency pair USD/AUD (right) in the interval [t weeks, t + 1 weeks]. The data covers a 10Y period beginning from the valuation date. No violation of the positivity of the forward variance is observed.

The flat forward volatility interpolation method uses a constant forward volatility between subsequent time points specified in the MARKETVOL object. Therefore the forward volatilities between any two generic time points will be positive so long as the forward volatilities between the time points in the MARKETVOL are also positive.

#### 4.1.2 Other interpolation methods

In this section we discuss the inconsistency of the forward variance for non-approved interpolation methods. Consider the following volatility surface without dayweights:

| MaturityDelta | 10P | 25P | ATM | 25C | 10C |
| --- | --- | --- | --- | --- | --- |
| 3M | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 6M | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 1Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 2Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 3Y | 9.25% | 9.25% | 9.25% | 9.25% | 9.25% |
| 5Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 7Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 10Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 15Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |
| 20Y | 9.25% | 9.25% | 9.25% | 9.25% | 9.25% |
| 30Y | 11.00% | 11.00% | 11.00% | 11.00% | 11.00% |

For this volatility surface, we test for negative forward variances for all interpolation types, namely flat forward volatility (VolMode = CONSTANT_LV), piecewise constant to the left/right (VolMode = PWCONST_L/PWCONST_R), cubic (VolMode = CUBIC) and exponential (VolMode = EXPONENTIAL). The results are shown in figure 2, 3 and 4 respectively. It is clear that all methods except the flat forward volatility method suffer from some form of negative forward variance.

![Figure 2: Forward volatility interpolation comparison](./Fig/2.png)

Figure 2:
LEFT: Flat forward volatility (VolMode = CONSTANT_LV) interpolation. The forward variance is non-negative at all times.
RIGHT: Piecewise constant to the left interpolation (VolMode = PWCONST_L). There is some negative forward variance at about 3 years.

![Figure 3: Cubic and piecewise constant interpolation](./Fig/3.png)

Figure 3:
LEFT: Cubic interpolation (VolMode = CUBIC). There is some negative forward variance at times close to 3 years.
RIGHT: Piecewise constant to the right interpolation (VolMode = PWCONST_R). There is some negative forward variance at about 2 years.

![Figure 4: Exponential interpolation](./Fig/4.png)

Figure 4: Exponential interpolation (VolMode = EXPONENTIAL). There is some negative forward variance at times close to 3 years.

The graphs displays the forward variance for option on the currency pair USD/EUR the interval [t weeks, t + t weeks] covering 520 weeks. Dayweights are not taken into account. The valuation date is 20-April-2020 and the currency pair is USD/EUR. The results show that VolMode = CONSTANT_LV is the only interpolation type not generating negative forward variance.

The tests results show that flat forward volatility interpolation (VolMode = CONSTANT_LV) is the least likely to generate negative forward variance, and therefore is the only time interpolation method allowed in this model, see CFU ID 589.

Note that degenerate input volatilities can lead to negative forward variance in the volatility surface constructed through interpolation/extrapolation. For example, it is possible to set the ATM volatility for 6 months to 8.33% and for 1 year to 1%, and this will lead to negative forward variance.

However is it possible to have a no-arbitrage market model in which the forward variance of the FX rate becomes negative due to the combined effect of the stochastic interest rates and correlations. DBAnalytics provides the following example which we replicate here, constructed in the framework of a DBX-ShortRate_FXSkew model. In this model, the dynamics of the domestic and foreign interest rates are given by Hull-White processes with time dependent coefficients, while the FX rate is represented by the lognormal process with parametric volatility of type SKEWPARAMETRIC04. A string of caplets on the JPY/USD FX rate with maturities t_{i+1} = t_i+1 week are priced starting from t_0=30/09/2010 going up to 23/08/2030. The pricer returns for each maturity t_i the corresponding implied BS volatility σ(t_i). The following plot displays the weekly forward variances computed based on the formula:

$$
σ(t_i, t_{i+1})^2 = \frac{σ^2(t_{i+1})t_{i+1} - σ^2(t_i)t_i}{t_{i+1} - t_i}
$$

We can see that the weekly forward variance is decreasing and becomes negative around the 5Y tenor point:

![Figure 5: DBX-ShortRate_FXSkew Model](./Fig/5.png)

Figure 5: Forward variance (weekly frequency) computed in the framework of the DBX_ShortRate_FXSkew model. We can see that although we are in an arbitrage-free model, the forward variance of the FX rate is descreasing and even becomes negative around the 5Y tenor point.

### 4.2 Volatility interpolation in the strike direction

We consider actual market data for an FXEuroOpt on the USD/EUR FX rate with valuation date 20-April-2020. The implied volatilities for different strikes and maturities, calculated using cubic interpolation, are shown in Figure 6.

![Figure 6: Implied volatilities](./Fig/6.png)

Figure 6: Implied volatilities of a call option for different strikes and maturities using cubic interpolation in strike dimension (InterpolationType = NATURALCUBIC). The valuation date is 20-Apr-2020 and the currency pair is USD/EUR. As expected, a skew is observed in the implied volatility curves.

In what follows our objective is to test the interpolation in the strike direction and confirm that the no-arbitrage conditions Equation 44 and Equation 45 hold. The results indicate that the cubic interpolation method turns to be the only interpolation method not violating the no-arbitrage conditions. However, it is possible to construct an extreme data set of inputs such that the no-arbitrage condition is breached. CFU ID 17547 ArbitrageChecker=YES is set in place to flag the presence of butterfly arbitrage in the set of input volatilities used in the construction of the volatility surface.

#### 4.2.1 Cubic interpolation

No-arbitrage conditions (44) and (45) were tested for maturities 3M, 6M, 9M, 1Y, 2Y, 3Y, 5Y, 7Y, 10Y and different strikes using cubic interpolation. Figure 7 displays the results of the tests on the implied CDF⁹ with cubic interpolation and Figure 8 displays the results of the tests on the second derivative¹⁰ for the maturities 6M, 1Y, 2Y, 3Y and 5Y. The test for no-arbitrage condition (44) passes as the implied CDF lies between 0 and 1. Likewise, the probability density function (PDF) is always positive so the no-arbitrage condition (45) also passes.

The graphs show a subset of tests on the implied CDF and PDF of the spot rate at maturity, for different strikes and maturities, with cubic interpolation (InterpolationType = NATURALCUBIC). The bump size for approximating the first derivative was chosen to be 0.000001. The valuation date is 20-Apr-2020 and the currency pair is USD/EUR.

⁹For the call price C(K,T), we approximate the first derivative $\frac{\partial}{\partial K}C(K,T) = \frac{C(K+h,T)-C(K-h,T)}{2h}$ where h is the bump size.
¹⁰For the call price C(K,T), we approximate the second derivative $\frac{\partial^2}{\partial K^2}C(K,T) = \frac{C(K+h,T)-2C(K,T)+C(K-h,T)}{h^2}$ where h is the bump size.

![Figure 7: Implied CDF with cubic interpolation](./Fig/7.png)

Figure 7: Implied CDF with cubic interpolation. The CDF lies between 0 and 1, so the test for no-arbitrage condition (44) passes.

![Figure 8: Implied PDF using cubic interpolation](./Fig/8.png)

Figure 8: Implied PDF using cubic interpolation (InterpolationType = NATURALCUBIC). The PDF is non-negative, therefore the test for no-arbitrage condition (45) passes.

#### 4.2.2 Impact of interpolation method

Cubic interpolation is the recommended interpolation method in the strike dimension (InterpolationType = NATURALCU-BIC/TIMESTRIKE) because the second derivative is ensured to be continuous. If the second derivative is not continuous the no-arbitrage conditions (44) and (45) are more likely to break. In the following we consider two examples:

1. Scenario 1: we use the actual actual market data (in which the input MARKETVOL object is given in terms of a non-parametric (DN, 25RR, 10CVX) volatility structure) for the USD/EUR currency pair to compare the implied cumu-lative distribution function and the implied probability density function for the cubic (InterpolationType = NATURALCU-BIC/TIMESTRIKE) and linear (InterpolationType = LINEAR) interpolations at maturities 6M, 1Y, 2Y, 5Y and 10Y.

2. Scenario 2: in the second example, we construct a MARKETVOL object given in terms of a non-parametric (DN, 10P, 10C, 25C, 25P) volatility structure and compare the implied CDF and the implied PDF for the cubic (Interpolation-Type = NATURALCUBIC/TIMESTRIKE), linear (InterpolationType = LINEAR) and DeBoor-Cox 8-Spline (Interpolation-Type=COX8SPLINE) interpolations at maturities 6M, 1Y, 2Y, 5Y and 10Y.

First scenario shows that, when comparing the cubic interpolation (InterpolationType=NATURALCUBIC/TIMESTRIKE) with other interpolation types, the cubic interpolation turned out to be the only interpolation not violating the no-arbitrage conditions (44) and (45). The second scenario gives an example when even the cubic interpolation violates no-arbitrage. Another example when the cubic interpolation breaks the no-arbitrage condition can be obtained by using the volatility surface given in Table 12 where the points are the same across all maturities:

| Delta | 10P | 25P | ATM | 25C | 10C |
| --- | --- | --- | --- | --- | --- |
| Volatility | 7.0% | 6.5% | 5.0% | 6.5% | 7.0% |

Table 12: Manually constructed volatility surface for natural cubic arbitrage.

| Dates | DN | 25RR | 10CVX |
| --- | --- | --- | --- |
| 3m | 0.0689003284 | -0.0064302325 | 0.0125060373 |
| 6m | 0.0697918853 | -0.0077137365 | 0.0150328999 |
| 1y | 0.0728804591 | -0.0083114852 | 0.0160779654 |
| 2y | 0.0772652906 | -0.0084473448 | 0.0156570931 |
| 3y | 0.0828380069 | -0.0071184892 | 0.0182936132 |
| 5y | 0.0879513342 | -0.0053381963 | 0.0193449498 |
| 7y | 0.0911962957 | -0.0035569087 | 0.0188242364 |
| 10y | 0.093840698 | -0.0020132068 | 0.0191666544 |
| 15y | 0.101840698 | -0.0021632068 | 0.0141666544 |
| 20y | 0.112340698 | -0.0019632068 | 0.0124866545 |
| 30y | 0.122140698 | -0.0022632068 | 0.0121866544 |

Table 13: MARKETVOL object used in Scenario 1.

| Dates | DN | 10P | 10C | 25P | 25C |
| --- | --- | --- | --- | --- | --- |
| 3m | 0.0883096047 | 0.1110618522 | 0.0953715228 | 0.1210618522 | 0.0843715228 |
| 6m | 0.0911626246 | 0.1185853705 | 0.0987354065 | 0.1285853705 | 0.0887354065 |
| 1y | 0.09522603 | 0.1282765475 | 0.0936641127 | 0.1392765475 | 0.0926641127 |
| 2y | 0.0966125968 | 0.1307895052 | 0.0970046899 | 0.1407895052 | 0.0940046899 |
| 3y | 0.09734198 | 0.1335605559 | 0.1024637335 | 0.1435605559 | 0.1004637335 |
| 5y | 0.1000984274 | 0.1383229821 | 0.1096047476 | 0.1483229821 | 0.1096047476 |
| 7y | 0.1046367286 | 0.1443909159 | 0.1157611304 | 0.1543909159 | 0.1107611304 |
| 10y | 0.1143104379 | 0.1567494214 | 0.125952353 | 0.1667494214 | 0.120952353 |
| 15y | 0.123104666 | 0.1635897403 | 0.1225483902 | 0.1735897403 | 0.1205483902 |
| 20y | 0.1227773287 | 0.1623142571 | 0.1215904577 | 0.1723142571 | 0.1205604577 |
| 30y | 0.1225653863 | 0.1608036952 | 0.1212340342 | 0.1708036952 | 0.1202340342 |

Table 14: MARKETVOL object used in Scenario 2.

![Figure 9: Linear interpolation PDF and CDF](./Fig/9.png)

Figure 9: (LINEAR).
LEFT: The pdf is not always positive, therefore no-arbitrage condition (45) is not satisfied.
RIGHT: The cdf lies between 0 and 1 and is decreasing, therefore no-arbitrage condition (44) is satisfied.

![Figure 10: TIMESTRIKE interpolation](./Fig/10.png)

Figure 10: (TIMESTRIKE).
LEFT: The pdf is positive, therefore no-arbitrage condition (45) is satisfied.
RIGHT: The cdf lies between 0 and 1 and is decreasing, therefore no-arbitrage condition (44) is satisfied.

![Figure 11: NATURALCUBIC interpolation](./Fig/11.png)

Figure 11: (NATURALCUBIC).
LEFT: The pdf is positive, therefore no-arbitrage condition (45) is passed.
RIGHT: The cdf lies between 0 and 1 and is non-decreasing, therefore no-arbitrage condition (44) is satisfied.

Arbitrage tests for different strike interpolation methods performed using the MARKETVOL object of Scenario 1. The graphs show the interpolated implied cdf (left) and interpolated implied pdf (right) of the spot at different strikes and maturities. The bump size for approximating the first derivative was 0.000001. Note that if ArbitrageChecker=YES, the above butterfly arbitrage will be flagged by the pricer.

![Figure 12: Arbitrage tests for different strike interpolation methods](./Fig/12.png)

Figure 12: Arbitrage tests for different strike interpolation methods performed using the MARKETVOL object of Scenario 2. The graphs show the interpolated implied cdf (left) and interpolated implied pdf (right) of the spot at different strikes and maturities.
First Row: Linear Interpolation. The implied cdf (left figure) is not always non-decreasing, violating the no-arbitrage condition (45). The implied pdf (right figure) is negative, therefore the arbitrage condition (45) fails.
Second Row: COX8SPLINE Interpolation. The implied cdf (left figure) is not always non decreasing, violating the no-arbitrage condition (45). The implied pdf (right figure) is negative, therefore the no-arbitrage condition (45) fails.
Third Row: TimeStrike Interpolation. The implied cdf (left figure) is not always non-decreasing, violating the no-arbitrage condition (45). The implied pdf (right figure) is negative, therefore the arbitrage condition (45) fails.
Note that if ArbitrageChecker=YES the above butterfly arbitrages will be flagged by the pricer.

![Figure 13: Arbitrage tests for different strike interpolation methods performed using the MARKETVOL object of Scenario 2. The graphs show the interpolated implied cdf (left) and interpolated implied pdf (right) of the spot at different strikes and maturities. The valuation date is 20-Apr-2020 and the currency pair is USD/EUR. Natural Cubic Interpolation: the implied cdf (left figure) is not always non-decreasing, violating the no-arbitrage condition (45); the implied pdf (right figure) is negative, therefore the arbitrage condition (45) fails. Note that if ArbitrageChecker=YES, the above butterfly arbitrage will be flagged by the pricer.](./Fig/1.png)

### 4.2.3 Order of time and strike interpolation

The only difference between the interpolation types TIMESTRIKE and NATURALCUBIC is that in the former setting, the 2-dimensional interpolation is done in time dimension first and then in strike dimension; but in the latter the order is reversed. Both methods use cubic interpolation in the strike dimension. We test the price of a call option for both interpolation types for maturities 6M, 1Y, 3Y, 5Y and 10Y and for strikes ranging from 40% of the original strike value of 1.2208 to 150% of the original strike value. The test results show that we obtain identical prices for TIMESTRIKE and NATURALCUBIC interpolation methods, see Table 15. Therefore, we approve both of these methods.

| Mat | Strike | Price (TIMESTRIKE) | Price (NATURALCUBIC) | Difference |
| --- | --- | --- | --- | --- |
| 6M | 0.37 | 0.730065 | 0.730065 | 0.0 |
| 6M | 0.49 | 0.608005 | 0.608005 | 0.0 |
| 6M | 0.61 | 0.485944 | 0.485944 | 0.0 |
| 6M | 0.73 | 0.363884 | 0.363884 | 0.0 |
| 6M | 0.85 | 0.241823 | 0.241823 | 0.0 |
| 6M | 0.98 | 0.119941 | 0.119941 | 0.0 |
| 6M | 1.1 | 0.018012 | 0.018012 | 0.0 |
| 6M | 1.22 | 0.000142 | 0.000142 | 0.0 |
| 6M | 1.34 | 0.0 | 0.0 | 0.0 |
| 6M | 1.47 | 0.0 | 0.0 | 0.0 |
| 6M | 1.59 | 0.0 | 0.0 | 0.0 |
| 6M | 1.71 | 0.0 | 0.0 | 0.0 |

Table 15: The table shows a subset of the tests of interpolation types TIMESTRIKE and NATURALCUBIC. Cubic interpolation is done in the strike dimension for both methods, but in the case of TIMESTRIKE, the interpolation in strike dimension comes before the interpolation in the time dimension while it is reversed for NATURALCUBIC. We see that both methods give equal price outputs. The spot FX rate is 1.0942 USD/EUR and the original strike of the dictionary is 1.2208. The considered strikes range from 40% of the original strike to 150% of the original strike. The valuation date is 20-Apr-2020.

| Mat | Strike | Price (TIMESTRIKE) | Price (NATURALCUBIC) | Difference |
| --- | --- | --- | --- | --- |
| 1Y | 0.37 | 0.732323 | 0.732323 | 0.0 |
| 1Y | 0.49 | 0.610273 | 0.610273 | 0.0 |
| 1Y | 0.61 | 0.488223 | 0.488223 | 0.0 |
| 1Y | 0.73 | 0.366173 | 0.366173 | 0.0 |
| 1Y | 0.85 | 0.244131 | 0.244131 | 0.0 |
| 1Y | 0.98 | 0.124648 | 0.124648 | 0.0 |
| 1Y | 1.1 | 0.028556 | 0.028556 | 0.0 |
| 1Y | 1.22 | 0.001487 | 0.001487 | 0.0 |
| 1Y | 1.34 | 2.9e-05 | 2.9e-05 | 0.0 |
| 1Y | 1.47 | 0.0 | 0.0 | 0.0 |
| 1Y | 1.59 | 0.0 | 0.0 | 0.0 |
| 1Y | 1.71 | 0.0 | 0.0 | 0.0 |
| 3Y | 0.37 | 0.737502 | 0.737502 | 0.0 |
| 3Y | 0.49 | 0.615486 | 0.615486 | 0.0 |
| 3Y | 0.61 | 0.493471 | 0.493471 | 0.0 |
| 3Y | 0.73 | 0.37146 | 0.37146 | 0.0 |
| 3Y | 0.85 | 0.249945 | 0.249945 | 0.0 |
| 3Y | 0.98 | 0.141892 | 0.141892 | 0.0 |
| 3Y | 1.1 | 0.045945 | 0.045945 | 0.0 |
| 3Y | 1.22 | 0.007786 | 0.007786 | 0.0 |
| 3Y | 1.34 | 0.000732 | 0.000732 | 0.0 |
| 3Y | 1.47 | 3.9e-05 | 3.9e-05 | 0.0 |
| 3Y | 1.59 | 1e-06 | 1e-06 | 0.0 |
| 3Y | 1.71 | 0.0 | 0.0 | 0.0 |
| 5Y | 0.37 | 0.749753 | 0.749753 | 0.0 |
| 5Y | 0.49 | 0.627916 | 0.627916 | 0.0 |
| 5Y | 0.61 | 0.506888 | 0.506888 | 0.0 |
| 5Y | 0.73 | 0.384336 | 0.384336 | 0.0 |
| 5Y | 0.85 | 0.26763 | 0.26763 | 0.0 |

derivative of the volatility with respect to delta according to:

$$\frac{\partial^2 C}{\partial K^2} = \frac{\partial^2 \sigma}{\partial K^2} \cdot \frac{\partial C}{\partial \sigma} + \left(\frac{\partial \sigma}{\partial K}\right)^2 \cdot \frac{\partial^2 C}{\partial \sigma^2} + \frac{\partial \Delta}{\partial K} \cdot \frac{\partial^2 C}{\partial K \partial \Delta} + \left(\frac{\partial \Delta}{\partial K}\right)^2 \cdot \frac{\partial^2 C}{\partial \Delta^2}$$ (80)

The non-smoothness of $\frac{\partial^2 \sigma}{\partial K^2}$ results in non-smoothness of $\frac{\partial^2 C}{\partial K^2}$.

![Figure 14: Left Column: Implied cdf of the spot rate for different strikes and maturities using logstrike, strike and delta in the strike dimension (InterpolationSpace = LOGSTRIKE, STRIKE, DELTA respectively). The cdf lies between 0 and 1, so the test for no-arbitrage condition (44). Right Column: Implied pdf of the spot rate for different strikes and maturities, using interpolation on logstrike, strike and delta in strike dimension (InterpolationSpace = LOGSTRIKE, STRIKE, DELTA respectively). There is very little difference between interpolation in logstrikes (InterpolationSpace = LOGSTRIKE) and strikes (InterpolationSpace = STRIKE), but some difference for interpolation in delta (InterpolationSpace = DELTA) which does not affect the no-arbitrage condition (45). The valuation date is 20-Apr-2020 and the currency pair is USD/EUR.](./Fig/3.png)

![Figure 15: Left Column: Implied cdf of the spot rate for different strikes and maturities using logstrike, strike and delta in the strike dimension (InterpolationSpace = LOGSTRIKE, STRIKE, DELTA respectively). The cdf lies between 0 and 1, so the test for no-arbitrage condition (44). Right Column: Implied pdf of the spot rate for different strikes and maturities, using interpolation on logstrike, strike and delta in strike dimension (InterpolationSpace = LOGSTRIKE, STRIKE, DELTA respectively). There is very little difference between interpolation in logstrikes (InterpolationSpace = LOGSTRIKE) and strikes (InterpolationSpace = STRIKE), but some difference for interpolation in delta (InterpolationSpace = DELTA) which does not affect the no-arbitrage condition (45). The valuation date is 20-Apr-2020 and the currency pair is USD/EUR.](./Fig/4.png)

Although this pdf is positive and doesn't violate the no-arbitrage condition (45) we can quantify this model weakness by calculating the expected rate of return that an investor would make if he were to invest in an optimized payoff, assuming that the true distribution is closer to the pdf of the LOGSTRIKE (or STRIKE) interpolation method [8]. Such an investor could theoretically realize an expected rate of return of 2.09% per year. We show in 16 that the implied volatility difference in the region of the cusp is mostly smaller than typical bid-ask spreads.

![Figure 16: Left Column: Comparison of the Implied Volatility for different strikes and maturities using InterpolationSpace = LOGSTRIKE, STRIKE and DELTA respectively. Right Column: Comparison of the Call price for different strikes and maturities using InterpolationSpace = LOGSTRIKE, STRIKE and DELTA respectively.](./Fig/5.png)

Based on the above observations only InterpolationSpace = LOGSTRIKE and InterpolationSpace = STRIKE are approved, see

### 4.3 Effect of volatility day weights

In this subsection we investigate the effect of volatility dayweights.

Volatility dayweights are used to adjust the forward volatility between two arbitrary days, for example, to account for the natural reduction of volatility over weekends or the amplification of volatility before central bank decisions etc[11].

Our aim is to:

A. Explain the volatility dayweight calculations;
B. Verify that the dayweights do not allow negative forward variance;
C. Compare forward variances with and without volatility dayweights.

The results illustrate, that it is possible when using dayweights, negative forward variance to inadvertently occur even when the constant forward volatility interpolation method is used. However, DBAnalytics will produce a warning message in this instance. Moreover, our Dayweight comparison did not reveal any negative forward variance.

#### 4.3.1 Volatility dayweight calculations

Consider implied volatilities in the vols subtable of the MarketVol object with maturities T₁, T₂,···, T_M, and strikes, K₁, K₂,···, K_N and assume that flat forward volatility (VolMode=CONSTANT_LW) is used to interpolate in the time-direction at constant strike.

In what follows, without loss of generality, we describe the calculation of the volatility dayweights during the period [T_i, T_{i+1}].

Without dayweights, the forward volatility at a given strike, σ(T_i, T_{i+1}), is constant during [T_i, T_{i+1}]. Dayweights can be used to vary the daily forward volatilities during this time interval by either specifying them directly by inputing weights into the DayWeights subtable or indirectly by inputing volatilities in the VolsForDayWeights subtable at times t₀ = T_i < t₁ < ··· < t_m = T_{i+1} where t_i are the daycount-adjusted days during the period.

We define dayweight factors during the period [T_i, T_{i+1}], as any set of non-negative numbers, w₀, w₁,···w_m that satisfy the constraint:

$$\sum_{k=0}^{m} w_k(t_{k+1} - t_k) = T_{i+1} - T_i.$$ (81)

Let σ^fwd_{k} be the adjusted daily forward volatility from the kth day until the k+1 day. When dayweights are given, we can take σ^fwd_{k} to be re-weightings of the constant forward variance:

$$σ^2_{fwd,k} = w_k σ(T_i, T_{i+1})^2.$$ (82)

Then the sum of forward variances relation:

$$\sum_{k=0}^{m} σ^2_{fwd,k}(t_{k+1} - t_k) = σ(T_i, T_{i+1})^2(T_{i+1} - T_i),$$ (83)

will be automatically satisfied. Choosing the weights in this way thereby ensures that the benchmark implied volatilities in the vols subtable are not modified by the dayweights. Note that weightings which do not satisfy Equation 81 can be given in the DayWeights table, but in such case they will be rescaled internally.

[11] A detailed discussion about volatility dayweights can be found in section 4.3 in [4], pp. 70-73.

As already mentioned, the weightings, w_k, can also be given indirectly. In this case, implied volatilities for ATM options are given at times, t₀, t₁,···, t_m, in the VolsForDayWeights subtable. The dayweights are then obtained internally by calculating the forward variances, σ²_{fwd,k}, inverting Equation 82 and rescaling if necessary[12].

In the internal calculation of the weightings, σ(T_i, T_{i+1}) in Equation 82 is equal to the ATM forward volatility, the vols in the VolsForDayWeights subtable are ATM implied volatilities. To find the reweighted daily forward volatilities at other strikes, Equation 82 is again used with the same dayweight factors but now with a different forward variance, σ(T_i, T_{i+1}), calculated at the specified strike.

#### 4.3.2 Test for negative forward variance

As discussed in the previous subsection a VolsForDayWeights table can be used to enter the volatility day weights in the MarketVol object. In this case, implied volatilities are entered into the table, and the weights are calculated internally. Because implied volatilities are entered (rather than for example the forward variances), it is possible when using dayweights for negative forward variance to inadvertently occur even when the constant forward volatility interpolation method is used. Fortunately, DBAnalytics will produce a warning message in this instance. In what follows we validate that the warning system is working as expected, and returns warnings when forward variance occurs.

We consider actual market data containing implied volatilities with strikes at 10P, 25P, ATM, 10C, 25C and for maturities 1B, 1W, 2W, 1M, 2M, 3M, 6M, 9M, 1Y, 2Y, 3Y, 5Y, 7Y and 10Y. Furthermore, we use a VolsForDayWeights subtable to input dayweight volatility fluctuation information for each day in the first year. The valuation date is 3-May-2013 and the currency pair is USD/EUR.

The ATM forward variance was tested for any negativity. We modified the volatility on the 13/06/2013, which has the effect of modifying the dayweights. The volatility given in the weights table for the day prior to the test date, 12/06/2013, is 7.3139%, and for the day after test date, 14/06/2013, is 7.886.07%.

To have nonnegative variance, the inequality σ²t₂ ≥ σ²t₁ has to hold for t₂ ≥ t₁. If the volatilities in the weights table were actual implied volatilities the volatility on 13/06/2013 would be constrained by 7.717% below and 7.0821% above. The volatility input for the 13/06/2013 was tested for values from 7.71% to 7.99% in 0.001% increments. The results are shown in Table 17.

For volatilities 7.717% and below, the creation of the market volatility data container (MARKETVOL object) failed, and DBAnalytics output an error message that the variance (i.e., σ_i(t_i)) is not increasing from 12/06/2013 to 13/06/2013, implying a negative forward variance in that interval. For volatilities 7.983% and above, DBAnalytics output the error that the variance is not increasing from 13/06/2013 to 14/06/2013, implying a negative forward variance in that interval.

[12] Note rescaling will not be required so long as the implied volatility in the VolsForDayWeights subtable at the benchmark maturity (indicated by leftarrow=1) is equal to the implied volatility in the vols subtable at this time.

| Vol for day weights on 13/06/2013 | Implied Volatility on 12/06/2013 | Implied Volatility on 13/06/2013 | Implied Volatility on 14/06/2013 | Forward Variance 12/06/2013-13/06/2013 | Forward Variance 13/06/2013-14/06/2014 |
| --- | --- | --- | --- | --- | --- |
| 7.717% | error | error | error | error | error |
| 7.718% | 7.813% | 7.718% | 7.886% | 0.000002 | 0.016598 |
| 7.719% | 7.813% | 7.719% | 7.886% | 0.000094 | 0.016605 |
| 7.720% | 7.813% | 7.720% | 7.886% | 0.000157 | 0.016872 |
| 7.750% | 7.813% | 7.750% | 7.886% | 0.003060 | 0.014968 |
| 7.800% | 7.813% | 7.800% | 7.886% | 0.005248 | 0.011781 |
| 7.850% | 7.813% | 7.850% | 7.886% | 0.008446 | 0.008573 |
| 7.900% | 7.813% | 7.900% | 7.886% | 0.011685 | 0.005344 |
| 7.950% | 7.813% | 7.950% | 7.886% | 0.014934 | 0.002094 |
| 7.980% | 7.813% | 7.980% | 7.886% | 0.016894 | 0.000135 |
| 7.981% | 7.813% | 7.981% | 7.886% | 0.016959 | 0.000087 |
| 7.982% | 7.813% | 7.982% | 7.886% | 0.017024 | 0.000038 |
| 7.983% | error | error | error | error | error |

Table 17: The table shows a subset of the results. Each row shows a different scenario, in which the volatility on the 13/06/2013 is changed in the VolsForDayWeights table to the value shown in the first column. The next two columns show the implied volatilities that result from this modification one day prior to and one day after this date respectively. The final two columns show the daily forward variances over the two day period. As expected, an error occurs when the volatility is chosen too high or too low, implying a negative forward variance. The valuation date is 03-May-2013 and the currency pair is USD/EUR.

#### 4.3.3 Dayweight comparison

We also investigated the effect of switching on/off the dayweights. The results are shown in Figure 17. Since the dayweights are only provided for up to 1 year the forward variances match for maturities greater than 1 year. Without dayweights, the graph is constant (because we use flat forward volatility interpolation), but with dayweights, the graph is piecewise constant only for maturities greater than 1 year.

![Figure 17: The graphs display the forward variances for ATM (delta-neutral) strikes in the interval [i weeks, i + 1 weeks], with and without dayweights (which are given for up to 1 year). The valuation date is 03-May-2013 and the currency pair is USD/EUR. (Inset) Expanded plot of the ATM forward variances during the first year.](./Fig/8.png)

## 4.4 PIV AutoFit Testing

We test the auto-fitting procedure's ability to fit an SA4 PIV volatility to a MARKETVOL object of InputType=DELTAVOL. The volatility object used as the input and basis for calibration is defined at each time slice by three conditions / market instruments, with values C₁, C₂ and C₃. Recall that, in the nCi convention, an nC option has a delta of n/100. Further note that in this convention the delta of a put is taken to be positive (i.e. set to the negative value of the classical put delta). Bearing this in mind, the conditions are:

1. A delta-neutral condition, DN = C₁, where this means that:
   
   ImpliedVol(C(K*)) = C₁,
   
   where K* is such that Delta(C(K*)) = Delta(P(K*)).

2. A risk reversal condition, 25RR = C₂, where this means that:
   
   ImpliedVol(25C) - ImpliedVol(25P) = C₂.

3. A convexity condition, 10CVX = DN = C₃, where this means that:
   
   $\frac{ImpliedVol(10C) + ImpliedVol(10P)}{2} - C₁ = C₃,$
   
   where C₁ is the delta-neutral implied volatility as described above.

Note that the risk-reversal condition is roughly akin to a skewness condition and the convexity condition roughly describes the convexity of the surface. The SA4 parametric form depends on 4 parameters: Vol, Skew, Smile and Power. However, a restriction is placed on the SA4-PIV, that Power = 1 for all time slices, so only three parameters need to be fitted at each time period : Vol, Skew and Smile. The testing further checks if negative PDFs are observed and thus Butterfly arbitrage exists. The test results show that the no-arbitrage condition is satisfied in all considered cases.

#### 4.4.1 EOD Implied Volatility Surface

We first test the ability to fit a PIV to standard (EOD) market data.

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 0.062925 | 0.062925 | 0.0 |
| 20220310 | 25RR | -0.002112 | -0.002112 | -0.0 |
| 20220310 | 10CVX-DN | 0.006086 | 0.006086 | -0.0 |
| 20220609 | DN | 0.0637 | 0.0637 | 0.0 |
| 20220609 | 25RR | -0.0052 | -0.0052 | -0.0 |
| 20220609 | 10CVX-DN | 0.007866 | 0.007866 | -0.0 |
| 20221209 | DN | 0.062851 | 0.062851 | 0.0 |
| 20221209 | 25RR | -0.005249 | -0.005249 | 0.0 |
| 20221209 | 10CVX-DN | 0.009732 | 0.009732 | 0.0 |
| 20231211 | DN | 0.06563 | 0.06563 | 0.0 |
| 20231211 | 25RR | -0.005664 | -0.005664 | 0.0 |
| 20231211 | 10CVX-DN | 0.011497 | 0.011497 | 0.0 |
| 20241211 | DN | 0.068425 | 0.068425 | 0.0 |
| 20241211 | 25RR | -0.00231 | -0.00231 | 0.0 |
| 20241211 | 10CVX-DN | 0.010186 | 0.010186 | -0.0 |
| 20261210 | DN | 0.073925 | 0.073925 | 0.0 |
| 20261210 | 25RR | -0.000965 | -0.000965 | 0.0 |
| 20261210 | 10CVX-DN | 0.010156 | 0.010156 | -0.0 |
| 20281211 | DN | 0.075724 | 0.075724 | 0.0 |
| 20281211 | 25RR | -0.000444 | -0.000444 | 0.0 |
| 20281211 | 10CVX-DN | 0.010157 | 0.010157 | -0.0 |
| 20311211 | DN | 0.078425 | 0.078425 | 0.0 |
| 20311211 | 25RR | -0.000425 | -0.000425 | 0.0 |
| 20311211 | 10CVX-DN | 0.010084 | 0.010084 | -0.0 |
| 20361211 | DN | 0.081425 | 0.081425 | 0.0 |
| 20361211 | 25RR | 0.000025 | 0.000025 | 0.0 |
| 20361211 | 10CVX-DN | 0.004064 | 0.004064 | -0.0 |
| 20411211 | DN | 0.091425 | 0.091425 | -0.0 |
| 20411211 | 25RR | 0.000025 | 0.000025 | -0.0 |
| 20411211 | 10CVX-DN | 0.002364 | 0.002364 | 0.0 |
| 20511211 | DN | 0.101225 | 0.101225 | -0.0 |
| 20511211 | 25RR | 0.000025 | 0.000025 | -0.0 |
| 20511211 | 10CVX-DN | 0.002064 | 0.002064 | 0.0 |

Table 18: Some of the conditions defining the DELTAVOL, together with the target values, the fitted values, and the error in the fitting. Observe that the errors are of extremely small magnitude, below 10^{-10} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 18: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/62.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 19: Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function (PDF) for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices.](./Fig/63.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 3.146e-03 | 3.146e-03 | 1.743e-11 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 1.761e-11 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -7.431e-12 |
| 20220609 | DN | 3.185e-03 | 3.263e-03 | 7.812e-05 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | -1.918e-05 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.820e-03 | -4.540e-05 |
| 20221209 | DN | 3.133e-03 | 4.017e-03 | 8.844e-04 |
| 20221209 | 25RR | -5.249e-03 | -5.426e-03 | -1.787e-04 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.242e-03 | -4.893e-04 |
| 20231211 | DN | 3.281e-03 | 4.978e-03 | 1.697e-03 |
| 20231211 | 25RR | -3.864e-03 | -4.091e-03 | -2.068e-04 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.062e-02 | -8.747e-04 |
| 20241211 | DN | 3.421e-03 | 4.620e-03 | 1.199e-03 |
| 20241211 | 25RR | -2.310e-03 | -2.400e-03 | -9.056e-05 |
| 20241211 | 10CVX-DN | 1.019e-02 | 9.586e-03 | -6.002e-04 |
| 20261210 | DN | 3.696e-03 | 4.725e-03 | 1.028e-03 |
| 20261210 | 25RR | -9.645e-04 | -1.017e-03 | -3.219e-05 |
| 20261210 | 10CVX-DN | 1.016e-02 | 9.643e-03 | -5.074e-04 |
| 20281211 | DN | 3.786e-03 | 4.754e-03 | 9.675e-04 |
| 20281211 | 25RR | -4.441e-04 | -4.577e-04 | -1.355e-05 |
| 20281211 | 10CVX-DN | 1.016e-02 | 9.681e-03 | -4.758e-04 |
| 20311211 | DN | 3.921e-03 | 4.744e-03 | 8.225e-04 |
| 20311211 | 25RR | -4.249e-04 | -4.359e-04 | -1.101e-05 |
| 20311211 | 10CVX-DN | 1.009e-02 | 9.660e-03 | -4.044e-04 |
| 20361211 | DN | 4.071e-03 | 4.071e-03 | 2.850e-15 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | 1.420e-13 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | 1.819e-14 |
| 20411211 | DN | 4.571e-03 | 4.571e-03 | 3.298e-13 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | 1.809e-12 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | -1.933e-13 |
| 20511211 | DN | 5.061e-03 | 5.061e-03 | 3.339e-14 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -3.159e-13 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | -4.783e-15 |

Table 20: Scenario 1: a relative shift of size -99.5% is applied to the DN term structure. Average fitting error for each maturity. Observe that the errors remain quite small in this extreme scenario.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 20: Scenario 1: relative shift of size -99.5% is applied to the DN term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/66.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 21: Scenario 1: Relative shift of size -99.5% is applied to the DN term structure. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. Note that in this case, due to the extreme shift which basically sets the vols contained in the DN term structure to 0, the butterfly arbitrage condition is breached at the 5Y and 7Y time point by the input DELTAVOL and consequently, by the calibrated PIV. Note the violation of the butterfly arbitrage will be flagged by the pricer due to the CFU ID 17547, ArbitrageChecker=YES.](./Fig/66.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 1.259e-02 | 1.259e-02 | 3.695e-12 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 4.914e-13 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -6.173e-12 |
| 20220609 | DN | 1.274e-02 | 1.274e-02 | 1.059e-11 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 9.117e-13 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -1.552e-11 |
| 20221209 | DN | 1.253e-02 | 1.253e-02 | 6.615e-11 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 1.783e-11 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | -1.007e-10 |
| 20231211 | DN | 1.313e-02 | 1.313e-02 | -3.407e-15 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 7.905e-14 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | -1.534e-15 |
| 20241211 | DN | 1.369e-02 | 1.369e-02 | 4.354e-11 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 4.236e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -5.366e-11 |
| 20261210 | DN | 1.479e-02 | 1.479e-02 | 1.621e-11 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 2.785e-11 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -1.627e-11 |
| 20281211 | DN | 1.514e-02 | 1.514e-02 | 1.214e-11 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | 2.650e-11 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -1.082e-11 |
| 20311211 | DN | 1.569e-02 | 1.569e-02 | 2.134e-11 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | -1.483e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -2.634e-11 |
| 20361211 | DN | 1.629e-02 | 1.629e-02 | -5.035e-13 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | -2.223e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | 1.535e-11 |
| 20411211 | DN | 1.829e-02 | 1.829e-02 | -5.251e-12 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | -6.064e-10 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 5.259e-10 |
| 20511211 | DN | 2.024e-02 | 2.024e-02 | -6.967e-15 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -8.185e-12 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | -2.247e-12 |

Table 21: Scenario 2: a relative shift of size -80% is applied to the DN term structure. Average fitting error for each maturity. Observe that the errors are very small, below 10^{-9} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 22: Scenario 2: relative shift of size -80% is applied to the DN term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/68.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 23: Scenario 2: Relative shift of size -80% is applied to the DN term structure. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the PDFs of input DELTAVOL and calibrated PIV configurations are non-negative.](./Fig/68.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| Maturity | Delta | TargetVol | FittedVol | FitError |
| 20220310 | DN | 1.259e-01 | 1.259e-01 | 2.041e-13 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 1.725e-13 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -2.833e-12 |
| 20220609 | DN | 1.274e-01 | 1.274e-01 | 7.500e-13 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 2.861e-13 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -8.474e-12 |
| 20221209 | DN | 1.253e-01 | 1.253e-01 | 1.994e-12 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 8.675e-13 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | -1.839e-11 |
| 20231211 | DN | 1.313e-01 | 1.313e-01 | -3.845e-12 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 3.424e-12 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | 2.904e-11 |
| 20241211 | DN | 1.369e-01 | 1.369e-01 | 2.195e-12 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 3.886e-12 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -1.897e-11 |
| 20261210 | DN | 1.479e-01 | 1.479e-01 | 2.265e-12 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 6.545e-12 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -1.939e-11 |
| 20281211 | DN | 1.514e-01 | 1.514e-01 | 2.613e-12 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | 9.459e-12 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -2.134e-11 |
| 20311211 | DN | 1.569e-01 | 1.569e-01 | 3.449e-12 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | 1.483e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -2.634e-11 |
| 20361211 | DN | 1.629e-01 | 1.629e-01 | -5.035e-13 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | -2.223e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | 1.535e-11 |
| 20411211 | DN | 1.829e-01 | 1.829e-01 | -5.251e-12 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | -6.064e-10 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 5.259e-10 |
| 20511211 | DN | 2.024e-01 | 2.024e-01 | -6.967e-15 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -8.185e-12 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | -2.247e-12 |

Table 22: Scenario 3: a relative shift of size +100% is applied to the DN term structure. Average fitting error for each maturity. Observe that the errors are very small, below 10^{-9} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 24: Scenario 3: relative shift of size 100% is applied to the DN term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/70.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 25: Scenario 3: Relative shift of size 100% is applied to the DN term structure. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the PDFs of input DELTAVOL and calibrated PIV configurations are non-negative.](./Fig/70.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 2.517e-01 | 2.517e-01 | -6.370e-11 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | -7.225e-11 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | 2.373e-10 |
| 20220609 | DN | 2.548e-01 | 2.548e-01 | -3.536e-11 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 2.173e-11 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | 1.065e-09 |
| 20221209 | DN | 2.506e-01 | 2.506e-01 | 5.414e-12 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 1.621e-10 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | -2.498e-11 |
| 20231211 | DN | 2.625e-01 | 2.625e-01 | 3.197e-11 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 1.866e-10 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | -5.613e-10 |
| 20241211 | DN | 2.737e-01 | 2.737e-01 | 2.433e-12 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 3.052e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -2.845e-11 |
| 20261210 | DN | 2.957e-01 | 2.957e-01 | -7.739e-10 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 2.003e-08 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | 1.246e-08 |
| 20281211 | DN | 3.028e-01 | 3.028e-01 | 2.700e-11 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | 1.905e-09 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -8.659e-09 |
| 20311211 | DN | 3.137e-01 | 3.137e-01 | 8.455e-10 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | 2.150e-08 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -3.223e-08 |
| 20361211 | DN | 3.257e-01 | 3.257e-01 | 7.165e-14 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | -9.542e-10 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | 4.419e-10 |
| 20411211 | DN | 3.657e-01 | 3.657e-01 | 9.005e-12 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | 2.492e-09 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 7.217e-10 |
| 20511211 | DN | 4.049e-01 | 4.049e-01 | -8.626e-11 |
| 20511211 | 25RR | 2.507e-05 | 2.508e-05 | 3.890e-09 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | -2.146e-09 |

Table 23: Scenario 4: a relative shift of size 300% is applied to the DN term structure. Average fitting error for each maturity. Observe that the errors are very small, below 10^{-9} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 26: Scenario 4: relative shift of size 300% is applied to the DN term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/72.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 27: Scenario 4: Relative shift of size 300% is applied to the DN term structure. Butterfly arbitrage exists if the probability density function (PDF) for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV configurations are non-negative.](./Fig/72.png)

#### 4.4.3 Robustness of PIV Autofitting under stressed Market scenarios - CVX shifts

We examine the robustness of the PIV Autofitting engine under stressed market regimes. To this purpose, we consider a series of scenarios where we apply a series of extreme relative shifts to the input parameters of the CVX term structure contained in the input DELTAVOL object.

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 3.186e-13 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 5.651e-12 |
| 20220310 | 10CVX-DN | 3.043e-04 | 3.043e-04 | 9.092e-11 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 5.671e-13 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 1.626e-11 |
| 20220609 | 10CVX-DN | 3.933e-04 | 3.933e-04 | 1.038e-10 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 3.965e-13 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 1.645e-11 |
| 20221209 | 10CVX-DN | 4.866e-04 | 4.866e-04 | 1.085e-10 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | -3.633e-13 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 6.961e-12 |
| 20231211 | 10CVX-DN | 5.749e-04 | 5.749e-04 | 7.365e-11 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | -4.626e-13 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 8.243e-13 |
| 20241211 | 10CVX-DN | 5.093e-04 | 5.093e-04 | 5.542e-11 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | -3.884e-13 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | -3.024e-12 |
| 20261210 | 10CVX-DN | 5.078e-04 | 5.078e-04 | 3.743e-11 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 3.712e-13 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | -4.590e-12 |
| 20281211 | 10CVX-DN | 5.078e-04 | 5.078e-04 | 3.837e-11 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | -3.687e-13 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | -5.471e-12 |
| 20311211 | 10CVX-DN | 5.032e-04 | 5.032e-04 | 3.239e-11 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | -1.043e-13 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | -1.865e-11 |
| 20361211 | 10CVX-DN | 2.032e-04 | 2.032e-04 | 2.981e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -3.980e-14 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | -2.032e-11 |
| 20411211 | 10CVX-DN | 1.182e-04 | 1.182e-04 | 2.089e-11 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 2.917e-14 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -2.997e-11 |
| 20511211 | 10CVX-DN | 1.032e-04 | 1.032e-04 | 1.938e-11 |

Table 25: Scenario 1: a relative shift of size -99.5% is applied to the CVX term structure. Observe that the error sizes remain relatively small in this extreme scenario.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 28: Scenario 1: relative shift of size -99.5% is applied to the CVX term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/75.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 29: Scenario 1: Relative shift of size -99.5% is applied to the CVX term structure contained in the input DELTAVOL. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/75.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| Maturity | Delta | TargetVol | FittedVol | FitError |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 1.279e-12 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 4.625e-12 |
| 20220310 | 10CVX-DN | 1.217e-03 | 1.217e-03 | 6.519e-11 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 9.647e-13 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 1.252e-11 |
| 20220609 | 10CVX-DN | 1.573e-03 | 1.573e-03 | 7.238e-11 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | -1.074e-12 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 1.149e-11 |
| 20221209 | 10CVX-DN | 1.946e-03 | 1.946e-03 | 5.981e-11 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | -6.279e-13 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 4.209e-12 |
| 20231211 | 10CVX-DN | 2.299e-03 | 2.299e-03 | 2.443e-11 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | -7.399e-13 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 1.563e-12 |
| 20241211 | 10CVX-DN | 2.037e-03 | 2.037e-03 | 2.346e-11 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | -6.150e-13 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 9.095e-13 |
| 20261210 | 10CVX-DN | 2.031e-03 | 2.031e-03 | 1.772e-11 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | -5.957e-13 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | -1.857e-12 |
| 20281211 | 10CVX-DN | 2.031e-03 | 2.031e-03 | 1.665e-11 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | -5.566e-13 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | -2.423e-12 |
| 20311211 | 10CVX-DN | 2.013e-03 | 2.013e-03 | 1.516e-11 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | -3.657e-13 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | -1.579e-11 |
| 20361211 | 10CVX-DN | 8.129e-04 | 8.129e-04 | 2.619e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -1.550e-13 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | -1.882e-11 |
| 20411211 | 10CVX-DN | 4.729e-04 | 4.729e-04 | 1.979e-11 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | -1.168e-13 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -2.813e-11 |
| 20511211 | 10CVX-DN | 4.129e-04 | 4.129e-04 | 1.856e-11 |

Table 26: Scenario 2: a relative shift of size -80% is applied to the CVX term structure. Observe that the error sizes remain relatively small in this extreme scenario.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 30: Scenario 2: relative shift of size -80% is applied to the CVX term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/77.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 31: Scenario 2: Relative shift of size -80% is applied to the CVX term structure contained in the input DELTAVOL. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/77.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 2.745e-14 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 1.213e-14 |
| 20220310 | 10CVX-DN | 1.217e-02 | 1.217e-02 | -1.386e-14 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 7.079e-14 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 4.945e-14 |
| 20220609 | 10CVX-DN | 1.573e-02 | 1.573e-02 | -7.814e-14 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 2.480e-13 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 3.059e-13 |
| 20221209 | 10CVX-DN | 1.946e-02 | 1.946e-02 | 3.338e-13 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 4.166e-13 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 6.440e-13 |
| 20231211 | 10CVX-DN | 2.299e-02 | 2.299e-02 | -4.622e-13 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.419e-13 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 3.845e-13 |
| 20241211 | 10CVX-DN | 2.037e-02 | 2.037e-02 | -5.969e-14 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 6.847e-14 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 2.591e-13 |
| 20261210 | 10CVX-DN | 2.031e-02 | 2.031e-02 | 4.492e-14 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 5.863e-14 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | 2.565e-13 |
| 20281211 | 10CVX-DN | 2.031e-02 | 2.031e-02 | 6.611e-14 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 4.369e-14 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | 2.241e-13 |
| 20311211 | 10CVX-DN | 2.013e-02 | 2.013e-02 | 7.701e-14 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 2.247e-11 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | 8.962e-11 |
| 20361211 | 10CVX-DN | 8.129e-03 | 8.129e-03 | -1.867e-10 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | 1.350e-12 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | 1.553e-11 |
| 20411211 | 10CVX-DN | 4.723e-03 | 4.723e-03 | -1.914e-11 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 4.542e-13 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | -1.049e-11 |
| 20511211 | 10CVX-DN | 4.129e-03 | 4.129e-03 | -8.030e-12 |

Table 27: Scenario 3: a relative shift of size 100% is applied to the CVX term structure. Observe that the errors are very small, below 10^{-9} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 32: Scenario 3: relative shift of size 100% is applied to the CVX term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/79.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 33: Scenario 3: Relative shift of size 100% is applied to the CVX term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/79.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 9.902e-13 |
| 20220310 | 25RR | -2.112e-03 | -2.112e-03 | 5.733e-13 |
| 20220310 | 10CVX-DN | 2.434e-02 | 2.434e-02 | -1.150e-12 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 4.005e-12 |
| 20220609 | 25RR | -5.200e-03 | -5.200e-03 | 3.098e-12 |
| 20220609 | 10CVX-DN | 3.146e-02 | 3.146e-02 | -3.941e-12 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 2.110e-11 |
| 20221209 | 25RR | -5.249e-03 | -5.249e-03 | 1.992e-11 |
| 20221209 | 10CVX-DN | 3.893e-02 | 3.893e-02 | -1.851e-11 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 4.417e-11 |
| 20231211 | 25RR | -3.864e-03 | -3.864e-03 | 5.760e-11 |
| 20231211 | 10CVX-DN | 4.599e-02 | 4.599e-02 | -3.279e-11 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.111e-11 |
| 20241211 | 25RR | -2.310e-03 | -2.310e-03 | 2.251e-11 |
| 20241211 | 10CVX-DN | 4.074e-02 | 4.074e-02 | -6.655e-12 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 4.607e-12 |
| 20261210 | 25RR | -9.645e-04 | -9.645e-04 | 1.409e-11 |
| 20261210 | 10CVX-DN | 4.063e-02 | 4.063e-02 | 1.207e-12 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 3.712e-12 |
| 20281211 | 25RR | -4.441e-04 | -4.441e-04 | 1.348e-11 |
| 20281211 | 10CVX-DN | 4.063e-02 | 4.063e-02 | -2.792e-13 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 2.545e-12 |
| 20311211 | 25RR | -4.249e-04 | -4.249e-04 | 1.111e-11 |
| 20311211 | 10CVX-DN | 4.026e-02 | 4.026e-02 | 4.159e-13 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 1.235e-14 |
| 20361211 | 25RR | 2.507e-05 | 2.507e-05 | 1.453e-13 |
| 20361211 | 10CVX-DN | 1.626e-02 | 1.626e-02 | 1.004e-13 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | 2.141e-11 |
| 20411211 | 25RR | 2.507e-05 | 2.507e-05 | 1.158e-10 |
| 20411211 | 10CVX-DN | 9.458e-03 | 9.458e-03 | -1.692e-10 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 1.033e-11 |
| 20511211 | 25RR | 2.507e-05 | 2.507e-05 | 1.112e-10 |
| 20511211 | 10CVX-DN | 8.258e-03 | 8.258e-03 | -1.033e-10 |

Table 28: Scenario 4: a relative shift of size 300% is applied to the CVX term structure. Observe that the errors are very small, below 10^{-10} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 34: Scenario 4: relative shift of size 300% is applied to the CVX term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/81.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 35: Relative shift of size 300% is applied to the CVX term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the pdf of the underlying, implied from volatility surface, has regions where it is negative. One can see that this condition is not violated in the considered slices - the pdf of the calibrated PIV remains non-negative. However, the implied pdf of the DELTAVOL becomes in this example negative due to the extreme shifts. The butterfly arbitrage will be flagged by the pricer due to CFU ID 17547, ArbitrageChecker=YES.](./Fig/81.png)

#### 4.4.4 Robustness of PIV Autofitting under stressed Market scenarios - RR shifts

We examine the robustness of the PIV Autofitting engine under stressed market regimes. To this purpose, we consider a series of scenarios where we apply a series of extreme relative shifts to the input parameters of the RR term structure contained in the

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 4.100e-11 |
| 20220310 | 25RR | -1.056e-04 | -1.056e-04 | 5.504e-12 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -3.832e-10 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 9.362e-11 |
| 20220609 | 25RR | -2.600e-04 | -2.600e-04 | 1.305e-11 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -6.966e-10 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 1.089e-14 |
| 20221209 | 25RR | -2.624e-04 | -2.624e-04 | 1.265e-14 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | 1.013e-14 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 1.500e-14 |
| 20231211 | 25RR | -1.943e-04 | -1.943e-04 | 2.778e-14 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | 1.685e-14 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.436e-10 |
| 20241211 | 25RR | -1.155e-04 | -1.155e-04 | 5.554e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -6.801e-10 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 7.884e-11 |
| 20261210 | 25RR | -4.924e-05 | -4.924e-05 | 4.904e-11 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -5.026e-10 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 8.670e-11 |
| 20281211 | 25RR | -2.221e-05 | -2.221e-05 | 5.293e-11 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -4.279e-10 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 5.099e-11 |
| 20311211 | 25RR | -2.125e-05 | -2.125e-05 | 5.384e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -3.319e-10 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 1.267e-12 |
| 20361211 | 25RR | 1.254e-06 | 1.254e-06 | 1.074e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | -1.933e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -3.388e-13 |
| 20411211 | 25RR | 1.254e-06 | 1.254e-06 | -7.673e-12 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 9.142e-12 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 3.293e-13 |
| 20511211 | 25RR | 1.254e-06 | 1.254e-06 | -1.505e-11 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | 1.103e-11 |

Table 30: Scenario 1: a relative shift of size -95% is applied to the RR term structure. Observe that the errors are very small, below 10^{-10} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 36: Scenario 1: relative shift of size -95% is applied to the RR term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/84.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 37: Scenario 1: Relative shift of size -95% is applied to the RR term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/84.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 4.099e-11 |
| 20220310 | 25RR | -4.224e-04 | -4.224e-04 | 3.615e-12 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -3.833e-10 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 9.334e-11 |
| 20220609 | 25RR | -1.040e-03 | -1.040e-03 | 4.848e-12 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -6.962e-10 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 1.055e-14 |
| 20221209 | 25RR | -1.050e-03 | -1.050e-03 | 1.162e-14 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | 8.788e-15 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 1.457e-14 |
| 20231211 | 25RR | -7.769e-04 | -7.769e-04 | 2.697e-14 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | 1.565e-14 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.437e-10 |
| 20241211 | 25RR | -4.619e-04 | -4.619e-04 | 5.121e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -6.819e-10 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 7.891e-11 |
| 20261210 | 25RR | -1.970e-04 | -1.970e-04 | 4.804e-11 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -5.033e-10 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 8.674e-11 |
| 20281211 | 25RR | -8.882e-05 | -8.882e-05 | 5.257e-11 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -4.281e-10 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 5.103e-11 |
| 20311211 | 25RR | -8.499e-05 | -8.499e-05 | 5.359e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -3.322e-10 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 1.266e-12 |
| 20361211 | 25RR | 5.015e-06 | 5.015e-06 | 1.072e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | -1.931e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -3.392e-13 |
| 20411211 | 25RR | 5.015e-06 | 5.015e-06 | -7.685e-12 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 9.153e-12 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 3.295e-13 |
| 20511211 | 25RR | 5.015e-06 | 5.015e-06 | -1.507e-11 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | 1.104e-11 |

Table 31: Scenario 2: a relative shift of size -80% is applied to the RR term structure. Observe that the errors are very small, below 10^{-10} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 38: Scenario 2: relative shift of size -80% is applied to the RR term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/86.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 39: Scenario 2: Relative shift of size -80% is applied to the RR term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/86.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 4.099e-11 |
| 20220310 | 25RR | -4.224e-04 | -4.224e-04 | 3.615e-12 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -3.833e-10 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 9.334e-11 |
| 20220609 | 25RR | -1.040e-03 | -1.040e-03 | 4.848e-12 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -6.962e-10 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 1.055e-14 |
| 20221209 | 25RR | -1.050e-03 | -1.050e-03 | 1.162e-14 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | 8.788e-15 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 1.457e-14 |
| 20231211 | 25RR | -7.769e-04 | -7.769e-04 | 2.697e-14 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | 1.565e-14 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.437e-10 |
| 20241211 | 25RR | -4.619e-04 | -4.619e-04 | 5.121e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -6.819e-10 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 7.891e-11 |
| 20261210 | 25RR | -1.970e-04 | -1.970e-04 | 4.804e-11 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -5.033e-10 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 8.674e-11 |
| 20281211 | 25RR | -8.882e-05 | -8.882e-05 | 5.257e-11 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -4.281e-10 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 5.103e-11 |
| 20311211 | 25RR | -8.499e-05 | -8.499e-05 | 5.359e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -3.322e-10 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 1.266e-12 |
| 20361211 | 25RR | 5.015e-06 | 5.015e-06 | 1.072e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | -1.931e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -3.392e-13 |
| 20411211 | 25RR | 5.015e-06 | 5.015e-06 | -7.685e-12 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 9.153e-12 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 3.295e-13 |
| 20511211 | 25RR | 5.015e-06 | 5.015e-06 | -1.507e-11 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | 1.104e-11 |

Table 32: Scenario 3: a relative shift of size 100% is applied to the RR term structure.Observe that the errors are very small, below 10^{-10} in the majority of cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 40: Scenario 3: relative shift of size 100% is applied to the RR term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/88.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 41: Scenario 3: Relative shift of size 100% is applied to the RR term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices - the probability density functions of input DELTAVOL and calibrated PIV are non-negative.](./Fig/88.png)

| Maturity | Condition | Target Value | Fitted Value | Error |
| --- | --- | --- | --- | --- |
| 20220310 | DN | 6.292e-02 | 6.292e-02 | 4.099e-11 |
| 20220310 | 25RR | -4.224e-04 | -4.224e-04 | 3.615e-12 |
| 20220310 | 10CVX-DN | 6.086e-03 | 6.086e-03 | -3.833e-10 |
| 20220609 | DN | 6.370e-02 | 6.370e-02 | 9.334e-11 |
| 20220609 | 25RR | -1.040e-03 | -1.040e-03 | 4.848e-12 |
| 20220609 | 10CVX-DN | 7.866e-03 | 7.866e-03 | -6.962e-10 |
| 20221209 | DN | 6.285e-02 | 6.285e-02 | 1.055e-14 |
| 20221209 | 25RR | -1.050e-03 | -1.050e-03 | 1.162e-14 |
| 20221209 | 10CVX-DN | 9.732e-03 | 9.732e-03 | 8.788e-15 |
| 20231211 | DN | 6.563e-02 | 6.563e-02 | 1.457e-14 |
| 20231211 | 25RR | -7.769e-04 | -7.769e-04 | 2.697e-14 |
| 20231211 | 10CVX-DN | 1.150e-02 | 1.150e-02 | 1.565e-14 |
| 20241211 | DN | 6.843e-02 | 6.843e-02 | 1.437e-10 |
| 20241211 | 25RR | -4.619e-04 | -4.619e-04 | 5.121e-11 |
| 20241211 | 10CVX-DN | 1.019e-02 | 1.019e-02 | -6.819e-10 |
| 20261210 | DN | 7.392e-02 | 7.392e-02 | 7.891e-11 |
| 20261210 | 25RR | -1.970e-04 | -1.970e-04 | 4.804e-11 |
| 20261210 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -5.033e-10 |
| 20281211 | DN | 7.572e-02 | 7.572e-02 | 8.674e-11 |
| 20281211 | 25RR | -8.882e-05 | -8.882e-05 | 5.257e-11 |
| 20281211 | 10CVX-DN | 1.016e-02 | 1.016e-02 | -4.281e-10 |
| 20311211 | DN | 7.842e-02 | 7.842e-02 | 5.103e-11 |
| 20311211 | 25RR | -8.499e-05 | -8.499e-05 | 5.359e-11 |
| 20311211 | 10CVX-DN | 1.009e-02 | 1.009e-02 | -3.322e-10 |
| 20361211 | DN | 8.142e-02 | 8.142e-02 | 1.266e-12 |
| 20361211 | 25RR | 5.015e-06 | 5.015e-06 | 1.072e-11 |
| 20361211 | 10CVX-DN | 4.064e-03 | 4.064e-03 | -1.931e-11 |
| 20411211 | DN | 9.142e-02 | 9.142e-02 | -3.392e-13 |
| 20411211 | 25RR | 5.015e-06 | 5.015e-06 | -7.685e-12 |
| 20411211 | 10CVX-DN | 2.364e-03 | 2.364e-03 | 9.153e-12 |
| 20511211 | DN | 1.012e-01 | 1.012e-01 | 3.295e-13 |
| 20511211 | 25RR | 5.015e-06 | 5.015e-06 | -1.507e-11 |
| 20511211 | 10CVX-DN | 2.064e-03 | 2.064e-03 | 1.104e-11 |

Table 33: Scenario 4: a relative shift of size 300% is applied to the RR term structure. Observe that the errors are greater in this extreme case, but still quite small.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 42: Scenario 4: relative shift of size 300% is applied to the RR term structure. Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV fitted to this volatility. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/90.png)

In the following figures we examine for the existence of the butterfly arbitrage:

![Figure 43: Scenario 4: Relative shift of size 300% is applied to the RR term structure contained in the input DELTAVOL. Checking for butterfly arbitrage. Butterfly arbitrage exists if the probability density function for the underlying that is implied by the volatility surface has regions where it is negative. One can see that this condition is not violated in the considered slices, as the probability density function of the calibrated PIV remains non-negative - although the input DELTAVOL surface is in this case arbitrageable, since the pdf of the input DELTAVOL surface becomes negative in this extreme scenario.](./Fig/90.png)

## 4.5 Product testing: FXEuroOpt

In this section we test an FXEuroOpt product in two model configurations ([PIV] (default) and [AJTQ]). FXEuroOpt represents a European put option with maturity date T= 18/03/2025:

$$V(T) = (K - S_T)^+$$

where S represents the USD/EUR exchange rate and the strike is K = 1.2005. The valuation date of FXEuroOpt is 09/12/2021. The notional of FXEuroOpt is -25 (ReportingUnit=M) and the option's pay currency is USD.
The option is booked in DBAnalytics as SECURITY object of type EGOPT. The pricing dictionary contains a DBAnalytics VOL object of type VolName=DBOVOL storing the spot FX information: S₀ = 1.1301000648[13], a DBAnalytics VOL object of type VolName=MARKETVOL storing the FX volatility information with InputMode=DELTAVOL as well as a MODELVOL object with InputMode "PARAMETRICVOL". The testing is performed in DBAnalytics version 1110.

### 4.5.1 EOD testing: Price and Risk Sensitivities

We examine the behaviour of the price and risk sensitivities (FX delta, IR delta and vega) when relative or absolute shifts are applied to the market data of various model parameters representing the FX spot, FX rate volatility and interest rate curves.

Additional testing can be found in reference [28], Sorin Nedescu and Emiliano Papa doc [2021; 2021March19-Nedersor-18936], which in particular includes model configuration comparison testing.

##### 4.5.1.1 Stress test: FX Spot Shifts The PV and risk sensitivity profiles under FX spot shifts (as shown in Figure 44) are well behaved and as expected.

[13] i.e. 1 EUR = 1.13 USD

![Figure 44: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX spot shifts. The PV and risk sensitivities are well behaved and as expected.](./Fig/92.png)

##### 4.5.1.2 Stress test: FX Volatility Shifts The PV and risk sensitivity profiles under FX volatility shifts (as shown in Figures 45) are well behaved and as expected.

![Figure 45: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX volatility shifts. The PV and risk sensitivities are well behaved and as expected.](./Fig/93.png)

##### 4.5.1.3 Stress test: Domestic IR Curve Shifts The PV and risk sensitivity profiles under domestic curve shifts (as shown in Figures 46) are well behaved and as expected.

![Figure 46: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of domestic (USD) curve. The PV and risk sensitivities are well behaved and as expected.](./Fig/94.png)

##### 4.5.1.4 Stress test: Foreign IR Curve Shifts The PV and risk sensitivity profiles under foreign curve shifts (as shown in Figures 47) are well behaved and as expected.

![Figure 47: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of foreign (EUR) curve. The PV and risk sensitivities are well behaved and as expected.](./Fig/95.png)

### 4.5.2 IRRBB Testing

In this section, we test the stability of the trade under the IRRBB scenarios in comparison to the Base scenario.

#### 4.5.2.1 Scenario Curves

The scenario curves for the rates affecting this product are shown in Figure 48. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 48: (Left) USD zero rate under Base and IRRBB scenarios (Right) EUR zero rate under Base and IRRBB scenarios.](./Fig/96.png)

#### 4.5.2.2 Stress Testing

USD/EUR FX Spot Shifts The PV and main risk sensitivity profiles (as shown in Figure 49) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 49: PV and FXDELTA as a function of relative FX spot shifts for the Base and all IRRBB scenarios. As there are shocks only for the curves, the behavior for shifting the FX Spot rate is not much impacted by the IRRBB scenarios. The PV and FXDELTA are well behaved and as expected.](./Fig/96.png)

USD/EUR FX volatility Shifts The PV and main risk sensitivity profiles (as shown in Figure 50) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 50: PV and FXVEGA as a function of relative FX volatility shifts for the Base and all IRRBB scenarios. The PV and FXVEGA are well behaved and as expected.](./Fig/97.png)

Domestic (USD) IR Curve Shifts The PV and main risk sensitivity profiles (as shown in Figures 51) are well behaved and as expected under domestic curve shifts for each scenario.

![Figure 51: PV and FLATDELTA as a function of parallel shift of the domestic (USD) curve for the Base and all IRRBB scenarios. The PV and FLATDELTA are well behaved and as expected.](./Fig/97.png)

Foreign (EUR) IR Curve Shifts The PV and main risk sensitivity profiles (as shown in Figures 52) are well behaved and as expected under foreign curve shifts for each scenario.

![Figure 52: PV and FLATDELTA as a function of parallel shift of the foreign (EUR) curve for the Base and all IRRBB scenarios. The PV and FLATDELTA are well behaved and as expected.](./Fig/98.png)

### 4.5.3 CCAR Testing

The stability of the PV and main risk sensitivities of the FXEuroOpt trade under relevant curve, FX spot and volatility shifts for the Base and CCAR 2022 scenarios are tested.

#### 4.5.3.1 Scenario Curves 

The zero rate curves for each scenario are shown in Figure 53.

![Figure 53: (Left) USD zero rate under Base and CCAR scenarios (Right) EUR zero rate under Base and CCAR scenarios.](./Fig/98.png)

#### 4.5.3.2 Stress Testing

USD/EUR FX Spot Shifts The PV and risk sensitivity profiles (as shown in Figure 54) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 54: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX spot shifts for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/99.png)

USD/EUR FX Volatility Shifts The PV and risk sensitivity profiles (as shown in Figure 55) are well behaved and as expected under FX volatility shifts for each scenario.

![Figure 55: PV and FXVEGA as a function of relative FX volatility shifts for the Base and CCAR scenarios. The PV and FXVEGA are well behaved and as expected.](./Fig/100.png)

Domestic (USD) IR Curve Shifts The PV and risk sensitivity profiles (as shown in Figures 56) are well behaved and as expected under domestic curve shifts for each scenario.

![Figure 56: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of the domestic (USD) curve for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/101.png)

Foreign (EUR) IR Curve Shifts The PV and risk sensitivity profiles (as shown in Figures 57) are well behaved and as expected under foreign curve shifts for each scenario.

![Figure 57: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of the foreign (EUR) curve for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/102.png)

### 4.5.4 MultiVaR Testing

We take the maximum and minimum bumps for the risk factors used by the product and apply the maximum and minimum price movements observed for the historical simulation (SIVAR model). We test that as we move towards these simultaneously (i.e. moving all risk factor at once) the present value is stable and well-behaved. The test is passed.

![Figure 58: Behaviour of FXEuroOpt in MultiVar test.](./Fig/103.png)

## 4.6 Product testing: FXDigitalOpt

A digital option is an option where a fixed payout is made under the conditions specified in the option's contract. For FXDigitalOpt with OptionType="BINARYPUT", if the FX spot rate is smaller than the strike value, the payoff is fixed at the notional value. However, if the FX spot rate is larger than the strike, the payoff is 0. The payoff for this product can be described as below:

$$Notional \cdot 1_{\{S_T<K\}}$$

where $S_T$ is the FX rate, K is the strike.

The trade has the following features:

• The ValuationDate is on 2021-12-09. The ExerciseStart and ExerciseEnd dates are both on 2024-01-17.
• The PayCurrency is EUR, which is foreign ccy. The Notional is 15 M.
• The underlying rate is USD/EUR FX rate. The SpotFX value is 1.1291999646. The strike value is 1.25.

To better understand the product, firstly, the PayCurrency is set to "DOMESTIC" (i.e. USD) to show a standard digital put option. Then, the impact of volatility on PV, FXDELTA and FXVEGA while relatively shifting the SpotFX value is investigated as shown in Figure 59. As volatility decreases from 150% to 50% the market volatility, the PV transition at strike becomes sharper and therefore FXDELTA becomes more dramatic in value. FXVEGA should be negative when SpotFX is smaller than strike and positive when SpotFX is larger than strike. This is what is exactly observed in Figure 59.

![Figure 59: PV, FXDELTA and FXVEGA as a function of relative FX spot shift under 50%, 150% and original market volatility. PayCurrency is set to domestic - USD.](./Fig/104.png)

Now, the PayCurrency is changed back to the original - EUR. Figure 60 shows the PV is a function of FX spot rate.

![Figure 60: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX spot shifts. The PV and risk sensitivities are well behaved and as expected.](./Fig/106.png)

### 4.6.1.2 Stress test: FX Volatility Shifts 

The PV and risk sensitivity profiles under FX volatility shifts (as shown in Figures 62) are well behaved and as expected.

![Figure 62: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX volatility shifts. The PV and risk sensitivities are well behaved and as expected.](./Fig/107.png)

### 4.6.1.3 Stress test: Domestic IR Curve Shifts 

The PV and risk sensitivity profiles under domestic curve shifts (as shown in Figures 63) are well behaved and as expected.

![Figure 63: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of domestic (USD) curve. The PV and risk sensitivities are well behaved and as expected.](./Fig/108.png)

### 4.6.1.4 Stress test: Foreign IR Curve Shifts 

The PV and risk sensitivity profiles under foreign curve shifts (as shown in Figures 64) are well behaved and as expected.

![Figure 64: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of foreign (EUR) curve. The PV and risk sensitivities are well behaved and as expected.](./Fig/109.png)

### 4.6.2 IRRBB Testing

In this section we perform the IRRBB stress testing for FXDigitalOpt product.The ten IRRBB scenarios are intended to reflect currency-specific interest rate shocks and are the following:

1. Parallel shock up,
2. Parallel shock down,
3. Steepener shock (short rate down and long rates up),
4. Steepener negative shock (opposite Steepener shift),
5. Flattener shock (short rates up and long rates down),
6. Flattener negative shock (opposite Flattener shift),
7. Short Rates shock up,
8. Short Rates shock down,
9. Long Rates shock up,
10. Short Rates shock down.

#### 4.6.2.1 Scenario Curves

The scenario curves for the rates affecting this product are shown in Figure 65. The effects of each scenario are as expected by their names, for example the parallel up is a parallel shift of the base curve.

![Figure 65: (Left) USD zero rate under Base and IRRBB scenarios (Right) EUR zero rate under Base and IRRBB scenarios.](./Fig/110.png)

#### 4.6.2.2 Stress Testing

USD/EUR FX Spot Shifts The PV and main risk sensitivity profiles (as shown in Figure 66) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 66: PV and FXDELTA as a function of relative FX spot shifts for the Base and all IRRBB scenarios. As there are shocks only for the curves, the behavior for shifting the FX Spot rate is not much impacted by the IRRBB scenarios. The PV and FXDELTA are well behaved and as expected.](./Fig/111.png)

USD/EUR FX volatility Shifts The PV and main risk sensitivity profiles (as shown in Figure 67) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 67: PV and FXVEGA as a function of relative FX volatility shifts for the Base and all IRRBB scenarios. The PV and FXVEGA are well behaved and as expected.](./Fig/111.png)

Domestic (USD) IR Curve Shifts The PV and main risk sensitivity profiles (as shown in Figures 68) are well behaved and as expected under domestic curve shifts for each scenario.

![Figure 68: PV and FLATDELTA as a function of parallel shift of the domestic (USD) curve for the Base and all IRRBB scenarios. The PV and FLATDELTA are well behaved and as expected.](./Fig/112.png)

Foreign (EUR) IR Curve Shifts The PV and main risk sensitivity profiles (as shown in Figures 69) are well behaved and as expected under foreign curve shifts for each scenario.

![Figure 69: PV and FLATDELTA as a function of parallel shift of the foreign (EUR) curve for the Base and all IRRBB scenarios. The PV and FLATDELTA are well behaved and as expected.](./Fig/112.png)

### 4.6.3 CCAR Testing

For the purpose of this validation, CCAR market data objects are treated as given inputs and the main objective is to test the behaviour of a product-model pair in the CCAR stressed pricing contexts.
The latest CCAR stress scenario testing was performed in Q3 2022 using the CCAR2022 shock objects provided by Market Risk and using DBAnalytics version 1110. For the purpose of this validation, CCAR market data objects are treated as given inputs and the main objective is to test the behaviour of a product-model pair in the CCAR stressed pricing contexts including convergence and stability of the returned PV and risk sensitivities. We consider three separate scenarios in testing:

1. Base Scenario: This is the market data used in end of day pricing on the valuation date and it is presented in this section only for comparison purposes.

2. CCAR 1: This is the Asset Bubble Burst - 2022 scenario. In terms of the market data relevant to the testing product, shocks are applied to all relevant objects in the EOD pricing dictionary as given by Market Risk.

3. CCAR 2: This is the severe adverse 2022 FRB CCAR scenario. In terms of the market data relevant to the testing product, shocks are applied to all relevant objects in the EOD pricing dictionary as given by Market Risk.

The tests examine the stability of the PV profile and of the risk sensitivity profiles under shifts of the main risk factors: domestic and foreign interest rate curves, FX spot rate and FX rate volatility.

#### 4.6.3.1 Scenario Curves 

The zero rate curves for each scenario are shown in Figure 70.

![Figure 70: (Left) USD zero rate under Base and CCAR scenarios (Right) EUR zero rate under Base and CCAR scenarios.](./Fig/113.png)

#### 4.6.3.2 Stress Testing

USD/EUR FX Spot Shifts The PV and risk sensitivity profiles (as shown in Figure 71) are well behaved and as expected under FX spot shifts for each scenario.

![Figure 71: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX spot shifts for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/114.png)

USD/EUR FX Volatility Shifts The PV and risk sensitivity profiles (as shown in Figure 72) are well behaved and as expected under FX volatility shifts for each scenario.

![Figure 72: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of relative FX volatility shifts for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/115.png)

Domestic (USD) IR Curve Shifts The PV and risk sensitivity profiles (as shown in Figures 73) are well behaved and as expected under domestic curve shifts for each scenario.

![Figure 73: PV, FXVEGA, FLATDELTA, FXDELTA and FXGAMMA as a function of parallel shift of the domestic (USD) curve for the Base and CCAR scenarios. The PV and risk sensitivities are well behaved and as expected.](./Fig/116.png)

Foreign (EUR) IR Curve Shifts The PV and risk sensitivity profiles (as shown in Figures 74) are well behaved and as expected under foreign curve shifts for each scenario.

The following figures display the behaviour of the PV and risk sensitivities of FXGeometricBasketOpt in EOD and CCAR scenarios under shifts applied to the EUR/GBP FX spot:

![Figure 122: Behaviour of FXGeometricBasketOpt PV and risk sensitivities (FX delta, IR delta and vega) in the Base (EOD) scenario vs CCAR scenarios when relative spot shifts are applied to the EUR/GBP FX spot - shift sizes ranging from -90% to 200% applied in increments of 10%](./Fig/49.png)

The following figures display the behaviour of the PV and risk sensitivities of FXGeometricBasketOpt in EOD and CCAR scenarios under shifts applied to the EUR/USD FX spot:

![Figure 123: Behaviour of FXGeometricBasketOpt PV and risk sensitivities (FX delta, IR delta and vega) in the Base (EOD) scenario vs CCAR scenarios when relative spot shifts are applied to the EUR/USD FX spot - shift sizes ranging from -90% to 200% applied in increments of 10%](./Fig/50.png)

![Figure 124: Behaviour of FXGeometricBasketOpt PV and risk sensitivities (FX delta, IR delta and vega) in the Base (EOD) scenario vs CCAR scenarios when relative vol shifts are applied to the EUR/GBP FX spot - shift sizes ranging from -90% to 200% applied in increments of 10%](./Fig/51.png)

The following figures display the behaviour of the PV and risk sensitivities of FXGeometricBasketOpt in EOD and CCAR scenarios under shifts applied to the EUR/USD FX vol:

![Figure 125: Behaviour of FXGeometricBasketOpt PV and risk sensitivities (FX delta, IR delta and vega) in the Base (EOD) scenario vs CCAR scenarios when relative vol shifts are applied to the EUR/USD FX spot - shift sizes ranging from -90% to 200% applied in increments of 10%](./Fig/52.png)

### 4.7.4 MultiVar Testing

We take the maximum and minimum bumps for the risk factors used by the product FXGeometricBasketOpt and apply the maximum and minimum price movements observed for the historical simulation S-VAR model. We test that as we move towards these simultaneously (i.e., moving all risk factor at once) the present value is stable and well behaved. The test is passed. Note that care must be taken when applying simultaneous shocks to the input volatilities. Even if the shift size does not make the volatility negative, they might affect the correlations between risk factors (computed based on the input volatilities) making them exit the interval [-1, 1], thus, making the scenario nonsensical.

![Figure 126: Behaviour of FXGeometricBasketOpt in MultiVar test. The EOD (starting) price is 7.08](./Fig/53.png)

## 4.8 Model Parameter Testing

In this section, we document and test some of the parameters deemed as relevant for the present model, as provided in MARS request 2020Jun12-RIEUPIE-14633 as part of Model Parameter Monitoring(MPM) rules validation. The detailed list of the parameter rules can be found in the file "20200612_dbsmc_mktvol.xlsx" attached to the MARS request. An overview of the model parameters, their rule and the validation of these parameters is given in the following tables. Note that for reasons of brevity, we have shortened the rules.

| Rule | MinCondition | ParameterLabel | Operator | Value | Section |
| --- | --- | --- | --- | --- | --- |
| 0001 | NO | ResultType | IN | LIST* |  |
| 0002 | YES | ResultType | EQUAL_TO | P/VAUTOFIT | 4.8.20 |
| 0002 | NO | JUMPINTENSITY | IN | JUMPINTENSITY.VOL |  |
| 0002 | NO | SKEW | EQUAL_TO | SKEW |  |
| 0002 | NO | SMILE | EQUAL_TO | SMILE |  |
| 0002 | NO | :power | EQUAL_TO | :power |  |
| 0002 | NO | UpperBound::JUMPINTENSITY | PASS | nan |  |
| 0002 | NO | UpperBound::SKEW | PASS | nan |  |
| 0002 | NO | Constraints::UpperBound::SMILE | PASS | nan |  |
| 0002 | NO | Constraints::UpperBound::power | PASS | nan |  |
| 0002 | NO | Constraints::LowerBound::JUMPINTENSITY | PASS | nan |  |
| 0002 | NO | Constraints::LowerBound::SKEW | PASS | nan |  |
| 0002 | NO | Constraints::LowerBound::SMILE | PASS | nan |  |
| 0002 | NO | Constraints::LowerBound::power | PASS | nan |  |
| 0002 | NO | Constraints::Frozen::JUMPINTENSITY | IN | YES,NO |  |
| 0002 | NO | Constraints::Frozen::SKEW | IN | YES,NO |  |
| 0002 | NO | Constraints::Frozen::SMILE | IN | YES,NO |  |
| 0002 | NO | Constraints::Frozen::power | IN | YES,NO |  |
| 0002 | NO | ParameterName::MaxFilterations | EQUAL_TO | MaxFilterations |  |
| 0002 | NO | ParameterName::StepTolerance | EQUAL_TO | StepTolerance |  |
| 0002 | NO | ParameterName::GradTolerance | EQUAL_TO | GradTolerance |  |
| 0002 | NO | ParameterName::GradCalcDigits | EQUAL_TO | GradCalcDigits |  |
| 0002 | NO | ParameterName::IVTolerance | EQUAL_TO | IVTolerance |  |
| 0002 | NO | ParameterName::IVNumIterations | EQUAL_TO | IVNumIterations |  |
| 0002 | NO | GradCalcDigits | PASS | nan |  |
| 0002 | NO | GradTolerance | LESS_THAN_OR_EQUAL_TO | 0.01 |  |
| 0002 | NO | IVNumIterations | GREATER_THAN_OR_EQUAL_TO | 50 |  |
| 0002 | NO | IVTolerance | LESS_THAN_OR_EQUAL_TO | 0.01 |  |
| 0002 | NO | MaxFilterations | GREATER_THAN_OR_EQUAL_TO | 500 |  |
| 0002 | NO | StepTolerance | LESS_THAN_OR_EQUAL_TO | 0.01 |  |

Table 35: List of Model Rules as provided by DBAnalytics and link to the relevant section of this document where the properties mentioned in the rule are described and tested. Only Model Rules categorized as "Used" are listed.

where LIST={RISKMULTIPLIER, DEFAULTRISK, ACCRUAL, AutoCalibration, BermTax, RateTerm, P/VAUTOFIT, CALIBRATE, accounts, lapsebeta, CorrelatedRandomNumbers, CplyPVs, MatrixSlates}

| Rule | MinCondition | ParameterLabel | Operator | Value | Section |
| --- | --- | --- | --- | --- | --- |
| 0052 | YES | EXTRAINFO::ResultsType | EQUAL_TO | P/VAUTOFIT | 4.8.14 |
| 0052 | NO | EXTRAINFO::FitType | EQUAL_TO | SLICE |  |

| Rule | MinCondition | ParameterLabel | Operator | Value | Section |
| --- | --- | --- | --- | --- | --- |
| 0053 | YES | EXTRAINFO::ResultsType | EQUAL_TO | P/VAUTOFIT | 4.8.15 |
| 0053 | NO | EXTRAINFO::TargetType | EQUAL_TO | VOL |  |
| 0054 | YES | EXTRAINFO::ResultsType | EQUAL_TO | P/VAUTOFIT | 4.8.16 |
| 0054 | NO | EXTRAINFO::UseSyntheticForwards | EQUAL_TO | NO |  |
| 0055 | YES | EXTRAINFO::ResultsType | EQUAL_TO | P/VAUTOFIT | 4.8.17 |
| 0055 | NO | EXTRAINFO::Weighting | IN | NOTIONAL,VEGANOTIONAL |  |
| 0003D | NO | MODEL::SurfaceTimeFloorMaxTime | NOT_EQUAL_TO | NO | 4.8.12 |
| 0004 | NO | MODEL::ModelMode | IN | PRICE | 4.8.2 |
| | | | | PRICEVALUETODAY |  |
| 0006 | NO | MODEL::UseNewSVD | IN | NO,ALGLIB | 4.8.3 |
| 0008 | NO | MODEL::RecalibCurves | IN | NO,YES | 4.8.4 |
| 0020 | NO | MODEL::CalibType | PASS |  | 4.8.5 |
| 0021 | NO | MODEL::MaxIter | PASS |  | 4.8.6 |
| 0013A | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.9 |
| 0013A | NO | VOL::InputMode | IN | STRIKEVOL,DELTAVOL | 4.8.21 |
| | | | | PARAMETRICVOL |  |
| 0040 | NO | VOL::WeekendWeight | PASS |  | 4.8.7 |
| 0041 | NO | VOL::HolidayWeight | PASS |  | 4.8.7 |
| 0049 | NO | VOL::DayWeightsInterpolation | PASS |  | 4.8.7 |
| 0050 | NO | VOL::WeightsReference | PASS |  | 4.8.7 |
| 0021B | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.11 |
| 0021B | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |  |
| 0021B | YES | VOL::RestrikeType | NOT_IN | STICKYSTRIKE, |  |
| | | | | ATMVOLALONGSMILE |  |
| 0021B | NO | VOL::ReferenceForwardsMode | PASS |  |  |
| 0023A | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.9 |
| 0023A | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL | 4.8.21 |
| 0023A | NO | VOL::SkewType | IN | SA4,LABGD,VW12 |  |
| 0025A | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.12 |
| 0025A | NO | VOL::SurfaceTimeFloor | PASS |  |  |
| 0032B | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.13 |
| 0032B | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |  |

| Rule | MinCondition | ParameterLabel | Operator | Value | Section |
| --- | --- | --- | --- | --- | --- |
| 0032B | YES | VOL::SkewType | NOT_EQUAL_TO | VW12 |  |  |
| 0032B | NO | VOL::VW12SkewCutoff | PASS |  |  |
| 0047 | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.10 |
| 0047 | NO | VOL::VolTermStructures::Name | PASS |  | 4.8.21 |
| 0048 | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.10 |
| 0048 | NO | VOL::VolTermStructures::Type | PASS |  | 4.8.21 |
| 0049 | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.10 |
| 0049 | NO | VOL::VolParameters::Name | PASS |  | 4.8.21 |
| 0055 | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.7 |
| 0055 | NO | VOL::BusinessTimeVols | IN | YES,NO |  |
| 0057 | YES | VOL::VolName | EQUAL_TO | MARKETVOL | 4.8.18 |
| 0057 | NO | VOL::PIVVolShiftType | EQUAL_TO | ABSOLUTE | 4.8.21 |
| 0018 | NO | PRICINGINFO::PricingInfoType | IN | AUTOCALIBRATION, AUTOBASIS, |  |
|  |  |  |  | BARRIER, BARRIERINFO |  |
|  |  |  |  | REPORT, SETTLEDCASH, MOD- |  |
|  |  |  |  | ELVOL |  |

Table 36: List of Model Rules as provided by DBAnalytics and link to the relevant section of this document where the properties mentioned in the rule are described and tested. Only Model Rules categorized as "Used" are listed.

The following model rules are related to the CURVE component of the model. These rules have been reviewed in other models and therefore will not be discussed in this section:

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| CURVE_0001 | NO | CURVE::AddPar | IN | NONE,LINEAR |
| CURVE_0002 | NO | CURVE::BuildMethod | IN | CONSTANT_FORWARD, |
|  |  |  |  | HYBRID_CONSTANT_FOR |
|  |  |  |  | HYBRID_FORWARD,LINE |
|  |  |  |  | QUADRATIC_FORWARD |
| CURVE_0003 | NO | CURVE::CashToFuture | IN | EXACT,EXACTCASH, |
|  |  |  |  | EXACTCASH- |
|  |  |  |  | 1, |
|  |  |  |  | CASHPRIORITY,LINEAR, |
| CURVE_0004A | YES | CURVE::UseType | NOT_EQUAL_TO | INFLATION |
| CURVE_0004A | NO | CURVE::CurveType | IN | LI- |
|  |  |  |  | BOR,CCYBASIS |

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| CURVE_0005 | NO | CURVE::ExtrapMethod | IN | CONSTANT_FORWARD, |
|  |  |  |  |  | CONSTANT_PAR, |
|  |  |  |  |  | CONSTANT_ZERO,NATIVE |
| CURVE_0007 | NO | CURVE::OISUseBaseCurve | IN | NO,YES |
| CURVE_0009 | NO | CURVE::SmoothFutures | IN | NO,YES,BACKWARD, |
|  |  |  |  |  | BACKWARDDAILY |
| CURVE_0010 | NO | CURVE::SpotLiberUseBaseCurve | IN | NO,YES |
| CURVE_0011B | YES | CURVE::SpreadBuildMethod | NOT_LIKE | "*,*" |
| CURVE_0011B | NO | CURVE::SpreadBuildMethod | IN | LINEAR_ZERO, |
|  |  |  |  |  | CONSTANT_FORWARD, |
|  |  |  |  |  | HYBRID_FORWARD, |
|  |  |  |  |  | HYBRID_CONSTANT_FOR |
|  |  |  |  |  | QUADRATIC_FORWARD |
| CURVE_0012 | NO | CURVE::TreasuryUseBaseCurve | IN | NO,YES |
| CURVE_0013 | NO | CURVE::TurnMethod | IN | CONSTANT_CASH, |
|  |  |  |  |  | CONSTANT_FORWARD, |
|  |  |  |  |  | PARALLEL_ZERO |
| CURVE_0015 | NO | CURVE::UseType | IN | CROSSCCYSWAPDISCOU |
|  |  |  |  |  | LIBOR,INFLATION |
| CURVE_0016 | NO | CURVE::ExtrapTime | PASS |  |
| CURVE_0017 | NO | CURVE::NaturalTolerance | LIKE | *d |
| CURVE_0017 | NO | CURVE::NaturalTolerance (*)d | ≤ 10.0000 |  |
| CURVE_0019 | NO | CURVE::CCYUseBaseCurve | IN | NO,YES |
| CURVE_0024 | YES | CURVE::UseType | IN | DISCOUNTBASIS,LIBOR |
| CURVE_0024 | NO | CURVE::BaseRateType | IN | LIBOR,LIBOR- |
|  |  |  |  |  | *,OIS,OIS- |
|  |  |  |  |  | * |
| CURVE_0033 | NO | CURVE::BaseRateIndexSubType | PASS |  |
| CURVE_0034 | NO | CURVE::OISBaseRateIndexSubType | PASS |  |

Table 37: List of Model Rules related to CURVE component as provided by DBAnalytics.

### 4.8.1 Issues identified during the model parameters review

The following items have been identified during the MPM validation and have been highlighted to DBAnalytics:

1. In the DBAnalytics file "20200612_dbsmc_mktvol.xlsx", in model rule MARKETVOL_0013A, MARGINALVOL is listed among the allowed InputModes (together with STRIKEVOL, DELTAVOL and PARAMETRICVOL). However, this mode is not used in the context of DBSMC-RateDeterministic_FXMarket.

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| 0013A | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0013A | NO | VOL::InputMode | IN | STRIKEVOL, DELTAVOL, PARAMETRIC, MARGINALVOL |

Table 38: Original form of model parameter rule MARKETVOL_0013A, as submitted in "20200612_dbsmc_mktvol.xlsx" file by DBAnalytics.

This issue was highlighted to DBAnalytics and the model rule was updated to the following:

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| 0013A | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0013A | YES | VOL::DiffusionType | NOT_IN | FXRATE, CROSSFXRATE |
| 0013A | NO | VOL::InputMode | IN | STRIKEVOL, DELTAVOL, PARAMETRIC, MARGINALVOL |
| 0013B | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0013B | YES | VOL::DiffusionType | IN | FXRATE, CROSSFXRATE |
| 0013B | NO | VOL::InputMode | IN | STRIKEVOL, DELTAVOL, PARAMETRICVOL |
| 0013C | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0013C | NO | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |

Table 39: Updated form of model parameter rule MARKETVOL_0013A, as submitted by DBAnalytics on 27.07.2020

2. The only parametric forms allowed for the DBSMC-RateDeterministic_FXMarket model are SA4 and LABGD. The original form of model parameter rule MARKETVOL_0023A, as stated in "20200612_dbsmc_mktvol.xlsx" did not reflect this fact:

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| 0023A | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0023A | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |
| 0023A | NO | VOL::SkewType | IN | SA4, LABGD, VW12 |

Table 40: Original form of model parameter rule MARKETVOL_0023A, as submitted in "20200612_dbsmc_mktvol.xlsx" file by DBAnalytics.

This issue was highlighted to DBAnalytics, and the model rule was modified to the following form:

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| 0023A | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0023A | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |
| 0023A | YES | VOL::DiffusionType | NOT_IN | FXRATE, CROSSFXRATE |
| 0023A | NO | VOL::SkewType | IN | SA4, LABGD, VW12 |
| 0023B | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0023B | YES | VOL::InputMode | EQUAL_TO | PARAMETRICVOL |
| 0023B | YES | VOL::DiffusionType | IN | FXRATE, CROSSFXRATE |
| 0023B | NO | VOL::SkewType | IN | SA4, LABGD |
| 0023C | YES | VOL::VolName | EQUAL_TO | MARKETVOL |
| 0023C | YES | VOL::InputMode | NOT_EQUAL_TO | PARAMETRICVOL |
| 0023C | NO | VOL::SkewType | PASS |  |

Table 41: Updated form of model parameter rule MARKETVOL_0023A, as submitted by DBAnalytics on 27.07.2020

3. The only RestrikeType used in the context of DBSMC-RateDeterministic_FXMarket is STICKYPARAMETERS. In model rule MARKETVOL_0021B the ReferenceForwardsMode property is mentioned as part of the RestrikeType=STICKYPARAMETERS mode. This is parameter doesn't play any role in the context of this RestrikeType mode. However, its value is set to PASS and therefore is not expected to have an impact on the model.

4. In model rule MARKETVOL_0047, all VolTermStructures are approved. When comparing the implied volatility values computed by DBAnalytics against the manually computed implied volatility values, we found that the definition of term structure VOLDOUBLEMEANREVADJUSTED6 as stated in [10] and [9] i.e.

$$\text{VOLDOUBLEMEANREVADJUSTED6}(T) = \text{VOLDOUBLEMEANREV3}(T)\left(1+\frac{A}{T}\right)$$

is incorrect and it should be

$$\text{VOLDOUBLEMEANREVADJUSTED6}(T) = \text{VOLDOUBLEMEANREV3}(T)\sqrt{1+\frac{A}{T}}$$

This issue was highlighted to DBAnalytics, in order to have the relevant developer documents corrected.

### 4.8.2 ModelMode

The property ModelMode present in the DBAnalytics DBSMC MODEL object is used in relation to the pricing conventions. Setting ModelMode=PRICE means the price is computed at the valuation date (stated in the CURVE object), while setting ModelMode=PRICEVALUETWODAY subtracts two days from the option expiry and the settle day of the curve to derive the number of volatility days and returns price to valuation date. We examine in the correct implementation of this property we consider a dictionary (Dictionary_1) containing a call option on the USD/EUR FX rate, with strike 1.49 and USD/EUR spot value 1.0942. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a (DN, RR, CVX) term structure. A MODELVOL object and an EXTRAINFO object used to fit an SA4 functional form. The pay currency of the trade is USD and the funding curve (i.e. the curve under which discounting is done) is the OIS USD discount curve. We consider the following two scenarios:

| Scenario | ModelMode | ValuationDate | SettlementDate | CCYSwapSettlementDate | FXSettlementDate | Exercise Date |
| --- | --- | --- | --- | --- | --- | --- |
| Scenario 1 | PRICE | 30/04/2020 | 05/05/2020 | 05/05/2020 | 05/05/2020 | 07/09/2030 |
| Scenario 2 | PRICEVALUETWODAY | 30/04/2020 | 07/05/2020 | 07/05/2020 | 07/05/2020 | 09/09/2030 |

Table 42: Scenarios considered.

We show that the price and implied volatility values computed in the two scenarios corresponding to ModelMode=PRICE and ModelMode=PRICEVALUETWODAY are equal. The results of the test are presented in the following table:

| ModelMode | Scenario 1 | Scenario 2 | Abs.Diff. |
| --- | --- | --- | --- |
| Price | 61316.6278 | 61316.6278 | 0 |
| Implied Vol. | 0.0969328468 | 0.0969328468 | 0 |

Table 43: Price and implied BS volatility for call option. The results are in line with expectations and show that there are no differences between implied volatilities and prices computed in Scenario 1 under mode ModelMode=PRICE and the implied vols and prices computed in Scenario 2 under ModelMode=PRICEVALUETWODAY; since ModelMode=PRICEVALUETWODAY of Scenario 2 will subtract two days from the SettlementDate=07/05/2020 and ExerciseDate=09/09/2030, making these dates coincide with the corresponding dates of Scenario 1.

### 4.8.3 UseNewSVD

The UseNewSVD parameters can be set to NO or ALGLIB, where the latter option points to ALGLIB, a numerical analysis and data processing library described at https://www.alglib.net/docs.php. We compare the price and implied volatilities of the products in scope of the model (FXEuroOpt, FXDigitalOpt, FXGeometricBasketOpt ) computed in modes UseNewSVD=NO and UseNewSVD=ALGLIB. The results are summarized in the following table:

| Option Type | FXEuroOpt | FXDigital Opt | FXGeometricBasketOpt |
| --- | --- | --- | --- |
| Price (NO) | 61371.3057 | 10540.8996 | 10565.3359 |
| Price (ALGLIB) | 61371.3057 | 10540.8996 | 10565.3359 |
| Abs.Diff. | 0.0 | 0.0 | 0.0 |
| Implied BS vol (NO) | 0.096941 | 0.07468461 | 0.0828893901 |
| Implied BS vol (ALGLIB) | 0.096941 | 0.07468461 | 0.0828893901 |
| Abs. Diff. | 0.0 | 0.0 | 0.0 |

Table 44: Price and implied BS volatility for products in scope of DBSMC-RateDeterministic_FXMarket. The results show that there are no differences between the modes UseNewSVD=NO and UseNewSVD=ALGLIB.

### 4.8.4 RecalibCurves

The property can be set to YES or NO and determines whether the curve re-calibration is performed or not. We examine this property in the context of the following dictionaries:

1. Dictionary_1 contains a call option on the USD/EUR FX rate, with valuation date 29/04/2020, maturity date 09/08/2030 and strike 1.49. The USD/EUR spot value is 1.0942. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a (DN, RR, CVX) term structure. A MODELVOL object and an EXTRAINFO object are used to fit an SA4 functional form. The pay currency of the trade is USD and the funding curve (i.e. the curve under which discounting is done) is the OIS USD discount curve.

2. Dictionary_2 contains a call option on the USD/GBP rate with valuation date 29/10/2019, maturity date 09/11/2029 and strike 1.25. The USD/GBP spot value is 1.293. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a (DN, RR, CVX) term structure. A MODELVOL object and an EXTRAINFO object are used to fit an SA4 functional form.The pay currency of the trade is USD and the funding curve (i.e. the curve under which discounting is done) is the OIS HUF discount curve.

Note that the above securities use different funding curves. In the case of the first security, which is a call option on the the USD/EUR FX rate with pay currency USD, the domestic interest rate curve is USD and the foreign interest rate curve is EUR. The funding curve is the OIS USD rate. In the case of the second security, which is a call option on the USD/GBP rate, the domestic interest rate curve is USD, the foreign interest rate curve is EUR and the funding curve is the OIS HUF rate. The impact of the RecalibCurves property is relevant when computing the risk sensitivities as the following table shows:

| Dictionary | | RecalibCurves=YES | RecalibCurves=NO | Abs. Diff. |
| --- | --- | --- | --- | --- |
| Dictionary_1 | Option Price | 61371.30579 | 61371.3044 | 0.0013 |
| | Implied BS vol. | 0.09694105 | 0.09694105 | 0 |
| | DELTA (USD) | -264.763543 | -265.40175 | 0.63 |
| | DELTA (EUR) | 329.86017 | 330.18850 | 0.31 |
| | OISSPREADDELTA (USD) | -1.766689 | -333.308 | 331.54 |
| | OISSPREADDELTA (EUR) | 2.38972 | 2.39165 | 0.0019 |
| | CCYSPREADDELTA (EUR) | 331.77531 | 332.09518 | 0.319 |
| | DISCOUNTEDSPREADDELTA (USD) | 63.942150 | 63.942148 | 0.000002 |
| Dictionary_2 | Option Price | 217721.3912 | 217719.32799 | 2.062 |
| | Implied BS vol. | 0.10991 | 0.10991 | 0 |
| | DELTA (USD) | -641.258 | -645.268 | 4.01 |
| | DELTA (GBP) | 862.8669 | 863.52073 | 0.833 |
| | DELTA (HUF) | -0.03 | - | - |
| | OISSPREADDELTA (USD) | 0.0453265 | -876.473 | 876.42 |
| | OISSPREADDELTA (GBP) | 1.00797 | 1.008538 | 0.00056 |
| | OISSPREADDELTA (HUF) | 0.00028 | - | - |
| | CCYSPREADDELTA (GBP) | 862.327 | 863.1617 | 0.83 |
| | CCYSPREADDELTA (HUF) | -221.030 | - | - |
| | DISCOUNTEDSPREADDELTA (USD) | - | 220.615 | - |
| | DISCOUNTEDSPREADDELTA (HUF) | 220.999 | - | - |

Table 45: Impact of RecalibCurves property on the option's price,implied BS volatility and risk sensitivities OIS-SPREADDELTA, CCYSPREADDELTA and DISCOUNTEDSPREADDELTA .

We can see that in the case of EOD pricing the impact of RecalibCurves on the option's price and implied BS volatility is negligible. However, the property RecalibCurves is relevant when computing the risk sensitivities OISSPREADDELTA, CCYSPREADDELTA and DISCOUNTEDSPREADDELTA. Remember that these risk sensitivities are computed by applying parallel up and down shifts to default spreads as follows (e.g. for average):

$$xDELTA = \frac{PV(s_x - e) - PV(s_x + e)}{2}$$ $$x \in \{OIS,CCY,DISCOUNT\},$$

Note that when shifting for example OIS spreads several others spreads such as CCY spreads and discount spreads need to be adjusted. This re-calibration is done by setting the property RECALIBCURVES to YES, which is the recommended option when computing risk sensitivities such as OISSPREADDELTA, CCYSPREADDELTA and DISCOUNTEDSPREADDELTA . The re-calibration ensures that changes applied to one spread are propagated accordingly to interconnected spreads corresponding to the same or different curves.

### 4.8.5 CalibType

The CalibType property typically can be chosen among the options: CALVOL, CALVOLROBUST, CALPRICE, CALPRICEWEIGHTED and CALTILEVOL. However, in the case of the DBSMC model configuration the property is not used i.e. has no impact on the pricing. We confirm this by pricing Dictionary_1 (described above) using different CalibType options.

| CalibType | Option Price | Implied BS Vol. |
| --- | --- | --- |
| CALVOL | 61371.3057999 | 0.0969410562 |
| CALVOLROBUST | 61371.30579999 | 0.0969410562 |
| CALPRICE | 61371.30579999 | 0.0969410562 |
| CALPRICEWEIGHTED | 61371.3057999 | 0.0969410562 |
| CALTILEVOL | 61371.30579999 | 0.0969410562 |

Table 46: Price and implied BS volatility for call option on USD/EUR FX rate when using different CalibType options. The results show that CalibType property does not affect the pricing performed in the DBSMC model configuration, which is in line with expectations.

### 4.8.6 MaxIter

According to [11], MaxIter property is used in the INFECTIOUS BET model when the parameters of this model needs to be calibrated, since it defines the number of iterations that can be performed in the calibration. Therefore, the property has no impact on the present model configuration. We confirm this by pricing Dictionary_1 (described above) using different MaxIter values.

| MaxIter | Option Price | Implied BS Vol. |
| --- | --- | --- |
| 1 | 61371.3057999 | 0.0969410562 |
| 3 | 61371.30579999 | 0.0969410562 |
| 10 | 61371.30579999 | 0.0969410562 |
| 20 | 61371.3057999 | 0.0969410562 |

Table 47: Price and implied BS volatility for call option on USD/EUR FX rate when using different MaxIter values. The results show that MaxIter property does not affect the pricing performed in the DBSMC model configuration, which is in line with expectations.

### 4.8.7 Time conventions properties

In this section we examine the impact and correct implementation of the properties: BusinessTimeVols, WeekendWeight, HolidayWeight, DayWeightsInterpolation, WeightsReference. For our testing we consider the following dictionary ( which we denote Dictionary_1) that contains a call option on the USD/AUD FX rate with maturity date 31/10/2029, strike value 0.68315 and valuation date 25/10/2019. The USD/AUD FX spot rate is 0.68315 and the FX volatility is given under the form of MARKETVOL of InputType DELTAVOL containing a term structure of DN volatilities.
The parameter BusinessTimeVols determines whether the volatilities relate to business time or actual time. When set to YES, the time corresponding to a given expiry is then calculated as the number of business days between valuation date and expiry (using the calendar specified in HolidayCities) divided by BusinessDaysPerYear. If BusinessTimeVols is set to YES, then the BusinessDaysPerYear parameter must also be set (e.g. 252) and the parameters WeekendWeight and HolidayWeight must be

set to 0 for consistency. When BusinessTimeVols = NO the default value of the parameter BusinessDaysPerYear is NONE. BusinessTimeVols can be used in conjunction with BusinessTimeNormalize = YES and DayWeights. BusinessTimeNormalize will renormalize weighted time between input dates (offsets or vol dates) to business time while still taking into account weights for each date.
The properties DayWeightsInterpolation and WeightsReference play a role in the calculation of the volatility dayweights between two points specified in the original volatility structure.
We exemplify the above notions using Dictionary_1, which has the following input DN term structure:

| Dates | C=P |
| --- | --- |
| 20191101 (1W) | 0.0717000801 |
| 20191108 (2W) | 0.0700481575 |
| 20191125 (1M) | 0.0683174443 |
| 20191227 (2M) | 0.0666254793 |
| 20200128 (3M) | 0.0670218553 |
| 20200427 (6M) | 0.071451527 |
| 20200727 (9M) | 0.0742359618 |
| 20201026 (1Y) | 0.0763699081 |
| 20211026 (2Y) | 0.0820209313 |
| 20221025 (3Y) | 0.0850251215 |
| 20231025 (4Y) | 0.0877812677 |
| 20241025 (5Y) | 0.0902226245 |
| 20251027 (6Y) | 0.0952045785 |
| 20261026 (7Y) | 0.0945893403 |
| 20271025 (8Y) | 0.1014176569 |
| 20281025 (9Y) | 0.1035646096 |
| 20291025 (10Y) | 0.1052473291 |

Table 48: Input DN volatility term-structure.

We set the time conventions properties as follows: BusinessTimeVols is set to NO and BusinessDaysPerYear is set to NONE. The dictionary relies on the flat forward volatility interpolation method (VolMode = CONSTANT_LV) for weekly intervals, which is the approved time-interpolation method for the DBSM-RateDeterministic_FXMarket model. We plot the forward variances for the intervals [i weeks, i + 1 weeks], covering the total 10 year period. Since in the case of Dictionary_1 the input volatility is given only in terms of DN volatility deltas, the plot will be constant between maturities 1W, 2W, 1M, 2M, 3M, 6M, 1Y, 2Y,...9Y and 10Y, in accordance with the flat forward interpolation method.
Without dayweights the forwards volatilities are constant on the intervals [Ti, Ti+1], with Ti ∈ {1W, 2W, 1M, 2M, 3M, 6M, 1Y, 2Y,...9Y, 10Y}. Dayweights can be used to vary the the implied forward volatilities on the intervals [Ti, Ti+1]. DayWeights can be added directly, by adding a DayWeights subtable to the MARKETVOL object or indirectly, by adding volatilities via the VolsForDayWeights subtable.
We add to the MARKETVOL object of Dictionary_1 a DayWeights subtable containing daily weights {w1,...w365} corresponding to the time points T0 = t0 < t1 < ... < t365 = T1 where T0 is the valuation date and T1 = 1Y . We check that the dayweights satisfy the required constraint:

$$\sum_{k=1}^{365} w_k(t_{k+1} - t_k) = T_1 - T_0 = 1$$

![Figure 127: Upper Row: Forward variance for Dictionary_1 corresponding to the FX rate USD/EUR (left)for the intervals [i weeks, i + 1 weeks]. The data covers a 1Y period beginning from the valuation date (upper left) and 10Y period starting from the valuation date (upper right).
Lower Row: Forward variance for Dictionary_1 corresponding to the FX rate USD/EUR (left) for the intervals [i weeks, i + 1 weeks] after adding a DayWeights subtable to the MARKETVOL object. The data covers a 1Y period beginning from the valuation date (lower left) and 10Y period starting from the valuation date (lower right). We cleary see the impact of the DayWeigths on the forward variance during the first year.](./Fig/56.png)

In the absence of dayweights, the implied volatility σ(t) at timepoint t ∈ [Ti, Ti+1] where Ti, Ti+1 is from the set of Dates listed in the Vols subtable of the MARKETVOL object is defined according to the CONSTANT_LV interpolation rule:

$$\sigma(t)^2t = \sigma(T_i)^2T_i + \frac{t - T_i}{T_{i+1} - T_i}\{\sigma(T_{i+1})^2T_{i+1} - \sigma(T_i)^2T_i\}$$

In the presence of dayweights, the implied volatility sigma σ(t) at timepoint t ∈ [Ti, Ti+1] will be computed according to the weights-adjusted CONSTANT_LV interpolation rule:

$$\sigma(t)^2t = \sigma(T_i)^2T_i + e\{\sigma(T_{i+1})^2T_{i+1} - \sigma(T_i)^2T_i\}$$

where

$$e = \frac{\sum_{j:T_i<t_j\leq t} w(t_j)}{\sum_{j:T_i<t_j\leq T_{i+1}} w(t_j)}$$

where tj are daily points between Ti and Ti+1 and w(tj) represent the weights corresponding to each point. We examine the correctness of the implementation by comparing the DBAnalytics computed implied BS volatilities against their analytically computed values, using the above formulas. We focus on the time period 01/11/2019 - 08/11/2019:

| Dates | Weights | Input Vol | DBA_Vols (DayWeights) | An_Vols (DayWeights) | Abs.Diff | DBA_Vols | An_Vols | Abs.D |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 20191101 | 1.4 | 0.0717000801 | 0.0717000801 | - | - | 0.0717000801 | - | - |
| 20191102 | 1.4 | - | 0.0729101742 | 0.0729101742 | ≤ 1e-12 | 0.0712961966 | 0.0712961966 | ≤1e-3 |
| 20191103 | 1.4 | - | 0.0738376449 | 0.0738376449 | ≤1e1-0 | 0.0708997831 | 0.0708978206 | ≤1e-6 |
| 20191104 | 1.4 | - | 0.0745713226 | 0.0745713226 | ≤1e-08 | 0.0707129958 | 0.0707123888 | ≤1e-5 |
| 20191105 | 0 | - | 0.0751668755 | 0.0711009743 | 0.0040 | 0.0705910790 | 0.0705107536 | ≤1e-3 |
| 20191106 | 0 | - | 0.0719662307 | 0.0680739993 | 0.0038 | 0.0703245119 | 0.0703245125 | ≤1e-7 |
| 20191107 | 1.4 | - | 0.0691423178 | 0.0691423918 | ≤1e-6 | 0.0701774766 | 0.0701747466 | ≤1e-3 |
| 20191108 | 1.4 | 0.0700481574 | 0.0700481574 | 0.0700481574 | ≤1e-10 | 0.0700481574 | 0.0700481575 | ≤1e-3 |

Table 49: Input DN volatility term-structure.

The above table shows that under the time conventions BusinessTimeVols=NO and BusinessDaysPerYear=NONE, and in the presence and absence of DayWeights, the implied BS volatilities computed by DBAnalytics are in line with the analytically computed values, confirming the correct implementation of the properties BusinessTimeVols and BusinessDaysPerYear. Note that in the above computations, the parameter DayWeightsInterpolation is set to PWCONST_L. The interpretation of the parameter is the following: for a daily time interval [ti, ti+1] where w(ti) represents the weight at timepoint ti, setting DayWeightsInterpolation=PWCONST_R will associate the weight w(tj) to the interval [ti, ti+1], while setting DayWeightsInterpolation=PWCONST_R will associate the weight w(ti+1) to the interval [ti, ti+1]. The impact of the DayWeightsInterpolation type is negligible.

We extend now the testing to the following four scenarios:

1. BusinessTimeVols=NO and BusinessDaysPerYear=NONE without DayWeights subtable,
2. BusinessTimeVols=NO and BusinessDaysPerYear=NONE with DayWeights subtable present in the MARKETVOL object,
3. BusinessTimeVols=YES and BusinessDaysPerYear=252 without DayWeights subtable,
4. BusinessTimeVols=YES and BusinessDaysPerYear=252 with DayWeights subtable present in the MARKETVOL object.

As recommended in [9] and [12], when setting the properties BusinessTimeVols=YES and BusinessDaysPerYear=252, we set the properties HolidayWeights=0 and WeekendWeights=0. The following figure shows that, under different time conventions and in the presence and absence of DayWeights, the forward volatilities remain non-negative:

![Figure 128: Different Time conventions.](./Fig/57.png)

The following figures compare the price of the call option as function of maturity under the two time conventions, in the presence and absence of DayWeights.

![Figure 129: Upper left: Option prices as function of maturity computed under standard time and business time. Upper right: relative difference between option price computed under standard time and option price computed under business time for different maturities. Lower left: Option prices as function of maturity computed under standard time and business time and in the presence of DayWeights. Lower right: relative difference between option price computed under standard time and option price computed under business time for different maturities, and in the presence of DayWeights](./Fig/58.png)

As expected, the call option's price computed under the standard time is always greater than the price computed under the business time. The relative differences between the option's implied BS volatilities corresponding to different maturities ranging from 3M to 10Y, computed under standard time and business time conventions, and in the presence and absence of DayWeights are presented in the following figures:

![Figure 130: Left: Relative difference between the implied BS volatilities corresponding to options with maturities ranging from 3M to 10Y, computed under standard time convention and business time conventions. Right: Relative difference between the implied BS volatilities corresponding to options with maturities ranging from 3M to 10Y, computed under standard time convention and business time conventions and in the presence of DayWeights.](./Fig/59.png)

### 4.8.8 InputMode

DBAnalytics VOL objects of VolName=MARKETVOL store static information about the implied volatility surface of the underlying. In the case of DBSMC-RateDeterministic_FXMarket, the MARKETVOL object can be of the following input modes: STRIKEVOL, DELTAVOL and PARAMETRICVOL. The input type is set in DBAnalytics by the property InputMode.

If InputMode is STRIKEVOL or DELTAVOL, the volatilities are defined by interpolation/extrapolation off the input volatility surface. If InputMode is STRIKEVOL, the input information is specified in two subtables of equal length, Vols and Strikes. The first column of each subtable stores the time data to which the data applies to. The values in the Strike's subtable can be actual strikes (if StrikeType is ABSOLUTE) or distances to the forward (if StrikeType is FORWADDIFF)^14.

If InputMode is DELTAVOL, the input information is specified in a single subtable called Vols. The first subcolumn of this subtable is called Dates and stores the time points to which the input information applies to. The remaining columns have headers such as ATMF (which corresponds to strike equal to forward), DN (equivalent to C=P, corresponds to the delta-neutral straddle strike, i.e. a strike K_DN chosen such that ∆^call(T, K_DN, σ_DN) + ∆^put(T, K_DN, σ_DN) = 0 i.e. the strike at which is possible to buy a straddle that will have 0 delta and a long vega position) or individual deltas (e.g. 10C,10P, 25C, 25P). Each delta is a function of forward, strike, volatility, maturity and discount factor. The exact definition that is used for delta is controlled by the property DeltaType, and can be SPOTRISK, FORWARDRISK, etc. For a complete list of delta types available in DBAnalytics, we refer to Section 4.2. in [10].

^14For example, if the forward value is 100, the implied volatility for strike 110 will be stored as an input with StrikeType ABSOLUTE and corresponding strike value of 110 or can be stored as an input with StrikeType FORWADDIFF and corresponding strike value of 10

| Dates | 10P | DN | 10C |
|-------|-----|------|-----|
| 20170913 | 0.12368 | 0.09462 | 0.08863 |
| 20171213 | 0.14512 | 0.10324 | 0.09453 |
| 20180613 | 0.17044 | 0.11107 | 0.09752 |
| 20190613 | 0.18412 | 0.11673 | 0.10111 |
| 20200613 | 0.19908 | 0.12258 | 0.10473 |
| 20220613 | 0.22552 | 0.13547 | 0.11225 |
| 20240613 | 0.23356 | 0.14483 | 0.11749 |
| 20270611 | 0.24475 | 0.15809 | 0.1241 |
| 20320613 | 0.2513 | 0.15209 | 0.1171 |
| 20370613 | 0.24961 | 0.15209 | 0.11487 |
| 20470613 | 0.24752 | 0.15209 | 0.11708 |

Table 50: Example of input volatility surface for AUD/JPY FX rate of type DELTAVOL expressed as a combination of (10P, DN, 10C).

In the case of FX volatilities, an alternative way to input volatilities under InputType DELTAVOL is indirectly, using quantities such as DN, Risk Reversal (RR), FLY and CVX. In a typical Vols subtable of this type, the column DN will store a term structure of DN implied vols σ_DN . The information stored under column 10RR is derived as:

$$10RR = σ_{10C} - σ_{10P}$$

The information stored under column FLY is defined as the number f that satisfies the equation:

$$C_{BS}(K_{10C},σ_{DN} + f) + P_{BS}(K_{10P}, σ_{DN} + f) = C_{BS}(K_{10C}, σ_{10C}) + P_{BS}(K_{10P}, σ_{10P})$$

where K_{10C} represents the strike for which the call delta is 10%. The information stored under column CVX is defined as:

$$10CVX = \frac{σ_{10C} + σ_{10P}}{2} - σ_{DN}$$

When DELTAVOL is expressed as a combination of (DN, RR, CVX) or (DN, RR, FLY), DBAnalytics converts internally this information into individual delta vols and these are used as model inputs. If the input is given in a combination (DN, RR, FLY) a numerical search is needed to determine the individual vols. If the input is given as a combination (DN, RR, CVX) a numerical search can be avoided if for every delta RR the corresponding delta CVX is available, i.e. the inputs are of the form:10RR and 10CVX, 25RR and 25CVX, etc.

| Dates | DN | 25 RR | 10CVX |
|-------|---------|--------|-------|
| 3m | 0.0689 | -0.00643 | 0.01251 |
| 6m | 0.06979 | -0.00771 | 0.01503 |
| 1y | 0.07258 | -0.00931 | 0.01808 |
| 2y | 0.07727 | -0.00948 | 0.01588 |
| 3y | 0.08284 | -0.00712 | 0.01829 |
| 5y | 0.08795 | -0.00534 | 0.01834 |
| 7y | 0.0912 | -0.00356 | 0.01882 |
| 10y | 0.09384 | -0.00201 | 0.01917 |
| 15y | 0.10184 | -0.00218 | 0.01417 |
| 20y | 0.11234 | -0.00196 | 0.01247 |
| 30y | 0.12214 | -0.00226 | 0.01217 |

Table 51: Example of input volatility surface for USD/EUR FX rate of type DELTAVOL expressed as a combination of (DN, RR, CVX).

If InputMode is PARAMETRICVOL, the volatilities are constructed with the help of parametric functions calibrated to the input volatility surfaces. Several functional forms are available in DBAnalytics: SA4, VW12, LABGD, SABR3FORMULAPD and SABR4. The choice of the functional form is made by the property SkewType, see subsection 4.8.9. At the time of MPM rules review (Q3 2020), only SkewTypes SA4 and LABGD are approved for the present model. The parameters of the volatility function are fitted against an input volatility surface using the MarketVolFunction P/VAUTOFIT.

Note that in the original DBAnalytics submission, MARGINALVOL is listed among the allowed InputModes for the model DBSMC-RateDeterministic_FXMarket. However, this was an error that has been corrected, see Section 4.8.1. Testing around the above concepts can be found in Section 4.8.21.

### 4.8.9 SkewType

If the InputMode is set to PARAMETRICVOL, the volatilities are defined with the help of parametric functions calibrated to the input volatility surface. For the model DBSMC-RateDeterministic_FXMarket only the functional forms SA4 and LABGD are allowed. The parameters of each functional form are fitted against an input volatility surface using the MarketVolFunction P/VAUTOFIT.

Each P/V function is expressed as a function of the normalized strike z defined as:

$$z = \frac{\ln(K/F(0,T))}{σ_{ATMF}\sqrt{T}}$$

where K is the strike, F(0,T) is the forward and σ_{ATMF} represents the volatility corresponding to the ATMF strike. It is known that the scale of the strike axis is increasing with time, therefore working directly in the strike space will make difficult to express how far is the strike from the forward give that the distance will depend also on the time and volatility. The introduction of the normalized space has the role of expressing this distance as a number of standard deviations away from the forward (with the forward being at z = 0).

Three parameters are common to all functional forms: VOL, SKEW and SMILE. If the property SkewConvexityType is set to STANDARD, the interpretation of these parameters is the following:

$$VOL = σ_{ATMF}$$

$$SKEW = \frac{\partial}{\partial z}\left(\frac{σ^2(z)}{σ^2_{ATMF}}\right)|_{z=0}$$

$$SMILE = \frac{\partial^2}{\partial z^2}\left(\frac{σ^2(z)}{σ^2_{ATMF}}\right)|_{z=0}$$

Therefore, for small values of the normalized strike z i.e. near the forward, the P/V function can be expressed under the form:

$$σ^2(z) = σ^2_{ATMF}\left(1 + SKEW\cdot z + \frac{1}{2}SMILE\cdot z^2 + ...\right)$$

#### 4.8.9.1 SkewType SA4

The SA4 parametric form is given by:

$$σ(z) = VOL\left(\frac{1}{2}(1 + Bz) + \sqrt{\frac{1}{4}(1 + Bz)^2 + \frac{1}{2}Cz^2}\right)^{\frac{POWER}{2}}$$

where:

$$B = \frac{SKEW}{POWER}, \quad C = \frac{1}{POWER}\left(SMILE - \frac{POWER - 1}{POWER}SKEW^2\right)$$

and where the four slice parameters {VOL, SMILE, SKEW, POWER} are calibrated to the input volatility surface.

#### 4.8.9.2 SkewType LABGD

The LABGD parametric form is given by:

$$σ(z) = VOL\left(1 + \ln\left(Be^{Cz} + (1-B)e^{-Pz}\right)\right)^{\frac{POWER}{2}}$$

where:

$$A = \frac{SMILE}{POWER} + \frac{B(1-B)(AC_{adj} + AP_{adj})^2}{(1-POWER)(B\cdot AC_{adj} - (1-B)AP_{adj})^2}$$
$$B = \frac{SKEW}{POWER} + \frac{AP_{adj}}{AC_{adj} + AP_{adj}}$$
$$C = \frac{AC_{adj}}{A}$$
$$P = \frac{AP_{adj}}{A}$$

The parameters AC_{adj} and AP_{adj} represent the gradient of the implied volatility at larger and smaller strike limits, respectively. They are given by:

$$AC_{adj} = AP_{xmax} \cdot AP + \max\left(0, -\frac{SKEW}{POWER}\right) \text{ and } AC_{udj} = AC_{xmax} \cdot AC + \max\left(0, \frac{SKEW}{POWER}\right)$$

where:

$$AC_{xmax} = \sqrt{\frac{1}{4}\left(\frac{SKEW}{POWER}\right)^2 + \frac{1}{2}\left(\frac{SMILE}{POWER} + (1-POWER)\left(\frac{SKEW}{POWER}\right)^2\right)} - \frac{1}{2}\frac{SKEW}{POWER}$$

and:

$$AP_{xmax} = AC_{xmax} - \frac{SKEW}{POWER}$$

The LABGD parametric form depends on six slice parameters: VOL, SKEW, SMILE, POWER, AC and AP.
Note that other functional form exist in DBAnalytics, such as VW12, SABR3FORMULAPD and SABR4. Since parametric form VW12 is mentioned several times in the model rules, we describe it below for the sake of completeness. However, note that VW12 is not used in the DBSMC-RateDeterministic_FXMarket model.

#### 4.8.9.3 SkewType VW12

The VW12 parametric form depends on twelve slice parameters: VOL, SKEW, SMILE, PUTWING, PUTDEPTH, PUTFLATTEN, CALLWING, CALLDEPTH, CALLFLATTEN, ASYMPTOTICTHRESHOLD, ASYMPTICSLOPE and MINVOL and is given by:

$$\sigma(z) = MINVOL\left(1 + \left(\frac{\sigma_{raw}(z)}{MINVOL}\right)^4\right)^{\frac{1}{4}}$$

if $\sigma_{raw}(z) > 0$ or $\sigma(z) = MINVOL$ if $\sigma_{raw}(z) < 0$. The parameter $\sigma_{raw}(z)$ is given by:

$$\sigma_{raw}(z) = VOL\left(1 + s_pz + (SKEW - s_p)i_{low}f_z\left(\frac{z}{s_{low}}\right) + SMILE i^2_{low}f_1\left(\frac{z}{s_{low}}\right)\right)^{\frac{1}{2}}$$

where $f_n(x) = n - (n + x)e^{-x}$, $n = 1,2$ and:

$$i = \frac{1}{FL}\tanh(FL\cdot z)$$

with $FL=\text{PUTFLATTEN}$ if $z < 0$ and $FL=\text{CALLFLATTEN}$ if $z > 0$. The definitions of the parameters $s_p$, $s_{low}$ and $s_{max}$ depend on the sign of $z$:

• If $z > 0$, then:
$$s_p = \min(\max(CALLWING - ASYMPTOTICTHRESHOLD,0), ASYMPTOTICSLOPE), \quad s_{max} = -\alpha_c$$

and:
$$s_{low} = \begin{cases}
\beta_c & \text{if } SKEW < 0 \\
-\alpha_c & \text{if } SKEW > 0
\end{cases}$$

where:
$$\alpha_c = \ln(1 - \min(CALLWING, ASYMPTOTICTHRESHOLD))$$
$$\beta_c = -\frac{CALLDEPTH}{2SKEW}$$

• If $z < 0$, then:
$$s_p = -\min(\max(PUTWING - ASYMPTOTICTHRESHOLD,0), ASYMPTOTICSLOPE), \quad s_{max} = \alpha_p$$

and:
$$s_{low} = \begin{cases}
\alpha_p & \text{if } SKEW < 0 \\
\beta_p & \text{if } SKEW > 0
\end{cases}$$

where:
$$\alpha_p = \ln(1 - \min(PUTWING, ASYMPTOTICTHRESHOLD))$$
$$\beta_p = -\frac{PUTDEPTH}{2SKEW}$$

The interpretation and effect of each of the above parameters can be found in Section 4.5.1. of [10]. Testing around the above concepts can be found in Section 4.8.21.

Note that SkewType VW12 is not in for the present model, being incorrectly listed in the submitted model rules, see Section 4.8.1. This issue has been highlighted to DBAnalytics and the relevant model rule has been corrected.

### 4.8.10 VolTermStructures and VolParameters

In the case of DBAnalytics MARKETVOL objects of InputMode PARAMETRICVOL, the volatilities are defined with the help of a parametric function (SA4 or LABGD) whose parameters are fitted to the input volatility surface using the MarketVolFunction P/VAUTOFIT. In this case, the typical DBAnalytics dictionary will contain a MARKETVOL object of type DELTAVOL or STRIKEVOL, a MODELVOL object containing information related to the parametric function and an EXTRAINFO object containing information related to the P/VAUTOFIT method. An example of properties contained in a MODELVOL object is the following:

The VolTermStructures subtable describes the term structure of each of the slice parameters VOL, SMILE, SKEW and POWER. Each slice parameter can be described as a function of time-to-expiry. If the BusinessTimeVols is set to YES, the time-to-expiry is computed as business time i.e. the number of business days to expiry divided by the number of business days in a year (value stored in the fieldBusinessDaysPerYear). We give below two examples of possible term structures. In the first example we assume that VolTermStructures and VolParameters subtables are the following:

[THIS IS TABLE: VolTermStructures table showing Name, Type, Shift, Bump, BumpType, and Use columns with CONSTANT values for VOL, SMILE, SKEW, and POWER parameters]

[THIS IS TABLE: VolParameters table showing Name, Value, Bump, BumpType, and Use columns with specific values for VOL (0.2), SMILE (0.1), SKEW (0), and POWER (1)]

Table 53: Example (from a dictionary corresponding to a call option on the USD/EUR FX rate) of VolTermStructures and VolParameters subtables where the term structure of the slice parameters is CONSTANT.

Here the term structure of all slice parameters is CONSTANT, therefore the slice parameter values are given by:

$$f(p,t) = p, \text{ for all } t \leq T \text{ and } p \in \{VOL, SMILE, SKEW, POWER\}$$

i.e. in this case we have VOL=0.2, SMILE=0.1, SKEW=0 and POWER=1 for all t ≤ T where T represents the maturity.
In the second example, the term structure of the slice parameter VOL is VOLMEANREV3, the term structure of the slice parameter SKEW is VARMEANREV3 and the term structure of the slice parameters SMILE and POWER is constant. An example of VolTermStructures and VolParameters subtables in this case is the following:

[THIS IS TABLE: VolTermStructures table showing complex term structures including VOLMEANREV3 for VOL and VARMEANREV3 for SKEW]

[THIS IS TABLE: VolParameters table with multiple parameters including VOL_SHORT, VOL_LONG, VOL_K, SKEW_SHORT, SKEW_LONG, SKEW_K, SMILE, and POWER]

Table 54: Example (from a dictionary corresponding to a call option on the USD/EUR FX rate) of VolTermStructures and VolParameters subtables where the term structure of the slice parameters is VARMEANREV3.

The term structure of the VOL slice parameter is VOLMEANREV3 which means that it is given by:

$$VOL(t) = f(LONG, SHORT, K; t) = \sqrt{LONG^2 + (SHORT^2 - LONG^2)\frac{1-e^{-Kt}}{Kt}}$$

where LONG=VOL_LONG=0.15, SHORT=VOL_SHORT=0.2 and K=VOL_K=0.4. The term structure of the SKEW slice parameter is VARMEANREV3 which means that it is given by:

$$SKEW(t) = f(LONG, SHORT, K; t) = LONG + (SHORT - LONG)\frac{1-e^{-Kt}}{Kt}$$

where LONG=SKEW_LONG=0.3, SHORT=SKEW_SHORT=0.5 and K=SKEW_K=2.
The following table contains the complete set of term structures available in DBAnalytics. For more details we refer to [9] and [10].

[THIS IS TABLE: Complete list of term structures for the slice parameters VOL, SKEW, SMILE, POWER, showing TermStructure, Parameters, and Definition for various models including CONSTANT, LINEARTIMEREF, VARMEANREV3, VOLMEANREV3, LINEXP4, POWERTIMEREF, VOLDOUBLEMEANREV5, VOLDOUBLEMEANREVADJUSTED6, VARDOUBLEMEANREV5, and POWERMEANTIMEREF]

Table 55: Complete list of term structures for the slice parameters VOL, SKEW, SMILE, POWER.

Note that at the time of the present MPM validation, the definition of VOLDOUBLEMEANREVADJUSTED6, as stated in the DBAnalytics documents, was incorrect. We raised this issue with DBAnalytics, see Section 4.8.1 for more details.
Additionally, it is possible to define offsets (i.e. shifts) for the slice parameters on a maturity-by-maturity basis in the Offsets subtable. The Offsets subtable must also contain a VolShifts column, containing absolute volatility offsets that are applied at each maturity.

[THIS IS TABLE: Offsets table showing columns for ExpiryDate, VolShift, VOL, SKEW, SMILE, and POWER, with various dates from 3D to 3654D and their corresponding values]

Table 56: Example (from a dictionary corresponding to a call option on the KRW/USD FX rate) of an Offsets subtable. In this table we can see that a series of non-negative shifts (offsets) are applied to all SLICE parameters (VOL, SKEW, SMILE and POWER) but no absolute shifts are applied at the volatility level (VolShift column contains only 0s).

Testing around the above concepts can be found in Section 4.8.21.

### 4.8.11 RestrikeType

The RestrikeType property defines the way in which the volatility surface is defined when the spot value used in pricing deviates from the spot value corresponding to the time point when the original volatility surface is defined. This property is particularly relevant in the computation of risk sensitivities FXDELTA and FXGAMMAAVE:

$$FXDELTA = PV(S_0(1+d)) - PV(S_0)$$
$$FXGAMMAAVE = PV(S_0(1+d)) + PV(S_0(1-d)) - 2PV(S_0)$$

where assumptions need to be made regarding the volatility that will be used in the calculation of the "bumped" PVs. Let's denote $\tilde{S}_0$ the new spot value (for the bumped spot) and $S_0$ the original spot value or sometimes called the reference spot value, that can be found in the ReferenceSpot subtable. We define by $\tilde{F}_t$ the forward corresponding to spot value $\tilde{S}_0$ and by $F_t$ the forward corresponding to spot value $S_0$. Remember that the normalized strike is defined as:

$$\tilde{z} = \frac{\log(K/\tilde{F}_t)}{σ_{ATMF}\sqrt{t}}$$

where $σ_{ATMF}$ represents the volatility corresponding to the ATMF strike. This value is stored by the VOL slice parameter of the P/V. The SKEW and SMILE parameters (stored in the slice parameters with the same names) are defined as:

$$SKEW = \frac{\partial}{\partial z}\left(\frac{σ^2(z)}{σ^2_{ATMF}}\right)|_{z=0}$$

$$SMILE = \frac{\partial^2}{\partial z^2}\left(\frac{σ^2(z)}{σ^2_{ATMF}}\right)|_{z=0}$$

The RestrikeType property can be set to:

• StickyParameters. This is the simplest restrike type and usually the default setting. Under RestrikeType equal to StickyParameters, when the spot moves from $S_0$ to $\tilde{S}_0$, the forward used in the definition of the normalized strike $z$ will be $\tilde{F}_t$ (instead of the original $F_t$). The ATMF volatility stays unchanged i.e. equal to the original VOL slice parameter. Therefore the interpretation of the SMILE and SKEW parameters stays unchanged i.e. the first and second derivatives of the variance near the forward.

• StickyStrike. Under this option, the forward used in the definition of the normalized strike $z$ will be the "reference forward" $\tilde{F}_t$ defined by:

$$\tilde{F}_t = \hat{F}_t\left(\frac{\tilde{S}_0}{S_0}\right)^{\text{RestrikeFactor}}$$

The RestrikeFactor value can be found in the property with the same name, or can be found in the RestrikeFactorTermStructure in the case of a time dependent RestrikeFactor parameter. The RestrikeFactor is used to determine how much the ATMF volatility "follows the skew". Setting RestrikeFactor=0 will imply $\tilde{F}_t = \hat{F}_t$ which coincides with the setting from coincide with RestrikeType=STICKYPARAMETERS. The default value of RestrikeFactor is 1. Another property relevant for StickyStrike mode is ReferenceForwardsMode (usually set to LINEAR) which determines the way the ReferenceForwards are interpolated between the given points.

• ATMFVolAlongSmile. We distinguish between two cases depending on the property LinearizedRestrike set to YES or NO. If LinearizedRestrike=NO, the volatility surface is recalculated with the forward used in the definition of the normalized strike $z$ being $\tilde{F}_t$ (as in the case of StickyParameters). We denote by $\tilde{σ}_{ATMF}$ the volatility corresponding to strike $K = \tilde{F}_t$ selected from the original volatility surface. For RestrikeType=ATMFVolAlongSmile a new VOL slice parameter is defined as follows:

$$VOL(new) = σ_{ATMF} + \text{RestrikeFactor} \cdot (\tilde{σ}_{ATMF} - σ_{ATMF})$$

We can see that setting RestrikeFactor=0 coincides with the setting from RestrikeType=StickyParameters. The parameter RestrikeFactor controls how much or how little of ATMF volatility follows the smile. The default value is RestrikeFactor property is 0. The new SKEW parameter is defined as:

$$SKEW(new) = SKEW\left(1 + \text{RestrikeValue}\left(\frac{\tilde{S}_0}{S_0} - 1\right)\right)$$

where the RestrikeValue can its value can be found in the property with the same name of the PARAMETRICVOL. If LinearizedRestrike = YES the definition of VOL(new) becomes:

$$VOL(new) = σ_{ATMF} + \text{RestrikeFactor} \cdot (σ_1 - σ_{ATMF})$$

where $σ_1 = σ_{ATMF}\sqrt{1 + SKEW\tilde{z}}$ where SKEW represents the original SKEW parameter from the original volatility surface and $\tilde{z}$ is defined as:

$$\tilde{z} = \frac{\log(\tilde{F}_t/F_t)}{σ_{ATMF}\sqrt{t}}$$

However, note that only mode RestrikeType=STICKYPARAMETERS is currently used in the model DBSMC-RateDeterministic_FXMarket. Since this was communicated by DBAnalytics after the start of the present model parameter review, our testing was not restricted only to STICKYPARAMETERS, but covered all existing modes.

We will test the correct implementation of the above properties and the impact of each RestrikeType mode on the risk sensitivities using a dictionary containing a call option on the USD/EUR FX rate, with valuation date 29/04/2020, maturity date 02/05/2030 and strike 1.2986. The USD/EUR spot value is 1.0942. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, RR, CVX). A MODELVOL object and an EXTRAINFO object used to fit an SA4 functional form. The pay currency of the trade is USD and the funding curve (i.e. the curve under which discounting is done) is the OIS USD discount curve. The fitted PARAMETRICVOL has the following VolParameters, VolTermStructures and Offsets subtables:

| VolTermStructures |  |  |  |  |  |
|------------------|-----|---------|-------|----------|-----|
| Name | Type | Shift | Bump | BumpType | Use |
| VOL | CONSTANT | 0 | 0.001 | ABS | 1 |
| SKEW | CONSTANT | 0 | 0.01 | ABS | 1 |
| SMILE | CONSTANT | 0 | 0.01 | ABS | 1 |
| POWER | CONSTANT | 0 | 0.001 | ABS | 1 |

| VolParameters |  |  |  |  |
|--------------|---------|-------|----------|-----|
| Name | Value | Bump | BumpType | Use |
| VOL | 0 | 0.001 | ABS | 1 |
| SKEW | 0 | 0.001 | ABS | 1 |
| SMILE | 0 | 0.001 | ABS | 1 |
| POWER | 0 | 0.001 | ABS | 1 |

| OffSets |  |  |  |  |  |
|---------|----------|---------|-----------|----------|---------|
| ExpiryDate | VolShift | VOL | SKEW | SMILE | POWER |
| 20200803 | 0 | 0.08896777 | -0.14685579 | 0.4725701218 | 1 |
| 20201103 | 0 | 0.0699413739 | -0.1784246972 | 0.5675688292 | 1 |
| 20210503 | 0 | 0.0731213338 | -0.1910137112 | 0.5822590644 | 1 |
| 20220503 | 0 | 0.077641556 | -0.1920600594 | 0.5303987315 | 1 |
| 20230503 | 0 | 0.0832836251 | -0.1706361757 | 0.5891172901 | 1 |
| 20250430 | 0 | 0.08946347 | -0.1456075319 | 0.5569282779 | 1 |
| 20270503 | 0 | 0.0917046102 | -0.1252748653 | 0.5529214951 | 1 |
| 20300502 | 0 | 0.0943495682 | -0.113735474 | 0.5477371896 | 1 |
| 20350503 | 0 | 0.1028228278 | -0.103564144 | 0.381860641 | 1 |
| 20400503 | 0 | 0.1132222689 | -0.0982891137 | 0.2849023667 | 1 |
| 20500503 | 0 | 0.1235974434 | -0.1139191362 | 0.2543101323 | 1 |

Table 57: VolTermStructures, VolParameters and Offsets subtables of the fitted SA4 PARAMETRIC VOL.

We begin by computing the FXDELTA and FXGAMMAAVE risk sensitivities.

| Risk Sensitivities | DBA value | Analytic value | Abs. diff |
|-------------------|-----------|----------------|-----------|
| FXDELTA | 5629.07265 | 5629.07259 | 0.00006 |
| FXGAMMAAVE | 199.89582 | 199.89579 | 0.00003 |

Table 58: FXDELTA and FXGAMMAAVE risk sensitivities computed using DBAnalytics and analytically computed using (86). The original FX spot value S₀=1.2986 by applying a relative shift of size d = 0.01 in order to compute the quantities PV(S₀(1 + d)) and PV(S₀(1 - d)).

We prove the correct implementation of RestrikeType modes STICKYPARAMETERS, STICKYSTRIKE and ATMFVolAlongSmile by focusing on the shifted spot $\tilde{S}_0 = S_0(1 + d)$ used in the computation of the bumped PV PV($\tilde{S}_0(1 + d)$) and we show that the implied volatility corresponding to the shifted spot is correctly computed in DBAnalytics. To this purpose we will compare the implied BS volatility computed using DBAnalytics MODE=PRICE against the analytically computed value computed using the

SA4 parametric formula

$$\sigma(z) = VOL\left(\frac{1}{2}(1 + Bz) + \sqrt{\frac{1}{4}(1 + Bz)^2 + \frac{1}{2}Cz^2}\right)^{\frac{POWER}{2}}$$  (92)

and taking into account the definitions of normalized strike z and slice parameters VOL, SKEW and STRIKE parameters in each of the RestrikeTypes.

| RestrikeType | Implied BS Vol (DBA) | Implied BS Vol (analytic) | Abs. diff |
|--------------|---------------------|------------------------|-----------|
| STICKYPARAMETERS | 0.0938042688 | 0.0938042315 | < 10e-7 |
| STICKYSTRIKE | 0.0937987908 | 0.0937988107 | < 10e-7 |
| ATMFVolAlongSmile (LinRestrike=NO) | 0.0938404511 | 0.0938042315 | < 10e-5 |
| ATMFVolAlongSmile (LinRestrike=YES) | 0.0936260678 | 0.0936259898 | < 10e-7 |

Table 59: Implied BS volatilities computed when the pricing spot is the shifted spot $\tilde{S}_0$ and the spot used to calibrate the original volatility surface is S₀. The results show a very good match between the implied BS volatilities computed in DBAnalytics and the implied volatilities computed analytically using SA4 parametric formula and the definitions of normalized strike z and slice parameters VOL, SKEW and SMILE in each RestrikeType mode

The analytically computed values from the above table are computed taking into account the following:

• In the case of RestrikeType=STICKYPARAMETERS, the normalized strike z used in the SA4 formula (92) is computed using the forward $\tilde{F}_t$ corresponding to the shifted spot $\tilde{S}_0$. The slice parameters VOL, SMILE and SKEW stay unchanged, equal to their values from the Offsets subtable.

• In the case of RestrikeType=STICKYSTRIKE, the normalized strike is computed using the "reference forward" defined in (87). The value of the RestrikeFactor used in the above computation is 1.

• In the case of RestrikeType=ATMFVolAlongSmile with LinearizedRestrike=NO, the normalized strike z used in the SA4 formula (92) is computed using the forward $\tilde{F}_t$ corresponding to the shifted spot $\tilde{S}_0$. The slice parameters VOL and SKEW are computed using (88) and (89).In the above computations RestrikeFactor=1 and RestrikeValue=0.

• In the case of RestrikeType=ATMFVolAlongSmile with LinearizedRestrike=YES, the normalized strike z used in the SA4 formula (92) is computed using the forward $\tilde{F}_t$ corresponding to the shifted spot $\tilde{S}_0$. The slice parameters VOL and SKEW are computed using (90) and (89). In the above computations RestrikeFactor=1 and RestrikeValue=0.

The following table displays the values of the FXDELTA and FXGAMMA computed under different RestrikeType:

| RestrikeType | FXDELTA | FXGAMMAAVE |
|--------------|----------|------------|
| STICKYPARAMETERS | 5629.0726504 | 199.8958241 |
| STICKYSTRIKE | 5620.8891559 | 157.2284971 |
| ATMFVolAlongSmile (LinRestrike=NO) | 5344.3518508 | 297.0032129 |
| ATMFVolAlongSmile (LinRestrike=YES) | 5362.8948126 | 194.5119501 |

Table 60: FXDELTA and FXGAMMAAVE risk sensitivities computed using DBAnalytics and analytically computed using (86). The original FX spot value S₀=1.2986 by applying a relative shift of size d = 0.01 in order to compute the quantities PV(S₀(1 + d)) and PV(S₀(1 - d)).

The following figures display the behaviour of the FXDELTA and FXGAMMAAVE risk sensitivities under shifts of the FX spot.

![Figure 131: The behaviour of FXDELTA and FXGAMMAAVE risk sensitivities under shifts of the FX spot. The FXDELTA and FXGAMMAAVE risk sensitivities have been computed under RestrikeType modes StickyParameters, StickyStrike, ATMFVolAlongSmile with LinearizedRestrike=NO (ATMFVolAlongSmile1 in the figure) and ATMFVolAlongSmile with LinearizedRestrike=YES (ATMFVolAlongSmile2).
Upper Row: FXDELTA when relative shifts ranging from -90% to 200% are applied to the FX spot (upper left) and zoom to the interval when the FX shifts applied to the FX spot range from -30% to 50%. We can see that the choice of the RestrikeType creates a small change in the profile of FXDELTA.
Lower Row: FXGAMMAAVE when relative shifts ranging from -90% to 200% are applied to the FX spot.](./Fig/60.png)

We examine the impact of the property ReferenceForwardsMode, relevant in the case of RestrikeType=StickyStrike. The ReferenceForwardsMode can be set to one of the modes LINEAR, EXPONENTIAL or PWCONST_R. The following figure display the behaviour of the risk sensitivities FXDELTA and FXGAMMAAVE computed under RestrikeType=StickyStrike for each of the ReferenceForwardsMode listed above. We can see that the impact is negligible.

![Figure 132: The behaviour of FXDELTA and FXGAMMAAVE risk sensitivities under shifts of the FX spot](./Fig/61.png)

### 4.8.12 SurfaceTimeFloor and SurfaceTimeFloorMaxTime

The property SurfaceTimeFloor can be found in the PARAMETRICVOL object. Its default value is YES. If SurfaceTimeFloor=YES, the time used in the term structure functions and in the calculation of the normalized strike z is floored at the first date present in the Offsets subtable (in ExpiryDate column) i.e. the volatility surface is "constant" at time points prior to the first date present in the ExpiryDate column of the Offsets subtable. The purpose of SurfaceTimeFloor=YES is to prevent the normalized strike value z or certain term structure functions from diverging.

Alternatively SurfaceTimeFloor can be set to an exact date. In this case the time used in the calculation of the normalized strike or in the calculation of certain term structure functions will be floored at this value and the parameters used in the volatility construction will be extrapolated flat at dates before the set date. As a result the surface becomes a "fixed" for dates before the input date. When SurfaceTimeFloor is set to an interval, the interval is taken from VolCalibDate or, if given, from the TermStructureValuationDate.

We test the correct implementation of SurfaceTimeFloor by performing the following test on Dictionary_1 that contains a call option on the USD/EUR FX rate with valuation date 30/04/2020, maturity date 09/08/2030 and strike 1.498. The FX volatility is represented by a PARAMETRICVOL object of SkewType=SA4. The SA4 parametric function has the attributes described in Table 57. We consider the following three scenarios:

| Scenario | SurfaceTimeFloor | Scenario 1 | Scenario 2 | Scenario 3 |
|----------|-----------------|------------|------------|------------|
| | | YES | 03/05/2021 | 03/05/2022 |

Table 61: In Scenario 1, the value of SurfaceTimeFloor is set to "YES" (the default value). This implies that in this scenario, the time used in the term structure functions and in the calculation of the normalized strike z is floored at the first date present in the Offsets subtable, which is 03/08/2020. In Scenario 2 the value of SurfaceTimeFloor is set to 03/05/2021 and in Scenario 3 the value of the SurfaceTimeFloor is set to 03/05/2022. These will represent the "cutoff" dates of Scenario 2 and Scenario 3. Note that, although the dates 03/05/2021 and 03/05/2022 are selected from the list of dates present in the ExpiryDate column of the OffSets subtable, the SurfaceTimeFloor can be set to any date.

In each scenario we price a series of call options having the time-to-maturity in the set {3M, 4M, 5M, ...70M, 71M, 72M}. These call options will have the same characteristics (valuation date, strike, underlying) as the original call option contained in Dictionary_1. The purpose of the test is to show profile of the implied volatilities as functions of time to maturity is "flattened" between valuation date and the date value set in SurfaceTimeFloor. We obtain the following profile of the implied volatilities as function of time-to-maturity:

![Figure 133: Implied BS volatilities for options with time-to-maturity contained in the set {3M, 4M, 5M, ...70M, 71M, 72M} in three scenarios: SurfaceTimeFloor=YES (i.e. "cutoff" date is 03/08/2020), SurfaceTimeFloor=03/05/2021 and SurfaceTimeFloor=03/05/2022. The results are in line with expectations: we can see the "flattening" of the implied volatility profiles in the case of Scenario 2 and Scenario 3 due to the time value set in SurfaceTimeFloor.](./Fig/62.png)

The property SurfaceTimeFloorMaxTime is present in the MODEL object. If its value is set to SECURITY, the SurfaceTimeFloor parameter in the PARAMETRICVOL object will be capped at the trade maturity, i.e. the (min,max) of the SurfaceTimeFloor=min(MaturityFloorDate), where FloorDate represents the original input floor date or the value derived from the input floor interval from the reference value date. If the parameter SurfaceTimeFloorMaxTime is not set or is set to NONE, the SurfaceTimeFloor parameter is unaffected. The default value of SurfaceTimeFloorMaxTime is UNSET.

### 4.8.13 VW12SkewCutoff

Note that, as communicated to us by DBAnalytics after the start of the present model parameter review, the parametric form VW12 is not used in the DBSMC-RateDeterministic_FXMarket model, and therefore the parameter VW12SkewCutoff will not have any impact on the model. For more details, see Section 4.8.1. However, since both VW12 parametric form and VW12SkewCutoff are mentioned in the submitted model rules (even though as excluded configuration), we chose to present here the VW12SkewCutoff definition for the sake of completeness.

It is easy to see that due to the way the parameter s_{kw} is defined in the case of the functional form VW12, see (84) and (85), the volatility surface is discontinuous in SKEW at SKEW=0. This can create problem when computing risk sensitivities if the SKEW changes sign between the base pricing and the bumped pricing. The property VW12SkewCutoff has been introduced to eliminate this discontinuity. We denote the value stored under the VW12SkewCutoff property by C. The introduction of VW12SkewCutoff allows for the parameter s_{kw} to vary smoothly between α_p and β_p on the put side and between β_c and α_c on the call side. We exemplify how VW12SkewCutoff affects teh definition of s_{kw} on the put side i.e. in the case z < 0. We remind that the original definition of s_{kw} is:

$$s_{kw} = \begin{cases}
\alpha_p & \text{if } SKEW < 0 \\
\beta_p & \text{if } SKEW \geq 0
\end{cases}$$

where:
$$\alpha_p = \ln(1 - \min(PUTWING, ASYMPTOTICTHRESHOLD))$$
$$\beta_p = -\frac{PUTDEPTH}{2SKEW}$$

We modify the definition as follows:

$$s_{kw} = \begin{cases}
\alpha_p & \text{if } SKEW < 0 \\
s_{kw-poly}(SKEW) & \text{if } SKEW \in [0,C] \\
\beta_p & \text{if } SKEW > C
\end{cases}$$

where:
$$s_{kw-poly}(SKEW) = \alpha_p + c_1SKEW + \frac{1}{2}c_2SKEW^2 + \frac{1}{3}c_3SKEW^3$$

The coefficients c₀, c₁, c₂, c₃ are determined from the boundary conditions:

$$\begin{cases}
s_{kw-poly}(0) = \alpha_p \\
s_{kw-poly}'(0) = 0 \\
s_{kw-poly}(C) = -\frac{PUTDEPTH}{2C} \\
s_{kw-poly}'(C) = \frac{PUTDEPTH}{2C^2}
\end{cases}$$

The solution of the above system can be found in Section 4.5.1 of [10]. Typically C is chosen between 0.03 and 0.05. Its easy to see that if the absolute value of the SKEW is above C the property VW12SkewCutoff does not impact the original definition of s_{kw}. Since the only SkewTypes relevant for FX derivatives, and hence for the products in scope of this model are SA4 and LABGD, we will not perform any testing w.r.t. VW12SkewCutoff parameter.

### 4.8.14 FitType

For DBAnalytics MARKETVOL objects of InputMode PARAMETRICVOL, the volatilities are defined with the help of a parametric function (SA4, LABGD) whose parameters are fitted to the input volatility surface using the MarketVolFunction P/VAUTOFIT. In this case, the typical DBAnalytics dictionary will contain a MARKETVOL object of type DELTAVOL or STRIKEVOL, a MODELVOL object containing information related to the parametric function and an EXTRAINFO object. The EXTRAINFO objects stores information concerning the the algorithm that performs the fit, as well as the operations that need to be performed before (e.g. data scrubbing) or after (e.g. two-stage fitting, or surface validation) the fit.

The FitType property is restricted SLICE. SLICE performs a maturity-by-maturity fit of the P/V slice parameters. As confirmed by DBAnalytics, if FitType is set to SLICE, the fitting will be done through the Offsets parameters.

### 4.8.15 TargetType

The TargetType property of the EXTRAINFO object can be set to VOL or PRICE. For the present model the TargetType is restricted to VOL. This implies that the option prices of the targets will be converted into implied volatilities which will be used as targets in the fitting algorithm. This setting is recommended for European options since in this case the approach does not involve approximations.

### 4.8.16 UseSyntheticForwards

The property UseSyntheticForwards is restricted to NO.

### 4.8.17 Weighting

The Weighting property of the EXTRAINFO object can be set to SPREAD, VEGA, NORMALIZEDVEGA, NORMALIZEDVEG-ADENSITY, NOTIONAL, VEGANOTIONAL, CUSTOM or NONE. This property defines the weights used in the fitting algorithm. For the present mode, the Weighting property is restricted to NOTIONAL and VEGANOTIONAL. NOTIONAL defines the weights as the Notional column. The VEGANOTIONAL defines each weight as the product between the option's vega and its notional. Testing around the above concepts can be found in Section 4.8.21.

### 4.8.18 PIVVolShiftType

The property PIVVolShiftType is present in the MARKETVOL object if InputType is PARAMETRICVOL and its purpose is to control the column VolShift present in the Offsets subtable. In the context of the present model, its value is restricted to ABSOLUTE, meaning that the values stored in the column VolShift of the Offsets subtable represent absolute shifts applied to the volatilities (computed based on the definition of the parametric form in use) at the time points listed in the ExpiryDate column of the Offsets subtable. Testing around the above concepts can be found in Section 4.8.21.

### 4.8.19 PricingInfoType

PRICINGINFO objects can be inserted into a DICTIONARY to provide different types of functionality. The type of functionality is determined by the BodyProperty. PricingInfoType is allowed to take one of the following values: AUTOCALIBRATION, AUTOBASIS, BARRIER, BARRIERINFO, REPORT, SETTLEDCASH, MODELVOL.

### 4.8.20 Advanced User Parameters

In the case of PARAMETRICVOL objects that are fitted to an input volatility surface, an EXTRAINFO object will present in the dictionary. The EXTRAINFO object can contain the following set of parameters that control the numerical algorithms used in the fitting:

• MaxFitIterations: controls the number of fit iterations. Minimum value is 500.
• StepTolerance: if the objective function changes by less than StepTolerance value at any fitting step, it is assumed that the minimum is reached. The StepTolerance must be set to a value less or equal to 0.01. The default value is 0.0001.
• GradTolerance: if the gradient is less than GradTolerance value at any fitting step, it is assumed that the minimum is reached. The GradTolerance must be set to a value less or equal to 0.01.
• IVTolerance: controls the accuracy level required when computing the implied volatility from input prices. The parameter must be set to a value less or equal to 0.01.
• IVNumIterations: controls the maximum number of iterations when calculating the implied volatilities from input prices. This parameter must be set to a value larger or equal to 50.
• GridCalcDigits: Number of machine precision digits used to generate bump for gradient calculation. No thresold is set in place w.r.t this parameter and the default value is 7.

The above description of the parameters can be found in [13]. We test the impact of the parameters on the fitting procedure performed by the DBAnalytics MarketVolFunction using the following dictionary:

1. Dictionary_1 contains a call option on the JPY/AUD FX rate, with valuation date 29/04/2020, maturity date 09/08/2030 and strike 1.49. The USD/EUR spot value is 1.0942. The dictionary contains a PARAMETRICVOL object of SkewType SA4 fitted to a MARKETVOL of InputType DELTAVOL where the volatilities are given under the form of (DN, CVX, RR)

We test the following set of values for each of the parameters controlling the numerical algorithms used in the fitting via MarketVolFunction:

| Parameter | Value 1 | Value 2 | Value 3 | Value 4 |
|-----------|---------|---------|---------|---------|
| MaxFitIterations | 500 | 600 | 750 | 1000 |
| StepTolerance | 0.01 | 0.005 | 0.001 | 0.0001 |
| GradTolerance | 0.01 | 0.005 | 0.001 | 0.0001 |
| IVTolerance | 0.01 | 0.005 | 0.001 | 0.0001 |
| IVNumIterations | 50 | 75 | 100 | 150 |
| GridCalcDigits | 5 | 7 | 10 | 12 |

Table 62: Tested values for the parameters controlling the numerical algorithms used in the fitting.

The following table displays the results in terms of errors between the target volatilities and the model-generated volatilities in the four scenarios considered for the GradTolerance parameter:

[The document continues with Tables 63-64 showing results of fitting using MarketVolFunction for different parameter values]

## 4.8.21 Testing results for PARAMETRICVOL configuration

In this section we examine the impact and the correct implementation of the parameters listed in Sections 4.8.8 - 4.8.16 and Section 4.8.13 - 4.8.18. These parameters are relevant for MARKETVOL objects of InputType PARAMETRICVOL as they store properties and parameters of the functional forms used to derive the volatilities. For our testing we consider four dictionaries with the following properties:

1. The first dictionary (Dictionary_1) contains a call option on the USDEUR FX rate, with valuation date 29/04/2020, maturity date 09/08/2030 and strike 1.49. The USDEUR spot value is 1.0942. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, RR, CVX). A MODELVOL object and an EXTRAINFO object are used to fit an SA4 functional form.

2. The second dictionary (Dictionary_2) contains a call option on the JPY/AUD FX rate with valuation date 13/07/2017, maturity date 13/01/2020 and strike 90. The JPY/AUD spot value is 86.6. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, 10C, 10P). A MODELVOL object and an EXTRAINFO object are used to fit an SA4 functional form.

3. The third dictionary (Dictionary_3) contains a call option on the JPY/USD FX rate with valuation date 15/09/2017, maturity date 15/09/2032 and strike 100. The JPY/USD spot value is 110.54. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, 10C, 10P). A MODELVOL object and an EXTRAINFO object are used to fit an SA4 functional form.

4. The fourth dictionary (Dictionary_4) contains a call option on the JPY/USD FX rate with valuation date 17/07/2017, maturity date 17/03/2018 and strike 119.27. The JPY/USD spot value is 112.64. The dictionary contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, 25RR, 25CVX, 10RR, 10CVX). The original dictionary setup contains a MODELVOL object and an EXTRAINFO object are used to fit an LARGD functional form. However, for comparison purposes, we will fit not only the original LARGD parametric form, but also a SA4 functional form (using corresponding MODELVOL and EXTRAINFO objects).

We begin by examining the performance of the PIVAUTOFIT function for different Weighting parameters. More precisely, we consider the two scenarios:

| Scenario | FitType | UseSynthsForwards | TargetType | Weighting | ResultType |
| --- | --- | --- | --- | --- | --- |
| Scenario 1 | SLICE | NO | VOL | NOTIONAL | PIVAUTOFIT |
| Scenario 2 | SLICE | NO | VOL | VEGANOTIONAL | PIVAUTOFIT |

Table 69: Properties of EXTRAINFO object in Scenario 1(Weighting=NOTIONAL) and Scenario 2 (Weighting=VEGANOTIONAL)

### Results Dictionary_1 - Weighting = NOTIONAL

For Dictionary_1, the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20200803 | DN | CALL | 1 | 0.0689003 | 0.0689003 | 0.0 |
| 20200803 | 25RR | CALL | 1 | -0.0064302 | -0.0064302 | 0.0 |
| 20200803 | 10CVX-DN | CALL | 1 | 0.012505 | 0.012505 | -0.0 |
| 20201103 | DN | CALL | 1 | 0.0697919 | 0.0697919 | 0.0 |
| 20201103 | 25RR | CALL | 1 | -0.0077137 | -0.0077137 | 0.0 |
| 20201103 | 10CVX-DN | CALL | 1 | 0.0150329 | 0.0150329 | -0.0 |
| 20210503 | DN | CALL | 1 | 0.0728805 | 0.0728805 | 0.0 |
| 20210503 | 25RR | CALL | 1 | -0.0083115 | -0.0083115 | 0.0 |
| 20210503 | 10CVX-DN | CALL | 1 | 0.016078 | 0.016078 | -0.0 |
| 20220503 | DN | CALL | 1 | 0.0772653 | 0.0772653 | 0.0 |
| 20220503 | 25RR | CALL | 1 | -0.0084473 | -0.0084473 | 0.0 |
| 20220503 | 10CVX-DN | CALL | 1 | 0.0156571 | 0.0156571 | 0.0 |
| 20250503 | DN | CALL | 1 | 0.082838 | 0.082838 | 0.0 |
| 20250503 | 25RR | CALL | 1 | -0.0071185 | -0.0071185 | 0.0 |
| 20250503 | 10CVX-DN | CALL | 1 | 0.0182936 | 0.0182936 | 0.0 |
| 20250430 | DN | CALL | 1 | 0.0879513 | 0.0879513 | 2e-10 |
| 20250430 | 25RR | CALL | 1 | -0.0053381 | -0.0053381 | 1e-10 |
| 20250430 | 10CVX-DN | CALL | 1 | 0.0183449 | 0.0183449 | -9e-10 |
| 20270503 | DN | CALL | 1 | 0.0911983 | 0.0911983 | 2e-10 |
| 20270503 | 25RR | CALL | 1 | -0.0035569 | -0.0035569 | 1e-10 |
| 20270503 | 10CVX-DN | CALL | 1 | 0.0188242 | 0.0188242 | -5e-10 |
| 20300502 | DN | CALL | 1 | 0.0938407 | 0.0938407 | 2e-10 |
| 20300502 | 25RR | CALL | 1 | -0.0020132 | -0.0020132 | 1e-10 |
| 20300502 | -10CVX-DN | CALL | 1 | -0.0191667 | -0.0191667 | -7e-10 |
| 20350503 | DN | CALL | 1 | 0.1018407 | 0.1018407 | 0.0 |
| 20350503 | 25RR | CALL | 1 | -0.0021632 | -0.0021632 | 1e-10 |
| 20350503 | -10CVX-DN | CALL | 1 | -0.0141667 | -0.0141667 | -2e-10 |
| 20400503 | DN | CALL | 1 | 0.1123407 | 0.1123407 | 0.0 |
| 20400503 | 25RR | CALL | 1 | -0.0019632 | -0.0019632 | 0.0 |
| 20400503 | 10CVX-DN | CALL | 1 | 0.0124667 | 0.0124667 | -1e-10 |
| 20500503 | DN | CALL | 1 | 0.1221407 | 0.1221407 | 0.0 |
| 20500503 | 25RR | CALL | 1 | -0.0022632 | -0.0022632 | 0.0 |
| 20500503 | 10CVX-DN | CALL | 1 | 0.0121667 | 0.0121667 | -1e-10 |

Table 65: Dictionary_1: results of the fitting using MarketVolFunction for the four different values considered for the IVTolerance parameter, see table 62. FittedVol_i, i=1,2,3,4 stores the model-generated impact volatility corresponding to IVTolerance=Value i. FitError_i, i=1,2,3,4 stores the difference between the target volatility and the model volatility corresponding to IVTolerance==Value i. We can see that the impact of changing the IVTolerance parameter to values below 0.001 (the current upper threshold) is 0.

The following table displays the results in terms of errors between the target volatilities and the model-generated volatilities in the figure scenarios considered for the MaxFilterations parameter:

Table 66: Dictionary_1: results of the fitting using MarketVolFunction for the four different values considered for the MaxFilterations parameter, see table 62. FittedVol_i, i=1,2,3,4 stores the model-generated impact volatility corresponding to MaxFilterations=Value i. FitError_i, i=1,2,3,4 stores the difference between the target volatility and the model volatility corresponding to MaxFilterations==Value i. We can see that the impact of changing the MaxFilterations parameter to values above 500 (the current lower threshold) is 0.

The following tables display the results in terms of errors between the target volatilities and the model-generated volatilities in the four scenarios considered for the StepTolerance parameter:

Table 67: Dictionary_1: results of the fitting using MarketVolFunction for the four different values considered for the StepTolerance parameter, see table 62. FittedVol_i, i=1,2,3,4 stores the model-generated impact volatility corresponding to StepTolerance=Value i. FitError_i, i=1,2,3,4 stores the difference between the target volatility and the model volatility corresponding to StepTolerance==Value i. We can see that the impact of changing the StepTolerance parameter to values below 0.01 (the current upper threshold) is 0.

The following two tables display the results in terms of errors between the target volatilities and the model-generated volatilities in the figure scenarios considered for the GradCalcDigits parameter:

Table 68: Dictionary_1: results of the fitting using MarketVolFunction for the four different values considered for the GradCalcDigits parameter, see table 62. FittedVol_i, i=1,2,3,4 stores the model-generated impact volatility corresponding to GradCalcDigits=Value i. FitError_i, i=1,2,3,4 stores the difference between the target volatility and the model volatility corresponding to GradCalcDigits is 0.

Table 70: Results of the calibration when Weighting=NOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in the majority of case.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 134: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV of type SA4 fitted to this volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,RR,CVX). Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money. Note that the best fit is obtained at the time slice closest to the option's maturity (10Y).](./Fig/7.png)

### Results Dictionary_2 - Weighting = NOTIONAL

For Dictionary_2, the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170913 | 10P | PUT | 1 | 0.1236828 | 0.1236828 | -3e-10 |
| 20170913 | DN | CALL | 1 | 0.0946151 | 0.0946151 | 1e-09 |
| 20170913 | 10C | CALL | 1 | 0.0886254 | 0.0886254 | -4e-10 |
| 20171213 | 10P | PUT | 1 | 0.1451247 | 0.1451247 | 0.0 |
| 20171213 | DN | CALL | 1 | 0.1032355 | 0.1032355 | 0.0 |
| 20171213 | 10C | CALL | 1 | 0.0945349 | 0.0945349 | 0.0 |
| 20180613 | 10P | PUT | 1 | 0.1704427 | 0.1704427 | 0.0 |
| 20180613 | DN | CALL | 1 | 0.111069 | 0.111069 | 0.0 |
| 20180613 | 10C | CALL | 1 | 0.097524 | 0.097524 | 0.0 |
| 20190613 | 10P | PUT | 1 | 0.1841198 | 0.1841198 | -0.0 |
| 20190613 | DN | CALL | 1 | 0.1167332 | 0.1167332 | 0.0 |
| 20190613 | 10C | CALL | 1 | 0.1011083 | 0.1011083 | 0.0 |
| 20200611 | 10P | PUT | 1 | 0.1990821 | 0.1990821 | -0.0 |
| 20200611 | DN | CALL | 1 | 0.1225751 | 0.1225751 | 0.0 |
| 20200611 | 10C | CALL | 1 | 0.1047343 | 0.1047343 | 0.0 |
| 20220613 | 10P | PUT | 1 | 0.2255239 | 0.2255239 | -0.0 |
| 20220613 | DN | CALL | 1 | 0.1354722 | 0.1354722 | 0.0 |
| 20220613 | 10C | CALL | 1 | 0.1122528 | 0.1122528 | 0.0 |
| 20240613 | 10P | PUT | 1 | 0.2335558 | 0.2335558 | -0.0 |
| 20240613 | DN | CALL | 1 | 0.1448304 | 0.1448304 | 0.0 |
| 20240613 | 10C | CALL | 1 | 0.1174882 | 0.1174882 | 0.0 |
| 20270611 | 10P | PUT | 1 | 0.2447462 | 0.2447462 | -0.0 |
| 20270611 | DN | CALL | 1 | 0.1580929 | 0.1580929 | 1e-10 |
| 20270611 | 10C | CALL | 1 | 0.1241034 | 0.1241034 | 0.0 |
| 20320613 | 10P | PUT | 1 | 0.2513036 | 0.2513756 | -3e-10 |
| 20320613 | DN | CALL | 1 | 0.1520929 | 0.1520929 | 0.0 |
| 20320613 | 10C | CALL | 1 | 0.1170999 | 0.1170999 | -1e-10 |
| 20370613 | 10P | PUT | 1 | 0.2496126 | 0.2496129 | -0.0 |
| 20370613 | DN | CALL | 1 | 0.1520929 | 0.1520929 | 0.0 |
| 20370613 | 10C | CALL | 1 | 0.1148717 | 0.1148717 | 0.0 |
| 20470613 | 10P | PUT | 1 | 0.2475202 | 0.2475202 | -0.0 |
| 20470613 | DN | CALL | 1 | 0.1520929 | 0.1520929 | 0.0 |
| 20470613 | 10C | CALL | 1 | 0.1170846 | 0.1170846 | 0.0 |

Table 71: Dictionary_2: results of the calibration when Weighting=NOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in the majority of case.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 135: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV of type SA4 fitted to this volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,10C,10P). The calibration aims to match at each time slice the implied volatilities corresponding to the points DN, 10C and 10P. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/9.png)

### Results Dictionary_3 - Weighting = NOTIONAL

For Dictionary_3, the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170913 | 79.6224 | PUT | 7.4327 | 0.1236828 | 0.1236828 | 0.0 |
| 20170913 | 96.0312 | PUT | 17.2234 | 0.0946152 | 0.0946152 | 0.0 |
| 20170913 | 91.214 | CALL | 7.7576 | 0.0886254 | 0.0906254 | 0.0 |
| 20171213 | 75.3044 | PUT | 10.3182 | 0.1451247 | 0.1451247 | -1.3e-09 |
| 20171213 | 85.4262 | PUT | 24.1378 | 0.1032357 | 0.1032357 | 3e-10 |
| 20171213 | 93.3931 | CALL | 10.8681 | 0.0945349 | 0.0945349 | 3e-10 |
| 20180613 | 68.6092 | PUT | 14.1571 | 0.1704427 | 0.1704427 | 5e-10 |
| 20180613 | 84.1378 | PUT | 33.685 | 0.111069 | 0.111069 | 1e-10 |
| 20180613 | 96.0477 | CALL | 15.5863 | 0.097524 | 0.097524 | 6e-10 |
| 20190613 | 60.0286 | PUT | 18.6566 | 0.18412 | 0.18412 | -6e-10 |
| 20190613 | 81.4004 | PUT | 45.9711 | 0.1167332 | 0.1167332 | 0.0 |
| 20190613 | 99.5814 | CALL | 21.5833 | 0.1011083 | 0.1011083 | 5e-10 |
| 20200611 | 52.9512 | PUT | 21.5073 | 0.1990825 | 0.1990825 | -0.0 |
| 20200611 | 78.3703 | PUT | 54.19 | 0.1225751 | 0.1225751 | -0.0 |
| 20200611 | 101.8939 | CALL | 25.9914 | 0.1047343 | 0.1047343 | 0.0 |
| 20220613 | 41.6063 | PUT | 24.4467 | 0.2255239 | 0.2255259 | -0.0 |
| 20220613 | 71.5931 | PUT | 63.9434 | 0.1354722 | 0.1354722 | 0.0 |
| 20220613 | 104.9257 | CALL | 32.0734 | 0.1122528 | 0.1122528 | 0.0 |
| 20240613 | 34.3363 | PUT | 25.6227 | 0.2335558 | 0.2335558 | -0.0 |
| 20240613 | 64.8174 | PUT | 68.2326 | 0.1448304 | 0.1448304 | 0.0 |
| 20240613 | 105.9393 | CALL | 35.8993 | 0.1174882 | 0.1174882 | 0.0 |
| 20270611 | 26.3263 | PUT | 25.4917 | 0.2447462 | 0.2447462 | -0.0 |
| 20270611 | 54.7462 | PUT | 68.7423 | 0.1580929 | 0.1580929 | -0.0 |
| 20270611 | 106.3038 | CALL | 39.061 | 0.1241034 | 0.1241034 | 0.0 |
| 20320613 | 18.6354 | PUT | 23.6536 | 0.2513039 | 0.2513059 | -3e-10 |
| 20320613 | 52.522 | PUT | 75.4249 | 0.1520929 | 0.1520929 | -0.0 |
| 20320613 | 96.5346 | CALL | 40.2169 | 0.1170999 | 0.1170999 | -1e-10 |
| 20370613 | 14.6541 | PUT | 21.7259 | 0.2496129 | 0.2496129 | -3e-10 |
| 20370613 | 46.4964 | PUT | 72.8417 | 0.1520929 | 0.1520929 | -0.0 |
| 20370613 | 95.4923 | CALL | 40.1428 | 0.1148717 | 0.1148717 | -1e-10 |
| 20470613 | 10.0592 | PUT | 18.0972 | 0.2475206 | 0.2475206 | -4e-10 |
| 20470613 | 38.2446 | PUT | 66.0516 | 0.1520929 | 0.1520929 | -0.0 |
| 20470613 | 96.7503 | CALL | 38.9331 | 0.1170846 | 0.1170846 | -2e-10 |

Table 72: Dictionary_3: results of the calibration when Weighting=NOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in the majority of case.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 136: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV of type SA4 fitted to this volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,10C,10P). The calibration aims to match at each time slice the implied volatilities corresponding to the points DN, 10C and 10P. Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLS) mean that the implied volatility surfaces do not agree completely. Further note that the two volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/1.png)

### Results Dictionary_4 - Weighting = NOTIONAL

For Dictionary_4, when fitting a parametric form of SkewType=SA4 the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170724 | DN | CALL | 1 | 0.3354093 | 0.3354093 | -6.3e-09 |
| 20170724 | 25RR | CALL | 1 | 0.0038446 | 0.0028936 | -0.00099507 |
| 20170724 | 25CVX-DN | CALL | 1 | 0.0029337 | 0.0028797 | -5.393984e-05 |
| 20170724 | 10RR | CALL | 1 | 0.004998 | 0.0054983 | 0.000500301919 |
| 20170724 | 10CVX-DN | CALL | 1 | 0.0102679 | 0.0102832 | 1.53091e-05 |
| 20170817 | DN | CALL | 1 | 0.2508519 | 0.2508519 | -1.18e-08 |
| 20170817 | 25RR | CALL | 1 | 0.0075098 | 0.0056526 | -0.0018571 |
| 20170817 | 25CVX-DN | CALL | 1 | 0.0038672 | 0.0038248 | -4.24152e-05 |
| 20170817 | 10RR | CALL | 1 | 0.0097627 | 0.0107402 | 0.00097774 |
| 20170817 | 10CVX-DN | CALL | 1 | 0.0135351 | 0.0135473 | 1.21876e-05 |
| 20170917 | DN | CALL | 1 | 0.2300724 | 0.2300724 | -1.07e-08 |
| 20170917 | 25RR | CALL | 1 | 0.0077183 | 0.0058095 | -0.0019087 |
| 20170917 | 25CVX-DN | CALL | 1 | 0.0041327 | 0.0040989 | -3.37574e-05 |
| 20170917 | 10RR | CALL | 1 | 0.0100337 | 0.0110383 | 0.00100445 |
| 20170917 | 10CVX-DN | CALL | 1 | 0.0144643 | 0.0144741 | 9.7304e-06 |
| 20171017 | DN | CALL | 1 | 0.218177 | 0.218177 | 2.5e-08 |
| 20171017 | 25RR | CALL | 1 | 0.0092522 | 0.0069642 | -0.0022880 |
| 20171017 | 25CVX-DN | CALL | 1 | 0.0052767 | 0.0052692 | -7.5132e-06 |
| 20171017 | 10RR | CALL | 1 | 0.0120279 | 0.0132321 | 0.001204 |
| 20171017 | 10CVX-DN | CALL | 1 | 0.0184685 | 0.0184704 | 1.8189e-06 |
| 20180117 | DN | CALL | 1 | 0.2074063 | 0.2074066 | 2.752e-07 |
| 20180117 | 25RR | CALL | 1 | 0.0093332 | 0.0070252 | -0.0023080 |
| 20180117 | 25CVX-DN | CALL | 1 | 0.0057024 | 0.0057137 | 1.13449e-05 |
| 20180117 | 10RR | CALL | 1 | 0.0121332 | 0.013348 | 0.00121148 |
| 20180117 | 10CVX-DN | CALL | 1 | 0.0199583 | 0.0199517 | -6.6213e-06 |
| 20180717 | DN | CALL | 1 | 0.1976203 | 0.1976204 | 1.142e-07 |
| 20180717 | 25RR | CALL | 1 | 0.0094649 | 0.0071242 | -0.0023406 |
| 20180717 | 25CVX-DN | CALL | 1 | 0.0061142 | 0.0061495 | 3.52952e-05 |
| 20180717 | 10RR | CALL | 1 | 0.0123043 | 0.0135362 | 0.00123319 |
| 20180717 | 10CVX-DN | CALL | 1 | 0.0213996 | 0.0213883 | -1.13104e-05 |
| 20190717 | DN | CALL | 1 | 0.1853753 | 0.1853759 | 5.606e-07 |
| 20190717 | 25RR | CALL | 1 | 0.0095263 | 0.0071705 | -0.0023557 |
| 20190717 | 25CVX-DN | CALL | 1 | 0.0067335 | 0.0068094 | 7.59504e-05 |
| 20190717 | 10RR | CALL | 1 | 0.0123842 | 0.0136242 | 0.00124 |
| 20190717 | 10CVX-DN | CALL | 1 | 0.0235672 | 0.0235397 | -2.74737e-05 |
| 20200717 | DN | CALL | 1 | 0.1812359 | 0.1812365 | 5.841e-07 |
| 20200717 | 25RR | CALL | 1 | 0.0095915 | 0.0072196 | -0.0023719 |
| 20200717 | 25CVX-DN | CALL | 1 | 0.0072322 | 0.007341 | 0.0001087 |
| 20200717 | 10RR | CALL | 1 | 0.012469 | 0.0137175 | 0.0012485 |
| 20200717 | 10CVX-DN | CALL | 1 | 0.0253126 | 0.0252759 | -3.66653e-05 |
| 20220717 | DN | CALL | 1 | 0.1775838 | 0.1775844 | 6.596e-07 |
| 20220717 | 25RR | CALL | 1 | 0.0099881 | 0.0075181 | -0.0024699 |
| 20220717 | 25CVX-DN | CALL | 1 | 0.007666 | 0.0078073 | 0.0001412 |
| 20220717 | 10RR | CALL | 1 | 0.0129845 | 0.0142846 | 0.0013001 |
| 20220717 | 10CVX-DN | CALL | 1 | 0.0268311 | 0.0267847 | -4.63766e-05 |
| 20240717 | DN | CALL | 1 | 0.1767857 | 0.1767866 | 9.011e-07 |
| 20240717 | 25RR | CALL | 1 | 0.0101421 | 0.0076341 | -0.0025080 |
| 20240717 | 25CVX-DN | CALL | 1 | 0.0082815 | 0.008465 | 0.0001834 |
| 20240717 | 10RR | CALL | 1 | 0.0131847 | 0.0145045 | 0.0013202 |
| 20240717 | 10CVX-DN | CALL | 1 | 0.0289853 | 0.0289249 | -6.0324e-05 |
| 20270717 | DN | CALL | 1 | 0.1760966 | 0.1760978 | 1.1708e-06 |
| 20270717 | 25RR | CALL | 1 | 0.0102796 | 0.0077376 | -0.0025419 |
| 20270717 | 25CVX-DN | CALL | 1 | 0.0088151 | 0.0090389 | 0.0002237 |
| 20270717 | 10RR | CALL | 1 | 0.0133635 | 0.0147017 | 0.0013382 |
| 20270717 | 10CVX-DN | CALL | 1 | 0.030853 | 0.0307791 | -7.38695e-05 |

Table 73: Results of the calibration when Weighting=NOTIONAL for a SA4 parametric form. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are small in the majority of cases.

For Dictionary_4, when fitting a parametric form of SkewType=LARGD the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170724 | DN | CALL | 1 | 0.3354093 | 0.3354093 | -0.0 |
| 20170724 | 25RR | CALL | 1 | 0.0038446 | 0.0038446 | 0.0 |
| 20170724 | 25CVX-DN | CALL | 1 | 0.0029337 | 0.0029337 | 0.0 |
| 20170724 | 10RR | CALL | 1 | 0.004998 | 0.004998 | 1e-10 |
| 20170724 | 10CVX-DN | CALL | 1 | 0.0102679 | 0.0102679 | -0.0 |
| 20170817 | DN | CALL | 1 | 0.2508519 | 0.2508519 | 0.0 |
| 20170817 | 25RR | CALL | 1 | 0.0075098 | 0.0075098 | 0.0 |
| 20170817 | 25CVX-DN | CALL | 1 | 0.0038672 | 0.0038672 | 0.0 |
| 20170817 | 10RR | CALL | 1 | 0.0097627 | 0.0097627 | 0.0 |
| 20170817 | 10CVX-DN | CALL | 1 | 0.0135351 | 0.0135351 | -0.0 |
| 20170917 | DN | CALL | 1 | 0.2300724 | 0.2300724 | 0.0 |
| 20170917 | 25RR | CALL | 1 | 0.0077183 | 0.0077183 | 0.0 |
| 20170917 | 25CVX-DN | CALL | 1 | 0.0041327 | 0.0041327 | 0.0 |
| 20170917 | 10RR | CALL | 1 | 0.0100337 | 0.0100337 | 0.0 |
| 20170917 | 10CVX-DN | CALL | 1 | 0.0144643 | 0.0144643 | -0.0 |
| 20171017 | DN | CALL | 1 | 0.218177 | 0.218177 | 0.0 |
| 20171017 | 25RR | CALL | 1 | 0.0092522 | 0.0092522 | 0.0 |
| 20171017 | 25CVX-DN | CALL | 1 | 0.0052767 | 0.0052767 | 0.0 |
| 20171017 | 10RR | CALL | 1 | 0.0120279 | 0.0120279 | 0.0 |
| 20171017 | 10CVX-DN | CALL | 1 | 0.0184685 | 0.0184685 | -0.0 |
| 20180117 | DN | CALL | 1 | 0.2074063 | 0.2074063 | 0.0 |
| 20180117 | 25RR | CALL | 1 | 0.0093332 | 0.0093332 | 0.0 |
| 20180117 | 25CVX-DN | CALL | 1 | 0.0057024 | 0.0057024 | 0.0 |
| 20180117 | 10RR | CALL | 1 | 0.0121332 | 0.0121332 | 0.0 |
| 20180117 | 10CVX-DN | CALL | 1 | 0.0199583 | 0.0199583 | -0.0 |
| 20180717 | DN | CALL | 1 | 0.1976203 | 0.1976203 | -0.0 |
| 20180717 | 25RR | CALL | 1 | 0.0094649 | 0.0094649 | 0.0 |
| 20180717 | 25CVX-DN | CALL | 1 | 0.0061142 | 0.0061142 | 0.0 |
| 20180717 | 10RR | CALL | 1 | 0.0123043 | 0.0123043 | 0.0 |
| 20180717 | 10CVX-DN | CALL | 1 | 0.0213996 | 0.0213996 | -0.0 |
| 20190717 | DN | CALL | 1 | 0.1853753 | 0.1853753 | 0.0 |
| 20190717 | 25RR | CALL | 1 | 0.0095263 | 0.0095263 | -0.0 |
| 20190717 | 25CVX-DN | CALL | 1 | 0.0067335 | 0.0067335 | -0.0 |
| 20190717 | 10RR | CALL | 1 | 0.0123842 | 0.0123842 | 0.0 |
| 20190717 | 10CVX-DN | CALL | 1 | 0.0235672 | 0.0235672 | 0.0 |
| 20200717 | DN | CALL | 1 | 0.1812359 | 0.1812359 | 0.0 |
| 20200717 | 25RR | CALL | 1 | 0.0095915 | 0.0095915 | 0.0 |
| 20200717 | 25CVX-DN | CALL | 1 | 0.0072322 | 0.0072322 | -0.0 |
| 20200717 | 10RR | CALL | 1 | 0.012469 | 0.012469 | 0.0 |
| 20200717 | 10CVX-DN | CALL | 1 | 0.0253126 | 0.0253126 | 0.0 |
| 20220717 | DN | CALL | 1 | 0.1775838 | 0.1775838 | 0.0 |
| 20220717 | 25RR | CALL | 1 | 0.0099881 | 0.0099881 | 0.0 |
| 20220717 | 25CVX-DN | CALL | 1 | 0.007666 | 0.007666 | 1e-10 |
| 20220717 | 10RR | CALL | 1 | 0.0129845 | 0.0129845 | 1e-10 |
| 20220717 | 10CVX-DN | CALL | 1 | 0.0268311 | 0.0268311 | 0.0 |
| 20240717 | DN | CALL | 1 | 0.1767857 | 0.1767857 | -0.0 |
| 20240717 | 25RR | CALL | 1 | 0.0101421 | 0.0101421 | -0.0 |
| 20240717 | 25CVX-DN | CALL | 1 | 0.0082815 | 0.0082815 | 0.0 |
| 20240717 | 10RR | CALL | 1 | 0.0131847 | 0.0131847 | -0.0 |
| 20240717 | 10CVX-DN | CALL | 1 | 0.0289853 | 0.0289853 | -0.0 |
| 20270717 | DN | CALL | 1 | 0.1760966 | 0.1760966 | -0.0 |
| 20270717 | 25RR | CALL | 1 | 0.0102796 | 0.0102796 | -0.0 |
| 20270717 | 25CVX-DN | CALL | 1 | 0.0088151 | 0.0088151 | 1e-10 |
| 20270717 | 10RR | CALL | 1 | 0.0133635 | 0.0133635 | -1e-10 |
| 20270717 | 10CVX-DN | CALL | 1 | 0.030853 | 0.030853 | -0.0 |

Table 74: Results of the calibration when Weighting=NOTIONAL for a LARGD parametric form. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in the majority of case. The quality of fit is significantly better than in the case of the SA4 parametric form. This is due to the fact that in the case of Dictionary_4 we need to calibrate to five targets at each time point, as opposed to three in the previous dictionaries,and therefore the LARGD functional form is better suited in this situation.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 137: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV of type SA4 fitted to this volatility and LARGD fitted to this volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,25RR, 25CVX,10RR, 10CVX). Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLs) mean that the implied volatility surfaces do not agree completely. Further note that the volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/6.png)

We consider now Scenario 2: Weighting=VEGANOTIONAL. In this case, the PIVAUTOFIT method will not work unless the MARKETVOL object is of InputType=STRIKEVOL. In order to circumvent this issue using the available testing dictionaries, we convert the original DELTAVOL objects into STRIKEVOL objects using the DBAnalytics MarketVolFunction DeltaVolToStrikeVol. This function converts a MARKETVOL with InputMode=DELTAVOL into a MARKETVOL with inputMode = STRIKEVOL i.e. converts a volatility surface defined as a function of delta (and expiry) into a volatility surface defined as a function of strike (and expiry).

### Results Dictionary_1 - Weighting = VEGANOTIONAL

For Dictionary_1, the results of the calibration using Weighting=NOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20200803 | 1.035 | PUT | 0.0983 | 0.089993 | 0.089993 | 0.0 |
| 20200803 | 1.0972 | CALL | 0.2231 | 0.0689003 | 0.0689003 | 0.0 |
| 20200803 | 1.1608 | CALL | 0.098 | 0.0728177 | 0.0728177 | 0.0 |
| 20201103 | 1.0089 | PUT | 0.1381 | 0.0957272 | 0.0957272 | -1e-10 |
| 20201103 | 1.1002 | CALL | 0.3137 | 0.0697919 | 0.0697919 | 0.0 |
| 20201103 | 1.1776 | CALL | 0.1378 | 0.0739224 | 0.0739224 | 0.0 |
| 20210503 | 0.975 | PUT | 0.1946 | 0.1007088 | 0.1007088 | -0.0 |
| 20210503 | 1.1072 | CALL | 0.4421 | 0.0728805 | 0.0728805 | 0.0 |
| 20210503 | 1.2233 | CALL | 0.1943 | 0.0772081 | 0.0772081 | 0.0 |
| 20220503 | 0.9328 | PUT | 0.2771 | 0.1043431 | 0.1043431 | 0.0 |
| 20220503 | 1.1219 | CALL | 0.6297 | 0.0772653 | 0.0772653 | 0.0 |
| 20220503 | 1.3017 | CALL | 0.2769 | 0.0815016 | 0.0815016 | 0.0 |
| 20250503 | 0.8969 | PUT | 0.3422 | 0.1108397 | 0.1108397 | 0.0 |
| 20250503 | 1.1382 | CALL | 0.7776 | 0.082838 | 0.082838 | 0.0 |
| 20250503 | 1.3978 | CALL | 0.3419 | 0.0914245 | 0.0914245 | 0.0 |
| 20250430 | 0.8606 | PUT | 0.4492 | 0.1129976 | 0.1129976 | -0.0 |
| 20250430 | 1.1749 | CALL | 1.0203 | 0.0879513 | 0.0879513 | 0.0 |
| 20250430 | 1.5716 | CALL | 0.4484 | 0.099595 | 0.099595 | 0.0 |
| 20270503 | 0.8393 | PUT | 0.5389 | 0.113876 | 0.113876 | 0.0 |
| 20270503 | 1.2152 | CALL | 1.2247 | 0.0911983 | 0.0911983 | 0.0 |
| 20270503 | 1.7604 | CALL | 0.5386 | 0.108169 | 0.108169 | 0.0 |
| 20300502 | 0.8178 | PUT | 0.6512 | 0.114307 | 0.114307 | 0.0 |
| 20300502 | 1.2726 | CALL | 1.4798 | 0.0938407 | 0.0938407 | 0.0 |
| 20300502 | 2.0389 | CALL | 0.6507 | 0.1177077 | 0.1177077 | 0.0 |
| 20350503 | 0.7845 | PUT | 0.8013 | 0.1177931 | 0.1177931 | 0.0 |
| 20350503 | 1.3716 | CALL | 1.8211 | 0.1018407 | 0.1018407 | 0.0 |
| 20350503 | 2.4677 | CALL | 0.8009 | 0.1142216 | 0.1142216 | 0.0 |
| 20400503 | 0.7495 | PUT | 0.9279 | 0.1263514 | 0.1263514 | -1e-10 |
| 20400503 | 1.4958 | CALL | 2.1088 | 0.1123407 | 0.1123407 | 1e-10 |
| 20400503 | 3.112 | CALL | 0.9275 | 0.1232834 | 0.1232834 | 1e-10 |
| 20500503 | 0.739 | PUT | 1.1785 | 0.1360361 | 0.1360361 | 0.0 |
| 20500503 | 1.8204 | CALL | 2.6787 | 0.1221407 | 0.1221407 | 0.0 |
| 20500503 | 4.8068 | CALL | 1.1783 | 0.1325786 | 0.1325786 | 0.0 |

Table 75: Dictionary_1: results of the calibration when Weighting=VEGANOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in in all cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 138: Dictionary 1. Slices of the implied volatility surface obtained from the original DELTAVOL, the STRIKEVOL used for calibration and from the PIV of type SA4 fitted to the STRIKEVOL volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,RR,CVX). Note that, there is perfect agreement between the STRIKEVOL and DELTAVOL implied volatility surfaces. Further note that, although the 3 conditions defining each slice are satisfied by all three volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLs and STRIKEVOLs) mean that the implied volatility surfaces DELTAVOL/STRIKEVOL and PIV do not agree completely. Observe that the DELTAVOL/STRIKEVOL and PIV volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/8.png)

### Results Dictionary_2 - Weighting = VEGANOTIONAL

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170913 | 79.6224 | PUT | 7.4327 | 0.1236828 | 0.1236828 | 0.0 |
| 20170913 | 86.0312 | PUT | 17.2234 | 0.0946152 | 0.0946152 | 0.0 |
| 20170913 | 91.214 | CALL | 7.7576 | 0.0886254 | 0.0906254 | 0.0 |
| 20171213 | 75.3044 | PUT | 10.3182 | 0.1451247 | 0.1451247 | -1.3e-09 |
| 20171213 | 85.4262 | PUT | 24.1378 | 0.1032357 | 0.1032357 | 3e-10 |
| 20171213 | 93.3931 | CALL | 10.8681 | 0.0945349 | 0.0945349 | 3e-10 |
| 20180613 | 68.6092 | PUT | 14.1571 | 0.1704427 | 0.1704427 | 5e-10 |
| 20180613 | 84.1378 | PUT | 33.685 | 0.111069 | 0.111069 | 1e-10 |
| 20180613 | 96.0477 | CALL | 15.5863 | 0.097524 | 0.097524 | 6e-10 |
| 20190613 | 60.0286 | PUT | 18.6566 | 0.18412 | 0.18412 | -6e-10 |
| 20190613 | 81.4004 | PUT | 45.9711 | 0.1167332 | 0.1167332 | 0.0 |
| 20190613 | 99.5814 | CALL | 21.5833 | 0.1011083 | 0.1011083 | 5e-10 |
| 20200611 | 52.9512 | PUT | 21.5073 | 0.1990825 | 0.1990825 | -0.0 |
| 20200611 | 78.3703 | PUT | 54.19 | 0.1225751 | 0.1225751 | -0.0 |
| 20200611 | 101.8939 | CALL | 25.9914 | 0.1047343 | 0.1047343 | 0.0 |
| 20220613 | 41.6063 | PUT | 24.4467 | 0.2255239 | 0.2255259 | -0.0 |
| 20220613 | 71.5931 | PUT | 63.9434 | 0.1354722 | 0.1354722 | 0.0 |
| 20220613 | 104.9257 | CALL | 32.0734 | 0.1122528 | 0.1122528 | 0.0 |
| 20240613 | 34.3363 | PUT | 25.6227 | 0.2335558 | 0.2335558 | -0.0 |
| 20240613 | 64.8174 | PUT | 68.2326 | 0.1448304 | 0.1448304 | 0.0 |
| 20240613 | 105.9393 | CALL | 35.8993 | 0.1174882 | 0.1174882 | 0.0 |
| 20270611 | 26.3263 | PUT | 25.4917 | 0.2447462 | 0.2447462 | -0.0 |
| 20270611 | 54.7462 | PUT | 68.7423 | 0.1580929 | 0.1580929 | -0.0 |
| 20270611 | 106.3038 | CALL | 39.061 | 0.1241034 | 0.1241034 | 0.0 |
| 20320613 | 18.6354 | PUT | 23.6536 | 0.2513039 | 0.2513059 | 3e-10 |
| 20320613 | 52.522 | PUT | 75.4249 | 0.1520929 | 0.1520929 | -0.0 |
| 20320613 | 96.5346 | CALL | 40.2169 | 0.1170999 | 0.1170999 | -1e-10 |
| 20370613 | 14.6541 | PUT | 21.7259 | 0.2496129 | 0.2496129 | -3e-10 |
| 20370613 | 46.4964 | PUT | 72.8417 | 0.1520929 | 0.1520929 | -0.0 |
| 20370613 | 95.4923 | CALL | 40.1428 | 0.1148717 | 0.1148717 | -1e-10 |
| 20470613 | 10.0592 | PUT | 18.0972 | 0.2475206 | 0.2475206 | -4e-10 |
| 20470613 | 38.2446 | PUT | 66.0516 | 0.1520929 | 0.1520929 | -0.0 |
| 20470613 | 95.7503 | CALL | 38.9331 | 0.1170846 | 0.1170846 | -2e-10 |

Table 76: Dictionary_2: results of the calibration when Weighting=VEGANOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in almost all cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 139: Dictionary 2. Slices of the implied volatility surface obtained from the original DELTAVOL, the STRIKEVOL used for calibration and from the PIV of type SA4 fitted to the STRIKEVOL volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,10C,10P). The calibration aims to match at each time slice the implied volatilities corresponding to the points DN, 10C and 10P. Note that, there is perfect agreement between the STRIKEVOL and DELTAVOL implied volatility surfaces. Further note that, although the 3 conditions defining each slice are satisfied by all three volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLs and STRIKEVOLs) mean that the implied volatility surfaces DELTAVOL/STRIKEVOL and PIV do not agree completely. Observe that the DELTAVOL/STRIKEVOL and PIV volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/10.png)

### Results Dictionary_3 - Weighting = VEGANOTIONAL

In the case of Dictionary_3 we perform the same initial step: converting the original DELTAVOL into a STRIKEVOL using the DBAnalytics function DeltaVolToStrikeVol. The results of the SA4 calibration when using Weighting=VEGANOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20171115 | 102.6367 | PUT | 9.6956 | 0.1110619 | 0.1110619 | 0.0 |
| 20171115 | 110.1736 | CALL | 22.0401 | 0.0883066 | 0.0883066 | 0.0 |
| 20171115 | 116.4623 | CALL | 9.6956 | 0.0863715 | 0.0863715 | 1e-10 |
| 20180215 | 98.6211 | PUT | 13.6796 | 0.1185854 | 0.1185854 | 0.0 |
| 20180215 | 109.726 | CALL | 31.6965 | 0.0911626 | 0.0911626 | 0.0 |
| 20180215 | 118.9625 | CALL | 13.6796 | 0.0867354 | 0.0867354 | 1e-10 |
| 20180815 | 92.717 | PUT | 19.0284 | 0.1282765 | 0.1282765 | 1e-10 |
| 20180815 | 108.8746 | CALL | 43.2507 | 0.095226 | 0.095226 | 0.0 |
| 20180815 | 122.737 | CALL | 19.0284 | 0.0936641 | 0.0936641 | 2e-10 |
| 20190815 | 85.0053 | PUT | 28.3063 | 0.1307895 | 0.1307895 | 2e-10 |
| 20190815 | 106.9015 | CALL | 69.7995 | 0.0966126 | 0.0966126 | 0.0 |
| 20190815 | 127.4512 | CALL | 28.3063 | 0.0970047 | 0.0970047 | 3e-10 |
| 20200813 | 78.8766 | PUT | 31.4111 | 0.1335606 | 0.1335606 | 0.0 |
| 20200813 | 104.7513 | CALL | 71.4035 | 0.097342 | 0.097342 | 0.0 |
| 20200813 | 131.6807 | CALL | 31.4111 | 0.1024637 | 0.1024637 | 0.0 |
| 20220815 | 68.9256 | PUT | 38.3747 | 0.138323 | 0.138323 | 0.0 |
| 20220815 | 100.1418 | CALL | 87.2331 | 0.1000585 | 0.1000585 | 0.0 |
| 20220815 | 138.393 | CALL | 38.3747 | 0.1109047 | 0.1109047 | 0.0 |
| 20240815 | 60.7346 | PUT | 42.7628 | 0.1443809 | 0.1443809 | 0.0 |
| 20240815 | 95.7215 | CALL | 97.2082 | 0.1046367 | 0.1046367 | 0.0 |
| 20240815 | 142.9581 | CALL | 42.7628 | 0.1157611 | 0.1157611 | 0.0 |
| 20270813 | 50.5859 | PUT | 46.5371 | 0.1567494 | 0.1567494 | 0.0 |
| 20270813 | 90.1273 | CALL | 105.7881 | 0.1143104 | 0.1143104 | 0.0 |
| 20270813 | 152.2405 | CALL | 46.5371 | 0.1259524 | 0.1259524 | 0.0 |
| 20320813 | 40.255 | PUT | 48.6951 | 0.1635897 | 0.1635897 | 0.0 |
| 20320813 | 83.1001 | CALL | 110.6935 | 0.1231047 | 0.1231047 | 0.0 |
| 20320813 | 152.5031 | CALL | 48.6951 | 0.1225484 | 0.1225484 | 0.0 |
| 20370813 | 34.2092 | PUT | 48.2609 | 0.1623143 | 0.1623143 | 0.0 |
| 20370813 | 77.4746 | CALL | 109.7065 | 0.1227773 | 0.1227773 | 0.0 |
| 20370813 | 155.0238 | CALL | 48.2609 | 0.1215605 | 0.1215605 | 0.0 |
| 20470815 | 26.2759 | PUT | 44.4527 | 0.1608037 | 0.1608037 | 0.0 |
| 20470815 | 69.0506 | CALL | 101.0497 | 0.1225654 | 0.1225654 | 0.0 |
| 20470815 | 160.9244 | CALL | 44.4527 | 0.121234 | 0.121234 | 0.0 |

Table 77: Dictionary_3: results of the calibration when Weighting=VEGANOTIONAL. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in almost all cases.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 140: Dictionary 3. Slices of the implied volatility surface obtained from the original DELTAVOL, the STRIKEVOL used for calibration and from the PIV of type SA4 fitted to the STRIKEVOL volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,10C,10P). Note that, there is perfect agreement between the STRIKEVOL and DELTAVOL implied volatility surfaces. Further note that, although the 3 conditions defining each slice are satisfied by all three volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLs and STRIKEVOLs) mean that the implied volatility surfaces DELTAVOL/STRIKEVOL and PIV do not agree completely. Observe that the DELTAVOL/STRIKEVOL and PIV volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/2.png)

### Results Dictionary_4 - Weighting = VEGANOTIONAL

For Dictionary_4, when fitting a parametric form of SkewType=SA4 the results of the calibration using Weighting=VEGANOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170724 | 106.0761 | PUT | 2.7369 | 0.3431781 | 0.3426711 | -0.000507 |
| 20170724 | 109.2451 | PUT | 4.9557 | 0.3364206 | 0.336693 | 0.0002723 |
| 20170724 | 112.7318 | CALL | 6.2215 | 0.3354093 | 0.3354321 | 2.28303e-05 |
| 20170724 | 116.376 | CALL | 4.9557 | 0.3402652 | 0.3399365 | -0.0003287 |
| 20170724 | 119.9276 | CALL | 2.7369 | 0.3481761 | 0.3487491 | 0.000573 |
| 20170817 | 102.3907 | PUT | 5.7535 | 0.2506056 | 0.2585059 | -0.0009997 |
| 20170817 | 107.3613 | PUT | 10.418 | 0.2509642 | 0.2515139 | 0.0005497 |
| 20170817 | 112.7901 | CALL | 13.0789 | 0.2508519 | 0.2508537 | 1.8407e-06 |
| 20170817 | 118.6883 | CALL | 10.418 | 0.258474 | 0.2578949 | -0.0005790 |
| 20170817 | 124.7738 | CALL | 5.7535 | 0.2692683 | 0.2703496 | 0.0010812 |
| 20170917 | 99.4627 | PUT | 8.1254 | 0.2395199 | 0.2384945 | -0.0010253 |
| 20170917 | 105.8363 | PUT | 14.7128 | 0.230346 | 0.2309099 | 0.000563 |
| 20170917 | 112.8339 | CALL | 18.4707 | 0.2300724 | 0.2300665 | -5.8943e-06 |
| 20170917 | 120.592 | CALL | 14.7128 | 0.2380642 | 0.2374844 | -0.0005798 |
| 20170917 | 128.8334 | CALL | 8.1254 | 0.2495536 | 0.2506551 | 0.0011014 |
| 20171017 | 97.3493 | PUT | 9.8842 | 0.2306316 | 0.2294025 | -0.0012290 |
| 20171017 | 104.7865 | PUT | 17.8973 | 0.2188276 | 0.2195034 | 0.0006757 |
| 20171017 | 112.8422 | CALL | 22.4686 | 0.218177 | 0.2181477 | -2.93413e-05 |
| 20171017 | 121.9708 | CALL | 17.8973 | 0.2280798 | 0.2274283 | -0.0006515 |
| 20171017 | 132.0975 | CALL | 9.8842 | 0.2426595 | 0.2439488 | 0.001289 |
| 20180117 | 92.4112 | PUT | 13.9141 | 0.221298 | 0.2200569 | -0.0012410 |
| 20180117 | 102.1452 | PUT | 25.1944 | 0.208442 | 0.2091263 | 0.0006842 |
| 20180117 | 112.8555 | CALL | 31.6295 | 0.2074063 | 0.2073629 | -4.33552e-05 |
| 20180117 | 125.4002 | CALL | 25.1944 | 0.2177753 | 0.2171427 | -0.0006325 |
| 20180117 | 139.9662 | CALL | 13.9141 | 0.2334312 | 0.2347126 | 0.0012813 |
| 20180717 | 86.0834 | PUT | 19.4117 | 0.2128678 | 0.2116068 | -0.0012609 |
| 20180717 | 98.5966 | PUT | 35.1489 | 0.199002 | 0.1997015 | 0.0006994 |
| 20180717 | 112.7291 | CALL | 44.1266 | 0.1976203 | 0.1975595 | -6.08247e-05 |
| 20180717 | 130.0344 | CALL | 35.1489 | 0.2084069 | 0.207853 | -0.0006138 |
| 20180717 | 151.3178 | CALL | 19.4117 | 0.2251721 | 0.2264494 | 0.0012773 |
| 20190717 | 77.9605 | PUT | 26.8403 | 0.2027503 | 0.201471 | -0.0012792 |
| 20190717 | 93.5925 | PUT | 48.6 | 0.1873456 | 0.1880619 | 0.0007163 |
| 20190717 | 111.8233 | CALL | 61.0133 | 0.1853753 | 0.1852864 | -8.88622e-05 |
| 20190717 | 135.5181 | CALL | 48.6 | 0.1968719 | 0.1962983 | -0.0005735 |
| 20190717 | 167.1257 | CALL | 26.8403 | 0.2151345 | 0.2163836 | 0.001249 |
| 20200717 | 71.6663 | PUT | 32.0544 | 0.200314 | 0.1990151 | -0.001298 |
| 20200717 | 89.3531 | PUT | 58.0412 | 0.1836723 | 0.1844064 | 0.0007340 |
| 20200717 | 110.6015 | CALL | 72.8659 | 0.1812359 | 0.1811255 | -0.0001104 |
| 20200717 | 139.572 | CALL | 58.0412 | 0.1932638 | 0.1927175 | -0.0005463 |
| 20200717 | 180.7525 | CALL | 32.0544 | 0.2127829 | 0.2140124 | 0.0012295 |
| 20220717 | 62.2028 | PUT | 39.0741 | 0.1979226 | 0.1965634 | -0.001359 |
| 20220717 | 82.1939 | PUT | 70.7519 | 0.1802558 | 0.1810341 | 0.0007783 |
| 20220717 | 107.6221 | CALL | 88.8232 | 0.1775838 | 0.1774441 | -0.0001397 |
| 20220717 | 145.0792 | CALL | 70.7519 | 0.1902438 | 0.1897073 | -0.0005365 |
| 20220717 | 203.4779 | CALL | 39.0741 | 0.2109071 | 0.2121651 | 0.001258 |
| 20240717 | 54.7924 | PUT | 43.488 | 0.1991786 | 0.1977803 | -0.0013982 |
| 20240717 | 76.1231 | PUT | 78.7441 | 0.1799961 | 0.1808071 | 0.0008109 |
| 20240717 | 104.5509 | CALL | 98.8867 | 0.1767857 | 0.1766156 | -0.00017 |
| 20240717 | 149.3475 | CALL | 78.7441 | 0.1901383 | 0.1896309 | -0.0005073 |
| 20240717 | 225.5415 | CALL | 43.488 | 0.2123633 | 0.2136102 | 0.0012469 |
| 20270717 | 46.5361 | PUT | 47.2717 | 0.2002679 | 0.1988325 | -0.0014353 |
| 20270717 | 68.6862 | PUT | 85.5954 | 0.179772 | 0.1806167 | 0.0008447 |
| 20270717 | 100.138 | CALL | 107.4579 | 0.1760967 | 0.1758934 | -0.0002032 |
| 20270717 | 154.0979 | CALL | 85.5954 | 0.1900516 | 0.1895747 | -0.0004769 |
| 20270717 | 256.143 | CALL | 47.2717 | 0.2136314 | 0.2148712 | 0.0012397 |

Table 78: Results of the calibration when Weighting=VEGANOTIONAL for a SA4 parametric form. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are small in the majority of cases.

For Dictionary_4, when fitting a parametric form of SkewType=LARGD the results of the calibration using Weighting=VEGANOTIONAL are summarized in the following table:

| Maturity | Delta | Type | Weight | TargetVol | FittedVol | FitError |
| --- | --- | --- | --- | --- | --- | --- |
| 20170724 | DN | CALL | 1 | 0.3354093 | 0.3354093 | -0.0 |
| 20170724 | 25RR | CALL | 1 | 0.0038446 | 0.0038446 | 0.0 |
| 20170724 | 25CVX-DN | CALL | 1 | 0.0029337 | 0.0029337 | 0.0 |
| 20170724 | 10RR | CALL | 1 | 0.004998 | 0.004998 | 1e-10 |
| 20170724 | 10CVX-DN | CALL | 1 | 0.0102679 | 0.0102679 | -0.0 |
| 20170817 | DN | CALL | 1 | 0.2508519 | 0.2508519 | 0.0 |
| 20170817 | 25RR | CALL | 1 | 0.0075098 | 0.0075098 | 0.0 |
| 20170817 | 25CVX-DN | CALL | 1 | 0.0038672 | 0.0038672 | 0.0 |
| 20170817 | 10RR | CALL | 1 | 0.0097627 | 0.0097627 | 0.0 |
| 20170817 | 10CVX-DN | CALL | 1 | 0.0135351 | 0.0135351 | -0.0 |
| 20170917 | DN | CALL | 1 | 0.2300724 | 0.2300724 | 0.0 |
| 20170917 | 25RR | CALL | 1 | 0.0077183 | 0.0077183 | 0.0 |
| 20170917 | 25CVX-DN | CALL | 1 | 0.0041327 | 0.0041327 | 0.0 |
| 20170917 | 10RR | CALL | 1 | 0.0100337 | 0.0100337 | 0.0 |
| 20170917 | 10CVX-DN | CALL | 1 | 0.0144643 | 0.0144643 | -0.0 |
| 20171017 | DN | CALL | 1 | 0.218177 | 0.218177 | 0.0 |
| 20171017 | 25RR | CALL | 1 | 0.0092522 | 0.0092522 | 0.0 |
| 20171017 | 25CVX-DN | CALL | 1 | 0.0052767 | 0.0052767 | 0.0 |
| 20171017 | 10RR | CALL | 1 | 0.0120279 | 0.0120279 | 0.0 |
| 20171017 | 10CVX-DN | CALL | 1 | 0.0184685 | 0.0184685 | -0.0 |
| 20180117 | DN | CALL | 1 | 0.2074063 | 0.2074063 | 0.0 |
| 20180117 | 25RR | CALL | 1 | 0.0093332 | 0.0093332 | 0.0 |
| 20180117 | 25CVX-DN | CALL | 1 | 0.0057024 | 0.0057024 | 0.0 |
| 20180117 | 10RR | CALL | 1 | 0.0121332 | 0.0121332 | 0.0 |
| 20180117 | 10CVX-DN | CALL | 1 | 0.0199583 | 0.0199583 | -0.0 |
| 20180717 | DN | CALL | 1 | 0.1976203 | 0.1976203 | -0.0 |
| 20180717 | 25RR | CALL | 1 | 0.0094649 | 0.0094649 | 0.0 |
| 20180717 | 25CVX-DN | CALL | 1 | 0.0061142 | 0.0061142 | 0.0 |
| 20180717 | 10RR | CALL | 1 | 0.0123043 | 0.0123043 | 0.0 |
| 20180717 | 10CVX-DN | CALL | 1 | 0.0213996 | 0.0213996 | -0.0 |
| 20190717 | DN | CALL | 1 | 0.1853753 | 0.1853753 | 0.0 |
| 20190717 | 25RR | CALL | 1 | 0.0095263 | 0.0095263 | -0.0 |
| 20190717 | 25CVX-DN | CALL | 1 | 0.0067335 | 0.0067335 | -0.0 |
| 20190717 | 10RR | CALL | 1 | 0.0123842 | 0.0123842 | 0.0 |
| 20190717 | 10CVX-DN | CALL | 1 | 0.0235672 | 0.0235672 | 0.0 |
| 20200717 | DN | CALL | 1 | 0.1812359 | 0.1812359 | 0.0 |
| 20200717 | 25RR | CALL | 1 | 0.0095915 | 0.0095915 | 0.0 |
| 20200717 | 25CVX-DN | CALL | 1 | 0.0072322 | 0.0072322 | -0.0 |
| 20200717 | 10RR | CALL | 1 | 0.012469 | 0.012469 | 0.0 |
| 20200717 | 10CVX-DN | CALL | 1 | 0.0253126 | 0.0253126 | 0.0 |
| 20220717 | DN | CALL | 1 | 0.1775838 | 0.1775838 | 0.0 |
| 20220717 | 25RR | CALL | 1 | 0.0099881 | 0.0099881 | 0.0 |
| 20220717 | 25CVX-DN | CALL | 1 | 0.007666 | 0.007666 | -1e-10 |
| 20220717 | 10RR | CALL | 1 | 0.0129845 | 0.0129845 | 1e-10 |
| 20220717 | 10CVX-DN | CALL | 1 | 0.0268311 | 0.0268311 | 0.0 |
| 20240717 | DN | CALL | 1 | 0.1767857 | 0.1767857 | -0.0 |
| 20240717 | 25RR | CALL | 1 | 0.0101421 | 0.0101421 | -0.0 |
| 20240717 | 25CVX-DN | CALL | 1 | 0.0082815 | 0.0082815 | 0.0 |
| 20240717 | 10RR | CALL | 1 | 0.0131847 | 0.0131847 | -0.0 |
| 20240717 | 10CVX-DN | CALL | 1 | 0.0289853 | 0.0289853 | -0.0 |
| 20270717 | DN | CALL | 1 | 0.1760966 | 0.1760966 | -0.0 |
| 20270717 | 25RR | CALL | 1 | 0.0102796 | 0.0102796 | -0.0 |
| 20270717 | 25CVX-DN | CALL | 1 | 0.0088151 | 0.0088151 | 1e-10 |
| 20270717 | 10RR | CALL | 1 | 0.0133635 | 0.0133635 | -1e-10 |
| 20270717 | 10CVX-DN | CALL | 1 | 0.030853 | 0.030853 | -0.0 |

Table 79: Results of the calibration when Weighting=VEGANOTIONAL for a LARGD parametric form. We see that the differences between the target volatilities and the calibrated volatilities stored in the column FitError are very small, below 10^-10 in the majority of case. The quality of fit is significantly better than in the case of the SA4 parametric form. This is due to the fact that in the case of Dictionary_4 we need to calibrate to five targets at each time point, as opposed to three in the previous dictionaries,and therefore the LARGD functional form is better suited in this situation.

The following figures display the agreement existing between the volatility surface obtained from the DELTAVOL input and the volatility surface generated by PIV fitting at different time slices:

![Figure 141: Slices of the implied volatility surface obtained from the DELTAVOL used for calibration and from the PIV of type SA4 fitted to this volatility and LARGD fitted to this volatility. The delta vols inputs of the DELTAVOL object are provided under the form (DN,25RR, 25CVX,10RR, 10CVX). Observe that, although the 3 conditions defining each slice are satisfied by both volatility surfaces, the different ways in which the surfaces are interpolated (parametrically in the PIV vols and using cubic splines in the DELTAVOLs) mean that the implied volatility surfaces do not agree completely. Further note that the volatility objects deal with the tails differently, leading to larger disagreements for options far in or out of the money.](./Fig/7.png)

### VolParameters and VolTermStructures:

We examine the correct implementation of the equations defining the term structures of the slice parameters in the context of a SkewType SA4 parametric volatility model. To this purpose we consider the following three dictionaries:

1. Dictionary_1 (defined previously) containing a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, RR, CVX). A MODELVOL object and an EXTRAINFO object used to fit an SA4 functional form. The slice parameters VOL, SKEW, SMILE, POWER is set to CONSTANT.

2. Dictionary_4 having the same composition as Dictionary_1 except for the FX volatility which is represented by an already fitted PARAMETRIC volatility object, with the term structure of the slice parameters being set to VOL: VOLMEANREV3, SKEW: VARMEANREV3, SMILE: CONSTANT, POWER: CONSTANT.

3. Dictionary_5 having the same composition as Dictionary_1 except for the FX volatility which is represented by an already fitted PARAMETRIC volatility object, with the term structure of the slice parameters being set to VOL: VOLDOUBLEMEANREV5, SKEW: VARDOUBLEMEANREV5, SMILE: LINEXP4, POWER: POWERTIMEREF.

4. Dictionary_6 having the same composition as Dictionary_1 except for the FX volatility which is represented by an already fitted PARAMETRIC volatility object, with the term structure of the slice parameters being set to VOL: VOLDOUBLEMEANREV5ADJUSTED6, SKEW: VARDOUBLEMEANREV5, SMILE: LINEXP4, POWER: POWER4TIMEREF.

Dictionary_1 contains a MARKETVOL object of InputType DELTAVOL with input delta volatilities given under the form of a term structure of (DN, RR, CVX). A MODELVOL object and an EXTRAINFO object used to fit an SA4 functional form. After performing the PIV fitting, the output PARAMETRICVOL volatility of SkewType SA4 has the following form:

VolParameters
| Name | Value | Bump | BumpType | Use |
| --- | --- | --- | --- | --- |
| VOL | 0 | 0.001 | ABS | 1 |
| SKEW | 0 | 0.001 | ABS | 1 |
| SMILE | 0 | 0.001 | ABS | 1 |
| POWER | 0 | 0.001 | ABS | 1 |

VolTermStructures
| Name | Type | Shift | Bump | BumpType |
| --- | --- | --- | --- | --- |
| VOL | CONSTANT | 0 | 0.001 | ABS |
| SKEW | CONSTANT | 0 | 0.01 | ABS |
| SMILE | CONSTANT | 0 | 0.01 | ABS |
| POWER | CONSTANT | 0 | 0.001 | ABS |

Offsets
| ExpiryDate | VolShift | VOL | SKEW | SMILE | POWER |
| --- | --- | --- | --- | --- | --- |
| 20200803 | 0 | 0.0689867766445927 | -0.146955799015893277 | 0.472570121624353566 | 1 |
| 20201103 | 0 | 0.0699413738809329 | -0.178424697153831018 | 0.567866829154310431 | 1 |
| 20210503 | 0 | 0.073121333790655419 | -0.191013711175827794 | 0.582259084366110177 | 1 |
| 20220503 | 0 | 0.0776415539167836 | -0.192050558310674 | 0.530398731538082281 | 1 |
| 20250503 | 0 | 0.0832836251457761 | -0.170638175692020983 | 0.589117252695698273 | 1 |
| 20250430 | 0 | 0.0884634700157454 | -0.145607531867797397 | 0.556926275306065 | 1 |
| 20270503 | 0 | 0.0917048102215106 | -0.125274865330531 | 0.552961495144488118 | 1 |
| 20300502 | 0 | 0.094349508196751764 | -0.113736474022973702 | 0.547737183753311155 | 1 |
| 20350503 | 0 | 0.102522622831549683 | -0.103584143958839045 | 0.381860641042000153 | 1 |
| 20400503 | 0 | 0.113222359885448191 | -0.098289113690615912 | 0.284893267040399605 | 1 |
| 20500503 | 0 | 0.123597443377186814 | -0.113919138105274 | 0.254310132279006766 | 1 |

Table 80: The information regarding the fitted SA4 parametric form is stored in the tables VolParameters, VolTermStructures and Offsets.

From the above table, we can see that the fitted slice parameters VOL, SKEW, SMILE and POWER are computed at each of the time points listed in the ExpiryDate column of the Offsets subtable as follows:

$VOL(t) = VOL + OffSets(VOL;t) = 0 + OffSets(VOL;t) = OffSets(VOL;t)$
$SKEW(t) = SKEW + OffSets(SKEW;t) = 0 + OffSets(SKEW;t) = OffSets(SKEW;t)$
$SMILE(t) = SMILE + OffSets(SMILE;t) = 0 + OffSets(SMILE;t) = OffSets(SMILE;t)$
$POWER(t) = POWER + OffSets(POWER;t) = 0 + OffSets(POWER;t) = OffSets(POWER;t) = 1$

We check now if the values stored in the tables VolParameters, VolTermStructures and Offsets are correctly used in computation of the volatility. To this purpose, we analytically compute the volatility coefficient $\sigma(t)$ according to its definition from the SA4 functional form at every time point contained in the ExpiryDate and compare it against the Black Scholes implied volatilities of call options with maturities at the time point from the ExpiryDate columns. The implied BS volatilities are extracted from the ExerciseTable of the results the following pricing in MODE=PRICE:

| ExpiryDate | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 20200803 | 0.1407977124 | 0.1408196245 | -2.19116e-05 |
| 20201103 | 0.1280749865 | 0.1280933919 | -1.83161e-05 |
| 20210503 | 0.112071913 | 0.1120921080 | -1.49167e-05 |
| 20220503 | 0.0996234859 | 0.0996344489 | -1.09830e-05 |
| 20250503 | 0.1004227871 | 0.1004323217 | -9.53460e-06 |
| 20250430 | 0.0973875266 | 0.0973938916 | -6.36508e-06 |
| 20270503 | 0.0968891452 | 0.0968934927 | -4.35273e-06 |
| 20300502 | 0.0965577816 | 0.0965602297 | -2.44815e-06 |
| 20350503 | 0.1019433957 | 0.1019437529 | -3.57207e-07 |
| 20400503 | 0.112335162 | 0.1123350417 | 1.22445e-07 |
| 20500503 | 0.123305847 | 0.1233057488 | 9.48271e-08 |

Table 81: Comparison between the implied BS volatilities of call options at different expiry dates and the analytically computed values of the volatilities using the SA4 parametric form formula. We can see the differences are negligible confirming the correctness of the implementation.

Note that the original maturity date of the security contained in Dictionary_1 is 09/08/2030, situated between the time points 02/05/2030 and 03/05/2035. Given that VolTermStructure type is set to CONSTANT for all slice parameters, it implies that the values of the slice parameters from time point 02/05/2030 are used to define the SA4 volatility at time point 09/08/2030 as the below comparison shows:

| ExpiryDate | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 09/08/2030 | 0.09694109562 | 0.0969808094 | 0.000056 |

Table 82: Comparison between the implied BS volatility of of call option with expiry date 09/08/2030 and the analytically computed values of the volatility using the SA4 parametric form formula. We can see the differences are negligible confirming the correctness of the implementation.

We examine the correct implementation of the term structures of the slice parameters from Dictionary_4. To this purpose we will compare the implied BS volatility computed by DBAnalytics against the analytically computed value We consider Dictionary_4 MARKETVOL PARAMETRIC volatility of SkewType SA4 has the following structure for the slice parameters:

| Date | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 03/05/2021 | 0.2149952199 | 0.21499522 | < 1e-9 |
| 03/05/2023 | 0.2168572978 | 0.2168572977 | < 1e-10 |

Table 84: Comparison between the implied BS volatility of of call option with expiry date 04/08/2030 and the analytically computed values of the volatility using the SA4 parametric form formula. We can see the differences are negligible confirming the correctness of the implementation.

We examine now the correct implementation of the term structures contained in the PARAMETRIC VOL object of Dictionary_5. The PARAMETRIC VOL object has the following structure of the slice parameters:

VolParameters
| | | | | |
| --- | --- | --- | --- | --- |
| VOL_SHORT | 0.2 | 0.001 | ABS | 1 |
| VOL_LONG | 0.15 | 0.001 | ABS | 1 |
| VOL_LONGK | 0.3 | 0.001 | ABS | 1 |
| VOL_REF | 0.12 | 0.001 | ABS | 1 |
| VOL_SHORTK | 0.1 | 0.001 | ABS | 1 |
| SKEW_SHORT | -0.3 | 0.001 | ABS | 1 |
| SKEW_LONG | -0.5 | 0.001 | ABS | 1 |
| SKEW_LONGK | -0.6 | 0.001 | ABS | 1 |
| SKEW_REF | -0.3 | 0.001 | ABS | 1 |
| SKEW_SHORTK | -0.2 | 0.001 | ABS | 1 |
| SMILE_SHORT | 0.3 | 0.001 | ABS | 1 |
| SMILE_SLOPE | 0.5 | 0.001 | ABS | 1 |
| SMILE_K | 0.1 | 0.001 | ABS | 1 |
| SMILE_LONG | 0.1 | 0.001 | ABS | 1 |
| POWER_REF | 1.2 | 0.001 | ABS | 1 |
| POWER_LONG | 0.9 | 0.001 | ABS | 1 |
| POWER_K | 2 | 0.001 | ABS | 1 |
| POWER_SHORTPOWER | | 0.001 | ABS | 1 |
| POWER_LONGPOWER | | 0.001 | ABS | 1 |
| POWER_POWERPOWER | | 0.001 | ABS | 1 |
| POWER_TIMEREF | | 0.001 | ABS | 1 |

VolTermStructures
| | | | | |
| --- | --- | --- | --- | --- |
| VOL | VOLDOUBLEMEANREV5 | 0.001 | ABS |
| SKEW | VARDOUBLEMEANREV5 | 0.01 | ABS |
| SMILE | LINEXP4 | 0 | 0.01 | ABS |
| POWER | POWERTIMEREF | | 0.001 | ABS |

Offsets
| ExpiryDate | VolShift | VOL | SKEW | SMILE | POWER |
| --- | --- | --- | --- | --- | --- |
| 20200803 | 0 | 0.0689868 | -0.146856 | 0.47257 | 1 |
| 20201103 | 0 | 0.0699414 | -0.178425 | 0.567869 | 1 |
| 20210503 | 0 | 0.0731213 | -0.191014 | 0.582259 | 1 |
| 20220503 | 0 | 0.0776416 | -0.19206 | 0.530399 | 1 |
| 20250503 | 0 | 0.0832836 | -0.170638 | 0.589117 | 1 |
| 20250430 | 0 | 0.0884635 | -0.145608 | 0.556928 | 1 |
| 20270503 | 0 | 0.0917046 | -0.125275 | 0.552921 | 1 |
| 20300502 | 0 | 0.0943496 | -0.113735 | 0.547737 | 1 |
| 20350503 | 0 | 0.102523 | -0.103584 | 0.361861 | 1 |
| 20400503 | 0 | 0.113222 | -0.0982891 | 0.284932 | 1 |
| 20500503 | 0 | 0.123597 | -0.113919 | 0.25431 | 1 |

Table 85: The information regarding the fitted SA4 parametric form is stored in the tables VolParameters, VolTermStructures and Offsets. We can see that VOL follows a VOLDOUBLEMEANREV5 term structure, SKEW follows a VARDOUBLEMEANREV5 term structure, SMILE follows a LINEXP4 term structure and POWER follow a POWERTIMEREF term structure. The Offsets table contain a series of non-zero shifts that are applied at each maturity to the slice parameters. The VolShift column contains only 0s, meaning that no absolute shift is applied at the SA4 volatility level.

We compare the DBAnalytics computed implied BS volatility at time points 03/05/2021, 30/04/2025 and 03/05/2027 against the analytically computed values:

| Date | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 03/05/2021 | 0.3041040678 | 0.3041040678 | <1e-10 |
| 30/04/2025 | 0.3424699642 | 0.3424699642 | <1e-10 |
| 03/05/2027 | 0.3952395817 | 0.3952395816 | <1e-10 |

Table 86: Comparison between the implied BS volatility of of call option with expiry date 09/08/2030 and the analytically computed values of the volatility using the SA4 parametric form formula. We can see the differences are negligible confirming the correctness of the implementation.

We examine now the correct implementation of the term structures contained in the PARAMETRIC VOL object of Dictionary_6. The PARAMETRIC VOL object has the following structure of the slice parameters:

VolParameters

| | | | | |
| --- | --- | --- | --- | --- |
| VOL_SHORT | 0.2 | | 0.001 | ABS | 1 |
| VOL_LONG | 0.15 | | 0.001 | ABS | 1 |
| VOL_LONGK | 0.3 | | 0.001 | ABS | 1 |
| VOL_REF | 0.12 | | 0.001 | ABS | 1 |
| VOL_SHORTK | 0.1 | | 0.001 | ABS | 1 |
| VOL_ADJUSTMENT | 0.2 | | 0.001 | ABS | 1 |
| SKEW_SHORT | -0.3 | | 0.001 | ABS | 1 |
| SKEW_LONG | -0.5 | | 0.001 | ABS | 1 |
| SKEW_LONGK | -0.6 | | 0.001 | ABS | 1 |
| SKEW_REF | -0.3 | | 0.001 | ABS | 1 |
| SKEW_SHORTK | -0.2 | | 0.001 | ABS | 1 |
| SMILE_SHORT | 0.3 | | 0.001 | ABS | 1 |
| SMILE_SLOPE | 0.5 | | 0.001 | ABS | 1 |
| SMILE_K | 0.1 | | 0.001 | ABS | 1 |
| SMILE_LONG | 0.1 | | 0.001 | ABS | 1 |
| POWER_REF | 1.2 | | 0.001 | ABS | 1 |
| POWER_LONG | 0.9 | | 0.001 | ABS | 1 |
| POWER_K | 2 | | 0.001 | ABS | 1 |
| POWER_POWER | 1.4 | | 0.001 | ABS | 1 |
| POWER_TIMEREF | 3.2 | | 0.001 | ABS | 1 |

VolTermStructures

| | | | | |
| --- | --- | --- | --- | --- |
| VOL | VOLDOUBLEMEANREVADJUSTED6 | 0 | 0.001 | ABS |
| SKEW | VARDOUBLEMEANREV5 | 0 | 0.01 | ABS |
| SMILE | LINEXP4 | 0 | 0.01 | ABS |
| POWER | POWER4TIMEREF | 0 | 0.001 | ABS |

Offsets

| ExpiryDate | VolShift | VOL | SKEW | SMILE | POWER |
| --- | --- | --- | --- | --- | --- |
| 20200803 | 0 | 0.0689868 | -0.146856 | 0.47257 | 1 |
| 20201103 | 0 | 0.0699414 | -0.178425 | 0.567869 | 1 |
| 20210503 | 0 | 0.0731213 | -0.191014 | 0.582259 | 1 |
| 20220503 | 0 | 0.0776416 | -0.19206 | 0.530399 | 1 |
| 20250503 | 0 | 0.0832836 | -0.170638 | 0.589117 | 1 |
| 20250430 | 0 | 0.0884635 | -0.145608 | 0.556928 | 1 |
| 20270503 | 0 | 0.0917046 | -0.125275 | 0.552921 | 1 |
| 20300502 | 0 | 0.0943496 | -0.113735 | 0.547737 | 1 |
| 20350503 | 0 | 0.102523 | -0.103584 | 0.361861 | 1 |
| 20400503 | 0 | 0.113222 | -0.0982891 | 0.284932 | 1 |
| 20500503 | 0 | 0.123597 | -0.113919 | 0.25431 | 1 |

Table 87: The information regarding the fitted SA4 parametric form is stored in the tables VolParameters, VolTermStructures and Offsets. We can see that VOL follows a VOLDOUBLEMEANREVADJUSTED6 term structure, SKEW follows a VARDOUBLEMEANREV5 term structure, SMILE follows a LINEXP4 term structure and POWER follow a POWER4TIMEREF term structure. The Offsets table contain a series of non-zero shifts that are applied at each maturity to the slice parameters. The VolShift column contains only 0s, meaning that no absolute shift is applied at the SA4 volatility level.

We compare the DBAnalytics computed implied BS volatility at time points 03/11/2020, 03/05/2021, 30/04/2025 and 02/05/2030 against the analytically computed values:

| Date | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 03/11/2020 | 0.3475164408 | 0.3475164408 | <1e-10 |
| 03/05/2021 | 0.31841841685 | 0.3184141864 | <1e-12 |
| 30/04/2025 | 0.3460442821 | 0.3460442821 | <1e-10 |
| 02/05/2030 | 0.5600664403 | 0.5600664402 | <1e-10 |

Table 88: Comparison between the implied BS volatility of call option with expiry dates 03/11/2020, 03/05/2021, 30/04/2025 and 02/05/2030 and the analytically computed values of the volatility using the SA4 parametric form formula. We can see the differences are negligible confirming the correctness of the implementation.

We conclude the tests related to VolTermStructures and VolParameters properties by examining their impact on the price, implied volatilities and forward volatilities of call options with different maturities $$T \in \{3M, 4M, ...10Y\}$$. We use in our tests Dictionary_1, Dictionary_4, Dictionary_5 and Dictionary_6. Note that the only differences between the PARAMETRICVOL objects of Dictionary_5 and Dictionary_6 are: slice parameter VOL of Dictionary_5 follows a VOLDOUBLEMEANREV5 term structure, while slice parameter VOL of Dictionary_6 follows a VOLDOUBLEMEANREVADJUSTED6 term structure, slice parameter POWER of Dictionary_5 follows a POWERTIMEREF term structure, while slice parameter POWER of Dictionary_6 follows a POWER4TIMEREF term structure. The VolParameters of Dictionary_5 and Dictionary_6 are set identical or very similar, see tables 85 and 87, such that we can benchmark the results against each other.

![Figure 142: First Row: Price of call options as function of maturity when priced using PARAMETRIC VOL of Dictionary_1 (left), PARAMETRIC VOL of Dictionary_4 (center) and PARAMETRIC VOL of Dictionary_5 and PARAMETRICVOL of Dictionary_6(right). The price differences between Dictionary_5 and Dictionary_6 are minimal, which is in line with expectations. We can see that in all scenarios, the price is an increasing function of maturity, which is in line with expectations. Second Row: Implied BS volatilities as function of maturity when priced using PARAMETRIC VOL of Dictionary_1 (left), PARAMETRIC VOL of Dictionary_4 (center) and PARAMETRIC VOL of Dictionary_5 and PARAMETRICVOL of Dictionary_6(right). The differences between the implied vols of Dictionary_5 and Dictionary_6 are minimal, which is in line with expectations. Second Row: Forward volatilities corresponding to PARAMETRICVOL configuration of Dictionary_1 (left), PARAMETRICVOL configuration of Dictionary_4 (center) and PARAMETRICVOL configuration of Dictionary_5 and PARAMETRICVOL of Dictionary_6(right). The forward variance remains positive in all four configurations. The differences between the forward variances of Dictionary_5 and Dictionary_6 are minimal, which is in line with expectations.](./Fig/4.png)

### PIVVolShiftType:

We examine now the impact of the PIVVolShiftType property. As described in Section 4.8.19, the property controls the column VolShift of the Offsets table and it is set to ABSOLUTE. This means a value contained in the VolShift column of the Offsets subtable represents an absolute shift applied to the volatility $$\sigma(t)$$ computed from the slice parameters according to the definition of the parametric form in use. We check the correct implementation of the property using Dictionary_1. We set all the values of the column VolShift to 0.1, meaning that all an absolute shift of size 0.1 will be applied to the volatility $$\sigma_{SA4}(t)$$ computed using the SA4 formula. We price the original call option with maturity 09/08/2030 and compare the implied BS volatility against the analytically computed volatility $$\sigma(t) = \sigma_{SA4}(t) + 0.1$$

| ExpiryDate | Implied BS vol | Analytical SA4 vol | Diff. |
| --- | --- | --- | --- |
| 09/08/2030 | 0.1969410562 | 0.1963808094 | 0.00056 |

Table 89: Comparison between the implied BS volatility of of call option with expiry date 09/08/2030 and the analytically computed values of the volatility using the SA4 parametric form formula. We see that setting the values of the Volshift column in the Offsets subtable to 0.1 implies applying an absolute shift of size 0.1 to the volatility $$\sigma_{SA4}(t)$$ computed using the SA4 formula.

# 5 Model Uncertainty Identification, Measurement, and Management

## 5.1 Model Uncertainty and Identification

Sources of model uncertainty and deficiencies/weaknesses have identified and categorized in accordance with the classification define by the policy. Findings and Model limitations have been issued for the sources of uncertainty analyzed.

Model deficiencies/weaknesses have been identified in section 2.8 and include an assessment for compensating controls.

Model limitation uncertainties have been identified and categorized into:

• Numerical techniques
• Methodology assumptions
• Implementation and deployment
• Missing Risk Factors
• Process Issues

For the DBMSC-RateDeterministic_FXMarket model, the following have been identified as model limitations:

| Limitation ID | Limitation Category | Limitation Type | Limitation Framework |
| --- | --- | --- | --- |
| 707 | Missing Risk Factor | Interest Rate Volatility | ShortRateDeterministic |
| 1523 | Missing Risk Factor | FX Volatility Smile | FXMarket |
| 2742 | Missing Risk Factor | FX CORRELATION SKEW | FXMarket |
| 4050 | Calibration | Calibration Uncertainty | FXMarket |

Table 90: DBSMC-RateDeterministic_FXMarket Limitations

• Missing Risk Factor(Interest Rate Volatility)[ShortRateDeterministic]: The ShortRateDeterministic framework makes the assumption that interest rate uncertainty is not an important factor for pricing. This assumption is reasonable to the extent that cashflows are fixed (ie coupon set/date equals value/date), or linear in a natural rate (paydate equals rate maturity), or where cashflow uncertainty is dominated by volatility in other underlyings. [Lim ID 707]

• Missing Risk Factor(FX Volatility Smile)[FXMarket]: The pricing of baskets relies on the construction of an index with lognormal dynamics from the baskets constituents. The model assumes a flat volatility smile for the index. The impact of the limitation can be assessed by benchmarking against alternative DBAnalytics models. We recommend GVG to monitor the uncertainty surrounding the limitation and compute uncertainty reserves, if deemed necessary. [Lim ID 1523]

• Missing Risk Factor(FX CORRELATION SKEW[FXMarket]: When pricing the multi-currency arithmetic basket options the FXMarket framework uses a three moment matching approximation on the distribution of the basket variable. Therefore, higher order moments are not calibrated in this framework. This assumption is reasonable for markets that can be well approximated using only the first three moments. [Lim ID 2742]

• Calibration(Calibration Uncertainty)[FXMarket]: The PIV/Auto calibration of the FXMarket model is sensitive to the choice of calibration targets and parameters of the calibration routine. Such calibration target choice and the calibration quality add uncertainty to the valuation. [Lim ID 4050]

Limitation 2605, previously linked to this model, was only relevant for the product FXBasketOpt, which is currently deactivated. In case the product were reactivated, limitation 2605 would have to be reinstated.

The following table displays the connection between the products in scope and the identified model limitations which are relevant for the pricing dictionaries:

| Product Name \ Limitation | 707 | 1523 | 2742 | 4050 |
| --- | --- | --- | --- | --- |
| FXDigitalOpt | | | | X |
| FXEuroOpt | | | | X |
| FXGeometricBasketOpt | X | X | X | X |
| FXNonDeliverableEuroOpt | | | | X |

Table 91: Product Model Limitations for DBSMC-RateDeterministic_FXMarket.

## 5.2 Model Uncertainty Measurement and Management

The requirement for a valuation adjustment methodology to compensate for a model limitation is to be established and implemented by VC/GSA. The limitations assigned to the product model are detailed in the previous section. The table below detailed for each limitation whether or not the compensating control is applied to mitigate the limitations identified and the appropriateness of proposed measurement approaches has been assessed:

| Limitation ID | Reserve Policy | Limitation Assessed | RFU | reserve MVR |
| --- | --- | --- | --- | --- |
| 707 | NL-** | YES | TBD | Pending GSA submission |
| 1523 | NL-** | YES | TBD | Pending GSA submission |
| 2742 | NL-** | YES | TBD | Pending GSA submission |
| 4050 | NL-** | YES | TBD | Pending GSA submission |

The table below detailed for each finding whether or not the compensating control is applied to mitigate the finding identified:

| Finding ID | Model weakness | Compensating control methodology | Control assessed |
| --- | --- | --- | --- |

# 6 Control Assessment

When the pricing model is used as a servicer, please refer to top model validation report section on the control assessment of the servicer models.

## 6.1 Ongoing Performance Monitoring

The model performance monitoring relies on performance indicators defined by the Product Owners, product model users or control functions as necessary, to confirm that the model is performing as intended.

The following activities as linked to models are included in performance monitoring:

• Unexplained P&L due to model issues

• Relative size of model reserves taken at product-model pair level (relative to PV and or trade count). Month-on-month changes in the value of a specific model reserve in excess of 1m euros automatically triggers further scrutiny.

• VRM's output price testing results through IPV processes.

• Identification of risk instabilities produced by models.

• Feedback on model performance (e.g. hedging performance, market observations, historical back testing exceptions, calibration failures, consideration of pricing auction results successes, risk instabilities, significant collateral disputes due to model issues), and model failure, including technical model failures (identified through model development regression testing or other BAU processes).

The activities listed above must be prepared and presented to the MCWGs and during the year's annual attestation.

## 6.2 Data and Process Controls

### 6.2.1 Condition for use

The following table contains the list of Model Parameter Monitoring (MPM) rules extracted from MARS, COB 17.12.2020. The list contains the model rules deemed relevant for the model. The initial list of MPM rules was provided by DBAnalytics in MARS request 2020Jun12-RIEUPIE-14633 as part of the validation of MPM rules. The model rules have been validated in Q3 2020. The latest descriptions of the MPM rules can be found at https://nma.risk.db.com/mars/report. Note that majority of rules were introduced after the validation of the MPM rules in Q2 2020 with the exception of rules 550, 588 and 589 which were set prior to Q2 2020 and rule 17547 set in Q1 2021:

| ID | Rule | Business | Status | Last Change | ParamInfo |
| --- | --- | --- | --- | --- | --- |
| 550 | FX0006 | FX | Released/Released | 11-10-2017 | 05-07-2017 |
| 588 | FX0007 | FX | Released/Released | 11-10-2017 | 05-07-2017 |
| 589 | FX0008 | FX | Released/Released | 41-10-2017 | 05-07-2017 |
| 11032 | CURVE0001 | CREDIT | Released/Approved | 10-12-2020 | 27-06-2019 |

Continued on next page

Continued from previous page

| ID | Rule | Business | Status | Last Change | ParamInfo |
| --- | --- | --- | --- | --- | --- |
| 11036 | CURVE0002 | CREDIT | Released/Approved | 10-12-2020 | 10-07-2018 |
| 11038 | CURVE0009 | CREDIT | Released/Approved | 10-12-2020 | 27-06-2019 |
| 11041 | CURVE0005 | RATES | Released/Approved | 02-12-2020 | 27-06-2019 |
| 11044 | CURVE0019 | RATES | Released/Approved | 11-12-2020 | 27-06-2019 |
| 11054 | CURVE0013 | CREDIT | Released/Approved | 10-12-2020 | 27-06-2019 |
| 11063 | CURVE0017 | RATES | Released/Approved | 11-12-2020 | 27-06-2019 |
| 11065 | CURVE0003 | CREDIT | Released/Approved | 10-12-2020 | 27-06-2019 |
| 11069 | CURVE0010 | CREDIT | Released/Approved | 10-12-2020 | 27-06-2019 |
| 11823 | FX0014 | FX | Released/Released | 28-08-2020 | 29-07-2020 |
| 11824 | FX0015 | FX | Released/Released | 28-08-2020 | 08-01-2019 |
| 11825 | FX0016 | FX | Released/Released | 15-10-2020 | 07-05-2019 |
| 11826 | FX0017 | FX | Released/Released | 15-10-2020 | 24-05-2019 |
| 11827 | FX0018 | FX | Released/Released | 03-08-2020 | 08-01-2019 |
| 11828 | FX0019 | FX | Released/Released | 03-08-2020 | 22-04-2016 |
| 11829 | FX0020 | FX | Released/Released | 28-08-2020 | 29-07-2020 |
| 11830 | FX0021 | FX | Released/Released | 15-10-2020 | 27-03-2019 |
| 11831 | FX0022 | FX | Released/Released | 28-08-2020 | 29-07-2020 |
| 11832 | FX0023 | FX | Released/Released | 28-08-2020 | 29-07-2020 |
| 11833 | FX0024 | FX | Released/Released | 03-08-2020 | 29-07-2020 |
| 11834 | FX0025 | FX | Released/Released | 15-10-2020 | 05-07-2017 |
| 11835 | FX0026 | FX | Released/Released | 03-08-2020 | 29-07-2020 |
| 11836 | FX0027 | FX | Released/Released | 03-08-2020 | 05-07-2017 |
| 11837 | FX0028 | FX | Released/Released | 15-10-2020 | 07-05-2019 |
| 11838 | FX0029 | FX | Released/Released | 16-12-2020 | 22-04-2016 |
| 11839 | FX0030 | FX | Released/Released | 03-08-2020 | 30-10-2017 |
| 13071 | CURVE0024 | RATES | Released/Approved | 11-12-2020 | 08-07-2020 |
| 13075 | CURVE0012 | CREDIT | Released/Approved | 10-12-2020 | 11-08-2019 |
| 13076 | CURVE0004A | RATES | Released/Released | 06-11-2020 | 27-06-2019 |
| 16560 | FX0082 | FX | Released/Approved | 09-12-2020 | 14-02-2017 |
| 16561 | FX0083 | FX | Approved/Approved | 16-12-2020 | 27-06-2019 |
| 16562 | FX0084 | FX | Released/Approved | 10-12-2020 | 27-06-2019 |
| 17547 | FX0085 | FX | Released | 18-03-2021 | 18-03-2021 |

Table 92: CfU rules for DBSMC-RateDeterministic_FXMarket model. Status: Status of the Subcondition and Condition for Use. Last Change: Date when there was a last change of the Condition for Use. ParamInfo: The last date when any parameter used in the CfU was created or updated, corresponds to the ParamInfo dependency date. The table is generated from MARS data available at 2021-Mar-18 04:06:00

CfU ID | 550
Configuration: | all configurations
PRDS Product(s): | all products

Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::InputMode in (DELTAVOL, STRIKEVOL)
Target Condition(s): | VOL::InterpolationType in (NATURALCUBIC, TIMESTRIKE)

CfU ID | 588
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::InputMode in (DELTAVOL, STRIKEVOL)
Target Condition(s): | VOL::VolModel == CONSTANT_LV

CfU ID | 589
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::InputMode in (DELTAVOL, STRIKEVOL)
Target Condition(s): | VOL::InterpolationSpace in (LOGSTRIKE, STRIKE)

CfU ID | 11032
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::AddPar in (NONE, LINEAR)

CfU ID | 11036
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::BuildMethod in (CONSTANT_FORWARD_HYBRID_CONSTANT_FORWARD_HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)

CfU ID | 11038
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::SmoothFutures in (NO, YES, BACKWARD, BACKWARDDAILY)

CfU ID | 11041
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::ExtrapMethod in (CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE)

CfU ID | 11044
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::CCYUseBaseCurve in (NO, YES)

CfU ID | 11827
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::InputMode == PARAMETRICVOL and VOL::DiffusionType in (FXRATE, CROSSFXRATE)
Target Condition(s): | VOL::SkewType in (SA4, LARGD)

CfU ID | 11828
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | EXTRAINFO::ResultType != MODELPRICE

CfU ID | 11829
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | EXTRAINFO::ResultType == PIVAUTOFIT
Target Condition(s): | EXTRAINFO::TargetType == VOL

CfU ID | 11830
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | MODEL::ModelMode in (PRICE, PRICEVALUETWODIV)

CfU ID | 11831
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | EXTRAINFO::ResultType == PIVAUTOFIT
Target Condition(s): | EXTRAINFO::UseSyntheticForwards == NO

CfU ID | 11832
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | EXTRAINFO::ResultType == PIVAUTOFIT
Target Condition(s): | EXTRAINFO::Weighting in (NOTIONAL, VEGANOTIONAL)

CfU ID | 11833
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | MODEL::SurfaceTimeFloorMaxTime != NO

CfU ID | 11834
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::DiffusionType not in (FXRATE, CROSSFXRATE)
Target Condition(s): | VOL::InputMode in (STRIKEVOL, DELTAVOL, PARAMETRICVOL, MARGINALVOL)

CfU ID | 11835
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL
Target Condition(s): | VOL::PIVVolShiftType == ABSOLUTE

CfU ID | 11836
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::DiffusionType in (FXRATE, CROSSFXRATE)
Target Condition(s): | VOL::InputMode in (STRIKEVOL, DELTAVOL, PARAMETRICVOL)

CfU ID | 11837
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | MODEL::UseNewSVO in (NO, ALGLIB)

CfU ID | 11838
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | EXTRAINFO::ResultType_in { RISKMULTIPLIER, DEFAULTRISK, ACCRUAL, AutoCalibration, BermTex, RelaTerm, PIVAUTOFIT, CALIBRATE, accounts, lapsedata, CorrelatedRandomNumbers, CptyPvs, MatrixStates}

CfU ID | 11839
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | PRICINGINFO::PricingInfoType in (AUTOCALIBRATION, AUTOBASIS, BARRIER, BARRIERINFO, REPORT, SETTLEDCASH, MODELVOL)

CfU ID | 13071
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | CURVE::UseType in (DISCOUNTBASIS, LIBOR)
Target Condition(s): | CURVE::BaseRateType in (LIBOR, LIBOR-%, OIS, OIS-%)

CfU ID | 13075
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::TreasuryUseBaseCurve in (NO, YES)

CfU ID | 13076
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | CURVE::UseType != INFLATION
Target Condition(s): | CURVE::CurveType in (LIBOR, ODYBASIS)

CfU ID | 16560
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::UseType in (CROSSCCDYSWAP, DISCOUNTBASIS, LIBOR, INFLATION)

CfU ID | 16561
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | CURVE::SpreadBuildMethod not like "*"
Target Condition(s): | CURVE::SpreadBuildMethod in (LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)

CfU ID | 16562
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | None
Target Condition(s): | CURVE::OISUseBaseCurve in (NO, YES)

CfU ID | 17547
Configuration: | all configurations
PRDS Product(s): | all products
Minimum Condition(s): | VOL::VolName == MARKETVOL and VOL::InputMode in (DELTAVOL, STRIKEVOL)
Target Condition(s): | VOL::ArbitrageChecker == BUTTERFLY

# 7 Conclusion

The model outputs i.e. price and risk sensitivities have been evaluated by MoRM's independent testing, and the test results have shown that they are generally stable and smooth with respect to changes in the model parameters in both normal market conditions and stressed market conditions (IRRBB, CCAR, MultiVar). Furthermore, the generated profiles of PVs and risk sensitivities are well understood and in line with expectations. When using a parametric volatility configuration, only the parametric forms SA4 and LA6GD are approved.The auto-fitting quality is high under different market scenarios and the PVs and implied volatilities computed in PIV models are found in good agreement with the PVs and implied volatilities computed in equivalent non-parametric models. The correct implementation of the model has been tested in both parametric and non-parametric configurations, in both normal and stressed market conditions and the results are in line with expectations. The model limitations are listed in Section5.1-2.2.

The model DBSMC-RateDeterministic_FXMarket model is found suitable for pricing the products listed in Section 2.2 under the current Conditions for Use, see Table 4. Therefore, MoRM gives approval for its use.

## 7.0.1 Stress test parameters Ranges

[THIS IS TABLE: Risk factors table showing shift sizes for DBSMC-RateDeterministic_FXMarket model]
| | | SWAP/ | swap/ | | |
| | | DISCOUNTSPREAD/ | ccyB/ | FXSpot/ | ATMVol/ |
| | | ONSPREAD | OCDSPREAD | | FwdVol |
| | FXEuroOpt | EOD | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | CCAR | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | IRRBB | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | FXDigitalOpt | EOD | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | CCAR | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | IRRBB | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | FXGeometricBasketOpt | EOD | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | CCAR | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |
| | | IRRBB | [-0.05, 0.05] | [-0.05, 0.05] | [-0.9,2] | [-0.9,2] |

Table 129: Risk factors (shift sizes applied to the risk factors) table for DBSMC-RateDeterministic_FXMarket model. The shifts of the IR curve are absolute, the shifts of the IR vol, FX spot and FX vol are relative.

## 7.1 Usage controls

Model risk monitor the model and product combinations that have not been approved that must not be used by product-model users for books and records fair value measurements or external risk reporting. The Model Usage Exception Report collated by MRC with assistance from other relevant functions monitors and reports instances of model usage exceptions. As per model use section of the pricing model risk policy, the usage exceptions in the Model Usage Exception Report are reported under the following categories:

• Model Exception (use of an unapproved model is based on approved model inventory in MARS).
• P-M Exception (product not approved for the approved model selected is based on approved product-model approval inventory in PRDS).
• Blank PRDS Product (trade not tagged with a PRDS product name).
• Model Parameter Usage Exceptions (trade using model parameter values which are not allowed based on prescribed conditions for use is based on MARS CfU/model rules).
• Unapproved dispersion.

Model and product combinations that have not been approved through MoRMs validation processes as well as retired and superseded models must not be used by product-model users for books and records fair value measurements or external risk reporting.

Interim controls are put in place over exceptions to manage, monitor and mitigate the risk of inappropriate or inaccurate model usage by product-model users. Exceptions must be remediated within a defined threshold period. Remediation activities could include a trade re-booking or the migration of a trade to an approved model. The validity of product tags assigned to trades by product-model users is independently verified by MRC through the Product Tagging Validation or PTV process.

## 7.2 Change Control

For Pricing models, implementation refers to DBA releases and deployment refers to integrating them into risk calculators.

The DBAnalytics code which is comprised of the C++ modelling/interface code and compilation directives files, the regression test files, their benchmark results, and the OnlineHelp are all maintained in source control auditable repositories. The code is labeled as releases are made and classified as part of the pricing model change process.

DBAnalytics are responsible for the daily production of binary executables for DEV, BETA, and PROD builds of the library. These are available from DBA website for download. The actual deployment of these binaries into the risk systems for official end-of-day PnL is the responsibility of the technology teams who maintain these systems. Since DBA is a common analytic to all systems and the model change will be applicable to all (whilst at different time horizon according to system release), the pricing model change usage control key principle relies on:

• The pricing model change process including classification and validation of model change. DBA will create a model parameter to enable and or disable the model change. Model risk will control the release of the model change by adding a model parameter rule for any model change pending review.
• Monitoring model usage controls through continuous tracking of trades to detect the use of unapproved models.
• Implementation controls through mandatory use of strategic risk library and calculators, source control and release procedure.

## 7.3 Results from Annual Model Review

SR11.7 introduces the concept of an annual model review for each model as follows: Banks should conduct a periodic review at last annually but more frequently if warranted - of each model to determine whether it is working as intended and if the existing validation activities are sufficient. Such a determination could simply affirm previous validation work, suggest updates to previous validation activities, or call for additional validation activities. All pricing models within the approved model inventory must be subject to the Annual Model Review to determine whether the models continue to be valid and appropriate for the intended use given current market conditions and whether associated controls remain sufficient. The performance of all active pricing models is assessed over the course of the year through on-going model performance monitoring.

As per the policy, the annual model review will consider:

• Proposed global Model Risk Scorecard overrides to inherent risk rating : None.
• Model performance: Please refer to section "Ongoing Performance Monitoring". With the exception of the issues listed and described below (please list and describe relevant instances reported including subsequent completed actions) ongoing performance monitoring reported in insert year did not reveal unexpected or inaccurate results attributable to model performance.
• Other relevant indicators not captured by the above, such as:
  - Changes in academic theory related to modeling that would require new models/changes to existing models: None identified.
  - Changes in the market that have rendered some model assumptions to be inappropriate or insufficient: None observed.
  - Model development regression testing indicated potential issues with the model: None observed.

Approval Decision : the annual model review process proposed outcome was that the DBSMC-RateDeterministic_FXMarketwas re-attested by the MCWG.

# 8 Document Change History

## 8.1 Change History Post July 15,2015

| Revision | Author | Date | Comment |
|----------|---------|------|----------|
| r16583 | souhail hannouf | 2016-02-23 | Consolidate the limitation's category. |
| r20704 | jason doukas | 2016-06-30 | Removing user attestation conditions for use. |
| r28810 | souhail hannouf | 2017-02-06 | Fix CfU ids |
| r26998 | emiliano papa | 2017-02-09 | |
| r28637 | constantine x mavroudis | 2017-03-31 | Revalidation Q1 2017 and Pythonization of testing evidence with DBA v420. |
| r28644 | constantine x mavroudis | 2017-03-31 | Revalidation Q1 2017 and Pythonization of testing evidence with DBA v420. |
| r28645 | constantine x mavroudis | 2017-03-31 | Revalidation Q1 2017 and Pythonization of testing evidence with DBA v420. |
| r28653 | constantine x mavroudis | 2017-03-31 | Revalidation Q1 2017. Pythonization of testing evidence with DBA v420. |
| r38796 | constantine x mavroudis | 2017-09-25 | Update Template to current standards. |
| r38890 | constantine x mavroudis | 2017-09-26 | To compile the TOC. |
| r39280 | timothy brere-ton | 2017-09-28 | Added testing of PIV. |
| r39506 | timothy brere-ton | 2017-10-02 | Additional PIV testing added. |
| r39616 | timothy brere-ton | 2017-10-05 | Added additional PIV testing. |
| r39678 | timothy brere-ton | 2017-10-11 | Modified interpolation conditions for use so that they only apply to non-parametric vols. |
| r41100 | constantine x mavroudis | 2018-01-02 | CCAR Testing added |
| r41450 | constantine x mavroudis | 2018-01-26 | Adding "ArbitrageChecker=YES" Condition of Use |
| r42109 | constantine x mavroudis | 2018-02-28 | Revalidation for Q1 2018 with DBA v520. |
| r50818 | timothy brere-ton | 2018-07-06 | Added autocalibration configurations. |
| r50972 | timothy brere-ton | 2018-07-10 | Added comment to trigger tex compilation. |
| r51801 | marek olek-siewicz | 2018-07-31 | mars tables injected |
| r52266 | constantine x mavroudis | 2018-08-13 | Delete pdf file as per new instructions |
| r53282 | olekmar | 2018-09-12 | risk tables updated; please delete old manually |
| r61470 | nedesor | 2020-07-01 | Q2 2020 Revalidation |
| r61692 | nedesor | 2020-08-17 | |
| r62316 | nedesor | 2020-10-26 | Fix Jenkins Error |
| r62319 | nedesor | 2020-10-26 | Fix Jenkins error |
| r62339 | nedesor | 2020-10-28 | Fix Jenkins Error |
| r62342 | nedesor | 2020-10-28 | Fix Jenkins Error |
| r62377 | nedesor | 2020-11-09 | Inserted CFUs for CURVE conditions |
| r62796 | nedesor | 2020-12-17 | Updated CFU tables to latest format. |
| r63406 | nedesor | 2021-03-19 | |
| r64317 | nedesor | 2021-09-30 | |
| r66039 | strasta | 2022-07-19 | Update documentations after Q2 2022 Revalidation. |
| r66044 | strasta | 2022-07-20 | |
| r66184 | strasta | 2022-08-26 | Add basket products and address review comments. |
| r66245 | strasta | 2022-09-29 | |
| r66246 | strasta | 2022-09-29 | Revalidation Q2 2022, and Doc Update 29th September 2022 |
| r66418 | fernped | 2022-11-15 | Updated testing for FXGeometricBasketOpt (fermped), FXEuroOpt and FXDigitalOpt (zhanwenb) + minor changes to improve latex compilation |
| r67089 | nehnvan | 2023-08-02 | Add limitation 707 to FXGeometricBasketOpt. |
| r68124 | zhanwenb | 2024-04-26 | Updated Model and Document Information table. |

## 8.2 Change History Prior July 15,2015

| Date | Changes | DBA version |
|------|---------|-------------|
| 29/01/2014 | Initial Document | v170 |
| 24/07/2014 | Removed limitations: Numerical|Integral_Discretisation|[DBSMC] and Missing Risk Factor|[FX Forward Volatility|[FXMarket] | v200 |
| 09/03/2015 | Adding description and tests for SkewType SABR3FORMULAPD. | v210 |
| 30/05/2015 | Revalidation | v230 |

In this appendix we include testing of retired configurations.

# A FX SABR3FORMULAPD interpolation and extrapolation (retired)

In this section we perform validation of the parametric implied volatility of the DBSMC-RateDeterministic_FXMarket model which is triggered when a MarketVol with InputType=PARAMETRICVOL and SkewType=SABR3FORMULAPD. Specifically, we investigate the extrapolation-corrected SABR parametrization. Note that the SABR3FORMULAPD configuration is retired, and this testing section is kept solely for legacy purposes.

It should be noted that only the non-basket products can be priced in this mode. In order to obtain prices for FxEuroOpt products, the security is configured to a CAPFLOOR security object with the inputs OptionCallMaturity, OptionType=Call/Put, Strike=K, for an arbitrary number of options in the Options subtable.

As discussed in subssubsection 2.6.5, the model uses the regular SABR formula for implied volatility Equation 32 with a modified extrapolation method to fix problems on the wings which exhibited Butterfly arbitrage.

We perform both implementation tests and stress tests. In the implementation test we compare the prices obtained from DBA against a manual calculation. A variety of stress tests are done which include bumping of the spot, strike and SABR parameters.

In all tests unless otherwise stated we consider call options with a 1 year maturity at strikes from 0.6 to 1.8 in 0.05 increments with a current FX spot rate of 1.25. We compare the option prices and implied volatilities for both the manual calculation and the DBA model. The results indicate negligible differences so DBA is in very good agreement with the manual implementation.

## A.1 Implementation test

The first test we perform is the implementation test whereby we reproduce the SABR3FORMULAPD SkewType formula manually. The volatility parameters used for this test can be found in table 131. The results are shown in Table 132, in which we can see that the differences in the implied volatilities are smaller than 15 basis points. We can see from figure 143 that the implied volatility and option prices are smooth as a function of strike.

Table 131: Volatility parameters

| Name | Value |
|------|--------|
| VOL | 0.1 |
| SKEW | 0.15 |
| SMILE | 0.75 |
| INTERPOLATIONSTART | 0.05 |

Table 132: Reproducing the SABR3FORMULAPD SkewType formula

| Strike | BSvol | Bsvol (Reproduced) | Difference | Strike | BSvol | Bsvol (Reproduced) | Difference |
|--------|--------|-------------------|------------|---------|--------|-------------------|------------|
| 0.60 | 15.001% | 14.916% | -0.001 | 1.20 | 11.262% | 11.260% | 0.000 |
| 0.63 | 14.951% | 14.866% | -0.001 | 1.23 | 11.297% | 11.297% | 0.000 |
| 0.66 | 14.899% | 14.813% | -0.001 | 1.26 | 11.437% | 11.437% | 0.000 |
| 0.69 | 14.845% | 14.760% | -0.001 | 1.29 | 11.666% | 11.666% | 0.000 |
| 0.72 | 14.791% | 14.706% | -0.001 | 1.32 | 11.965% | 11.965% | 0.000 |
| 0.75 | 14.736% | 14.652% | -0.001 | 1.35 | 12.313% | 12.313% | 0.000 |
| 0.78 | 14.681% | 14.598% | -0.001 | 1.38 | 12.696% | 12.696% | 0.000 |
| 0.81 | 14.624% | 14.543% | -0.001 | 1.41 | 13.101% | 13.101% | 0.000 |
| 0.84 | 14.561% | 14.484% | -0.001 | 1.44 | 13.518% | 13.518% | 0.000 |
| 0.87 | 14.487% | 14.415% | -0.001 | 1.47 | 13.942% | 13.942% | 0.000 |
| 0.90 | 14.390% | 14.325% | -0.001 | 1.50 | 14.367% | 14.367% | 0.000 |
| 0.93 | 14.249% | 14.198% | -0.001 | 1.53 | 14.790% | 14.790% | 0.000 |
| 0.96 | 14.025% | 13.989% | 0.000 | 1.56 | 15.211% | 15.211% | 0.000 |
| 0.99 | 13.651% | 13.641% | 0.000 | 1.59 | 15.628% | 15.628% | 0.000 |
| 1.02 | 13.119% | 13.119% | 0.000 | 1.62 | 16.035% | 16.035% | 0.000 |
| 1.05 | 12.624% | 12.624% | 0.000 | 1.65 | 16.402% | 16.410% | -0.001 |
| 1.08 | 12.185% | 12.185% | 0.000 | 1.68 | 16.697% | 16.712% | -0.001 |
| 1.11 | 11.814% | 11.814% | 0.000 | 1.71 | 16.936% | 16.957% | -0.001 |
| 1.14 | 11.527% | 11.527% | 0.000 | 1.74 | 17.133% | 17.159% | -0.001 |
| 1.17 | 11.340% | 11.340% | 0.000 | 1.77 | 17.297% | 17.327% | -0.001 |

![Figure 143: The graph displays the reproduced Implied Volatility and Options prices compared with those from DBA as a function of Strike. The volatility parameters we use for this test can be found in table 131. The maturity is for 1Y.](./Fig/143.png)

## A.2 Stress test: Spot bump

In this test we do a relative Spot Bump of 70% and 120%; we reproduce the SABR3FORMULAPD SkewType formula under the spot stressed market and then compare the reproduced Implied Volatilities to the ones returned from DBA. The volatility parameters used in this test are the same as those used previously and can be found in table 131.

| Strike | Bsvol | Bsvol (Re-produced) | Difference |
|--------|--------|---------------------|------------|
| 0.65 | 14.257% | 14.202% | -0.001 |
| 0.7 | 13.475% | 13.475% | 0.000 |
| 0.75 | 12.304% | 12.304% | 0.000 |
| 0.8 | 11.505% | 11.505% | 0.000 |
| 0.85 | 11.264% | 11.264% | 0.000 |
| 0.9 | 11.629% | 11.629% | 0.000 |
| 0.95 | 12.402% | 12.402% | 0.000 |
| 1 | 13.358% | 13.358% | 0.000 |
| 1.05 | 14.367% | 14.367% | 0.000 |
| 1.1 | 15.369% | 15.369% | 0.000 |
| 1.15 | 16.322% | 16.333% | 0.001 |
| 1.2 | 16.966% | 17.011% | 0.001 |
| 1.25 | 17.372% | 17.438% | 0.001 |
| 1.3 | 17.644% | 17.725% | 0.001 |
| 1.35 | 17.837% | 17.928% | 0.001 |
| 1.4 | 17.980% | 18.079% | 0.001 |
| 1.45 | 18.092% | 18.195% | 0.001 |
| 1.5 | 18.180% | 18.288% | 0.001 |

Table 133: Relative Spot Bump 70%: Reproducing the SABR3FORMULAPD SkewType formula.

| Strike | Bsvol | Bsvol (Re-produced) | Difference |
| --- | --- | --- | --- |
| 0.65 | 15.088% | 15.005% | -0.001 |
| 0.7 | 15.028% | 14.944% | -0.001 |
| 0.75 | 14.950% | 14.876% | -0.001 |
| 0.8 | 14.887% | 14.803% | -0.001 |
| 0.85 | 14.812% | 14.728% | -0.001 |
| 0.9 | 14.736% | 14.653% | -0.001 |
| 0.95 | 14.659% | 14.578% | -0.001 |
| 1 | 14.576% | 14.498% | -0.001 |
| 1.05 | 14.473% | 14.402% | -0.001 |
| 1.1 | 14.319% | 14.261% | -0.001 |
| 1.15 | 14.041% | 14.004% | -0.001 |
| 1.2 | 13.475% | 13.475% | 0.000 |
| 1.25 | 12.756% | 12.756% | 0.000 |
| 1.3 | 12.140% | 12.140% | 0.000 |
| 1.35 | 11.659% | 11.659% | 0.000 |
| 1.4 | 11.355% | 11.355% | 0.000 |
| 1.45 | 11.260% | 11.260% | 0.000 |
| 1.5 | 11.379% | 11.379% | 0.000 |
| 1.55 | 11.681% | 11.681% | 0.000 |
| 1.6 | 12.115% | 12.115% | 0.000 |
| 1.65 | 12.631% | 12.631% | 0.000 |
| 1.7 | 13.193% | 13.193% | 0.000 |
| 1.75 | 13.777% | 13.777% | 0.000 |
| 1.8 | 14.367% | 14.367% | 0.000 |

Table 134: Relative Spot Bump 120%: Reproducing the SABR3FORMULAPD SkewType formula.

Table 133: Relative Spot Bump 70%: Reproducing the SABR3FORMULAPD SkewType formula.

| Strike | Bsvol | Bsvol (Re-produced) | Difference |
| --- | --- | --- | --- |
| 1.55 | 18.252% | 18.363% | 0.001 |
| 1.6 | 18.312% | 18.425% | 0.001 |
| 1.65 | 18.363% | 18.477% | 0.001 |
| 1.7 | 18.406% | 18.520% | 0.001 |
| 1.75 | 18.442% | 18.558% | 0.001 |
| 1.8 | 18.473% | 18.589% | 0.001 |

![Figure 144: Under a 70% Relative Spot Bump.](./Fig/144.png)

![Figure 145: Under a 120% Relative Spot Bump.](./Fig/145.png)

Figure 146: The graphs correspond with the data shown in 134 and display the reproduced Implied Volatility and the Implied Volatility obtained from DBA as a function of Strike under the spot stressed market conditions. The volatility parameters used for this test can be found in table 131.

We can see from tables 133 and 134 that the differences in implied volatilities is smaller than 15 basis points. Figure 144 and Figure 145 are smooth as a function of Strike, and DBA is in good agreement with the manual implementation.

## A.3 Stress test: Long and short maturities

In this test we check the behavior for long and short maturities: 1 week, 5 years and 30 years. We use a spot FX rate of 1.250. The volatility parameters we use for this test can be found in table 135.

Table 135: Volatility parameters

| Name | 1 week | 5 years | 30 years |
| --- | --- | --- | --- |
| VOL | 0.1 | 0.1 | 0.1 |
| SKEW | 0.15 | 0.15 | 0.15 |
| SMILE | 0.75 | 0.75 | 0.15 |
| INTERPOLATIONSTART | 0.05 | 0.05 | 0.25 |

Reproducing the SABR3FORMULAPD SkewType formula. Current Spot is at 1.250.

| Strike | Bsvol | Bsvol (Re-produced) | Difference |
| --- | --- | --- | --- |
| 1.16 | 10.956% | 10.913% | -0.001 |
| 1.17 | 10.956% | 10.913% | -0.001 |
| 1.18 | 10.956% | 10.913% | -0.001 |
| 1.19 | 10.956% | 10.913% | -0.001 |
| 1.2 | 10.956% | 10.913% | -0.001 |
| 1.21 | 10.956% | 10.913% | -0.001 |
| 1.22 | 10.963% | 10.920% | -0.001 |
| 1.23 | 10.981% | 10.938% | -0.001 |
| 1.24 | 11.010% | 10.967% | -0.001 |
| 1.25 | 11.050% | 11.007% | -0.001 |
| 1.26 | 11.100% | 11.057% | -0.001 |
| 1.27 | 11.160% | 11.117% | -0.001 |
| 1.28 | 11.229% | 11.185% | -0.001 |
| 1.29 | 11.247% | 11.223% | -0.001 |
| 1.3 | 11.247% | 11.223% | -0.001 |
| 1.31 | 11.247% | 11.223% | -0.001 |
| 1.32 | 11.247% | 11.223% | -0.001 |
| 1.33 | 11.247% | 11.223% | -0.001 |
| 1.34 | 11.247% | 11.223% | -0.001 |
| 1.35 | 11.247% | 11.223% | -0.001 |
| 1.36 | 11.247% | 11.223% | -0.001 |

Table 136: Maturity 1 week.

| Strike | Bsvol | Bsvol (Re-produced) | Difference |
| --- | --- | --- | --- |
| 0.65 | 24.522% | 24.522% | 0.000 |
| 0.7 | 22.863% | 22.863% | 0.000 |
| 0.75 | 21.296% | 21.296% | 0.000 |
| 0.8 | 19.811% | 19.811% | 0.000 |
| 0.85 | 18.401% | 18.401% | 0.000 |
| 0.9 | 17.065% | 17.065% | 0.000 |
| 0.95 | 15.804% | 15.804% | 0.000 |
| 1 | 14.630% | 14.630% | 0.000 |
| 1.05 | 13.567% | 13.567% | 0.000 |
| 1.1 | 12.660% | 12.660% | 0.000 |
| 1.15 | 11.990% | 11.990% | 0.000 |
| 1.2 | 11.659% | 11.659% | 0.000 |
| 1.25 | 11.736% | 11.736% | 0.000 |
| 1.3 | 12.175% | 12.175% | 0.000 |
| 1.35 | 12.850% | 12.850% | 0.000 |
| 1.4 | 13.645% | 13.645% | 0.000 |
| 1.45 | 14.488% | 14.488% | 0.000 |
| 1.5 | 15.341% | 15.341% | 0.000 |
| 1.55 | 16.184% | 16.183% | 0.000 |
| 1.6 | 17.007% | 17.007% | 0.000 |
| 1.65 | 17.806% | 17.806% | 0.000 |
| 1.7 | 18.580% | 18.580% | 0.000 |

Table 137: Maturity 5 years.

| Strike | BSvol | Bsvol (Re-produced) | Difference |
| --- | --- | --- | --- |
| 0.6 | 12.480% | 12.474% | 0.000 |
| 0.7 | 12.480% | 12.474% | 0.000 |
| 0.8 | 12.457% | 12.454% | 0.000 |
| 0.9 | 12.276% | 12.276% | 0.000 |
| 1 | 12.163% | 12.163% | 0.000 |
| 1.1 | 12.125% | 12.125% | 0.000 |
| 1.2 | 12.146% | 12.146% | 0.000 |
| 1.3 | 12.214% | 12.214% | 0.000 |
| 1.4 | 12.315% | 12.315% | 0.000 |

![Figure 147: The graph displays the reproduced Implied Volatility and the DBA Implied Volatility as a function of Strike. The volatility parameters we use for this test can be found in table 135.](./Fig/147.png)

Figure 147 confirm that the the DBA Implied Volatilities are reproduced by the manual implementation of the SABR3FORMULAPD SkewType formula up to the difference s smaller than 15 basis points.

We can see from tables 136, 137 and 138 and figure 147 that the difference in implied volatilities is smaller than 15 basis points.

## A.4 Stress test: SABR parameters

In this test the SABR skew and smile parameters at the 1 year maturity are stressed. The values StressedSkew = InitialSkew x 4 = 0.6, StressedSmile = InitialSmile x 2 = 1.5 are chosen. The current FX spot rate is 1.250. The volatility parameters used for this test are summarized in table 139.

Table 139: Volatility parameters used for the SABR parameter stress tests.

| Name | 1 year |
| --- | --- |
| VOL | 0.1 |
| SKEW | 0.6 |
| SMILE | 1.5 |
| INTERPOLATIONSTART | 0.05 |

We can see from table 140 and figure 148 that the difference in implied volatilities is smaller than 15 basis points.

Additional checks were performed on the SABR parameters one by one using table 131 as a base, and changing the parameters VOL in (0.2, 0.4, 0.6, 0.8, 1), SMILE in (0.3, 0.9, 1.2) and SKEW in (0.15, 0.5) for 1 year maturity. In all tests we checked that the maximum difference in implied volatility is always smaller than 15 basis points. In all cases the tests pass.

Table 141: Maximum Implied Volatility difference for different values of parameters

| VOL | Diff |
| --- | --- |
| 0.2 | 0.02% |
| 0.4 | 0.00% |
| 0.6 | 0.00% |
| 0.8 | 0.00% |
| 1 | 0.00% |

| SMILE | Diff |
| --- | --- |
| 0.3 | 0.01% |
| 0.9 | 0.10% |
| 1.2 | 0.10% |

| SKEW | Diff |
| --- | --- |
| 0.15 | 0.09% |
| 0.5 | 0.04% |

## A.5 Stress test: Flat volatility

In this test we study the SABR3FORMULAPD SkewType formula in the limit of Flat Volatility at the 1 year maturity. In order to achieve this we set the smile and skew parameters to very small values (effectively zero). The parameters we use for this test can be found in table 142. We can see from table 143 that the difference in implied volatilities is smaller than 15 basis points.

## B FX SABR3FORMULAPD vs non-parametric interpolation and extrapolation: (retired)

In this section we perform validation of the parametric implied volatility of the DBSMC-RateDeterministic_FXMarket model which is triggered when a MarketVol with InputType=PARAMETRICVOL and SkewType=SABR3FORMULAPD. Specifically, we

![Figure 148: The graph displays the reproduced Im-plied Volatility and the one from DBA as a function of Strike with Stressed parameters. The volatility parameters we use for this test can be found in table 139.](./Fig/148.png)

Table 140: SABR parameter Stress testing: Repro-ducing the SABR3FORMULAPD SkewType formula. The volatility parameters we use for this test can be found in table 139.

| Strike | Bsvol | Bsvol (Reproduced) | Difference |
| --- | --- | --- | --- |
| 0.7 | 22.166% | 22.036% | -0.001 |
| 0.75 | 21.215% | 21.110% | -0.001 |
| 0.8 | 20.122% | 20.042% | -0.001 |
| 0.85 | 18.874% | 18.819% | -0.000 |
| 0.9 | 17.456% | 17.424% | -0.000 |
| 0.95 | 15.848% | 15.836% | -0.000 |
| 1 | 14.078% | 14.078% | 0.000 |
| 1.05 | 12.382% | 12.382% | 0.000 |
| 1.1 | 10.865% | 10.865% | 0.000 |
| 1.15 | 9.795% | 9.795% | 0.000 |
| 1.2 | 9.913% | 9.913% | 0.000 |
| 1.25 | 11.544% | 11.544% | 0.000 |
| 1.3 | 13.696% | 13.696% | 0.000 |
| 1.35 | 15.832% | 15.832% | 0.000 |
| 1.4 | 17.848% | 17.848% | 0.000 |
| 1.45 | 19.737% | 19.737% | 0.000 |
| 1.5 | 21.510% | 21.510% | 0.000 |
| 1.55 | 23.181% | 23.181% | 0.000 |
| 1.6 | 24.761% | 24.761% | 0.000 |
| 1.65 | 26.261% | 26.261% | 0.000 |

investigate the extrapolation-corrected SABR parametrization. Note that the SABR3FORMULAPD configuration is retired, and this testing section is kept solely for legacy purposes.

The DBSMC-RateDeterministic_FXMarket model comprises two setups which are approved for use. In the non-parametric setup, the implied volatility surface is constructed by constant forward volatility interpolation in the time direction followed by a natural cubic interpolation in the strike direction. In the parametric setup, the pre-calibrated SABR parameters (ATM VOL, ρ and ν) are given in the MARKETVOL and used to construct a modified SABR implied volatility surface. While one would not expect these two different interpolation methods to produce exactly the same prices, it is important for model integrity that the prices are not larger than the typical bid-ask spread. In this section we provide some of the results from our testing and explain our methodology.

Calibration of the SABR model to the market is performed by the front office. Unlike the non-parametric interpolation method, the pricing dictionaries which utilize the SABR3FORMULAPD parametric method only contain the pre-calibrated SABR parameters and not the market data itself. Since the non-parametric method requires market data, some way of comparing the two methods is required.

We now describe our approach. To avoid calibrating the SABR model, which is a front office responsibility, we begin with a pre-calibrated SABR model and extract from it dummy market data. That is we calculate the implied volatilities for various strikes and maturities and then feed those calculated implied volatilities into a MARKETVOL object which we then use to price with the

| Name | 1 year |
| --- | --- |
| VOL | 0.1 |
| SKEW | 0.01 |
| SMILE | 0.01 |
| INTERPOLATIONSTART | 0.05 |

Table 142: Volatility parameters

non-parametric method. We use the strikes with Delta: 10C, 25C, DN, 25P, 10P, and maturities: 3M, 6M, 9M, 12M, 15M, 18M. It should be noted that this dummy market data may not produce the original SABR parameters if it were to be refit using the SABR model calibration.

In our example, we consider the price of a 6 month FX call option on the USDEUR at the valuation date 3/5/2013. We use the parameters shown in Table 144. We configure the non-parametric MARKETVOL to the recommended setting of VolModel=CONSTANT_LV, InterpolationType=NATURALCUBIC and use the default extrapolation method. The prices and implied

Table 144: Volatility parameters.

| Name | 1 year |
| --- | --- |
| VOL | 0.1 |
| SKEW | 0.15 |
| SMILE | 1.4 |
| INTERPOLATIONSTART | 0.05 |

volatilities for the two methods can then be compared and are shown in Figure 150.

Figure 149: Flat Volatility test for the SABR3FORMULAPD SkewType formula. Corresponding data shown on the right. Differences between the manual and DBA implementations are immaterial.

Table 143: Flat SABR: Reproducing the SABR3FORMULAPD SkewType formula. The volatility parameters we use for this test can be found in table 142.

| Strike | Bsvol | Bsvol (Reproduced) | Difference |
| --- | --- | --- | --- |
| 0.7 | 11.356% | 11.356% | 0.000 |
| 0.745 | 11.356% | 11.356% | 0.000 |
| 0.79 | 11.356% | 11.356% | 0.000 |
| 0.835 | 11.356% | 11.356% | 0.000 |
| 0.88 | 11.356% | 11.356% | 0.000 |
| 0.925 | 11.356% | 11.356% | 0.000 |
| 0.97 | 11.356% | 11.356% | 0.000 |
| 1.015 | 11.356% | 11.356% | 0.000 |
| 1.06 | 11.356% | 11.356% | 0.000 |
| 1.105 | 11.356% | 11.356% | 0.000 |
| 1.15 | 11.356% | 11.356% | 0.000 |
| 1.195 | 11.356% | 11.356% | 0.000 |
| 1.24 | 11.356% | 11.356% | 0.000 |
| 1.285 | 11.356% | 11.356% | 0.000 |
| 1.33 | 11.356% | 11.356% | 0.000 |
| 1.375 | 11.357% | 11.357% | 0.000 |
| 1.42 | 11.357% | 11.357% | 0.000 |
| 1.465 | 11.357% | 11.357% | 0.000 |
| 1.51 | 11.357% | 11.358% | 0.000 |
| 1.555 | 11.357% | 11.358% | 0.000 |
| 1.6 | 11.357% | 11.358% | 0.000 |

![Figure 150: Comparison of the call price and implied volatility using the parametric SABR3FROMULAPD method and the non-parametric interpolation method which uses constant forward volatility in the time direction and natural cubic interpolation in the strike direction. The purple triangular markers indicate from left to right the positions of the volatility pegs at the Delta: 10C, 25C, DN, 25P, 10P. We see that within the interpolation region both the prices and the implied volatilities are in good agreement.](./Fig/150.png)

Within the interpolation region both the prices and the implied volatilities are in good agreement. However, the methods differ significantly in the extrapolation region. Nevertheless, since the prices approach zero in this regime, the differences are small in absolute terms. For example, at strike of 1.5, the percentage difference can be as much as 11% but this represents less than a 5bps difference in price, well below the bid-ask spread.

Perhaps a greater point of concern is that the non-parametric method displays arbitrage in the extrapolation region as can be been by the negative density in Figure 153.

![Figure 151: Comparison of the implied volatility.](./Fig/151.png)

![Figure 152: Comparison of the call price. We get very good agreement with differences](./Fig/152.png)

Figure 153: Comparison of the CDF and PDF using the parametric SABR3FROMULAPD method and the non-parametric interpolation method which uses constant forward volatility in the time direction, natural cubic interpolation in the strike direction and the default extrapolation method. The green triangular markers indicate from left to right the positions of the volatility time pegs at the Delta: 10C, 25C, DN, 25P, 10P. We see arbitrage in the extrapolation region to the right of the smile.

This behavior persists and even appears on both sides of the smile (and becomes more pronounced) when we change the extrapolation method to ExtrapolationInputMode:=SPACE (Section 2.6.2.3) as shown in Figure 156.

![Figure 154: Comparison of the implied volatility.](./Fig/154.png)

![Figure 155: Comparison of the call price. We get very good agreement with differences](./Fig/155.png)

Figure 156: Comparison of the CDF and PDF using the parametric SABR3FROMULAPD method and the non-parametric interpolation method which uses constant forward volatility in the time direction, natural cubic interpolation in the strike direction and the extrapolation method with ExtrapolationInputMode:=SPACE. The green triangular markers indicate from left to right the positions of the volatility time pegs at the Delta: 10C, 25C, DN, 25P, 10P. We see arbitrage in the extrapolation region to the right of the smile.

It is important to note that these arbitrage opportunities occur just outside of the interpolation region and are therefore potentially realizable risks of the non-parametric model.