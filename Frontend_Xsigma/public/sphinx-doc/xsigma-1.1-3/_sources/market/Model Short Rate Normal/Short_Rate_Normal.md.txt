# Short Rate Normal Model Validation Document

## 1 Executive Summary

The Deutsche Bank Risk department has conducted a comprehensive validation of the DBX-ShortRate_InflationStochVol model, which is used for pricing and risk management of inflation derivatives. This document presents the validation findings, model details, and testing results.

The Global Model Risk Assessment classifies this model with HIGH ratings for Complexity, Uncertainty, and Reliance. The model is scheduled to be retired in mid-2025 and replaced by DBX-ShortRateNormal[LVMR,AUTO]_RealRateNormal[YIELD]_InflationStochVol.

## 2 Introduction to Model and Validation

### 2.1 Validation Scope

The validation covers the DBX-ShortRate_InflationStochVol model used for pricing various inflation derivatives. Products with similar features have been grouped together and tested as a consistent unit, with representative products tested to provide inference to the whole product group.

### 2.2 Product Description

#### 2.2.1 PRDS Descriptions

The model supports numerous inflation-linked products, including:

- **InflAssetSwap**: Interest rate swap transaction involved in a structure where the investor buys an inflation-linked bond
- **InflCapFloorYOY**: Inflation year-on-year swap with cap or floor features
- **InflSwapZC**: Zero-coupon inflation swap
- **InflSwaptionZCEuro**: European-style swaption on zero-coupon inflation swap
- **InflSwapLPI**: Limited price indexation inflation derivatives
- And many other specialized inflation products

#### 2.2.2 Product Grouping Table

The products approved for the DBX-ShortRate_InflationStochVol model are organized into categories based on their features:

| Underlying | Coupon Structure | Underlying Specifics | Option | Barrier | Path Dependent | Products |
|------------|-----------------|---------------------|--------|---------|----------------|----------|
| Inflation | Linear | Linear | None | None | None | InflAssetSwap, InflSwapZC |
| Inflation | EuroCpn | Convex | European | None | None | InflCapFloorYOY, InflSwaptionYOYEuro, InflSwaptionZCEuro, InflSwapYOYCapFloor |
| Inflation | EuroCpn | Convex | Bermudan | None | None | InflCapFloorYOYCallable, InflCapFloorZCCallable, InflSwaptionYOYBerm, InflSwaptionZCBerm |
| Inflation | EuroCpn | Linear | European | None | None | InflCapFloorZC |
| Inflation, InterestRate | EuroCpn | Convex | European | None | None | InflSwapInflNominalLin, InflVariableCapFloor, IRIndexOptSingle_INFLATION |
| Inflation | EuroCpn | Convex | European | None | Memory | InflSwapLookback, InflSwapLPI, InflSwapLPINonStd, InflSwaptionLPIEuro |
| Inflation | Linear | Convex | None | None | None | InflSwapPayDelay, InflSwapYOY, IRSwapRealRate |
| Inflation | Linear | Convex | None | None | Memory | InflSwapSnowball |
| Inflation | Linear | Convex | Bermudan | None | None | InflSwapYOYCallable |
| Inflation | Linear | Linear | Bermudan | None | None | InflSwapZCCallable |
| Inflation | EuroCpn | Convex | Asian | None | Asian | InflSwapAverage |

For testing purposes, one product in each category has been specifically tested. The bold-font products in Table 7 have been specifically tested as part of this review.

#### 2.2.3 Portfolio Composition and PV of Trades

The current production population of trades mapped to the DBX-ShortRate_InflationStochVol model as of 19/08/2022 includes:

| Product Name | Model Configuration | Trade Count | PV EUR (millions) | ABS PV EUR (millions) |
|--------------|---------------------|-------------|-------------------|------------------------|
| InflSwapAverage | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 5 | 27.381184 | 27.381184 |
| InflSwapInflNominalLin | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 5 | 1.027304 | 1.027304 |
| InflSwapLPINonStd | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 6 | 354.411794 | 354.411794 |
| InflSwapLookBack | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 1 | 7.104650 | 7.104650 |
| InflSwapLookback | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 63 | -38.290207 | 38.290207 |
| InflSwapSnowball | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 18 | 14.705815 | 14.705815 |
| InflSwapYOYCapFloor | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 1 | -0.027910 | 0.027910 |
| InflSwaptionZCEuro | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] | 5 | 13.126691 | 13.126691 |

### 2.3 Model Description

#### 2.3.1 Model Configuration

The DBX-ShortRate_InflationStochVol model has the following configurations:

- The LVTV configuration corresponds to the volatility parameterization through local volatilities and term volatilities. This configuration applies to DBAanalytics volatility objects with VolName DBMVOL and VolType LVT.
- The DBTTV configuration corresponds to the volatility parameterization through term volatilities. In this configuration local vols are set equal to term vols. The configuration applies to DBAanalytics volatility objects with VolName DBMVOL and VolType DBT.

#### 2.3.2 Model Assumptions

The key model assumptions include:

- No arbitrage is present in the market.
- The nominal interest rate follows a Hull-White diffusion model with normal distribution.
- The real interest rate follows a Hull-White mean reversion diffusion model with normal distribution.
- The inflation index is modelled using a lognormal process with stochastic volatility component. The model can be considered an extension of the classical Jarrow-Yildirim diffusion model.

#### 2.3.3 Model Parameters and Market Inputs

##### 2.3.3.1 Implementation Parameters

The implementation parameters define the Monte-Carlo pricing engine in the DBAanalytics library:

- **NumberSims**: Number of simulations per run (default: 2000)
- **NumberRuns**: Number of independent runs (default: 1)
- **FreqTimeVec**: Adds time points to simulation dates (default: 12 points per year)
- **FrontLatticeFreq**: Adds time points at the start of the time grid
- **DecayTime**: Defines the frequency of time points for arbitrary time t (default: 1)
- **VarianceReduction**: Specifies how uniform variates are transformed (ORTHOGONAL recommended)

##### 2.3.3.2 Model and Market Parameters

In the DBAanalytics library, pricing of multi-currency inflation derivatives requires:

- DBMVOL VOL object with ModelType=LOGNORMAL, VolType=DBT for the lognormal diffusion with stochastic volatility of the inflation rate index process
- DBMVOL VOL objects with ModelType=NORMAL, VolType=DBT for the Hull-White model for nominal and real interest rates
- CORRELATION with VolType=CORR for the term-structure of instantaneous correlation factors
- CURVE objects for interest rate curves and inflation curves

#### 2.3.4 Model Dynamics

##### 2.3.4.1 The FX Analogy and The Jarrow-Yildirim Model

The Jarrow-Yildirim model defines an inflation rate index by analogy with a spot FX rate. If an asset is worth 1 unit of real currency, its value in units of nominal currency is I, where I is the value of the inflation rate index. The inflation index can be thought of as an exchange rate between nominal currency on one side and real currency on the other.

The model introduces nominal (n) and real (r) zero coupon bonds, forward rates, short rates, and the forward inflation index. The mathematical formulation relies on stochastic differential equations for the nominal and real instantaneous forward rates and the inflation index process.

##### 2.3.4.2 The Model for the Nominal and Real Rate: Hull-White

The nominal and real instantaneous forward rates follow Hull-White models with volatilities that are separable functions of t and T. This leads to Ornstein-Uhlenbeck processes for the state variables.

##### 2.3.4.3 Reconstruction Formulas

Zero-coupon bond prices can be expressed in terms of the state variables using reconstruction formulas.

##### 2.3.4.4 The Model for the Inflation Rate Index: Lognormal with Stochastic Volatility

The inflation volatility is modeled using a local volatility approach, with a multiplier encoding the stochastic features. The inflation spot index follows:

$$\frac{dI(t)}{I(t)} = (n(t) - r(t))dt + \eta(t)v(t)dW^I(t)$$

where η(t) is the (stochastic) vol multiplier, and W^I(t) is a Brownian motion driving the inflation.

##### 2.3.4.5 The Correlation Matrix

The Jarrow-Yildirim model requires specification of instantaneous correlation factors between nominal, real, and inflation rate index processes. The correlation matrix is a real symmetric and positive-definite matrix with 10 inputs.

##### 2.3.4.6 Complete Model Specification

The full model dynamics is specified by the evolution of four stochastic factors:
- rₙ(t) - nominal short-rate process
- rᵣ(t) - real short-rate process
- I(t) - inflation index process
- v(t) - inflation index stochastic volatility process

These factors satisfy a system of joint stochastic differential equations that are simulated using Monte Carlo methods.

#### 2.3.5 Model Implementation

The DBAanalytics Monte-Carlo pricer simulates with respect to the nominal risk-neutral probability of the factors on a set of discrete dates.

##### 2.3.5.1 Integrated Stochastic Differential Equations

The stochastic differential equations are integrated to obtain values for the nominal and real short-rate factors, along with their correlation structures.

#### 2.3.6 Model Calibration

Model calibration testing is covered in separate MARS requests.

#### 2.3.7 Risk Sensitivity

Deutsche Bank conventions for Greeks differ from typical conventions:
- Deltas have opposite signs (negative FX delta means an increase in FX rate has a positive impact)
- Vegas have the standard signs (positive FX vega means an increase in volatility increases product value)
- DBA greeks indicate changes in absolute value rather than derivatives
- Greeks are by default scaled by 10⁶

Risk sensitivities used include:
- FLATDELTA: IR curve shifted up by 1 bp absolute
- FLATGAMMA: Difference of FLATDELTA when curve is shifted by 10bps
- FLATVEGA: All volatility parameters bumped by 5% relative

### 2.4 Feeder and Servicer Models

The model DBX-ShortRate_InflationStochVol has no direct servicer or feeder models.

### 2.5 Model Change Description

Model changes are logged by DBAanalytics developers in release notes available through a dedicated website. There are currently no model changes relevant to this document.

### 2.6 Validation Outline

#### 2.6.1 Testing Files

Test evidence files have been created for End of Day (EOD), Interest Rate Risk in the Banking Book (IRRBB), Comprehensive Capital Analysis and Review (CCAR), and MultiVar testing. All tests were performed in DBAanalytics version 1150.

Tables 9-12 list the test evidence files for various testing scenarios:
- EOD testing files (stability and convergence testing for each product)
- IRRBB testing files
- CCAR testing files
- MultiVar testing files

#### 2.6.2 Description of CCAR Scenario and Testing

The CCAR methodology includes construction of stressed market data objects for adverse and severely adverse stress scenarios. Three scenarios are tested:
1. Base Scenario: Market data used in end-of-day pricing
2. CCAR 1: Severely adverse 2022 CCAR scenario
3. CCAR 2: Adverse 2022 CCAR scenario

#### 2.6.3 Description of MultiVar Testing

The MultiVar test checks the PV dependence under simultaneous stress of all risk factors. It identifies the maximal/minimal values PV can have within defined risk factor regions by using partial derivatives.

Note that for λ = 0 the two functions match the EOD price, that is: $f_{UP}(0) = PV(x_1^{EOD},...,x_n^{EOD}) = f_{DOWN}(0)$, and for λ = 1 we have:

$$f_{UP}(1) = max(PV(x))$$

and

$$f_{DOWN}(1) = min(PV(x)),$$

where max and min for the function $PV(x)$ are taken over the hypercube $x_i^{LOW} \leq x_i^{EOD} \leq x_i^{HIGH}$, for $i = 1,...n$. Indeed, observe that for a convenient choice of the intervals $x_i^{LOW} \leq x_i^{EOD} \leq x_i^{HIGH}$ (i.e., locally), the function $f_{UP}(\lambda)$ is increasing and the function $f_{DOWN}(\lambda)$ is decreasing for $\lambda \in [0,1]$.

#### 2.6.4 Description of IRRBB Scenarios and Testing

In this section, we describe the Interest Rate Stress Tests according to a range of ten different scenarios defined under the RIBB framework. This framework is part of the Basel capital framework Pillar 2 (Supervisory Review Process), and was described also in [54]. The goal is to approve the behaviour and accuracy of the DBAanalytics implementation for all the components of the model under those scenarios.

The BCBS document [33] describes eight Interest Rate shock scenarios that are required to be applied to IRRBB exposures in each currency for which a bank has material positions in the Banking Book. Eight Interest Rate scenarios are prescribed that reflect currency-specific absolute interest rate shocks. Two of them (Steepener and Flattener) have been extended to take their opposite shift in order to define two additional scenarios: Steepener Negative and Flattener Negative. The IRRBB Interest Rate scenarios are summarized as follows:

- Parallel shock up
- Parallel shock down
- Steepener shock (short rate down and long rates up)
- Steepener Negative shock (opposite Steepener shift)
- Flattener shock (short rates up and long rates down)
- Flattener Negative shock (opposite Flattener shift)
- Short rates shock up
- Short rates shock down
- Long rates shock up
- Long rates shock down

Further to the above, the 10 IRRBB scenarios are augmented with a relative shift on the volatility of 25%.

![Figure 1: EUR IR Curve Zero Rates as function of maturity for the various IRRBB Scenarios.](./Fig/1.png)

For clarity's sake, we display the various scenarios by grouping them into different categories. We see that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and a downwards translation of the original EUR Zero Rate curve. The Steepener scenario bends the curve down in the short run while making the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" indeed the original curve. Similarly, the Long up and Long down shock affect the long rates part of the curve by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios, and this is clearly visible in the corresponding figure.

![Figure 2: EUR IR Curve Zero Rates as function of maturity for the various IRRBB Scenarios.](./Fig/2.png)

### 2.6.5 Risk Factor Table

Table 13: DBX-ShortRate_InflationStochVol RiskFactors

| Product | Class | IRCURVE | INFLCURVE | IRVOL | INFLVOL | STOCHVOL |
|---------|-------|---------|-----------|-------|---------|----------|
| InflSwapYOY, InflSwapZC, InflSwapYOYCapFloor, InflSwapSnowball, InflCapFloorZC, InflSwapInflNominalLin, InflSwapLookback, InflSwapLPI, InflSwapLPINonStd, InflSwaptionZCEuro | EOD Individual | [-10%,10%] Abs. Shift | [-10%,10%] Rel. Shift | [-90%,200%] Rel. Shift | [-90%,200%] Rel. Shift | [0%,10%] Abs. Shift |
| | IRRBB Individual | [-10%,10%] Abs. Shift | [-10%,10%] Abs. Shift | [-50%,200%] Rel. Shift | [-50%,200%] Rel. Shift |  |
| | CCAR Individual | [-10%,10%] Abs. Shift | [-10%,10%] Abs. Shift | [-90%,200%] Rel. Shift | [-90%,200%] Rel. Shift | [0%,10%] Abs. Shift |

### 2.7 Engagement Process

The model developer documentation submitted in MARS request ID 16528 has been reviewed for sufficiency and completeness against the model approval request submission standards detailed in the Pricing Model Validation Key Operating Document [63]. The results of the initial review are detailed in Tables 17 and 18. Outstanding developer documentation requirements not addressed during or prior to validation are subject to the validation finding raised in section 2.8. Correspondence between model developers and model validators is contained in MARS workflows ID 14944 and 14943.

### 2.8 List of Validation Findings

#### 2.8.1 Findings Description

1. Model Documentation Gaps. Resolved in MARS ID: 14943 The following documentation gap has been identified: the developer documentation does not provide information regarding the criteria based on which the products in scope of DBX-ShortRate_InflationStochVol model are assigned to DBMVOL-ZC calibration or DBMVOL-YOY calibration and the classification they provide does not cover all the products in scope of the model DBX-ShortRate_InflationStochVol. The model developer documentation, submitted on 06.07.2020, provides a list of 8 products for YOY calibration and 7 products for ZC calibration, but the model DBX-ShortRate_InflationStochVol has 22 products in scope). Several products are sensitive to forward smile. The documentation does not specify how these are assigned to DBMVOL-ZC calibration and DBMVOL-YOY calibration. The validation is resolved following the update of the latest version of the DBA calibration document enclosing all the products in scope of the model.

2. Lower bound for LocalVolsSV initial guess. Resolved in MARS ID: 14944 DBAanalytics should examine if a lower bound is necessary in the case of the initial guess used for the LocalVolsSV parameter — as it is in the case of the initial guesses used for the LocalVols parameters. The finding is resolved after the upgrade of DBA (version 890). DBA has improved the initial guess algorithm: the guessionary contains DBMVOL. Following this improvement, there are enough paths ending ITM with any level of SV and we observe that the calibration results do not depend on SV initial guess. MoRM has verified that the model vols and the model prices of the calibration instruments are not anymore equal to 0, following this improvement: cf. Table (101) and Table (106).

#### 2.8.2 Validation Findings: Resolved

The following are the validation findings resolved:

| Request ID | Start Date | Due Date | Request Status | Originator | Action Owner | Finding Severity |
|------------|------------|----------|----------------|------------|--------------|------------------|
| 2020Jul31-PREVLUI-14944 | 31/07/2020 | 30/04/2021 | Resolved | Luigi Previdi | Amaury Guillaume | Low |
| 2020Jul31-PREVLUI-14943 | 31/07/2020 | 30/04/2021 | Resolved | Luigi Previdi | Amaury Guillaume | Low |

Table 14: DBX-ShortRate_InflationStochVol Closed Findings

### 2.9 List of Validation Observation

As part of the validation of pricing models, MoRM may identify problems with the model that require an immediate implementation fix and cause further validation activities to be put on hold. Ownership, compensating controls, remediation actions and timelines will be discussed and monitored as part of the MCWGs. To raise a validation finding MoRM create a validation finding request in MARS, where the finding is described, responsible action owner is assigned and a deadline for remediation of the finding specified. MoRM can revoke a model approval if validation findings are not closed within agreed timelines. MoRM will only raise validation findings and not observations for pricing models. Due to the nature of model usage for valuation and risk management, matters identified must be addressed through concrete remediation.

There are currently no comments for the model DBX-ShortRate_InflationStochVol.

## 3 Assessment of Approach, Conceptual Soundness and Implementation

In this section, we review the methodology, conceptual soundness and implementation of the DBX-ShortRate_InflationStochVol model.

### 3.1 Assessment of Development and Modelling Data

The DBX-ShortRate_InflationStochVol model represents the Bank's implementation of the Jarrow-Yildirim model [13] augmented with stochastic volatility for inflation.

The Jarrow-Yildirim model applies the FX analogy to inflation, and model uses a three factor dynamic model. The three modelled factors are the nominal short rate, the real short rate, and inflation index. The Jarrow-Yildirim model, the dynamics of the real and nominal short rates are assumed to be normal mean reverting, while the inflation index process has a log-normal dynamics. As a consequence, the Jarrow-Yildirim model does not allow one any control over the inflation volatility smile/skew, which turns out to be flat. The DBX-ShortRate_InflationStochVol model gets around this limitation of the Jarrow-Yildirim model by introducing a fourth dynamic factor, namely stochastic volatility of the inflation index process. As a result, one has a dynamic term structure model with a degree of control over the inflation volatility smile/skew that is appropriate for pricing non-linear inflation derivative products with non-European features (e.g. path-dependency and/or early termination features).

Implementation wise, DBX is a Monte Carlo engine used to generate paths for underlyings. Given the non-linear functionality and lookback features of the in-scope products, it required multiple factors which makes it the obvious model choice as there are not PDE or analytical implementations available in DBAanalytics which can handle all the required components. The model has also the ability in incorporate correlations among the underlying risk factors which plays important role in pricing trades. It also supports underlying diffusion processes with Stochastic volatilities as input. Hence choice of DBX as implementation is deemed to be conceptually sound.

### 3.2 Assessment of Methodology and Calibration

#### 3.2.1 Assessment of Methodology

The model's ability to capture the smile is an important requirement in light of empirically observed market data. In particular, the observed implied volatilities of ZC inflation caps and floors exhibit significant smile and skew. In Figure 3, we show the implied volatility surface in the Maturity/Strike dimensions for ZC inflation cap/floors for the US CPI inflation index for COB 12-Feb-2018. In light of this, any term structure model used for pricing and risk managing exotic inflation derivatives, should be able to correctly price the vanilla options (i.e. ZC inflation cap/floors). In other words, a term structure model should be able to capture the volatility smile/skew.

![Figure 3: The Implied Volatility Surface in the Maturity/Strike dimensions for ZC Inflation Cap/Floors for the US CPI inflation for COB 12-Feb-2018.](./Fig/3.png)

In Figure 4 we show the impact of stochastic volatility on the implied volatilities of ZC options for a range of maturities from 1Yr to 30Yrs, and strike rates from -1% to 4%. The figure clearly shows that the volatility smile is absent (i.e. there is no dependency of implied volatilities on strike rate) in the case of zero stochastic volatility. On the other hand, the introduction of stochastic volatility leads to a volatility smile. In Figure 5 we show the ZC volatility smiles for maturity fixed at 10 years. This figure clearly shows that the introduction of stochastic volatility leads to formation of a smile. In Figure 6 we show the impact of correlation between the inflation asset process and inflation asset stochastic volatility process on the ZC cap/floor implied volatilities. As can be expected, the correlation primarily controls the skew of the implied volatilities.

![Figure 4: The impact of stochastic volatility on ZC implied volatility for a range of maturities from 1Yr to 30Yrs, and Strike Rates from -1% to 4%.](./Fig/4.png)

![Figure 5: The impact of stochastic volatility on ZC implied volatility for a 20 year maturity.](./Fig/5.png)

![Figure 6: The impact of changes in correlation between the inflation asset process and inflation asset stochastic volatility process on the implied volatility smile/skew of ZC cap/floors for a 20 year maturity.](./Fig/6.png)

In addition to control over the volatility smile/skew the term structure model allows one to control inter-temporal correlations for the various dynamic variable in the model, in particular inflation and interest rates. This allows one to have finer control over price and risk management characteristics for path dependent and/or early termination feature products.

#### 3.2.2 Assessment of Calibration

The model DBX-ShortRate_InflationStochVol requires short rate volatility (LVTV) for both the nominal rates and the inflation index. These volatilities are precalibrated to a set of caps, floors and swaptions of option type STANDARD. Calibration of interest rate volatilities is achieved using a iterative algorithm (Levenberg-Marquardt) or the Powell. The Powell algorithm is a derivative free algorithm that is generally considered efficient relative to LM method. It is also noted, Powell algorithm works well if the number of parameters to be calibrated is same as the number of calibration targets. The objective function is to minimize the sum of squared error between the target implied volatilities obtained from the market and obtained from model. Note the solving the aforementioned optimization is straightforward and deemed to be conceptually sound.

For inflation volatilities, Calibration algorithm uses Brent's algorithm which is similar to the rates one that is explained above. In this approach the calibration is done in two steps: 1/ calibration of the volatility of volatility (LocalVolsSV) from Step 1 as input with the target instruments being the liquid YOY caps/floors. Due to illiquid nature of the inflation market, it is difficult to calibrate MeanRevSV to market observations, hence it is not calibrated but set exogenously by the desk.

For more details about the description of calibration and detailed testings related to it are not presented in this section and but can be seen in Section 4.2.

### 3.3 Assessment of Model Assumptions and Limitations

#### 3.3.1 Assessment of Model Assumptions

We have the following model assumptions and their conceptual suitability for the model DBX-ShortRate_InflationStochVol.

| Assumption | Conceptual Suitability |
|------------|------------------------|
| No Arbitrage is present in the market. | The assumption that there are no arbitrage opportunities is a fundamental assumption for all realistic models that are used for pricing/hedging derivatives. |
| The nominal interest rate follows a Hull-White diffusion model with normal distribution. | For the products in scope, rate specific optionality is absent, hence a mean reverting short rate model like Hull-White is deemed to be adequate. |
| The real interest rate follows a Hull-White mean reversion diffusion model with normal distribution. | For the products in scope, rate specific optionality is absent, hence a mean reverting short rate model like Hull-White is deemed to be adequate. |
| The inflation index is modelled using a lognormal process with stochastic volatility component. The model can be considered an extension of the classical Jarrow-Yildirim diffusion model. | Inflation index using a lognormal process with stochastic multiplier helps to sufficiently capture the volatility smile/skew that is observed in the market and suitable for the inflation linked exotic products that are in scope of this model. |

Table 15: Model Assumptions and conceptual suitability of the model.

#### 3.3.2 Assessment of Model Limitations

Table 16 lists the model limitations, their impact and the mitigating controls in place.

| Limitation | Mitigating Control | Impact |
|------------|-------------------|--------|
| Monte Carlo valuations have an error associated with them that is a function of the time-grid discretisation and number of simulations used | By choosing the appropriate implementation parameters such as NumberSims, and FreqTimeVec the convergence rate could be improved. A product specific convergence analysis may also be required in case of convergence issues. | The accuracy of pricing and risk sensitivities computation is sensitive to the configuration of the model object. |
| The ShortRate framework can only produce a forward volatility dynamic that does not preserve observed features in the volatility market (e.g. volatility hump and smile). This assumption is reasonable for single expiry products or weakly path dependent products that are not strongly dependent on forward volatility. | Although this limitation yields fairly small impact on pricing, one may want to periodically monitor based on the ongoing use of this model. | Although there is an overall floor in pray leg, one expects the price is not too sensitive to the shape of the vol skew. Thus, this limitation may only introduce fairly small pricing inaccuracies. |
| The InflationStochVol framework has limited flexibility and may not be able to capture the full volatility smile structure of the inflation market. | Although this limitation yields fairly small impact on pricing, one may want to periodically monitor the StochVol parameters when the market condition changes. | Although there is a floor on the weighted sum of returns, one would expect the price is not too sensitive to the shape of the vol skew. Thus, this limitation may only introduce fairly small pricing inaccuracies |
| The model is limited to single currency as the FX component is not included in the framework. | A multi-factor model along with FX component should be used for pricing the trades with multiple currencies. | The model do not support trades with multiple currencies. |
| The real-rate volatility is a proxy due to lack of available market data. | One needs to monitor inflation vega and makes adjustments to the proxy of the real-rate volatility. | It may not impact pricing because of the inflation volatility calibration. However it may impact inflation vega. |

Table 16: Model limitations, their impact and the mitigating control.

### 3.4 Expert Judgments in the Model

In addition to the model specification detailed in section 2.3, the market inputs specified in section 2.3.3 are subject to IPV process and the following model parameters are subject to the following expert judgment:

- The model parameter MeanRevSV is calculated by strats.

- The model parameter LocalVolSV is calculated by strats.

### 3.5 Assessment of Model Documentation

Model users are responsible for seeking model validation for all new model and product combinations prior to use, through the submission of Model Approval Requests in line with the documentation standards set out by MoRM. Documentation should be sufficient to permit independent review and to facilitate potential replication and/or upgrade of the model by others, independent of the original developer.

The following steps are carried out in evaluating the Model Approval Request submissions:

- Upon being assigned to the Model Approval Request, the Primary Approver must review the submission to confirm completeness and adequacy against the minimum standards.

- If the Model Approval Request does not comply with submission standards or if additional information is required, the Primary Approver will reject the request and clearly document the reason for this as well as follow up actions required by model owner/developer submitting the request, prior to resubmission.

MoRM will not commence validation until the Model Approval Request is accepted.

At any time during the validation process, MoRM have the right to request additional information they deem necessary for effective validation, even if outside the submission requirements listed in this document. MoRM may also ask for the model documents to be updated during the course of the validation. Additional supporting information obtained during the validation is also recorded in MARS.

The pricing model developer document requirements to check:

| Section | Content | MoRM check |
|---------|---------|------------|
| Executive summary | | Yes |
| | Model Developer | Yes |
| | Documentation Info | Yes |
| Market characteristic and market data | | Yes |
| Market characteristic | | Yes |
| | Market considerations | Yes |
| | Market instruments | Yes |
| | Market instrument treatment | Yes |
| | Other market data | Yes |
| Model Description | | Yes |
| Model Dynamics | | Yes |
| | Model assumptions | Yes |
| | Model parameters | Yes |
| | Model dynamics | Yes |
| | Model components | Yes |
| | Model implementation | Yes |
| Model Calibration | | Yes |
| | Model parameters calibration | Yes |
| Model risk sensitivities | | Yes |
| | Modes which apply to the model | Yes |
| | Model risk sensitivities | Yes |
| Model weaknesses, limitations | | Yes |
| | Weakness and limitation description | Yes |
| | Model Restrictions (Conditions for Use) | Yes |
| Conceptual Soundness | | Yes |
| | Product scope | Yes |
| | Justification for model selection | Yes |
| Model controls | | Yes |
| | Analytics Library and Version | Yes |
| | Compensating controls | Yes |
| | Model inputs controls | Yes |
| Implementation testing and justification of model behaviour | | Yes |
| Model configuration testing | | Yes |
| References | | Yes |

The pricing product model developer document requirements to check:

| Section | Content | MoRM check |
|---------|---------|------------|
| Executive summary | | Yes |
| | Model Developer | Yes |
| | Documentation Info | Yes |
| | Model configuration | Yes |
| | Product Owner | Yes |
| | Business Area, Line or Asset Class | Yes |
| | Risk Management Systems | Yes |
| Products description | | Yes |
| Product Scope | | Yes |
| | PRDS name and definition | Yes |
| | NPA Reference | Yes |
| | Mathematical description of the payoff | Yes |
| | Product contractual parameters | Yes |
| | Product scripting | Yes |
| Product grouping | | Yes |
| | Product main characteristics and features | Yes |
| Product model appropriateness | | Yes |
| Model appropriateness for products it will be used for | | Yes |
| | Product-Model Combination appropriateness | Yes |
| Product Risk factor identification | | Yes |
| | Key Risk factors | Yes |
| | Risk sensitivities | Yes |
| | Calibration instruments | Yes |
| | Products calibration instrument choice | Yes |
| Product model weakness identification | | Yes |
| | Product-Model Combination Limitations | Yes |
| Model Configuration Testing and Results | | Yes |
| Convergence and stability tests | | Yes |
| Limiting case and alternative model testing | | Yes |
| Calibration algorithm and risk sensitivities | | Yes |
| Risk factor tests | | Yes |
| | End of Day condition and VAR | Yes |
| | CCAR and EBA conditions | Yes |
| | RIB | Yes |
| Testing evidence | | Yes |

### 3.6 IT Implementation testing

For Pricing models, implementation refers to DBA releases and deployment refers to integrating them into risk calculators. The deployed model library executable code must be held in a secure and controlled environment or embedded in a system which is held in a secure and controlled environment.

DBAnalytics production system reconciliation: Independent model validation testing is undertaken using DBAnalytics. Since no additional processing of DBAnalytics is undertaken and no further external analytics are being run in strategic production systems, it can be assured that model output produced with a consistent version of DBAnalytics will yield equivalent results whether run locally by individual users or in official production systems.

## 4 Independent Validation Testing

### 4.1 Overview of General Model Testing

In Section 2.3, we have presented the mathematical formulation of the current model, DBX-ShortRateNormal_InflationStochVol, in particular summarizing the dynamics of the underlying factors in Equations 21-22. In the current section we focus on the market observable quantities in the model, and investigate their behaviour under changes in various model parameters.

For the purposes of testing, we consider market data for Australian CPI index taken for 15-Dec-2017 COB. In addition, for clarity and analytical tractability we consider simplified test market data, which we refer to below as the BASE-market. This BASE-market allows one to make a relative easy comparison between theoretical expectations and model outputs, without additional complications associated with term-structure of rates and their volatilities. The market data objects and their "BASE"-values are summarized in Table 19.

The key market observables that we shall be concerned with are: ZC Forwards, YOY Forwards, and Inflation CMS Forwards. These observables are the essential building blocks of the various derivatives that fall under the current model, and serve as their underlyings. For this reason, a detailed understanding of these quantities and their statistical properties is an essential part of the model validation process. These underlying quantities are defined as follows:

$I_{ZC}(T) = I(T), I_{YOY}(T) = \frac{I(T)}{I(T-\Delta T)}, I_{CMS}(T) = \frac{B(T,T) - B(T,T_N)}{S_N \cdot \Delta \cdot B(T,T)}$

where $\Delta T$ is the YOY return period (typically 1 year), $B(T,S) = I(T)P_r(T,S)$ is the inflation linked bond at time $T$ for maturity $S$, $I(T_N)$ is a term structure associated with the forward inflation bond, and $\Delta$ is the time interval between coupons (assumed above to be a constant). The evolution of inflation index $I(T)$ is described by Equation 23, which we repeat below for convenience:

$I(t) = I(0) \exp \left\{ \int_0^t \left[ r_n(s) - r_r(s) - \frac{1}{2}\sigma_I^2(s)v(s) \right] ds + \int_0^t \sigma_I(s)\sqrt{v(s)}dW^I(s) \right\}. \quad (Equation 23)$

The time $T$ forwards for these quantities are defined as follows in the T-Forward nominal measure:

$F_x(0,T) = \frac{E_n^T\left[I_x(T) \cdot N_x(T)|F_0\right]}{E_n^T\left[N_x(T)|F_0\right]}$

where the numeraires associated with our observables are as follows:

$N_{ZC}(T) = P_n(T,T) = 1, \quad N_{YOY}(T) = P_n(T,T) = 1, \quad N_{CMS}(T) = \sum_{i=1}^N P_n(T,T_i),$

expressed in terms of the zero coupon nominal bonds $P_n(T,S)$.

As the tool for calculating the various forwards and their distributional properties, including smiles/skews, we use the DBX Monte-Carlo engine, pricing appropriate vanilla securities. The vanilla securities we use are SIMULATION with simple payoffs. In particular for the inflation related index $I_x$, we use the following payoffs:

- Forward payoff have been used to calculate the forwards:

$P_{fwd}(T) = I_x(T)N_x(T)$

- Call/Put payoffs along with Forward payoff have been used to probe the volatility smile/skew:

$P_{call}(T) = max[I_x(T) - S_x, 0]N_x(T), \quad P_{put}(T) = max[S_x - I_x(T), 0]N_x(T)$

where $S_x$ is the strike.

- Arrow-Debrue security payoffs in the form of a butterfly-spread to probe the underlying terminal PDF:

$P_{AD}(T) = \frac{1}{\Delta S_x^2} \{ max[I_x(T) - (S_x - \Delta S_x), 0] - 2max[I_x(T) - S_x, 0] + max[I_x(T) - (S_x + \Delta S_x), 0]\} N_x(T)$

where $S_x$ is the strike and $\Delta S_x$ is the butterfly width parameter.

#### 4.1.1 Terminal distributions and Implied Volatilities

In Figure 7 we show the ZC, YOY and 10Y inflation CMS forwards for the market data specified in Table 19. For ease of visual comparison, in Figure 8 we show these forwards in terms of the corresponding annualized inflation rates:

$i_{ZC} = I_{ZC}^{\frac{1}{T}} - 1, \quad i_{YOY} = I_{YOY} - 1, \quad i_{CMS} = I_{CMS}$

![Figure 7: Inflation forwards as a function of forward maturity. Calculated for market data in Table 19.](./Fig/7.png)

![Figure 8: Inflation forwards as a function of forward maturity, expressed in terms of annualized inflation rate. Calculated for market data in Table 19.](./Fig/8.png)

In Figure 9 we show the terminal distributions of inflation-linked underlyings (ZC, YOY and CMS), for a set of benchmark forward maturities (1Y, 5Y, 10Y and 20Y). For the CMS underlying, we also show the distributions for a set of varying benchmark CMS tenors (1Y, 5Y, 10Y and 20Y). It is general one sees a widening of the PDFs for increasing maturities. This is the expected behaviour in the context of the diffusive dynamics specified in Equations 21-22. In Figure 10 we show the corresponding smile/skew profiles for the underlyings. For ZC and YOY inflation we show the log-normal volatilities, while for the CMS inflation underlying we show the normal volatilities (since this rate can go negative). This representation is further justified by the formal expression given in Equation 23, which can be shown to lead to log-normal distribution for ZC and YOY underlyings in the absence of stochastic volatility.

![Figure 9: The terminal distributions for ZC, YOY and CMS underlyings in their corresponding forward-looking numeraire measures. The individual curves correspond to different Maturities and/or Tenors. Calculated for market data in Table 19.](./Fig/9.png)

![Figure 10: The volatility smile/skew for ZC, YOY and CMS underlyings. The individual curves correspond to different Maturities and/or Tenors. Calculated for market data in Table 19.](./Fig/10.png)

#### 4.1.2 Dependency of Terminal Distributions and Implied Volatilities on Market Data and Model Parameters

In the current subsection we study the behaviour of the inflation underlyings and their distributions under changes to the various model parameters. In probing the distribution properties of the underlyings, we present both the terminal PDFs and the corresponding smile/skew curves. Going forward we shall use the term "smile" to refer to strike dependency of implied volatility, even in situations where the dependency is a "skew". We note that there is a one-to-one correspondence between the PDFs and smiles. However, we chose to investigate and illustrate both quantities for the purposes of added clarity and as a cross sanity check. For the purposes of the current section, we consider a simplified BASE-market environment with parameters specified in the last column in Table 19. Figures 11, 12, 13 show the behaviour of the underlyings and their distributions for the BASE-market environment.

| Object Type | Market Object | Description & Base Value |
|-------------|---------------|-------------------------|
| MKTDATA | MktData_3MFLAT20171215 | Australian CPI inflation asset, with a 3M delay ( Type:INFLATION), base value: 3M delay. |
| CURVE | AUDSYDDS2H_20171215_COB | AUD rate curve ( UseType:DISCOUNTBASIS, CurveType:CCYBASIS) base value: flat 5%. |
| CURVE | SYDAUCPL_INFLATION20171215_COB | Australian CPI curve ( UseType:INFLATION, CurveType:SPREAD) base value: flat 3%. |
| VOL | SYDAUD_AUCPL_REALVOL_20171215 | real curve vol ( VolType:DBT, VolMode:LVTV) base value: flat 1% normal vol. |
| VOL | SYDDBTWVO_NORMAL_BOTH_AUD20171215 | AUD rate curve volatility object ( VolType:DBT, VolMode:LVTV) base value: flat 1% normal vol. |
| VOL | SYDAUD_AUCPL_FXVOL2_20171215 | AUD/AUCPI Inflation Asset Vol object ( VolType:FXVOL, VolMode:TV) base value: flat 1% normal vol. |
| VOL | SYDAUD_AUCPL_FXSV_20171215 | AUD/AUCPI Stochastic Vol object ( VolType:DBT, VolMode:LVMR), base value: flat 50% lognormal vol. |
| VOL | SYDAUD_AUCPL_CORR_20171215 | correlation object with ρnr = 80% and rest of the correlations set to zero ( VolType:CORR, VolMode:CONST), base value: zero correlations ρxy = 0%. |

Table 19: Market data used for the testing in the current section. The data has been taken for COB date 15-Dec-17. The last column also shows the values taken as base values for the model testing in the current section.

![Figure 11: Inflation forwards for the ZC, YOY and 10Y CMS underlyings as a function of forward maturity. Calculated for the BASE-market data in Table 19.](./Fig/11.png)

![Figure 12: Inflation forwards for the ZC, YOY and 10Y CMS underlyings as a function of forward maturity, expressed in terms of annualized inflation rate. Calculated for BASE-market data in Table 19.](./Fig/12.png)


#### 4.1.1 Terminal Distributions and Implied Volatilities

![Figure 13: The implied volatility smiles (top row) and corresponding terminal distributions (bottom row) for the ZC, YOY and 10Y CMS underlyings. Calculated for BASE-market data in Table 19.](./Fig/13.png)

In Figures 14 and 15 we show the terminal distributions and corresponding implied volatility smiles for inflation-linked underlyings (ZC, YOY and CMS), for a set of benchmark forward maturities (1Y, 5Y, 10Y and 20Y). For the CMS underlying, we also show the distributions and implied smiles for a set of varying benchmark CMS tenors (1Y, 5Y, 10Y and 20Y). The figures clearly show the expected behaviour of distribution widening as maturity increases.

![Figure 14: The terminal distributions for ZC, YOY and CMS underlyings in their corresponding forward-looking numeraire measures. The individual curves correspond to different Maturities and/or Tenors. Calculated for BASE-market data in Table 19.](./Fig/14.png)

![Figure 15: The volatility smile/skew for ZC, YOY and CMS underlyings. The individual curves correspond to different Maturities and/or Tenors. Calculated for BASE-market data in Table 19.](./Fig/15.png)

Before proceeding to investigate the impact of changes to the model parameters on the distribution of the underlyings, we have performed a few simple sanity checks to check the reasonability of the model and adequacy of our testing approach.

In Figure 16 we have probed the distributions assuming zero volatilities (i.e., by setting `CalcIntrinsic = 1` in the DBX model). As expected, the distributions degenerate into dirac-delta like functions centered around the forward, with a width determined by the width parameter ΔS₂ in Equation 48.

#### 4.1.2 Dependency of Terminal Distributions and Implied Volatilities on Market Data and Model Parameters

In this section we study the behavior of inflation underlyings and their distributions under changes to various model parameters. We probe both the distribution properties and corresponding smile/skew curves to provide thorough validation.

##### 4.1.2.1 Changes in Inflation & IR curves

We have studied the impact of changes in the inflation curve and the IR curve on the smiles and terminal distributions of the underlyings. The results are illustrated in Figures 19 and 20. As expected a change in the IR curve does not have any effect on the underlyings, while a change in the inflation curve leads to a parallel move in the smile/distribution, to center around the new modified forward value.

![Figure 18: The volatility smile/skew for ZC, YOY and CMS underlyings. Calculated setting the IR curve volatility, inflation curve volatility and Stochastic Volatility to zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/18.png)

##### 4.1.2.2 Changes in Inflation & IR curve volatilities

We have investigated the impact of changes in the specification of inflation curve and IR curve volatilities on the smiles and terminal distributions of the underlyings. The results are illustrated in Figures 21, 22, 23 and 24. It can be seen that the changes in volatilities have similar effect for both, the bumps in inflation curve vol and IR curve vol. This is an expected result, since Equation 23 is symmetric (upto a sign that does not affect the volatility) with respect to the real and nominal curves. Furthermore, one can see, that in general, an increase in volatility of real and/or nominal curve, flattens the smile. This is also something that one can expect based on Equation 23, since the impact of the stochastic volatility term responsible for the smile (∫₀ᵗ σᵢ(s)√v(s)dWᴵ(s)) reduces as the level of real and/or nominal rate volatilities rises. Finally, we note that, reducing terminal volatility while keeping the local volatility constant is equivalent to increasing the mean reversion level while keeping local volatilities constant. The impact of both of these equivalent scenarios is shown in Figures 23 and 24 and leads to a reduction in the implied volatility of the underlyings and a more pronounced smile developing, for analogous reasons.

![Figure 21: The impact of change in Inflation Curve vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 1% inflation curve vol, while the bumped scenario corresponds to a flat 2% inflation curve vol. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/21.png)

![Figure 22: The impact of change in IR Curve vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 1% IR curve vol, while the bumped scenario corresponds to a flat 2% IR curve vol. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/22.png)

![Figure 23: The impact of change in Inflation Curve term vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 1% inflation term curve vol. The local vol has been kept constant at 1% level for both the base and the bumped cases. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/23.png)

![Figure 24: The impact of change in IR Curve term vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 1% IR curve term vol, while the bumped scenario corresponds to a flat 0.5% IR term curve vol. The local vol has been kept constant at 1% level for both the base and the bumped cases. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/24.png)

##### 4.1.2.3 Changes in inflation asset volatility and inflation asset stochastic volatility

We have investigated the impact of changes to the inflation asset volatility and inflation asset stochastic volatility on the smiles and terminal distributions of the underlyings. The results are illustrated in Figures 25, 26 and 27. The results seem in-line with general expectations based on Equation 23. In particular, an increase in inflation asset volatility level, leads to an increase in ZC and YOY volatilities, as well as the smile effect becoming more pronounced. On the other hand, the 10Y inflation CMS volatility level and smile are not sensitive to changes in the inflation asset and inflation asset stochastic volatilities, since the CMS underlying is essentially a "curve" trade, i.e. depends on the distribution of the real bonds Pᵣ(T,S) which in-turn is determined by distributions of rₙ(T) and rᵣ(T) (nominal and real short rate process).

![Figure 25: The impact of change in inflation asset vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 1% inflation asset vol, while the bumped scenario corresponds to a flat 3% inflation asset vol. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/25.png)

![Figure 26: The impact of change in inflation asset stochastic vol level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 5% inflation asset stochastic (log-normal) vol, while the bumped scenario corresponds to a flat 200% inflation asset stochastic (log-normal) vol. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/26.png)

![Figure 27: The impact of change in inflation asset stochastic vol mean reversion level on the smile (top row) and terminal PDFs (bottom row) for the ZC, YOY and 10Y CMS inflation underlyings. The base case corresponds to a flat 5% inflation asset stochastic vol mean reversion level, while the bumped scenario corresponds to a flat 0% inflation asset stochastic vol mean reversion level. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/27.png)

##### 4.1.2.4 Changes in correlations

Key model inputs that determines the dynamics of the model factors, and for this reason the distribution properties of the market observable underlyings are the correlations between the Brownian motions that drive the nominal short rate, real short rate, inflation asset, and inflation asset stochastic volatility. The effect of correlations on the dynamics can be gauged by analysing Equations 21-22. In Figures 28-30 we show the impact of changes in the correlations on the smile of the ZC, YOY and 10Y inflation CMS underlyings. The Figures 31, 32 and 33 show the equivalent impact of changes in the correlation on the terminal distributions of the corresponding underlyings.

The impact of correlations between nominal rate, real rate and inflation asset for ZC and YOY underlyings is to change the general level of volatilities without significantly affecting the smile shape. On the other hand, the changes in correlations involving the inflation asset stochastic volatility change the skew of of the volatility smile. For the 10Y CMS underlying, one can see that only the correlation between the nominal and real rates affects the smile behavior. This is fully consistent with the observation, mentioned above, that the CMS underlying is essentially a "curve" trade sensitive to the rₙ and rᵣ short rate factors. The sensitivities of the smiles are fully consistent with theoretical analysis of Equation 23.

![Figure 28: The impact of change in correlations on the smile for the ZC underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/28.png)

![Figure 29: The impact of change in correlations on the smile for the YOY underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/29.png)

![Figure 30: The impact of change in correlations on the smile for the 10Y CMS underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/30.png)

![Figure 31: The impact of change in correlations on the terminal distribution for the ZC underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/31.png)

![Figure 32: The impact of change in correlations on the terminal distribution for the YOY underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/32.png)

![Figure 33: The impact of change in correlations on the terminal distribution for the 10Y CMS underlying. The base case corresponds to zero correlation levels, while the bumped scenario corresponds to individual 50% bumped levels of correlation while other correlations are kept at zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/33.png)

##### 4.1.2.5 Introducing skew in inflation curve volatility

The volatility smile effect for the various inflation underlyings in the current model are the result of introducing a stochastic volatility factor in the dynamics of the inflation asset. An alternative method of introducing smile/skew for the inflation underlyings is by modifying the dynamics of the inflation curve, i.e. introducing a local volatility in the dynamics of the real short rate process (see Equation 21). We investigate this possibility below.

In Figure 34 we show the impact of introducing a skew in the real short rate process on the ZC and YOY smiles in the absence of stochastic volatility. In particular, one sees that the real short rate skew leads to a development of a skew for the ZC and YOY underlyings. However, we note that the skew is significantly more pronounced for the ZC underlying. This observation leads, when combined with stochastic volatility, to a methodology for independently controlling the skews of ZC and YOY underlyings. In particular, Figure 35 shows the impact of introducing the skew in case with stochastic volatility. One can see, that introduction of real short rate volatility skew significantly skews the ZC smile, while only marginally midifying the YOY smile. It should however be noted that the current inflation market is not sufficiently developed and transparent to warrant independent modelling of YOY and ZC smiles. In the current market condition, this will be an unnecessary overfitting/overmodelling. For this reason, we deem the current modelling framework adequate.

![Figure 34: The impact of introducing a skew in real short rate process. The base case corresponds to zero skew (0 ATM slope), while the bumped scenario corresponds volatility with skew (0.2% ATM slope). The stochastic volatility has been set to zero. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/34.png)

![Figure 35: The impact of introducing a skew in real short rate process. The base case corresponds to zero skew (0 ATM slope), while the bumped scenario corresponds volatility with skew (0.2% ATM slope). All other market parameters are set at the BASE-market level (see Table 19).](./Fig/35.png)

#### 4.1.3 Dependency of Intertemporal Correlations on Market Data and Model Parameters

##### 4.1.3.1 Dependence between ZC and YOY rates

As is evident from Equation 23, the future inflation I(T) has an quasi-lognormal distribution, with deviations from lognormality stemming from the presence of stochastic volatility. In the absence of stochastic volatility (i.e. when stochastic vol-of-vol parameter is set to zero) the distribution is strictly lognormal. Furthermore, the market observable quantities ZC rates and YOY rates are also lognormal in this case. In addition, the ZC rate can be viewed as a product of consecutive YOY rates, i.e.:

$$I_{ZC}(T_N) = \prod_{i=1}^N I_{YOY}(T_i).$$

As a consequence, taking into account the lognormal nature of the involved distributions, there is relationship between the variances/covariances of the logarithms of ZC and YOY rates:

$$Var(\ln[I_{ZC}(T_N)]) = \sum_{i,j=1}^N Cov(\ln[I_{YOY}(T_i)] \cdot \ln[I_{YOY}(T_j)]).$$

We explicitly verify the validity of this expression in the implementation of the current model. The results are presented in Figure 36, and show a full agreement between the variances and covariances of ZC and YOY rates.

![Figure 36: The comparison of ZC variance against sum of YOY covariance matrix elements. The stochastic volatility has been set to zero for this illustration in order to keep analytical tractability. All other market parameters are set at the BASE-market level (see Table 19).](./Fig/36.png)

In Tables 20-24 we show the correlation matrix for the YOY rates upto 5Y maturities, for various market data configurations. As a reminder to the reader, correlation and covariance are related through the following expression:

$$Corr(\ln[I_{YOY}(T_i)] \cdot \ln[I_{YOY}(T_j)]) = \frac{Cov(\ln[I_{YOY}(T_i)] \cdot \ln[I_{YOY}(T_j)])}{\sqrt{Var(\ln[I_{YOY}(T_i)]) Var(\ln[I_{YOY}(T_j)])}}$$

In particular, in Figure 22 we show the correlation matrix calculated in the limiting case when inflation curve and IR curve vols have been set to zero. As expected (from Equation 23), the correlation matrix in this case becomes diagonal. On the other extreme, in Figure 24 we show the correlation matrix calculated for the case when inflation asset vol is set to zero. Once again, we see an expected behaviour in that the correlation between various YOY rates rises significantly in comparison with the base case in Figure 21.

Table 20: Correlation matrix for YOY rates with maturities spanning 1Y to 5Y. All market parameters are set at the BASE-market level (see Table 19)

$$\begin{pmatrix} 100.00\% & 33.14\% & 26.49\% & 23.29\% & 19.37\% \\ 33.14\% & 100.00\% & 56.24\% & 48.71\% & 43.80\% \\ 26.49\% & 56.24\% & 100.00\% & 66.25\% & 56.15\% \\ 23.29\% & 48.71\% & 66.25\% & 100.00\% & 68.33\% \\ 19.37\% & 43.80\% & 56.15\% & 68.33\% & 100.00\% \end{pmatrix}$$

Table 21: Correlation matrix for YOY rates with maturities spanning 1Y to 5Y. The stochastic volatility has been set to zero for this illustration in order to keep analytical tractability. All other market parameters are set at the BASE-market level (see Table 19)

$$\begin{pmatrix} 100.00\% & 36.16\% & 29.16\% & 25.12\% & 22.39\% \\ 36.16\% & 100.00\% & 63.22\% & 54.45\% & 48.52\% \\ 29.16\% & 63.22\% & 100.00\% & 74.08\% & 66.03\% \\ 25.12\% & 54.45\% & 74.08\% & 100.00\% & 79.90\% \\ 22.39\% & 48.52\% & 66.03\% & 79.90\% & 100.00\% \end{pmatrix}$$

Table 22: Correlation matrix for YOY rates with maturities spanning 1Y to 5Y. The IR and inflation curve vols have been set to zero. Furthermore, the stochastic volatility has been set to zero. All other market parameters are set at the BASE-market level (see Table 19)

$$\begin{pmatrix} 100.00\% & 0.00\% & 0.00\% & 0.00\% & 0.00\% \\ 0.00\% & 100.00\% & 0.00\% & 0.00\% & 0.00\% \\ 0.00\% & 0.00\% & 100.00\% & 0.00\% & 0.00\% \\ 0.00\% & 0.00\% & 0.00\% & 100.00\% & 0.00\% \\ 0.00\% & 0.00\% & 0.00\% & 0.00\% & 100.00\% \end{pmatrix}$$

Table 23: Correlation matrix for YOY rates with maturities spanning 1Y to 5Y. The inflation curve vols have been set to zero. Furthermore, the stochastic volatility has been set to zero. All other market parameters are set at the BASE-market level (see Table 19)

$$\begin{pmatrix} 100.00\% & 26.58\% & 22.19\% & 19.44\% & 17.50\% \\ 26.58\% & 100.00\% & 53.10\% & 46.52\% & 41.89\% \\ 22.19\% & 53.10\% & 100.00\% & 65.50\% & 58.99\% \\ 19.44\% & 46.52\% & 65.50\% & 100.00\% & 72.61\% \\ 17.50\% & 41.89\% & 58.99\% & 72.61\% & 100.00\% \end{pmatrix}$$

Table 24: Correlation matrix for YOY rates with maturities spanning 1Y to 5Y. The inflation asset vol has been set to zero. Furthermore, the stochastic volatility has been set to zero. All other market parameters are set at the BASE-market level (see Table 19)

$$\begin{pmatrix} 100.00\% & 74.40\% & 55.86\% & 46.66\% & 40.87\% \\ 74.40\% & 100.00\% & 84.67\% & 70.72\% & 61.95\% \\ 55.86\% & 84.67\% & 100.00\% & 89.57\% & 78.46\% \\ 46.66\% & 70.72\% & 89.57\% & 100.00\% & 92.08\% \\ 40.87\% & 61.95\% & 78.46\% & 92.08\% & 100.00\% \end{pmatrix}$$

##### 4.1.3.2 Dependence of inter-temporal correlations on real and nominal curve mean reversion level

The pricing of early exercise (i.e. callable) products, for example Bermudan products, depends on the inter-temporal correlations between the underlyings (see for example Section 13.1.8 in [18]). In particular a Bermudan swaption can be conceptually viewed as a basket option, with it's components being the underlying fixing at Bermudan exercise dates, and the value of teh swaption can be shown to increase as correlation between the components decreases. In the framework of markovian models, the intertemporal correlations of the various market observables are primarily determined by the intertemporal correlation of the markovian factors, which in our case are the real and nominal short rates, as well as inflation asset and inflation asset stochastic volatility (see Equations 21-22). In particular, the intertemporal correlation depends on the mean reversion rates for the real and nominal short rate processes. In the current paragraph, we investigate the impact of mean reversions on the intertemporal correlations of the model factors and key market observables.

We begin with a formal definition of the intertemporal correlation:

$$\rho_{T_1,T_2} = \frac{Cov(X(T_1), X(T_2))}{\sqrt{Var(X(T_1))Var(X(T_2))}}, \quad T_1 \leq T_2 \quad (49)$$

where

$$Var(X(T_i)) = \mathbf{E}^{T_i}_n\{X(T_i)^2|\mathcal{F}_0\} - (\mathbf{E}^{T_i}_n\{X(T_i)|\mathcal{F}_0\})^2,$$

$$Cov(X(T_1)X(T_2)) = \mathbf{E}^{T_2}_n\{X(T_1)X(T_2)|\mathcal{F}_0\} - \mathbf{E}^{T_1}_n\{X(T_1)|\mathcal{F}_0\} \cdot \mathbf{E}^{T_2}_n\{X(T_2)|\mathcal{F}_0\}.$$

We note that all of the expectations are taken in nominal $T_2$-terminal measure. The choice of the measure is somewhat arbitrary, and the value of the correlation will in general depend on this choice, however this dependence is small and we shall ignore this ambiguity, and stick to the definition above.

In Figure 37 we show the inter-temporal correlations for the nominal short rate $n(t)$, for different choices of the nominal short rate mean reversion level. As expected the nominal short rates show a strong decorrelation between rates fixed at different times, as one increases the mean reversion level. An analogous picture holds true for the real short rate $r(t)$. Figure 38 shows the inter-temporal correlations for the real short rate $r(t)$, for different choices of the real short rate mean reversion level. In general, as expected, one can see that one can obtain significant intertemporal decorrelation of the short rates in the model by increasing the mean reversion level.

![Figure 37: The intertemporal correlations for the nominal short rate n(t).](./Fig/1.png)

The four individual figures show correlations for fixed $T_1$ (1Y, 5Y, 10Y and 20Y, correspondingly) as functions of $T_2$. The individual curves show the correlations for particular values of the nominal curve mean reversion parameter. All other market parameters are set at the BASE-market level (see Table 19)

![Figure 38: The intertemporal correlations for the real short rate r(t).](./Fig/2.png)

The four individual figures show correlations for fixed $T_1$ (1Y, 5Y, 10Y and 20Y, correspondingly) as functions of $T_2$. The individual curves show the correlations for particular values of the nominal curve mean reversion parameter. All other market parameters are set at the BASE-market level (see Table 19)

On the otherhand, if one looks at the market observable quantities, in particular the ZC and YOY rates, the decorrelation effect of increasing the mean reversion is significantly reduced. This is illustrated in Figures 39 and 40. In particular, as can be seen, raising the real curve mean reversion level alone, does not significantly affect the intertemporal correlations. Moreover, even in the case where one raises both the real and nominal curve mean reversion levels, one only sees marginal changes in intertemporal correlations.

![Figure 39: The intertemporal correlations for the ZC rate n(t).](./Fig/3.png)

The four individual figures show correlations for fixed $T_1$ (1Y, 5Y, 10Y and 20Y, correspondingly) as functions of $T_2$. The individual curves show the correlations for particular values of the mean reversion parameter. All other market parameters are set at the BASE-market level (see Table 19)

![Figure 40: The intertemporal correlations for the YOY rate r(t).](./Fig/4.png)

The four individual figures show correlations for fixed $T_1$ (1Y, 5Y, 10Y and 20Y, correspondingly) as functions of $T_2$. The individual curves show the correlations for particular values of the mean reversion parameter. All other market parameters are set at the BASE-market level (see Table 19)

### 4.2 Calibration Testing

The present section covers the calibration of InflationStochVol component of the model. As of COB 07 Dec. 2020, there exist two approaches for calibration:

1. Current production calibration. In this approach, the term structure of LocalVols of the inflation volatility is calibrated, while the parameters of the SV component i.e. LocalVolsSV and MeanRevSV are being set exogenously by the desk.

2. Proposed calibration. In this approach the calibration is done in two steps: 1. the calibration of the volatility of volatility (LocalVolsSV) to a set of targets able to capture the volatility smile; 2. the calibration of the volatility smile. The LocalVols term structure, using LocalVolsSV calibrated at step 1. as input. The MeanRevSV component is not calibrated but set exogenously by the desk.

The present section is structured in two parts, corresponding to the two MARS requests submitted for validation: 14778 and 15197, which we will discuss in the following sections.

#### 4.2.1 Calibration Testing - MARS request 2020Jul06-DBEAGLE-14778

The present section covers the calibration of InflationStochVol component as described in MARS request 2020Jul06-DBEAGLE-14778. The submitted request covers the testing performed by DBAnalytics in Sections 2.7 of the DBAnalytics calibration document [42]. The object names, products and model configurations covered by the present request are the following:

| MARS request | Object Name |
| --- | --- |
| 14778 | <<CCY>_CPIEMU_FXSV_YOY_<YYYYMMDD>> |
|  | <<CCY>_CPIEMU_FXVOL_YOY_<YYYYMMDD>> |
|  | <<CCY>_ITCPI_FXVOL_YOY_<YYYYMMDD>> |
|  | <<CCY>_SPIPC_FXVOL_YOY_<YYYYMMDD>> |
|  | <<CCY>_USCPI_FXSV_YOY_<YYYYMMDD>> |
|  | <<CCY>_USCPI_FXVOL_YOY_<YYYYMMDD>> |
|  | CPIALE_FXVOL_TVSV_YOY_<YYYYMMDD> |
|  | FRCPITOB_FXVOL_TVSV_YOY_<YYYYMMDD> |
|  | FRCPITOB_FXVOL_TVSV_YOY_<YYYYMMDD> |
|  | SPIPC_FXVOL_YOY_<YYYYMMDD> |
|  | UKCPI_FXVOL_TVSV_YOY_<YYYYMMDD> |
|  | USCPI_FXVOL_TVSV_YOY_<YYYYMMDD> |

Table 25: List of object names listed in MARS request 14778.

The provided object names are particular instances of the template names:

| Template Name |
| --- |
| <<CCY>_<INDEX>_FXSV_<YOY/ZC>_<YYYYMMDD>> |
| <INDEX>_FXVOL_TVSV_<YOY/ZC>_<YYYYMMDD>> |

Table 26: Template names.

The following model configuration and products are listed in scope of the calibration:

| MARS request | Model Configuration Name | PRDS Product and Calib. Type |
| --- | --- | --- |
| 14778 | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflCapFloorYOYCaliable (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflCapFloorZCCaliable (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapSnowball (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapInflNonLnealLin (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapLookback (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapPILineSrd (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflCapFloorYOY (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflCapFloorZC (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapLPI (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapYOY (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapZC (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | IRSwapRealRate (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapPayDay (DBMVOL-ZC) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflSwapYOYCapFloor (DBMVOL-YOY) |
|  | DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTV] | InflAssetSwap (DBMVOL-ZC) |

Table 27: Model configuration and products listed in MARS request 14778. Each product is assigned to DBMVOL-ZC calibration or DBMVOL-YOY calibration, according to Section 2.7 of [42].

The calibration of the volatility of the inflation index is done using GENCALIBRATE dictionaries. This implies that the calibration is done in a dictionary that is distinct from the pricing dictionary and that contains the calibration targets and the initial guesses of the parameters that are calibrated. The calibration engine uses an optimizer to iteratively modify the model parameters (starting from the initial guesses) until the calibration targets are matched within a specified error tolerance. This method differs from Autocalibration where the parameters are calibrated on the fly during pricing. The calibration of the volatility of the inflation index is performed in two steps:

1. Calibration of the volatility of volatility (LocalVolsSV) of the inflation index. In this step, the model uses as calibration targets a set of put-return instruments with two strikes available, normally with one of the strikes at-the-money and the other being on one side of the at-the-money point.

2. Calibration of the time-dependent volatility component of the inflation index - the LocalVols term structure. In this step, the model uses as calibration targets a set of put-return instruments with 0 strike.

This section does not discusses the calibration of the volatility of the nominal rate which is discussed in a separate model.

Main Conclusions:

1. The developer documentation [42] and [2] is sufficient to provide a good understanding of the calibration process. However, the following documentation gap has been identified: the developer documentation does not provide complete information regarding the criteria based on which the products in scope of the are assigned to DBMVOL-ZC calibration and DBMVOL-YOY calibration and the classification they provide does not cover the entire list of products in scope of the model DBX-ShortRate_InflationStochVol. See Validation Finding 1 (MARS ID: 14943). This validation finding is resolved following the update of the latest version of the DBA calibration document enclosing all the products in scope of the model (deadline: 30/04/2021).

2. The calibration engine uses a non-linear optimization method to iteratively modify the model parameters starting from the initial guesses until the calibration targets are matched within a specified error tolerance. The calibration engine is able to match with high accuracy the calibration targets when shifts are applied to the prices of the calibration targets. The performed tests show that the calibration quality remains high in "EOD scenarios" and stress scenarios created by applying various shifts to the market prices of the calibration targets¹, to the input volatilities of the real and nominal interest rates, to the input nominal rate curve and input inflation curve².
For numerical results, see Sections 4.2.1.5, 4.2.1.5 for DBMVOL-ZC calibration and Sections 4.2.1.6 and 4.2.1.6 for DBMVOL-YOY calibration

3. The risk sensitivities of the exotic instruments (i.e. the inflation vega, the projection of the inflation vega on the LocalVols tenor structure and the inflation vega in term of bucketed vegas) behave as expected and are monotonic with respect to shifts applied to the volatilities of the calibration targets. For numerical results, see Sections 4.2.1.5 and 4.2.1.6.

4. The calibrated parameters (LocalVolSV and LocalVols) do not show sensitivity to the choice of the initial guesses used in the calibration, except for cases when the initial guesses for LocalVols are very small. To overcome this issue DBAnalytics recommends using initial guesses above 100bps. See Conditions of Use and Sections 4.2.1.5 and 4.2.1.6 for numerical results.

5. The current calibration assumes that the mean-reversion parameter (MeanRevSV) of the SV component is exogenously set by the desk. This results in an uncertainty around the marking of this parameter. We therefore recommend GVG to monitor its performance on regular basis and set uncertainty reserves, if deemed necessary. See Model Limitation 2 (ID: 3611) and Sections 4.2.1.5 and 4.2.1.6 for numerical results.

6. The current calibration is designed as a two-step process in order to avoid potential issues related to high-dimension optimization. The calibration choice has an impact on the calibrated values of the parameters LocalVolsSV and LocalVols and therefore on the price and risk sensitivities of exotics depending on the calibration. MoRM investigated this point by considering alternative calibrations and showed that the chosen calibration targets and the overall structure of the calibration process has an impact on the calibrated volatility parameters and on the price of exotics. We therefore recommend GVG to monitor the uncertainty surrounding the calibration and compute uncertainty reserves, if deemed necessary - see Model Limitation 3 (MARS ID: 3612).

Model Limitations:

1. Calibration[Model Calibration Uncertainty][InflationStochVol] The quality of the calibration may vary depending on number of calibration targets, market regimes, certain parameters of the calibration algorithm (e.g., initial guesses, number of iterations, weights, etc.) Since the calibration will impact the prices and risk sensitivities of exotics depending on it, we recommend GVG to monitor the quality of the calibration and compute uncertainty reserves, if deemed necessary. MARS ID: 3608

2. [Model Weakness [Model Calibration Uncertainty][InflationStochVol]: The calibration process may opt to exogenously set some of the parameters of the stochastic volatility component i.e. mean-reversion rate (MeanRevSV) and volatility of volatility (LocalVolsSV), instead of calibrating them to market observables. Therefore, the choice of these parameters should be monitored by GVG on a regular basis and uncertainty reserves should be computed, if deemed necessary. MARS ID: 3611

3. Calibration[Model Weakness][InflationStochVol]: The calibration process does not simultaneously fit the YOY and ZC markets and is subject to uncertainty due to the type and availability of market data used as calibration targets. Since the calibration will impact the prices and risk sensitivities of exotics depending on it, we recommend GVG to monitor the uncertainty surrounding the calibration and compute uncertainty reserves, if deemed necessary. Products with callable/ path dependent features should be benchmarked against a model that can fit both YOY and ZC markets. MARS ID: 3612

4. Numerical [Model Calibration Uncertainty][InflationStochVol]: The initial guess of the LocalVolsSV parameter impacts the computed model-generated volatilities in a few extreme market cases. The issue seems to be solved if we set the LocalVolsSV initial guess above 10bps and/or floor the calibrated LocalVolsSV value used in Step2 of calibration if the calibrated value obtained in Step1 is too small. We recommend GVG monitor and holds reserves in the interim until Validation Finding 2 (ID: 20202Jul31-PREVLUI-14944) is resolved. MARS ID: 3610

Conditions for use: The initial guesses for the LocalVols parameters calibration should be set above 100bps. It is recommended that the initial guesses are time-consistent (e.g. by setting the initial guess to previous day's calibrated value) in order to avoid possible jumps in PVs.

Validation Findings:

1. Model Documentation Gaps (Mars ID: 14943). The following documentation gap has been identified: the developer documentation does not provide information regarding the criteria based on which the products in scope of DBX-ShortRate_InflationStochVol model are assigned to DBMVOL-ZC calibration or DBMVOL-YOY calibration and the classification they provide does not cover all the products in scope of the model DBX-ShortRate_InflationStochVol (the latest developer documentation, submitted on 06.07.2020, provides a list of 8 products for YOY calibration and 7 products for ZC calibration, but the model DBX-ShortRate_InflationStochVol has 25 products in scope). Several products are seemingly forward similar. The documentation does not specify how these are assigned between DBMVOL-ZC calibration and DBMVOL-YOY calibration. RESOLVED (cf. Sect. (2.8.2)): The validation finding is resolved following the update of the latest version of the DBA calibration document enclosing all the products in scope of the model.

2. Lower bound for LocalVolsSV initial guess (Mars ID: 14944). DBAnalytics should investigate if a lower bound is necessary in the case of the initial guess used for LocalVolsSV parameter - as it is in the case of the initial guesses used for the LocalVols parameters. RESOLVED (cf. Sect. (2.8.2)): The finding is resolved after the upgrade of DBA (version 960). DBA has improved the DBX time vector construction when the dictionary contains DBMVOLs; following this improvement, there are enough paths ending ITM with any level of SV and we observe that the calibration results do not depend on SV initial guess. MoRM has verified that, following this improvement, the model vols and the model prices of the calibration instruments are not anymore equal to 0 (tests performed under DBA version 960); cf. Table (101) and Table (106).

######## 4.2.1.1 Description of the calibration methodology

The inflation is modelled with the help of three processes: the nominal interest rate, the real interest rate and the inflation or Consumer Price Index (CPI). The present model is an extension of the three-factor approach proposed by Jarrow and Yildirim in [3]. The complete mathematical description of the InflationStochVol model component can be found in [2]. In this section we examine the calibration of the volatility of the inflation component as presented in Section 2.7 of DBAnalytics calibration document [42]. The current calibration process consists of two steps:

1. Calibration of the volatility of the SV component (referred to as LocalVolsSV in DBAnalytics). In this step, the model uses as calibration targets a set of put-return instruments with two strikes available, normally with one of the strikes at-the-money and the other being on one side of the at-the-money point.

2. Calibration of the time-dependent volatility component of the inflation index (referred to as LocalVols in DBAnalytics). For this step, the model uses as calibration targets a set of put-return instruments with 0 strike.

According to DBAnalytics, the calibration is performed in two steps in order to avoid potential issues generated by high dimension minimization (such as stability and multiple local minimums).
Based on the type of put-return instruments used in the calibration we can distinguish between DBMVOL-ZC calibration and DBMVOL-YOY calibration. DBMVOL-ZC calibration uses as calibration targets in the two steps described above put-return options with payoff at maturity T of the type:

$$\left( \left( 1 + K \right)^{T-t_0} - \frac{I(T)}{I(t_0)} \right)^+$$

where $I(t)$ represents the inflation index, $K$ represents the option's strike and $T - t_0$ represents the time interval between the instrument's settle date $t_0$ and maturity date $T$.
DBMVOL-YOY calibration uses as calibration targets in the two steps described above put-return options of the type:

$$\left( \left( 1 + K \right)^{T-t} - \frac{I(T')}{I(t)} \right)^+$$

where $K$ represents the option's strike and $T' - t$ represents the time interval between a future date $t \geq t_0$ and the maturity date $T'$.
The current has the following structure: In Section 4.2.1.2 we discuss the theoretical framework of the model and the main components: the nominal interest rate - Section 4.2.1.2, the real interest rate - Section 4.2.1.2 and the inflation index - Sections 4.2.1.2 and 4.2.1.2. In Section 4.2.1.2 we describe the two-step calibration process of the volatility of the inflation index as presented in [42].
In Section 3.2.2 we present the technical assessment of the calibration process. The assessment starts with an evaluation of the conceptual soundness and also covers the appropriateness of the numerical methods in use. In Section 4.2.1.3 we present the results of the performed tests and the conclusions. In Section 4.2.1.4 we present the numerical results of each test.

######## 4.2.1.2 General description of the model

DBX-ShortRate-InflationStochVol models incorporates: the nominal interest (short) rate, the real interest (short) rate and the inflation or Consumer Price Index (CPI). The model is an extension of the three-factor approach proposed by Jarrow and Yildirim in [3]. The detailed mathematical description of the model can be found in [2].

##### Nominal Interest Rate

The nominal interest rate represents the interest rate observed in the market (corresponding to the nominal economy). It is modelled as a Hull-White short rate process with time-dependent coefficients. The model does not capture the potential smile existing in the market. The dynamics of the nominal short rate are given by the following equation:

$$dr^{nom}_t = k_{nom}(t)(\theta_{nom}(t) - r^{nom}_t)dt + \sigma_{nom}(t)dW^{nom}_t \quad (50)$$

The initial discount curve of the nominal short rate $\{DF_{nom}(t_0, t); t > t_0\}$ is constructed by bootstrapping from the input market data, typically Cash, Futures and Swaps and taking into account various spreads such as OIS spreads, CCY spreads, etc. The steps of the curve construction are the following:

1. The construction of a base curve, typically 3M LIBOR, from the input market instruments i.e. Cash, Futures and Swaps via bootstraping, starting from the most recent instrument. At each step of the bootstrapping procedure, the discount factor for a subsequent maturity is calculated from input parameters and from the discount factors calculated at previous steps.

2. The simultaneous construction of an OIS discounting curve and a LIBOR forecasting curve with the help of the input spreads i.e., OIS spreads, CCY spreads, SpotLiborSpreads (spreads that allow to calculate the correction needed in the case of LIBOR rates at tenors not equal to the base curve's tenor) etc.

The initial discount curve of the nominal short rate will be the USD OIS discount curve if the nominal curve's currency is USD or the cross-currency discount curve (constructed using the OIS spreads and the CCY spreads) if the currency of the nominal curve is not USD³. The construction of the OIS discount curve and of the cross-currency discount curve is presented in Section 2.1 and Section 2.3 of [36]. For a complete description of the curve construction methods and bootstrapping techniques used by DBAnalytics we refer to [36].
In DBAnalytics, the input market data used to construct the discount factor of the nominal rate are stored in a CURVE object, which contains the information regarding market instruments (stored in the tables such as Cash, Futures, Swaps, etc.) and information regarding spreads (stored in the tables such as OISSpreads, CCYSpreads, SpotLiborSpreads, etc.).

The information regarding volatility $\sigma_{nom}(t)$, mean-reversion parameter $k_{nom}(t)$ and the overall dynamics of the nominal interest rate is stored in DBAnalytics in a VOL object, in our case of VolType=DBT, VolMode=LVTV. The property VolMode=LVTV implies that the information regarding the mean-reversion $k_{nom}(t)$ parameter and instantaneous volatility parameter $\sigma_{nom}(t)$ is stored in the form of two tables called LocalVols which contains a term structure of volatilities $\{\sigma_{LV}(T); T= T_0, T_1, \dots T_N\}$ and TermVols which contains a term structure of terminal volatilities $\{TV(T); T = T_0, T_1, \dots T_N\}$.
The relation between the terminal volatilities $TV(t)$, local volatilities $\sigma_{LV}(t)$ and mean-reversion parameter $k_{nom}(t)$ is the following:

$$TV^2(T)T= \phi^2(T)\int_0^T \frac{\sigma^2_{LV}(t)}{\phi^2(t)}dt \quad (51)$$

where $\phi(t) = exp\left(-\int_0^t k_{nom}(s)ds\right)$. Equation (77), which is equivalent to 

$$TV(T) = \sqrt{\frac{Var(r_T^{nom})}{T}}$$

shows that specifying any two quantities among LocalVols, TermVols and mean-reversion parameter allows to compute the third one⁴.

The instantaneous volatility $\sigma_{nom}(t)$ is stored in the table LocalVols i.e., $\sigma_{nom}(t) = \sigma_{LV}(t)$. The mean-reversion parameter $k_{nom}(t)$ is computed from equation (77), by deriving the equation with respect to $T$ and solving the resulting ODE in $\phi^2(T)$. We obtain:

$$\phi^2(T) = \frac{TV^2(T)}{TV^2(0)}exp\left(\int_0^T\frac{1}{t}\left(1-\frac{\sigma^2_{LV}(t)}{TV^2(t)}\right)dt\right) \quad (52)$$

If necessary, the mean reversion $k_{nom}(t)$ is computed by numerical differentiation, with the integral in the exponent approximated by the trapezium rule. However, the knowledge of the term $\phi(t)$ suffices as the process $r_t^{nom}$ is represented in DBAnalytics under the form:

$$r_t^{nom} = \phi(t)dt + \phi(t)\int_0^t\frac{\sigma_{nom}(s)}{\phi(s)}dW_s$$

For more details on (77) and the complete derivations we refer to [43]. The information contained in the input tables TermVols and LocalVols is calibrated to a set of ATM caps/floors and swaptions (typically by using a non-linear optimization algorithm that minimises the error between the model-generated implied volatilities and the market-observed implied volatilities). This calibration process is analysed in [] and will not be discussed in the present review.

##### Real Interest Rate

The real interest rate is modelled in a similar manner to the nominal interest rate. More precisely, the dynamics of the real short rate are given by the following Hull-White process:

$$dr_t^{real} = k_{real}(t)(\theta_{real}(t) - r_t^{real})dt + \sigma_{real}(t)dW_t^{real}$$

As explained in Section 3.5 of [36], the initial discount factor of the real rate $\{DF_{real}(t_0, T); T \geq t_0\}$ is computed from the discount factor of the nominal rate (constructed as explained above) and the inflation discount factor⁷ $DF_{infl}(t_0, T)$. We explain how the inflation discount factor $DF_{infl}(t)$ is constructed in the following subsection, after we introduce the main concepts surrounding inflation: the CPI index and the inflation rate.
The information regarding the volatility $\sigma_{real}(t)$ and mean-reversion parameter $k_{real}(t)$ and the overall dynamics of the real interest rate is stored in DBAnalytics in a VOL object of VolType=DBT, VolMode=LVTV and ModelType=NORMAL. The volatility $\sigma_{real}(t)$ and mean-reversion parameter $k_{real}(t)$ are derived as in the case of the real rate, from the information stored in the tables LocalVols and TermVols. However, the input parameters contained in the tables LocalVols and TermVols are not calibrated but set equal to the LocalVols and TermVols values of the nominal rate scaled by a factor of 0.9.

![Figure 41: Left: Mean-reversion levels of EUR nominal rate vs EUR real rate. Right: Mean-reversion levels of the GBP nominal rate vs GBP real rate.](./Fig/5.png)

The mean-reversion parameters are internally computed using (78). Since in the case of the real rate the LocalVols and TermVols are defined as the corresponding scaled values of the nominal rate i.e. $LV_{real}(t) = 0.9 \cdot LV_{nom}(t)$ and $TV_{real}(t) = 0.9 \cdot TV_{nom}(t)$ for all $t$, relation (78) shows that the mean-reversion parameters of the nominal and real rate will be equal $k_{nom}(t) = k_{real}(t)$. The above figures are in line with expectations.

The following figures contain comparisons between the 3M forward nominal rate and the 3M forward real rate i.e.

$\{L^{3M,i}(t_0) = L^i(t_0,T_n,T_{n+1}); T_{n+1} - T_n = 3M, T_n = t_0, 3M, 6M,...\}, i \in \{real,nominal\}$

![Figure 42: Left: Comparison between the EUR 3M LIBOR forward nominal rate and EUR 3M LIBOR forward real rate; Right: Comparison between the GBP 3M LIBOR forward nominal rate and GBP 3M LIBOR forward real rate.](./Fig/6.png)

The seasonality of the CPI index impacts the 3M LIBOR forward real rate via (67) since the CPI index is a building block for the inflation discount factor.

and the 1Y forward nominal rate and 1Y forward real rate i.e.

$\{L^{1Y,i}(t_0) = L^i(t_0,T_n,T_{n+1}); T_{n+1} - T_n = 1Y, T_n = t_0, 1Y, 2Y,...\}, i \in \{real, nominal\}$

![Figure 43: Left: Comparison between the EUR 12M LIBOR forward nominal rate and EUR 12M LIBOR forward real rate; Right: Comparison between the GBP 12M LIBOR forward nominal rate and GBP 12M LIBOR forward real rate.](./Fig/7.png)

The seasonality effect is not visible since the seasonality function is a 12M periodic function.

The above plots were produced using the DBAnalytics functions FwdRate for the nominal forward rate, and GetInflationValue (with property OutputRate="REAL") -for the real forward rate.
The DBAnalytics functionality does not allow to output the real zero rate. However, we can compute an approximation of the real zero rate using the following relation and the existing DBAnalytics functions:

$r_{real}(t) = -\frac{1}{t - t_0} log (DF_{real}(t_0,t)) = -\frac{1}{t - t_0} log \left( \frac{DF_{nom}(t_0,t)}{DF_{infl}(t_0,t)} \right)$

$= -\frac{1}{t - t_0} log(DF_{nom}(t_0,t)(1 + InflRate(t_0,t)))$

The above relation is derived using relations (67), (54) and (63). See the following section for more details.

![Figure 44: Left: Comparison between the EUR nominal zero rate and EUR real zero rate; Right: Comparison between the GBP nominal zero rate and GBP real zero rate.](./Fig/8.png)

##### Inflation Index and Inflation Rate

The inflation is usually modelled in terms of percentage increments of a reference index called Consumer Price Index (CPI). The CPI index or inflation index is a representative basket of goods and services i.e.

$CPI(T) = \frac{Basket\ Price\ Year\ T}{Basket\ Price\ Base\ Year} \times 100 \quad (53)$

The typical inflation modelling relies on the foreign currency analogy, in which the CPI is interpreted as the exchange rate between the nominal ("domestic") economy and the real ("foreign") economy, with the real interest rate representing the interest rate of the real economy⁸.
The inflation rate is defined as the percentage return of the CPI index over the time interval it applies to i.e.

$InflRate(t, T) = \frac{CPI(T)}{CPI(t)} - 1 \quad (54)$

In theory and in practice, the inflation rate can become negative. To prevent the coupons of inflation-linked derivatives becoming negative, the inflation rate is typically floored at zero, making floors with low strikes among the most popular traded derivatives on the inflation market.
We focus now on the construction of the inflation discount curve. The two most popular instruments used to build inflation discount curve are the Zero-Coupon (ZC) inflation indexed swap and the YOY inflation indexed swap.
In a ZC swap with settle date $T_0$ and maturity date $T_M$, party A pays to party B at maturity $T_M$ the fixed amount:

$(1 + R_{T_0,T_M})^T - 1$

where $R_{T_0,T_M}$ represents the ZC swap rate and $T = T_M - T_0$ represents the time interval between the settle date and the maturity date of the swap, in exchange for a floating amount also paid at maturity equal to:

$\frac{CPI(T_M - dt)}{CPI(T_0 - dt)} - 1$

where $dt$ stands for a time delay (we explain this concept in detail below).
In a YOY swap the floating amount being paid at the end of each period becomes:

$\frac{CPI(T_M - d)}{CPI(T_0 - d)} - 1$

The valuation of YOY swaps is more involved and according to [36], YOY swaps should be used only in the short end of the curve construction, as for maturities above 1Y the convexity adjustment will enter the pricing.
Since the DBX-ShortRate-InflationStochVol model uses only ZC swaps in the construction of the discount factor of the inflation rate we focus on how the discount factor construction works for ZC swaps and we refer to [2] for a description of the curve construction using YOY swaps. We consider a ZC swap with settle date $t_0$, maturity date $t > 0$ and break-even swap rate $K_{t_0,t}$. The value of the fixed leg at time $t_0$ is equal to:

$PV_{fix}(t_0) = E_{t_0}[exp(-\int_{t_0}^t n(s)ds)(1 + K_{t_0,t})^{t-t_0}]$

where we denote by $n(s)$ the nominal short rate. The value of the swap's floating leg at time $t_0$ is equal to:

$PV_{float}(t_0) = E_{t_0}[exp(-\int_{t_0}^t n(s)ds) \left( \frac{CPI(t-d)}{CPI(t_0-d)} - 1 \right)]$

Therefore at time $t_0$ the following equality is satisfied:

$E_{t_0}[exp(-\int_{t_0}^t n(s)ds)\frac{CPI(t-d)}{CPI(t_0-d)}] = (1 + K_{t_0,t})^{t-t_0}P_n(t_0, t) \quad (55)$

where we denoted by $P_n(t_0, t)$ the discount bond corresponding to the nominal interest rate. Using the equality

$E^π[exp(-\int_{t_0}^t n(s)ds) CPI(t)] = CPI(t_0)P_r(t_0, t)$

where $P_r(t_0, t)$ represents the discount bond corresponding to the real rate, we can re-write (55) under the form:

$P_r(t_0, t) = (1 + K_{t_0,t})^{t-t_0}P_n(t_0, t) \quad (56)$

or alternatively:

$P_r(t_0, t) = \frac{CPI(t_0)(1 + K_{t_0,t})^{t-t_0}}{CPI(t_0-d)}P_n(t_0, t) = \frac{CPI(t)}{CPI(t_0)}P_n(t_0, t) = \frac{1}{DF_{infl}(t_0,t)}P_n(t_0, t) \quad (57)$

The ratio $\frac{1}{DF_{infl}(t_0,t)}$ is referred to DBAnalytics documentation as the inflation discount factor. Note that (56) and (57) are approximations, as there is time lag $d$ present.
We now show how the term $\frac{1}{DF_{infl}(t_0,t)}$ is constructed by taking into account various approximations such as seasonality or additional payoff delays. The delay $d$, called in DBAnalytics InputDelay if is the delay to account for the observation of the CPI index (it is typically 3M). More precisely, we can define the quantity:

$CPI_{input}(t_0) = CPI(t_0 - d)$

i.e. the value of the index known at valuation date (today) $t_0$ is $CPI(t_0 - d)$.
We define the forward CPI index by

$CPI_{input}(t) := CPI_{input}(t_0) \frac{P_r(t_0,t)}{P_n(t_0,t)} = CPI_{input}(t_0)(1 + K_{t_0,t})^{t-t_0} \quad (58)$

where the second equality follows from (56). Note that the forward CPI index is a martingale under the π-forward measure of the nominal economy (thus the name "forward"). According to [36], shows that for a ZC inflation indexed swap of maturity $t$ is sufficient to lock the value of the forward CPI index $CPI_{input}(t)$.
Since ZC inflation indexed swaps have maturities that are always equal to multiple of 1Y, these instruments will not contain seasonality information. To account for seasonality in the definition of the forward CPI index we slightly modify (58) to

$CPI_{input}(t) = CPI_{input}(t_0)(1 + K_{t_0,t})^{t-t_0}\frac{S(t-m)}{S(t_0-d)} \quad (59)$

where $S$ is called seasonality function and its a 1Y-periodic function (i.e. $S(t + 1Y) = S(t)$) estimated based on the time series of the CPI index.

![Figure 45: Upper row: ITCPI index ${ITCPI(t), t = 1M, 2M, ...120M}$ for 10Y time horizon (left) and zoom on the first 5Y time horizon (right). The seasonality effect is very pronounced. Lower row: UKRPI index ${ITCPI(t), t = 1M, 2M, ...120M}$ for 10Y time horizon (left) and zoom on the first 5Y time horizon (right). The seasonality effect is less visible.](./Fig/9.png)

Structured products may account for additional delays in their fixings. These tend to be less than $d$ so we represent them by the quantity $d - m$ (typically $d - m = 1M$). The quantity $m$ is refered in DBAnalytics as output delay⁹. We define the quantities:

$CPI_{output}(t) := CPI_{input}(t + d - m) \quad (60)$

In particular

$CPI_{output}(t_0) = CPI_{input}(t_0 + d - m) \quad (61)$

The inflation discount curve $DF_{infl}(t_0, t)$ must account for these delays in its construction i.e. the following relation needs to be satisfied:

$\frac{1}{DF_{infl}(t_0, t)} = \frac{CPI_{output}(t)}{CPI_{output}(t_0)} \quad (62)$

Using the above relations we can compute the expression of the inflation discount factor as follows:

$\frac{1}{DF_{infl}(t_0,t)} = \frac{CPI_{output}(t + d - m)}{CPI_{output}(t_0)} = \frac{CPI_{input}(t + d - m)}{CPI_{input}(t_0)} \frac{CPI_{input}(t_0)}{CPI_{output}(t_0)}$

$= (1 + K_{t_0,t+d-m})^{t+d-m-t_0}\frac{S(t-m)}{S(t_0-d)}\frac{CPI_{input}(t_0)}{CPI_{input}(t_0 + d - m)}$

$= (1 + K_{t_0,t+d-m})^{t+d-m-t_0}\frac{S(t-m)}{S(t_0-d)}\frac{CPI_{input}(t_0)}{CPI_{input}(t_0)(1 + K_{t_0,t_0+d-m})^{d-m}\frac{S(t_0-m)}{S(t_0-d)}}$

$= \frac{(1 + K_{t_0,t+d-m})^{t+d-m-t_0}}{(1 + K_{t_0,t_0+d-m})^{d-m}}\frac{S(t-m)}{S(t_0-m)} \quad (63)$

where

$(1 + K_{t_0,t_0+d-m})^{d-m} = \frac{CPI_{input}(t_0)S(t_0-d)}{CPI_{input}(t_0)S(t_0-m)}$

Relation (63) shows how the inflation discount factor $DF_{infl}(t_0, t)$ is computed in DBAnalytics. The inputs that are necessary to build the inflation discount factor are stored in DBAnalytics in a CURVE object of UseType=INFLATION that contains:

- The break-even swap rates at annual points $K_{t_0,t}$: These are contained in the "Swaps" table.
- The seasonality adjustment $S(t)$ contained in the "Spreads" subtable.
- The input delay $d$ and the spot inflation index for this delay $CPI_{input}(t_0)$
- The output delay $m$ and the spot inflation index for this delay $CPI_{output}(t_0)$

For the complete description of the construction of the inflation discount curve we refer to [7] and [4]. Once the inflation discount curve $DF_{infl}(t_0,t)$ is computed, DBAnalytics computes internally the initial discount factor of the real rate using (57).

![Figure 46: Upper Row: The 3M inflation rate of the ITCPI index ${InflRate(T_n, T_{n+1}); T_{n+1} - T_n = 3M, 6M, ...120M}$ on a 10Y time horizon (left) and the 1Y inflation rate of the ITCPI index (right) ${InflRate(T_n, T_{n+1}); T_{n+1} - T_n = 1Y, T_n = 3M, 6M, ...120M}$ on a 10Y time horizon (right). Lower row: The 3M inflation rate of the UKRPI index on a 10Y time horizon (left) and the 1Y inflation rate of the UKRPI index on a 10Y time horizon (right). The seasonality effect is not visible in the case of the 1Y inflation rate since the seasonality function has 1Y period.](./Fig/10.png)

##### Dynamics of the Inflation index

For simplicity of notation, we denote the CPI index by $I_t$ for the remaining part of this report. The CPI index $I$ is modelled as a lognormal process with stochastic volatility multiplier

$dI_t = (r_t^{nom} - r_t^{real})I_tdt + \sigma(t)η_tI_tdW_t \quad (64)$

where $η_t$ is called the stochastic volatility multiplier and is given by

$d log(η_t) = µ(t) - k_η(t)log(η_t))dt + ξ(t)dZ_t \quad (65)$

The SV component $η_t$ can be written under the form $η_t = exp(X_t)$ where $X$ is a mean-reverting process.
The centering of the stochastic volatility multiplier (i.e. the calculation of the drift $µ(t)$ of the stochastic volatility
multiplier) can be done in various ways in DBAnalytics. The property through which the centering mode is set is called StochVolCenteringMode (SVCM). According to [2], the drift μ(t) is calculated from the relation

$$E[V(T)] = E\left[\sqrt{\frac{1}{T}\int_0^T \eta_t^2 ds}\right] = 1$$

which corresponds to one of the SVCM=8 or SVCM=9¹⁰. In general, usage of SVCM=9 is recommended and it has the desirable property that the ATM implied vol has low sensitivity to stochastic vol level. The selected centering mode will not affect the dynamics of the model as long as the model is calibrated to vanilla options. As the stochastic volatility centering drift is merged into spot local volatility, any centering drift will be equivalent once vanillas are calibrated¹¹.

##### Description of the calibration process

In this section we focus on the calibration of the volatility of the inflation index i.e. on the calibration of the quantities σ(t) and ηt from equations (68)-(69). The SV component ηt depends on two parameters: the mean-reversion parameter kη(t) and the vol-of-vol parameter ξ(t)¹². The mean-reversion parameter kη(t) is not calibrated but set exogenously by the desk.

For a given maturity grid¹³ 0 < t₁ < t₂ < ... < tₙ, the calibration aims to calibrate a term structure of volatilities {σ(t); 0 < t < tₙ} with σ(t) = σ(tᵢ) for t ∈ [tᵢ, tᵢ₊₁) and a (flat across all maturities) vol-of-vol parameter ξ(t). The calibration process consists of two steps:

1. The calibration of the volatility of the SV component ξ(t).
   The vol-of-vol parameter ξ(t) is calibrated to a set of options of different expiry-tenor pairs, with two strikes available at each expiry-tenor pair. Once ξ(t) is calibrated, it is set flat at all tenors.
   We sketch below the algorithm. We consider a set of options¹⁴ at several expiry-tenor pairs with two strikes available at each expiry-tenor, for which the market prices and market implied (Black-Scholes) volatilities are available. We denote by
   
   $$\hat{V}(T_0(i), T_1(i), K_j)$$
   
   the market-observed implied volatility of the calibration option with expiry T₀(i), tenor T₁(i) and strike Kⱼ. Let
   
   $$V(T_0(i), T_1(i), K_j) = V(T_0(i), T_1(i), K_j; \{σ(t), t < t_N\}, ξ(t))$$
   
   be the model-generated implied volatilities of the calibration targets depending on the parameters {σ(t), t < tₙ} and ξ(t). The objective of the algorithm is to find {σ(t), t < tₙ}, ξ(t) in order to match as closely as possible the market implied volatilities¹⁵. This problem is done using non-linear optimization methods, by defining an objective function
   
   $$F(\{σ(t), t < t_N\}, ξ(t)) = \sum\sum w_{i,j} (V(T_0(i), T_1(i), K_j) - \hat{V}(T_0(i), T_1(i), K_j))^2$$

   where $w_{i,j}$ are user specified weights, and solving the problem

   $$(\{σ^*(t), t < t_N\}, ξ^*(t)) = argmin_{\{σ(t), t < t_N\}, ξ(t)}F(\{σ(t), t < t_N\}, ξ(t))$$

   using a specialized algorithm such as Levenberg-Marquardt or Powell¹⁶.

2. The calibration of the volatility component $σ(t)$.
   We re-perform the above calibration, this time using the value of the vol-of-vol parameter $ξ(t)$ calibrated at Step 1 as initial guess (and kept fixed i.e. $ξ$ is not recalibrated) and using as calibration targets a set of options of strike 0 with the aim of calibrating only $\{σ(t), t < t_N\}$.

####### 4.2.1.3 Description of MoRM calibration tests

MoRM examined the following aspects of the calibration process through a series of tests:

1. Correctness of the delivered tests and calibration quality in EOD scenario. We perform the two-step calibration process described in [42] using the same EOD input data as DBAnalytics with the purpose of checking the calibration quality and confirming the correctness of the calibrated volatility parameters. The test results shows that the calibration quality is very high, the model-generated implied volatilities being very close to the implied volatilities of the calibration targets in both steps of the calibration. See Sections 4.2.1.4 and 4.2.1.4 for the numerical results. Furthermore, we obtain the same calibrated volatility parameters (LocalVolsSV and LocalVols as the ones presented in [42].

2. Sensitivity to the choice of calibration targets and calibration structure. The calibration is performed in two steps to avoid potential numerical issues generated by high-dimension minimization. Each step of the calibration uses a specific set of calibration targets. We examined the impact of the calibration method on the prices and risk sensitivities of exotic instruments. The test supports the view of DBAnalytics, that the PV and risk sensitivities of exotic instruments depend on the calibration choice, and therefore the products YOY should be benchmarked against alternative models, where possible. We considered three different calibration alternatives:

   - Calibration Alternative 1 (CA1): one-step calibration of LocalVols to set of targets consisting of 0 strike options. The LocalVolsSV parameter is not calibrated (is set close to 0). While this is a toy-example since such a model will not be relevant for the pricing of exotics options as it reduces the inflation dynamics to a lognormal process with time-dependent volatility, we use this calibration alternative to have a quantification of the amount of volatility that is captured by the SV component.
   
   - Calibration Alternative 2 (CA2): one-step calibration of LocalVols and LocalVolsSV parameters using as targets options with ATM strikes and 0 strikes. This calibration alternative consists of combining Step 1 (calib. of LocalVolsSV) and Step 2 (calib. of LocalVols) of the original calibration into one step which calibrates simultaneously the LocalVolsSV and LocalVols parameters to a set of targets consisting of the ATM options used in Step 1 and the 0 strike options used in Step 2 of the original calibration.
   
   - Calibration Alternative 3 (CA3): one-step calibration of LocalVols and LocalVolsSV parameters using as targets all the options used in Step 1 and Step 2 of the original calibration, i.e. options with strikes at-the-money, strikes on one side of the at-the-money point and 0 strike. This alternative performs the simultaneous calibration of the LocalVols and LocalVolsSV parameters using all the available calibration targets.
   We examine the quality of the calibration in each of the above scenarios, the impact of the calibration choice on the price of exotic options and the impact of the calibration choice on two risk sensitivities: the inflation vega of an exotic product projected on the tenors of the LocalVols term structure and the inflation vega of an exotic instrument bucketed in terms of 0 strike options - this partition is relevant if we assume that 0-strike options are the only liquid options that can be used for hedging.

   The test results show that the calibration quality remains high in the majority of cases. The prices the exotics computed using volatilities derived from the standard two-step calibration are slightly different from the prices of exotics computed using volatilities calibrated using methods CA2 and CA3, with the the prices produced by the CA2 and CA3 methods being very close¹⁷.

   The distribution of the inflation vega on each tenor of the LocalVols term structure is similar in the current standard two-step calibration and in CA2 and CA3, with a significant portion of the vega being concentrated around the same tenors in all three cases.

   The distribution of the inflation vega in term of bucketed vegas (where each bucketed vega represents the PV impact of a change in the implied volatility of a 0 strike option) is similar in the current two-step calibration and in CA2 and CA3 with a significant portion of the vega being concentrated around the same 0-strike instruments in all three cases (in the case of DBMVOL-YOY calibration, the concentration is similar to the one normally observed for co-terminal swaptions). See Sections 4.2.1.6 and 4.2.1.5 for the numerical results.

3. Sensitivity to initial guesses used in calibration We examine the impact of the initial guess used for LocalVolsSV in Step 1 of calibration and the impact of the initial guesses used for LocalVols in Step 2 of calibration. We perform the two steps calibration for a range of initial guesses and compare the obtained calibrated parameters. The results of the tests show that the impact of the LocalVolsSV initial guess in Step 1 on the calibrated value of LocalVolsSV is negligible. The quality of the calibration is high i.e. the error between the target volatilities and the model-generated volatilities is very small in all considered cases. The tests performed on the initial guesses for LocalVols show that the calibration errors are insignificant, except for the scenarios where the initial guesses for LocalVols are very small (<10bps). We conclude this test by examining the prices of three exotic instruments when different initial guesses are used for LocalVols. As expected, the prices the prices of the exotics when using very small values for the initial guesses of the LocalVols differ materially from the prices of the exotics generated in other initial guess scenarios. In order to correct this issue we set in Conditions of Use that the initial guess for LocalVols is above 100bps. See Sections 4.2.1.6 and 4.2.1.5 for the numerical results.

4. Robustness of the calibration under different market scenarios We examine the robustness of the calibration to shifts in market regimes. To this purpose, we apply relative shifts of different sizes to the market prices of the calibration targets used in Step 1 & 2 of the calibration and examine the quality of the calibration in each case. The calibration errors are found to be insignificant in each case. See Sections 4.2.1.6 and 4.2.1.5 for the numerical results.

5. Impact of the calibration on the risk sensitivities under different market scenarios For three exotics, we examine the impact of different market regimes on the total inflation vega, on the distribution of the inflation vega projected on the tenors of the LocalVols term structure and on the distribution of the inflation vega in term of bucketed vegas (where each bucketed vega represents the PV impact of a change in the implied volatility of a 0 strike option). We apply relative shifts of different sizes to the market prices of the calibration targets used in Step 2 of the calibration and examine the corresponding risk sensitivities.
The test results show that inflation vega is monotonic with respect to the shifts applied to the market-implied volatilities of the calibration targets. In all considered cases, the bulk of vega is concentrated around the same tenors of the LocalVols term structure. In the case of the bucketed vegas, in all considered cases, a significant portion of the vega is concentrated around the same 0-strike instruments (in the case of DBMVOL-YOY calibration, the concentration is similar to the one normally observed for co-terminal swaptions). See Sections 4.2.1.6 and 4.2.1.5 for the numerical results.

6. Sensitivity of the calibration to mean-reversion level of the SV component The mean-reversion parameter (MeanRevSV) of the SV component is set exogenously. We examine the impact of this parameter choice on the calibration process (i.e. calibration quality and computed volatility parameters) and the impact on the price and risk sensitivities (inflation vega projected on the tenors of the LocalVols term structure and inflation vega in term of bucketed vegas) of three exotic options.
The test results show that for all considered MeanRevSV parameters, the quality of the calibration remains high. The prices and the total inflation vega of the exotic options are found to be sensitive to the choice of MeanRevSV parameter. When projecting the inflation vega on the LocalVols tenor structure, we find the bulk of vega concentrated around the same LocalVols tenors, in all considered cases. Similarly, a significant portion of the vega is concentrated around the same 0-strike instruments, in all considered cases (in the case of DBMVOL-YOY calibration, the concentration is similar to the one normally observed for co-terminal swaptions). See Sections 4.2.1.6 and 4.2.1.5 for numerical results.

7. Robustness of the calibration to shifts in the input interest rate and inflation rate parameters We examine the robustness of Step 1 and Step 2 of the calibration in different market regimes. In separate tests, we apply a series of absolute shifts to the input nominal interest rate curve, to the input inflation curve, and series of relative shifts to the input volatilities of the nominal interest rate and real interest rate. In the last test, we examine the stability of the price and vega of three exotic options when relative shifts are applied to the calibrated LocalVols parameters.
The results show that the quality of calibration remains high in the majority of cases. The calibration quality only deteriorates for extreme shifts (e.g. interest rates vol shifts in the range [170%, 200%] ). When applying a parallel shift of +0.04 to the inflation curve, the model-generated implied volatilities are equal to 0 for several targets, see Section 4.2.1.5 for numerical results. This error can be remediated by setting the LocalVolsSV initial guess equal to a value larger than 0.1%¹⁸. Setting such a value will not affect the outcome of the calibration, as the calibration of LocalVolsSV is not impacted by the choice of initial guess). See Section 4.2.1.5 for numerical results on Step 1 of DBMVOL-ZC calibration, Section 4.2.1.5 for numerical results on Step 2 of DBMVOL-ZC calibration¹⁸, Section 4.2.1.6 for Step 1 of DBMVOL-YOY calibration and Section 4.2.1.6 for Step 2 of DBMVOL-YOY calibration.
Furthermore, the tests show that the PV and total vega of the three exotic options analyzed with respect to DBMVOL-ZC and DBMVOL-YOY calibration are stable under relative shifts of the inflation volatility. For numerical results, see Sections 4.2.1.5, 4.2.1.5, 4.2.1.6 and 4.2.1.6. For the extensive testing of the volatilities of inflation rate, nominal interest rate and real interest rate, we refer to the relevant sections of DBX-ShortRate_InflationStochVol MVR [10], where all the products in scope of this model are tested.

####### 4.2.1.4 Calibration Testing Results

##### Calibration of the volatility of the SV component

In this section we analyse in detail Step 1 of the calibration algorithm: the calibration of the SV component. We distinguish between two subtypes of calibrations: DBMVOL-ZC and DBMVOL-YOY.
The calibration of the SV component is done to a set of M put options on the spot inflation rate with payoff at time T₀(i) + T₁(i) given by

$$\left( \left( K_j + 1 \right)^{T_1(i)} - \frac{I_{T_0(i)+T_1(i)}}{I_{T_0(i)}} \right)^+, \quad i=1,...M, j=1,2$$

- For DBMVOL-ZC: T₀(i) = 0 for all i = 1, ..M and 0 < T₁(1) < ... < T₁(M). At each (T₀(i), T₁(i)) combination, options at two strikes are available: K₁ equal to the ATM strike and K₂ equal to 80% · K₁.
- For DBMVOL-YOY: T₀(1) = 0 and T₀(i) > 0 for all i = 2,...M and T₁(i) > 0 for all i = 1,...M. At each (T₀(i), T₁(i)) combination, options at two strikes are available: K₁ equal to the forward inflation rate and K₂ chosen to be at least 10% smaller than K₁.

###### EOD scenario: Step 1 of DBMVOL-ZC calibration

As described in [42], we calibrate the (flat) volatility of the SV component ¹⁹ to a set of targets covering a range of (Expiry, Tenor) = (T₀, T₁) pairs. At each (Expiry, Tenor) pair the following two (approximate) strikes are used: ATM strike and 80% · ATM strike. The SV mean reversion parameter used in this calibration is set exogenously by the desk. At present the desk uses 0 for the UKRPI case. The list of calibration targets is given in the following table:

| T₀ | T₁ | OptionType | Strike | Price | Weight |
|----|----|-----------:|-------:|------:|-------:|
| 0y | 1y | PUT-RETURN | 0.01605 | 0.487298801 | 100 |
| 0y | 1y | PUT-RETURN | 0.01284 | 0.355252528 | 100 |
| 0y | 2y | PUT-RETURN | 0.04778305 | 0.683718336 | 100 |
| 0y | 2y | PUT-RETURN | 0.03823064 | 0.350020719 | 100 |
| 0y | 5y | PUT-RETURN | 0.16550995 | 2.273548848 | 100 |
| 0y | 5y | PUT-RETURN | 0.13240796 | 1.087078615 | 100 |
| 0y | 10y | PUT-RETURN | 0.38523231 | 4.712019698 | 100 |
| 0y | 10y | PUT-RETURN | 0.30815855 | 2.107401748 | 100 |
| 0y | 20y | PUT-RETURN | 0.84607796 | 12.29421501 | 100 |
| 0y | 20y | PUT-RETURN | 0.67686236 | 6.236479789 | 100 |

Table 28: Calibration targets for DBMVOL-ZC calibration of volatility of SV component.

The initial parameter guesses used in this calibration, as they appear in the delivered DBA test dictionaries are:

| Tenor | LocalVol |
|-------|----------|
| 1     | 0.017    |
| 2     | 0.02     |
| 5     | 0.024    |
| 10    | 0.028    |
| 20    | 0.034    |
| 30    | 0.038    |

Table 29: Initial guesses for LocalVols parameters for DBMVOL-ZC calibration of volatility of SV component.

| Tenor | LocalVolSV |
|-------|------------|
| 1     | 0.0001     |

Table 30: Initial guess for LocalVolsSV parameter for DBMVOL-ZC calibration of volatility of SV component.

At every (T₀, T₁) pair, the calibration intends to match the market volatilities and market prices of options at the two strikes: strike set at the ATM strike and strike that is 80 % of the strike. Therefore, the calibration can be further decomposed as follows:

- Using the market price and market vol corresponding to the ATM options, we calibrate the LocalVols component of the model (since the value of the option at this strike does not depend on the volatility of the SV component).
- Using the LocalVols parameter calibrated at the above step and the market price and market vol corresponding to the option with strike 80% of the ATM strike, we calibrate the volatility of the SV component.

The results of the calibration are summarized in the following two tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1Y | 0.01605 | 0.012036614 | 0.012168589 | -0.000130075 | 100 |
| 0y | 1Y | 0.01284 | 0.012352671 | 0.012223821 | 0.00012885 | 100 |
| 0y | 2Y | 0.04778305 | 0.011601172 | 0.011922278 | -0.00032106 | 100 |
| 0y | 2Y | 0.03823064 | 0.012436503 | 0.012113677 | 0.000324826 | 100 |
| 0y | 5Y | 0.16550995 | 0.02216099 | 0.022293857 | -0.000132867 | 100 |
| 0y | 5Y | 0.13240796 | 0.023446285 | 0.023315023 | 0.000131263 | 100 |
| 0y | 10Y | 0.38523231 | 0.027963692 | 0.028036085 | -7.4392E-05 | 100 |
| 0y | 10Y | 0.30815855 | 0.030629663 | 0.030239303 | 6.9036E-05 | 100 |
| 0y | 20Y | 0.84607796 | 0.040497593 | 0.040351288 | 0.000146305 | 100 |
| 0y | 20Y | 0.67686236 | 0.043262126 | 0.043411997 | -0.000149069 | 100 |

Table 31: Calibration results of DBMVOL-ZC calibration of volatility of SV component. The results show that the model generated volatilities are close to the market observed volatilities.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1Y | 0.01605 | 0.487298801 | 0.492564812 | -0.005266011 | 100 |
| 0y | 1Y | 0.01284 | 0.355252528 | 0.350214295 | 0.005038233 | 100 |
| 0y | 2Y | 0.04778305 | 0.683718336 | 0.70264208 | -0.018923672 | 100 |
| 0y | 2Y | 0.03823064 | 0.350020719 | 0.33344512 | 0.01657559 | 100 |
| 0y | 5Y | 0.16550995 | 2.273548848 | 2.287145103 | -0.013596255 | 100 |
| 0y | 5Y | 0.13240796 | 1.087078615 | 1.075678513 | 0.011400102 | 100 |
| 0y | 10Y | 0.38523231 | 4.712019698 | 4.724542554 | -0.012522856 | 100 |
| 0y | 10Y | 0.30815855 | 2.107401748 | 2.097830041 | 0.009571707 | 100 |
| 0y | 20Y | 0.84607796 | 12.29421501 | 12.24995631 | 0.04425870 | 100 |
| 0y | 20Y | 0.67686236 | 6.236479789 | 6.269325866 | -0.032846077 | 100 |

Table 32: Calibration results of DBMVOL-ZC calibration of volatility of SV component. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol |
|-------|-----|
| 1 | 0.012846333 |
| 2 | 0.009552489 |
| 5 | 0.041335411 |
| 10 | 0.009756494 |
| 20 | 0.047474004 |
| 30 | 0.038 |

Table 33: Calibrated LocalVols parameters.

| Tenor | Vol |
|-------|-----|
| 1 | 11.65% |

Table 34: Calibrated volatility of SV component (LocalVolsSV).

The calibrated volatility of the SV component is 11.65%, the same value obtained in [42].
We illustrate the structure of the Local Volatilities after the 2-step calibration process with the following diagram.

![Figure 47: Calibrated Inflation LocalVols, after the 2-step calibration process.](./Fig/1.png)

To confirm that the logic described above is correct we perform the following test: we re-do the above calibration using the same initial guesses, but this time we use only the subset of option targets being ATM, i.e.,

| T₀ | T₁ | OptionType | Strike | Price | Weight |
|----|----|-----------:|-------:|------:|-------:|
| 0y | 1y | PUT-RETURN | 0.01605 | 0.487298801 | 100 |
| 0y | 2y | PUT-RETURN | 0.04778305 | 0.683718336 | 100 |
| 0y | 5y | PUT-RETURN | 0.16550995 | 2.273548848 | 100 |
| 0y | 10y | PUT-RETURN | 0.38523231 | 4.712019698 | 100 |
| 0y | 20y | PUT-RETURN | 0.84607796 | 12.29421501 | 20 |

Table 35: Calibration targets for DBMVOL-ZC calibration of volatility of SV component consisting of ATM options.

We expect that the calibrated LocalVols parameters to be close to the previously calibrated values and the volatility of the SV component (LocalVolsSV) to be close to the initial guess, i.e. due to the fact that the products do not depend on the convexity of the smile at this strike, the volatility of the SV parameter is not expected to contribute and be left unchanged. The calibration results are listed in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0.01605 | 0.012036514 | 0.012036499 | 1.5223E-08 | 100 |
| 0y | 2y | 0.04778305 | 0.011601172 | 0.011607792 | -6.61953E-06 | 100 |
| 0y | 5y | 0.16550995 | 0.02216098 | 0.022156155 | 4.8250E-06 | 100 |
| 0y | 10y | 0.38523231 | 0.027963764 | 0.027964434 | -6.70059E-07 | 100 |
| 0y | 20y | 0.84607796 | 0.040498062 | 0.040501841 | -3.8365E-06 | 100 |

Table 36: Calibration results of DBMVOL-ZC calibration of volatility of SV component, using only ATM options. The results show that the model generated volatilities are close to the market observed volatilities.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1Y | 0.01605 | 0.487298801 | 0.487298184 | 6.1631E-07 | 100 |
| 0y | 2Y | 0.04778305 | 0.683718336 | 0.684108443 | -0.000390107 | 100 |
| 0y | 5Y | 0.16550995 | 2.273548848 | 2.273053958 | 0.000494889 | 100 |
| 0y | 10Y | 0.38523231 | 4.712019698 | 4.712132492 | -0.000112794 | 100 |
| 0y | 20Y | 0.84607796 | 12.29421501 | 12.29537618 | -0.001161169 | 100 |

Table 37: Calibration results of DBMVOL-ZC calibration of volatility of SV component, using as targets only the set of ATM options. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol | Vol (prev.) |
|-------|-----|------------|
| 1 | 0.012519964 | 0.012846333 |
| 2 | 0.009610743 | 0.009552489 |
| 5 | 0.042092137 | 0.041335411 |
| 10 | 0.009586949 | 0.009756494 |
| 20 | 0.049774977 | 0.047474004 |
| 30 | 0.038 | 0.038 |

Table 38: Calibrated LocalVols parameters. We see that the values of the calibrated parameters (col. Vol) are close the previously computed values (col. Vol (prev.)).

| Tenor | Vol | Vol(prev.) |
|-------|-----|-----------|
| 1 | 0.02% | 11.65% |

Table 39: Calibrated volatility of SV component (LocalVolsSV). The value obtained is very close to zero.

###### EOD Scenario: Step 1 of DBMVOL-YOY calibration

As described in [42], we calibrate the (flat) volatility of the SV component to a set of targets covering a range of (Expiry, Tenor) pairs. At each (Expiry, Tenor) pair the following two (approximate) strikes are used: strike set at the forward inflation rate and strike that is 10 % less than the forward inflation rate. The SV mean reversion parameter used in this calibration is set exogenously by the desk. At present the desk uses 0 in the case of the UKRPI index.
The list of calibration targets is given in the following table:

| T₀ | T₁ | OptionType | Strike | Price | Weight |
|----|----|-----------:|-------:|------:|-------:|
| 0y | 1y | PUT-RETURN | 0.01813 | 0.5914825501 | 100 |
| 0y | 1y | PUT-RETURN | 0.00813 | 0.2169713662 | 100 |
| 1y | 2y | PUT-RETURN | 0.03409 | 1.4033004728 | 100 |
| 1y | 2y | PUT-RETURN | 0.02409 | 0.7016439793 | 100 |
| 3y | 2y | PUT-RETURN | 0.03747 | 1.5619499781 | 100 |
| 3y | 2y | PUT-RETURN | 0.02747 | 0.9127297893 | 100 |
| 5y | 5y | PUT-RETURN | 0.03764 | 4.3048147759 | 100 |
| 5y | 5y | PUT-RETURN | 0.02764 | 2.7237098749 | 100 |
| 10y | 10y | PUT-RETURN | 0.03322 | 9.2621801022 | 20 |
| 10y | 10y | PUT-RETURN | 0.02322 | 6.517918596 | 20 |
| 20y | 10y | PUT-RETURN | 0.02588 | 8.6316828732 | 20 |
| 20y | 10y | PUT-RETURN | 0.01588 | 6.8121981628 | 20 |

Table 40: Calibration targets for DBMVOL-YOY calibration of volatility of SV component.

The initial parameter guesses used in this calibration, as they appear in the delivered DBA test dictionaries are:

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.017 | 0.02 | 0.024 | 0.028 | 0.034 | 0.038 |
| LocalVolsSV | | | 0.0001 (flat) | | | |

Table 41: Initial guesses for LocalVols parameters and for the LocalVolsSV parameter for DBMVOL-YOY calibration of volatility of SV component.

At every (T₀, T₁) pair, the calibration intends to match the market volatilities and market prices of options at the two strikes: strike set at the forward inflation rate and strike that is at least 10 % less than the forward inflation rate.
The results of the calibration are summarized in the following two tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0.01813 | 0.011853478 | 0.011977479 | -0.000124000 | 100 |
| 0y | 1y | 0.00813 | 0.01288229 | 0.012756860 | 0.000126130 | 100 |
| 1y | 2y | 0.03409 | 0.00996392 | 0.009969572 | -5.2044e-06 | 100 |
| 1y | 2y | 0.02409 | 0.01102060 | 0.011026742 | -5.9123e-06 | 100 |
| 3y | 2y | 0.03747 | 0.00861107 | 0.008547381 | 6.3696e-05 | 100 |
| 3y | 2y | 0.02747 | 0.00970844 | 0.009773904 | -6.5457e-05 | 100 |
| 5y | 5y | 0.03764 | 0.00646148 | 0.006472352 | -1.0871e-05 | 100 |
| 5y | 5y | 0.02764 | 0.00761761 | 0.007606675 | 1.0943e-05 | 100 |
| 10y | 10y | 0.03322 | 0.00475594 | 0.004958717 | -0.000242771 | 20 |
| 10y | 10y | 0.02322 | 0.00598354 | 0.005755586 | 0.000227573 | 20 |
| 20y | 10y | 0.02588 | 0.00398239 | 0.004372622 | -0.000390232 | 20 |
| 20y | 10y | 0.01588 | 0.00528483 | 0.004942913 | 0.000341921 | 20 |

Table 42: Calibration results of DBMVOL-YOY calibration of volatility of SV component. The results show that the model generated volatilities of the calibration targets are close to the market observed volatilities of the calibration targets, with the best fit achieved at the time points assigned with higher weights.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0.01813 | 0.5914825501 | 0.5964341794 | -0.004951629 | 100 |
| 0y | 1y | 0.00813 | 0.2169713662 | 0.2127499012 | 0.004221465 | 100 |
| 1y | 2y | 0.03409 | 1.4033004728 | 1.4026343731 | 0.000666099 | 100 |
| 1y | 2y | 0.02409 | 0.7016439793 | 0.7023133134 | -0.000693334 | 100 |
| 3y | 2y | 0.03747 | 1.5619499781 | 1.5509186619 | 0.011031961 | 100 |
| 3y | 2y | 0.02747 | 0.9127297893 | 0.9226899622 | -0.010260172 | 100 |
| 5y | 5y | 0.03764 | 4.3048147759 | 4.3039197159 | 0.00089506 | 100 |
| 5y | 5y | 0.02764 | 2.7237098749 | 2.7178932143 | 0.005816660 | 100 |
| 10y | 10y | 0.03322 | 9.2621801022 | 9.6213650544 | -0.359184952 | 20 |
| 10y | 10y | 0.02322 | 6.517918596 | 6.1871256917 | 0.330792904 | 20 |
| 20y | 10y | 0.02588 | 8.6316828732 | 9.3545942879 | -0.722911414 | 20 |
| 20y | 10y | 0.01588 | 6.8121981628 | 6.2036350393 | 0.608563123 | 20 |

Table 43: Calibration results of DBMVOL-YOY calibration of volatility of SV component. The results show that the model generated prices of the calibration targets are close to the market observed prices of the calibration targets, with the best fit achieved at the time points assigned with higher weights.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.012479464 | 0.016419381 | 0.017749797 | 0.014578452 | 0.014396186 | 0.013104785 |
| LocalVolsSV | | | 0.423644884 (flat) | | | |

Table 44: Calibrated LocalVols parameters and calibrated volatility of SV component (LocalVolsSV).

The calibrated volatility of the SV component is 42.36%, the same value obtained in [42]. This value will be used in Step 2 of the calibration process (see following sections). The calibrated values of the LocalVols will be discarded.

![Figure 48: Calibrated LocalVols.](./Fig/2.png)

##### Calibration of the LocalVols component

In this section we examine Step 2 of the calibration algorithm: the calibration of the LocalVols component. As before, distinguish between two subtypes of calibrations: DBMVOL-ZC and DBMVOL-YOY.
The calibration of the SV component is done to a set of M put options on the spot inflation rate with payoff at time T₀(i) + T₁(i) given by

$\left( \left( K + 1 \right)^{T_1(i)} - \frac{I_{T_0(i)+T_1(i)}}{I_{T_0(i)}} \right)^+, \quad i=1,...M,$

- For DBMVOL-ZC: T₀(i) = 0 for all i = 1,...M and 0 < T₁(1) < ... < T₁(M). At each (T₀(i), T₁(i)) combination, the option strike is K = 0.
- For DBMVOL-YOY: T₀(1) = 0 and T₀(i) > 0 for all i = 2,...M and T₁(i) > 0 for all i = 1,...M. At each (T₀(i), T₁(i)) combination, the option strike is K = 0.

###### EOD Scenario: Step 2 of DBMVOL-ZC calibration

As described in the DBAnalytics calibration document [42], we calibrate only the LocalVols parameters using as initial guess for the LocalVols the calibrated volatility of the SV component from Section 4.2.1.4 i.e., LocalVolsSV=11.65% and using this time a different set of calibration targets consisting of options with 0 strike contained in the following table:

| T₀ | T₁ | Frequency | Basis | OptionType | Strike | Price | Weight |
|----|----|-----------:|-------:|------:|-------:|-------:|-------:|
| 0y | 1y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.08850022 | 100 |
| 0y | 2y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.04043473 | 100 |
| 0y | 5y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.06832587 | 100 |
| 0y | 10y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.12451522 | 100 |
| 0y | 20y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.36713756 | 100 |
| 0y | 30y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.65756781 | 100 |

Table 45: Calibration targets for DBMVOL-ZC calibration of LocalVols with previously calibrated SV component and target set consisting of options with strikes equal to 0.

Note that this time the "Use" flag of the LocalVolsSV parameter is set to 0. The "Use" flag specifies whether this particular volatility value is allowed to change from its initial value. If Use = 0 then this volatility value is used in the construction of the volatility surface but NOT in calibration or vega calculations (the default value is 1). The initial parameter guesses used in this calibration, as they appear in the delivered DBA test dictionaries are:

| Tenor | Vol |
|-------|-----|
| 1 | 0.017 |
| 2 | 0.02 |
| 5 | 0.024 |
| 10 | 0.028 |
| 20 | 0.034 |
| 30 | 0.038 |

Table 46: Initial guesses for LocalVols parameters for DBMVOL-ZC calibration of volatility of LocalVols component.

| Tenor | Vol |
|-------|-----|
| 1 | 11.65% |

Table 47: Initial guess volatility of SV component (LocalVolsSV) - value that computed in Section 4.2.1.4.

The calibration results are listed in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0 | 0.01394184 | 0.01394184 | 1.5842E-10 | 100 |
| 0y | 2y | 0 | 0.01857185 | 0.01857185 | -7.5661E-10 | 100 |
| 0y | 5y | 0 | 0.03417825 | 0.03417825 | -2.3353E-09 | 100 |
| 0y | 10y | 0 | 0.04973579 | 0.04973580 | -1.0964E-08 | 100 |
| 0y | 20y | 0 | 0.06993680 | 0.06993680 | 8.7838E-10 | 100 |
| 0y | 30y | 0 | 0.08104225 | 0.08104226 | -1.6962E-08 | 100 |

Table 48: Calibration results of DBMVOL-ZC calibration of LocalVols components to targets consisting of options with 0 strikes. The results show that the model generated volatilities are close to the market observed volatilities.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0 | 0.08850022 | 0.08850021 | 3.3129E-09 | 100 |
| 0y | 2y | 0 | 0.04043473 | 0.04043474 | -8.9669E-09 | 100 |
| 0y | 5y | 0 | 0.06832587 | 0.0683258 | -2.9766E-08 | 100 |
| 0y | 10y | 0 | 0.12451522 | 0.12451640 | -1.8305E-07 | 100 |
| 0y | 20y | 0 | 0.36713756 | 0.36713753 | 2.8445E-08 | 100 |
| 0y | 30y | 0 | 0.65766781 | 0.65766862 | -8.1392E-07 | 100 |

Table 49: Calibration results of DBMVOL-ZC calibration of LocalVols component to targets consisting of options with 0 strikes. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol |
|-------|-----|
| 1 | 0.01417061 |
| 2 | 0.02803421 |
| 5 | 0.03983625 |
| 10 | 0.04138950 |
| 20 | 0.04425318 |
| 30 | 0.01544392 |

Table 50: Calibrated LocalVols parameters.

| Tenor | Vol |
|-------|-----|
| 1 | 11.65% |

Table 51: Calibrated volatility of SV component (LocalVolsSV). The obtained value is identical to the original initial guess value (LocalVolsSV=11.65%).

Using the calibrated LocalVols (calculated at Step 2) and LocalVolsSV parameters (calculated at Step 1), we re-price all three sets of ZC options (i.e., (1) ATM options, (2) options having strike 80% of the ATM strike and (3) options having zero strike) considered at each expiry-tenor pair 0Y1Y, 0Y2Y, 0Y5Y, 0Y10Y, 0Y20Y. The following figures display the model-generated implied (Black-Scholes) volatility smile at each expiry-tenor pair.

![Figure 49: Model generated implied (Black-Scholes) volatility smile for the target options at the five expiry-tenor pairs 0Y1Y, 0Y2Y, 0Y5Y, 0Y10Y and 0Y20Y. At each pair, the smile is constructed using the model-generated implied volatilities at 3 strikes: options ATM, options having strike 80% of the ATM strike and options having zero strike. In all five cases, the lowest value of the implied volatility is for the option with strike equal to the forward inflation rate.](./Fig/3.png)

The model-generated implied volatility values used to generate the above figures are contained in the following table:

| T₀ | T₁ | Strike | MarketVols | ModelVols | VolDiffs |
|----|----|-----------:|-------:|------:|-------:|
| 0y | 1Y | 0.01605 | 0.01203651 | 0.01363048 | -0.00159374 |
| 0y | 1Y | 0.01284 | 0.01235267 | 0.01368814 | -0.00133547 |
| 0y | 1Y | 0 | 0.01394184 | 0.01394184 | 2e-10 |
| 0y | 2Y | 0.04778305 | 0.01160117 | 0.01751982 | -0.00591865 |
| 0y | 2Y | 0.03823064 | 0.01243850 | 0.01770534 | -0.00526683 |
| 0y | 2Y | 0 | 0.01857185 | 0.01857185 | -7e-10 |
| 0y | 5Y | 0.16550995 | 0.02216098 | 0.02869190 | -0.00653091 |
| 0y | 5Y | 0.13240796 | 0.02344628 | 0.02945582 | -0.00600954 |
| 0y | 5Y | 0 | 0.03417825 | 0.03417825 | -2.3e-09 |
| 0y | 10Y | 0.38523231 | 0.02796369 | 0.03718700 | -0.00922330 |
| 0y | 10Y | 0.30818585 | 0.03030386 | 0.03945566 | -0.00915179 |
| 0y | 10Y | 0 | 0.04973579 | 0.04973580 | -1.1e-08 |
| 0y | 20Y | 0.84607796 | 0.04049739 | 0.04937736 | -0.00887997 |
| 0y | 20Y | 0.67686236 | 0.04328298 | 0.05286201 | -0.00957902 |
| 0y | 20Y | 0 | 0.06993680 | 0.06993680 | 9e-10 |

Table 52: The results of the re-pricing of all options with expiry-tenor pairs 0Y1Y, 0Y2Y, 0Y5Y, 0Y10Y and 0Y20Y across all available strikes. The table displays the model-generated implied volatility (ModelVols) and compares it with the target market observed implied volatility (MarketVols) in the column VolDiffs.

###### EOD Scenario: Step 2 of DBMVOL-YOY calibration

As described in the DBAnalytics calibration document [42], we calibrate only the LocalVols parameters using as initial guess for the LocalVols the calibrated volatility of the SV component from Section 4.2.1.4 i.e., LocalVolsSV=42.36% and using this time a different set of calibration targets consisting of options with 0 strike contained in the following table:

| T₀ | T₁ | Frequency | Basis | OptionType | Strike | Price | Weight |
|----|----|-----------:|-------:|------:|-------:|-------:|-------:|
| 0y | 1y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.0884226941 | 100 |
| 1y | 2y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.1549388866 | 100 |
| 3y | 2y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 0.2890257715 | 100 |
| 5y | 5y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 1.1948156298 | 100 |
| 10y | 10y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 4.2000984083 | 20 |
| 20y | 10y | ANNUALLY | NUMBER_1 | PUT-RETURN | 0 | 5.5478817968 | 20 |

Table 53: Calibration targets for DBMVOL-YOY calibration of LocalVols consisting of options with strikes equal to 0.

Note that this time the "Use" flag of the LocalVolsSV parameter is set to 0. The "Use" flag specifies whether this particular volatility value is allowed to change from its initial value. If Use = 0 then this volatility value is used in the construction of the volatility surface but NOT in calibration or vega calculations (the default value is 1). The initial parameter guesses used in this calibration, as they appear in the delivered DBA test dictionaries are:

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.017 | 0.02 | 0.024 | 0.028 | 0.034 | 0.038 |
| LocalVolsSV | | | 0.423644884 (flat) | | | |

Table 54: Initial guesses for LocalVols parameters and for the LocalVolsSV parameter for DBMVOL-YOY calibration of volatility of LocalVols component.

The calibration results are listed in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0 | 0.013938133 | 0.013938133 | 0 | 100 |
| 1y | 2y | 0 | 0.014357457 | 0.014357457 | 0 | 100 |
| 3y | 2y | 0 | 0.013534500 | 0.013534500 | 0 | 100 |
| 5y | 5y | 0 | 0.011485296 | 0.011485295 | 0 | 100 |
| 10y | 10y | 0 | 0.009195611 | 0.009195611 | -3e-10 | 20 |
| 20y | 10y | 0 | 0.007362772 | 0.007362772 | 2e-10 | 20 |

Table 55: Calibration results of DBMVOL-YOY calibration of LocalVols components to targets consisting of options with 0 strikes. The results show that the model generated volatilities are close to the market observed volatilities, with the best fit achieved at the time points assigned with higher weights.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
|----|----|-----------:|-------:|------:|-------:|-------:|
| 0y | 1y | 0 | 0.0884226941 | 0.08842269 | 1e-10 | 100 |
| 1y | 2y | 0 | 0.154938886 | 0.15493886 | 8e-10 | 100 |
| 3y | 2y | 0 | 0.289025771 | 0.28902577 | -1.5e-09 | 100 |
| 5y | 5y | 0 | 1.194815629 | 1.19481562 | 7.6e-09 | 100 |
| 10y | 10y | 0 | 4.200098408 | 4.20009873 | -3.235e-07 | 20 |
| 20y | 10y | 0 | 5.547881796 | 5.54788151 | 2.82e-07 | 20 |

Table 56: Calibration results of DBMVOL-YOY calibration of LocalVols component to targets consisting of options with 0 strikes. The results show that the model generated prices are close to the market observed prices, with the best fit achieved at the time points assigned with higher weights.

The calibration yields the following values for the LocalVols parameters:

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.012891631 | 0.015809602 | 0.017224497 | 0.015929373 | 0.017960800 | 0.017152334 |
| LocalVolsSV | | | 0.423644884 | | | |

Table 57: Calibrated LocalVols parameters. The volatility of SV component (LocalVolsSV) is not recalibrated and therefore the output value is identical to the initial guess LocalVolsSV=42.36%.

Using the calibrated LocalVols (calculated at Step 2) and LocalVolsSV parameters (calculated at Step 1), we re-price all three options (with strikes equal to forward inflation rate, at least 10$ less than forward inflation rate and 0) considered at each expiry-tenor pair 0Y-1Y, 1Y2Y, 3Y2Y, 5Y5Y, 10Y10Y and 20Y10Y. The following figures display the model-generated implied (Black-Scholes) volatility smile at each expiry-tenor pair.

![Figure 50: Model generated implied (Black-Scholes) volatility smile for the target options at the six "expiry-tenor" pairs 0Y-1Y, 1Y2Y, 3Y-2Y, 5Y-5Y, 10Y-10Y and 20Y-10Y. At each pair, the smile is constructed using the model-generated implied volatilities at 3 strikes: forward inflation rate, at least 10% less than forward inflation rate and 0. In all six cases, the lowest value of the implied volatility is for the option with strike equal to the forward inflation rate.](./Fig/4.png)

The model-generated implied volatility values used to generate the above figures are contained in the following table:

| T₀ | T₁ | Strike | MarketVols | ModelVols | VolDiffs |
|----|----|-----------:|-------:|------:|-------:|
| 0y | 1y | 0.01813 | 0.01185347 | 0.01237758 | -0.00052410 |
| 0y | 1y | 0.00813 | 0.01288229 | 0.01315041 | -0.00026741 |
| 0y | 1y | 0 | 0.01393813 | 0.01393813 | 0 |
| 1y | 2y | 0.03409 | 0.00996394 | 0.00975725 | 0.00020658 |
| 1y | 2y | 0.02409 | 0.01102070 | 0.01083535 | 0.00018542 |
| 1y | 2y | 0 | 0.01435745 | 0.01435745 | 0 |
| 3y | 2y | 0.03747 | 0.00861057 | 0.00828761 | 0.00032295 |
| 3y | 2y | 0.02747 | 0.00970809 | 0.00952349 | 0.00018459 |
| 3y | 2y | 0 | 0.01353450 | 0.01353450 | 0 |
| 5y | 5y | 0.03764 | 0.00646169 | 0.00659931 | -0.00013764 |
| 5y | 5y | 0.02764 | 0.00761776 | 0.00774064 | -0.00012287 |
| 5y | 5y | 0 | 0.01148529 | 0.01148529 | 0 |
| 10y | 10y | 0.03322 | 0.00475542 | 0.00567969 | -0.00092374 |
| 10y | 10y | 0.02322 | 0.00598300 | 0.00638445 | -0.00040144 |
| 10y | 10y | 0 | 0.00919561 | 0.00919561 | -3e-10 |
| 20y | 10y | 0.02588 | 0.00399246 | 0.00507808 | -0.00108562 |
| 20y | 10y | 0.01588 | 0.00529230 | 0.00572091 | -0.00042875 |
| 20y | 10y | 0 | 0.00736277 | 0.00736277 | 2e-10 |

Table 58: The results of the re-pricing of all options with expiry-tenor pairs 0Y-1Y, 1Y2Y, 3Y2Y, 5Y5Y, 10Y10Y and 20Y10Y across all strikes. The table displays the model-generated implied volatility (ModelVols) and compares it with the target market observed implied volatility (MarketVols) in the column VolDiffs.

Note that if we allow the LocalVols parameter to change by setting "Use" flag to 1, we obtain the following set of parameters:

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.012885316 | 0.015780270 | 0.017186994 | 0.015901355 | 0.018013511 | 0.017239561 |
| LocalVolsSV | | | 0.424943091 | | | |

Table 59: Calibrated LocalVols and LocalVolsSV parameters. The volatility of SV component (LocalVolsSV) is recalibrated and the output value is close to the initial guess LocalVolsSV=42.36%.

####### 4.2.1.5 DBMVOL-ZC: Independent testing of the Calibration process

####### Sensitivity to Initial Guesses used for Parameters

The calibration process, as presented in [42] is done in two steps: the calibration of the volatility ξ(t) of the SV component (i.e. LocalVolsSV) and the calibration of the volatility term structure {σ(t); t < T} (i.e. LocalVols). The parameters are calibrated using the DBAnalytics LEASTSQUARES method (Levenberg-Marquardt method). In this section we investigate the impact that the initial guesses for LocalVolsSV and LocalVols make on the calibration process. The initial guesses used for the calibration are presented in the following table

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
|-------|----|----|----|----|-----|-----|
| LocalVols | 0.017 | 0.02 | 0.024 | 0.028 | 0.034 | 0.038 |
| LocalVolsSV | | | 0.1% (flat) | | | |

Table 60: Initial guesses for LocalVols parameters used in Step 1 (calibration of LocalVolsSV) and Step 2 (calibration of LocalVols) of the DBMVOL-ZC calibration. The initial guess for the LocalVolsSV parameter used in Step 1 (calibration of LocalVolsSV) of the DBMVOL-ZC calibration.

We examine the impact that the initial guesses for the LocalVols parameters make on the calibration process. To this purpose, we consider four alternative calibration scenarios:

| Scenario | 1 | 2 | 3 | 4 |
|----------|---|---|---|---|
| LocalVols | 0.0005 (5 bps) | 0.006 (60 bps) | 0.01 (100 bps) | 0.02 (200 bps) |

Table 61: Initial guesses for LocalVols parameters. Note that the same initial guess is used for all the LocalVol time pegs i.e. flat initial guess.

Note that are the same scenarios analysed in [42]. We perform Step 2 of the calibration using LocalVolsSV=11.65% in all four scenarios considered in the above table. We obtain the following results:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs |
|----|----|-----------:|-------:|------:|-------:|
| Base | | | | | |
| 0y | 1y | 0 | 0.013938133 | 0.013938133 | 0 |
| 1y | 2y | 0 | 0.014357457 | 0.014357457 | 0 |
| 3y | 2y | 0 | 0.013534500 | 0.013534500 | 0 |
| 5y | 5y | 0 | 0.011485296 | 0.011485295 | -3e-10 |
| 10y | 10y | 0 | 0.009195611 | 0.009195611 | 2e-10 |
| 20y | 10y | 0 | 0.007362772 | 0.007362772 | 2e-10 |
| Scenario 1 | | | LocalVols = | 0.0005 (5 bps) | |
| 0y | 1Y | 0 | 0.013941840 | 0.023933367 | -0.00999516 |
| 0y | 2Y | 0 | 0.018571853 | 0.029349552 | -0.00237769 |
| 0y | 5Y | 0 | 0.034178251 | 0.017619128 | 0.01655912 |
| 0y | 10Y | 0 | 0.049735910 | 0 | 0.04973591 |
| 0y | 20Y | 0 | 0.069937032 | 0 | 0.06993703 |
| 0y | 30Y | 0 | 0.081042592 | 0.081035534 | 7.0582e-06 |
| Scenario 2 | | | LocalVols = | 0.006 (60 bps) | |
| 0y | 1Y | 0 | 0.013941840 | 0.016172276 | -0.00223043 |
| 0y | 2Y | 0 | 0.018571853 | 0.015525912 | 0.00304594 |
| 0y | 5Y | 0 | 0.034178255 | 0.026949278 | 0.00716023 |
| 0y | 10Y | 0 | 0.049735792 | 0.047348646 | 0.00173713 |
| 0y | 20Y | 0 | 0.069936834 | 0.067347360 | 0.00258947 |
| 0y | 30Y | 0 | 0.081042316 | 0.082842596 | -0.00180028 |
| Scenario 3 | | | LocalVols = | 0.01 (100 bps) | |
| 0y | 1Y | 0 | 0.013941840 | 0.013941840 | 0 |
| 0y | 2Y | 0 | 0.018571853 | 0.018571853 | 0 |
| 0y | 5Y | 0 | 0.034178254 | 0.034178254 | 0 |
| 0y | 10Y | 0 | 0.049735790 | 0.049735791 | -7e-10 |
| 0y | 20Y | 0 | 0.069936904 | 0.069936905 | -6e-10 |
| 0y | 30Y | 0 | 0.081042252 | 0.081042253 | -9e-10 |
| Scenario 4 | | | LocalVols = | 0.02 (200 bps) | |
| 0y | 1Y | 0 | 0.013941840 | 0.013941829 | 1.19e-08 |
| 0y | 2Y | 0 | 0.018571853 | 0.018571917 | -8.35e-08 |
| 0y | 5Y | 0 | 0.034178254 | 0.034178675 | -4.213e-07 |
| 0y | 10Y | 0 | 0.049735790 | 0.049737740 | -1.9497e-06 |
| 0y | 20Y | 0 | 0.069936904 | 0.069937842 | -9.41e-06 |
| 0y | 30Y | 0 | 0.081042252 | 0.081042572 | -3.204e-07 |

Table 62: Calibration results: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets.

The obtained results are in line with [42]. We can see that the calibration errors are insignificant, except for Scenario 1 and Scenario 2, where initial guess for LocalVols is set respectively to 5bps and 60bps. According to [42], the optimizer eventually is able to converge to target volatility of the first calibration target and this behavior is expected to impact the pricing and risk management of trades. DBAnalytics concludes in [42] that calibration errors are typically larger in magnitude when the initial guess is below 100bps and recommends setting an initial guess above this value in order to achieve good calibration quality.

In the following table the calibrated values of the LocalVols parameters are shown:

| Tenor | LocalVols 1Y | LocalVols 2Y | LocalVols 5Y | LocalVols 10Y | LocalVols 20Y | LocalVols 30Y |
| --- | --- | --- | --- | --- | --- | --- |
| Base | 0.0141706103 | 0.0280342134 | 0.0388362529 | 0.0413895063 | 0.044253187 | 0.015443328 |
| Scenario 1 | 0.0245036222 | 1e-05 | 1e-05 | 1e-05 | 1e-05 | 0.0893297008 |
| Scenario 2 | 0.0164941666 | 0.0071825317 | 0.0628663862 | 1e-05 | 0.0669615611, 1e-05 |  |
| Scenario 3 | 0.0141706105 | 0.0280342103 | 0.0388362496 | 0.0413894781 | 0.0442532255 | 0.0154431763 |
| Scenario 4 | 0.0141705981 | 0.0280344652 | 0.0388371733 | 0.0413945983 | 0.0442469963 | 0.0154538423 |

Table 63: Calibrated LocalVols parameters.

![Figure 51: Calibrated LocalVols parameters in the 4 considered scenarios and in the base case.](./Fig/1.png)

We conclude this section by examining the sensitivity of the prices of an inflation option which relies on DBMVOL-ZC calibration in the four considered scenarios and the base scenario. The considered product is a 7Y Inflation ZC option, of type PUT-RETURN, with strike set at 0.203781, Inflation index GB/UKRPI, RateIndex type = INFLATION-SMFLAT.

#### Table 64: Price (in millions) of Inflation ZC Option in the 4 scenarios.
We see that there is good agreement among the prices generated by Scenarios 3 and 4 (i.e., those having initial Guess ≥ 100 bp), whereas prices generated in Scenario 1 and 2 are substantially different, as expected, corroborating the results of the Local Vols calibrated under the same scenarios. Hence, care must be exercised when supplying the initial guess of the calibration parameters, especially when Stochastic Vol parameters are calibrated exogenously.

###### Sensitivity to the choice of calibration targets and calibration structure

In this section we examine different calibration alternatives for the model and their impact on the calibrated LocalVolsSV and LocalVols parameters, on the price and risk sensitivities of exotic instruments. To this purpose we consider the following scenarios:

1. Scenario 1. One Step calibration without SV component: We calibrate the LocalVols term structure to the strike calibration targets used in Step 2 of the calibration, using as initial guess for the LocalVols the value 0.001% (i.e. the value used in the calibration of the volatility of the SV component in Section 4.2.1.4) and set the "Use" flag of LocalVolsSV to 0 meaning that this volatility value is used in the construction of the volatility surface but NOT in calibration (i.e. not allowed to change). We expect the calibrated LocalVols component of the SDE will need to compensate for the lack of volatility in the SV component. The results of this test summarized in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0.013941841 | 0.013941841 | 6.95452E-12 | 100 |
| 0y | 2y | 0 | 0.018571854 | 0.018571854 | 2.51611E-10 | 100 |
| 0y | 5y | 0 | 0.034178253 | 0.034178253 | 4.96476E-10 | 100 |
| 0y | 10y | 0 | 0.049735817 | 0.049735819 | -1.53207E-09 | 100 |
| 0y | 20y | 0 | 0.069938998 | 0.069937001 | -2.18336E-09 | 100 |
| 0y | 30y | 0 | 0.081042544 | 0.081042613 | -6.91679E-08 | 100 |

Table 65: Calibration results of DBMVOL-ZC calibration using at calibration targets options with strikes equal to 0 and LocalVolsSV=0.1%. The results show that the model generated volatilities are close to the market observed volatilities.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0.088500223 | 0.088500222 | 1.45428E-10 | 100 |
| 0y | 2y | 0 | 0.040434732 | 0.040434729 | 2.98191E-09 | 100 |
| 0y | 5y | 0 | 0.068325871 | 0.068325877 | -6.32805E-09 | 100 |
| 0y | 10y | 0 | 0.124515225 | 0.124515225 | -2.55779E-08 | 100 |
| 0y | 20y | 0 | 0.36713756 | 0.367137631 | -7.07051E-08 | 100 |
| 0y | 30y | 0 | 0.657667813 | 0.657671128 | -3.31454E-06 | 100 |

Table 66: Calibration results of DBMVOL-ZC calibration using at calibration targets options with strikes equal to 0 and LocalVolsSV=0.1%. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol | Vol (prev.) |
| --- | --- | --- |
| 1 | 0.0145424 | 0.0141706 |
| 2 | 0.03223716 | 0.02803421 |
| 5 | 0.04967549 | 0.03883625 |
| 10 | 0.06891378 | 0.0413895 |
| 20 | 0.08401485 | 0.04425318 |
| 30 | 0.08737683 | 0.0154433 |

Table 67: Calibrated LocalVols parameters. Setting the LocalVolsSV parameter to a lower value, 0.1% instead of 11.65% results in higher values for the calibrated LocalVols parameters, compare column Vol with column Vol (prev.), which gives the values of the calibrated LocalVols, when the initial guess for the SV parameter is set to 11.65%.

| Tenor | Vol |
| --- | --- |
| 1 | 0.01% |

Table 68: Calibrated volatility of SV component (LocalVolsSV). We see that the value of the LocalVols parameter is not affected by the calibration.

We illustrate the test with a graphic representation of the volatility surfaces obtained in the two cases, i.e., when the initial guess for the Stochastic Vol is 0.1% and when it is equal to 0.1%.

![Figure 52: Calibrated LocalVols parameters when the initial guesses of the volatility SV component (LocalVolsSV) are 0.1% and 11.65%. Setting the LocalVolsSV parameter to a lower value, 0.1% instead of 11.65% results in higher values for the calibrated LocalVols parameters.](./Fig/2.png)

2. Scenario 2. One-Step calibration using options with ATM strikes and 0 strike : we re-do the calibration of volatility of SV component using the initial guess LocalVolsSV=1e-04 (i.e. the value used in Section 4.2.1.4) and the set of targets consisting of ATM options with 0 strike (i.e. we replace the options whose strike is 80% ATM used in Section 4.2.1.4 with options with 0 strike). We investigate how the calibrated LocalVolsSV parameter compares to the one obtained in Section 4.2.1.4. The USE flag of the Stochastic Volatility is now set to 1 as we re-calibrate it during the process, thus it is not kept fixed. The results of this test are summarized in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01605 | 0.487296801 | 0.505407569 | -0.018108768 | 100 |
| 0y | 1y | 0 | 0.088500223 | 0.072175544 | 0.016324783 | 100 |
| 0y | 2y | 0.04778305 | 0.683718336 | 0.819375553 | -0.135657217 | 100 |
| 0y | 2y | 0 | 0.040434732 | 0.019433208 | 0.021001524 | 100 |
| 0y | 5y | 0.16550995 | 2.273548848 | 2.312461135 | -0.038912288 | 100 |
| 0y | 5y | 0 | 0.068325871 | 0.060567421 | 0.007758445 | 100 |
| 0y | 10y | 0.38523231 | 4.712019698 | 4.8255317 | -0.113512022 | 100 |
| 0y | 10y | 0 | 0.124515225 | 0.123106355 | 0.001408867 | 100 |
| 0y | 20y | 0.846077961 | 12.29421501 | 11.9014109 | 0.392804114 | 100 |
| 0y | 20y | 0 | 0.36713756 | 0.365778369 | 0.001840809 | 100 |

Table 69: Calibration results of DBMVOL-ZC calibration using as calibration targets options with strikes set at the forward inflation rate and options with 0 strike and LocalVolsSV=1e-04.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01605 | 0.487296801 | 0.527983733 | -0.040694932 | 100 |
| 0y | 1y | 0 | 0.088500223 | 0.076551328 | 0.011948895 | 100 |
| 0y | 2y | 0.04778305 | 0.683718336 | 0.833157221 | -0.149438885 | 100 |
| 0y | 2y | 0 | 0.040434732 | 0.011676188 | 0.028758534 | 100 |
| 0y | 5y | 0.16550995 | 2.273548848 | 2.544956781 | -0.271407934 | 100 |
| 0y | 5y | 0 | 0.068325871 | 0.034143215 | 0.034182656 | 100 |
| 0y | 10y | 0.38523231 | 4.712019698 | 5.448205361 | -0.736185663 | 100 |
| 0y | 10y | 0 | 0.124515225 | 0.058279616 | 0.066235609 | 100 |
| 0y | 20y | 0.846077961 | 12.29421501 | 13.92023782 | -1.62602809 | 100 |
| 0y | 20y | 0 | 0.36713756 | 0.265957746 | 0.101179815 | 100 |

Table 70: Calibration results of DBMVOL-ZC calibration using as calibration targets options with strikes set at the forward inflation rate and options with 0 strike and LocalVolsSV=1e-04. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol |
| --- | --- |
| 1 | 0.01295058 |
| 2 | 0.0173606 |
| 5 | 0.0339120 |
| 10 | 0.0202305 |
| 20 | 0.0308941 |
| 30 | 0.038 |

Table 71: Calibrated LocalVols parameters.

For the Stochastic Vol, we obtain the value 21.60%, which is considerably higher than the value 11.65% of the Stochastic volatility obtained in the calibration step 1 process, using the set of options having strike at 80% ATM, that we now have substituted with options having zero strike. The reason is that the ATM options have strikes substantially higher than 0, with options with the larger maturities having larger strikes (cf. Table 4.2.1.4). The substitution of these high-strikes options with zero-strike options produces a higher value of the stochastic volatility which compensates the difference between ATM and non-ATM options.

| Tenor | Vol |
| --- | --- |
| 1 | 21.60% |

Table 72: Calibrated volatility of SV component (LocalVolsSV). We see that the value of the LocalVolsSV parameter is now equal to 21.60%, differing from the one obtained in Section 4.2.1.4 i.e., 11.65% due to the high level of the strikes of the ATM options, and hence of the strikes of the 80% ATM options, which differ considerably from 0-strike options.

We illustrate the resulting LocalVols term structure in the following figure:

![Figure 53: Calibrated LocalVols, using as a calibration target the set of ATM options and the set of 0-strike options.](./Fig/3.png)

3. Scenario 3. One-Step calibration using all available targets.: we calibrate the LocalVolsSV and LocalVols parameters in one step using as calibration targets the set of options from Section 4.2.1.4 to which we add the set of options with 0 strike i.e. we use all the available options: (1) ATM options, (2) options with strike = 80% of the ATM strike and (3) 0-strike options. The USE flag of the LocalVolsSV component is still set to 1 as we calibrate it during the process. The initial guess of LocalVolsSV=0.1% (i.e. the value used in Section 4.2.1.4). The calibration results are summarized in the following tables:

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01605 | 0.012036514 | 0.012332053 | -0.000295539 | 100 |
| 0y | 1y | 0.01284 | 0.012352671 | 0.012445777 | -9.4106E-05 | 100 |
| 0y | 1y | 0 | 0.013941841 | 0.013005238 | 0.000936303 | 100 |
| 0y | 2y | 0.04778305 | 0.01160117 | 0.013320474 | -0.00171928 | 100 |
| 0y | 2y | 0.03823064 | 0.012438502 | 0.013741832 | -0.00130333 | 100 |
| 0y | 2y | 0 | 0.018571853 | 0.01594143 | 0.00262745 | 100 |
| 0y | 5y | 0.16550995 | 0.022161022 | 0.021987497 | 0.00017352 | 100 |
| 0y | 5y | 0.1324079 | 0.023445397 | 0.023973315 | -0.00052700 | 100 |
| 0y | 5y | 0 | 0.034178257 | 0.034544538 | -0.00037142 | 100 |
| 0y | 10y | 0.38523231 | 0.027963561 | 0.027838021 | 0.00012553 | 100 |
| 0y | 10y | 0.3081858 | 0.030303776 | 0.031814776 | -0.00151599 | 100 |
| 0y | 10y | 0 | 0.049735745 | 0.049198513 | 0.00053723 | 100 |
| 0y | 20y | 0.84607796 | 0.04049719 | 0.038534253 | 0.00196293 | 100 |
| 0y | 20y | 0.67686238 | 0.04309284 | 0.043590444 | -0.00049760 | 100 |
| 0y | 20y | 0 | 0.06993697 | 0.070615599 | -0.00067896 | 100 |

Table 73: Calibration results of DBMVOL-ZC calibration using as calibration targets the set of targets from Section 4.2.1.4 to which we add the set of options with 0 strike and LocalVolsSV=0.1%. The results show that the model generated volatilities are close to the market observed volatilities.

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01605 | 0.487296801 | 0.499263499 | -0.01194698 | 100 |
| 0y | 1y | 0.01284 | 0.355252626 | 0.358934382 | -0.003681854 | 100 |
| 0y | 1y | 0 | 0.088500223 | 0.069754224 | 0.018745998 | 100 |
| 0y | 2y | 0.04778305 | 0.683718336 | 0.785041118 | -0.101322845 | 100 |
| 0y | 2y | 0.03823064 | 0.350020719 | 0.417637688 | -0.067616949 | 100 |
| 0y | 2y | 0 | 0.040434732 | 0.015919833 | 0.024514899 | 100 |
| 0y | 5y | 0.16550995 | 2.273548848 | 2.255751871 | 0.017796976 | 100 |
| 0y | 5y | 0.1324079 | 1.087078615 | 1.133039945 | -0.045961333 | 100 |
| 0y | 5y | 0 | 0.068325871 | 0.059494159 | 0.008831712 | 100 |
| 0y | 10y | 0.38523231 | 4.712019698 | 4.690696951 | 0.021322747 | 100 |
| 0y | 10y | 0.3081858 | 2.107401748 | 2.315962622 | -0.208560774 | 100 |
| 0y | 10y | 0 | 0.124515225 | 0.115752721 | 0.008762504 | 100 |
| 0y | 20y | 0.84607796 | 12.29421501 | 11.70029911 | 0.59391590 | 100 |
| 0y | 20y | 0.67686236 | 6.236479789 | 6.312365994 | -0.075886205 | 100 |
| 0y | 20y | 0 | 0.36713756 | 0.389532871 | -0.022395311 | 100 |

Table 74: Calibration results of DBMVOL-ZC calibration using as calibration targets the set of targets from Section 4.2.1.4 to which we add the set of options with 0 strike and LocalVolsSV=0.1%. The results show that the model generated prices are close to the market observed prices.

The calibration yields the following values for the calibrated LocalVols and LocalVolsSV parameters:

| Tenor | Vol |
| --- | --- |
| 1 | 0.01279041 |
| 2 | 0.0154002 |
| 5 | 0.0344785 |
| 10 | 0.0195195 |
| 20 | 0.0319968 |
| 30 | 0.038 |

Table 75: Calibrated LocalVols parameters, using three sets of options: (1) ATM options, (2) options wit strike = 80% of the ATM strike and (3) 0-strike options.

| Tenor | Vol |
| --- | --- |
| 1 | 22.31% |

Table 76: Calibrated volatility of SV component (LocalVolsSV). We see that the value of the LocalVolsSV parameter, 22.31%, differs from the one obtained in Section 4.2.1.4 i.e., 11.65%.

The resulting LocalVols term structure after this calibration is represented in the diagram below:

![Figure 54: Calibrated LocalVols obtained using three sets of options: (1) ATM options, (2) options with strike = 80% of the ATM strike and (3) 0-strike options.](./Fig/4.png)

The results show that the calibration method has an impact on the values of the LocalVolsSV and LocalVols parameters.

###### Robustness of the calibration under different Market Scenarios

In this test we evaluate the robustness of the calibration engine to shifts in market regimes. To this purpose we apply relative shifts of size -50%, -25%, 25%, and 50% to the market prices of the calibration targets of the ZC case, where a shift of size of x% indicates that all the market prices of the calibration targets have been increased by x% of their base values.

| Scenario | Scenario 1 | Scenario 2 | Scenario 3 (Base) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| Shift size | -50% | -25% | 0% | 25% | 50% |

Table 77: Considered scenarios of relative shifts applied to the market prices of the calibration targets.

The results of the test are displayed in the following table:

| T₀ | T₁ | Strike | Market Prices | Model Prices | PriceDiffs |
| --- | --- | --- | --- | --- | --- |
| Scenario 1 | | | Shift Size = | -50% | |
| 0y | 1Y | 0 | 0.0442501113 | 0.0442501113 | 0 |
| 0y | 2Y | 0 | 0.0202173661 | 0.0202173659 | 2e-10 |
| 0y | 5Y | 0 | 0.0341629354 | 0.0341629354 | 0 |
| 0y | 10Y | 0 | 0.0622576123 | 0.0622576184 | -6.1e-09 |
| 0y | 20Y | 0 | 0.1835687802 | 0.1835687805 | 1.17e-08 |
| 0y | 30Y | 0 | 0.3285339065 | 0.3285339043 | 2.2e-09 |
| Scenario 2 | | | Shift Size = | -25% | |
| 0y | 1Y | 0 | 0.0663751669 | 0.0663751669 | 0 |
| 0y | 2Y | 0 | 0.0303260491 | 0.0303260513 | -2.2e-09 |
| 0y | 5Y | 0 | 0.0512444031 | 0.0512443991 | 3.9e-09 |
| 0y | 10Y | 0 | 0.0933864185 | 0.0933864112 | 7.3e-09 |
| 0y | 20Y | 0 | 0.2753531703 | 0.2753530687 | 7.16e-08 |
| 0y | 30Y | 0 | 0.4932508597 | 0.4932509362 | -7.65e-08 |
| Scenario 3 (Base) | | | Shift Size = | 0% | |
| 0y | 1Y | 0 | 0.0885002226 | 0.0885002193 | 3.3e-09 |
| 0y | 2Y | 0 | 0.0404347321 | 0.0404347411 | -9e-09 |
| 0y | 5Y | 0 | 0.0683258707 | 0.0683256005 | 2.98e-08 |
| 0y | 10Y | 0 | 0.1245152247 | 0.1245154078 | -1.831e-07 |
| 0y | 20Y | 0 | 0.3671375604 | 0.367137532 | 2.84e-08 |
| 0y | 30Y | 0 | 0.6576678133 | 0.6576684269 | -6.136e-07 |
| Scenario 4 | | | Shift Size = | +25% | |
| 0y | 1Y | 0 | 0.1106252783 | 0.1106252765 | 1.8e-09 |
| 0y | 2Y | 0 | 0.0505434151 | 0.0505434505 | -3.54e-08 |
| 0y | 5Y | 0 | 0.0854073384 | 0.0854072782 | 6.02e-08 |
| 0y | 10Y | 0 | 0.1556440309 | 0.1556440239 | 7e-09 |
| 0y | 20Y | 0 | 0.4589219505 | 0.4589217743 | 1.762e-07 |
| 0y | 30Y | 0 | 0.8220847662 | 0.8220871964 | -2.4302e-06 |
| Scenario 5 | | | Shift Size = | +50% | |
| 0y | 1Y | 0 | 0.1327503339 | 0.1327503319 | 2e-09 |
| 0y | 2Y | 0 | 0.0606520982 | 0.0606521173 | -1.91e-08 |
| 0y | 5Y | 0 | 0.1024888061 | 0.1024884595 | 3.466e-07 |
| 0y | 10Y | 0 | 0.1867728371 | 0.1867728742 | -3.71e-08 |
| 0y | 20Y | 0 | 0.5507063406 | 0.5507063772 | -3.66e-08 |
| 0y | 30Y | 0 | 0.9865017195 | 0.9865022324 | -5.129e-07 |

Table 78: Calibration results: difference between the market observed prices of the calibration targets and the model-generated prices of the calibration targets.

| T₀ | T₁ | Strike | Market Vols | Model Vols | VolDiffs |
| --- | --- | --- | --- | --- | --- |
| Scenario 1 | | | Shift Size = | -50% | |
| 0y | 1Y | 0 | 0.0115245651 | 0.0115245651 | 0 |
| 0y | 2Y | 0 | 0.016508387 | 0.016508387 | 0 |
| 0y | 5Y | 0 | 0.0308860753 | 0.0308860753 | 0 |
| 0y | 10Y | 0 | 0.0451366764 | 0.0451366877 | -6e-10 |
| 0y | 20Y | 0 | 0.0629984217 | 0.0629984211 | 6e-10 |
| 0y | 30Y | 0 | 0.0728331111 | 0.0728331111 | 1e-10 |
| Scenario 2 | | | Shift Size = | -25% | |
| 0y | 1Y | 0 | 0.0128224904 | 0.0128224904 | 0 |
| 0y | 2Y | 0 | 0.0176462863 | 0.0176462865 | -2e-10 |
| 0y | 5Y | 0 | 0.0327141486 | 0.0327141485 | 4e-10 |
| 0y | 10Y | 0 | 0.0476951888 | 0.0476951842 | 5e-10 |
| 0y | 20Y | 0 | 0.0668451914 | 0.0668451913 | 2.6e-09 |
| 0y | 30Y | 0 | 0.0773079964 | 0.0773079853 | -1.9e-09 |
| Scenario 3 (Base) | | | Shift Size = | 0% | |
| 0y | 1Y | 0 | 0.0139418409 | 0.0139418407 | 2e-10 |
| 0y | 2Y | 0 | 0.0185718535 | 0.0185718543 | -8e-10 |
| 0y | 5Y | 0 | 0.0341782545 | 0.0341782566 | -2.3e-09 |
| 0y | 10Y | 0 | 0.0497357805 | 0.0497356015 | -1.1e-08 |
| 0y | 20Y | 0 | 0.0699368047 | 0.0699368039 | 3e-10 |
| 0y | 30Y | 0 | 0.0810422522 | 0.0810422592 | -1.7e-08 |
| Scenario 4 | | | Shift Size = | +25% | |
| 0y | 1Y | 0 | 0.0149528144 | 0.0149536144 | 1e-10 |
| 0y | 2Y | 0 | 0.0193704847 | 0.0193704674 | -2.5e-09 |
| 0y | 5Y | 0 | 0.0354259456 | 0.0354259415 | 4.1e-09 |
| 0y | 10Y | 0 | 0.0514690965 | 0.0514690062 | 4e-10 |
| 0y | 20Y | 0 | 0.0725789637 | 0.0725789639 | 4.7e-09 |
| 0y | 30Y | 0 | 0.0842459267 | 0.0842458711 | -4.44e-08 |
| Scenario 5 | | | Shift Size = | +50% | |
| 0y | 1Y | 0 | 0.0158930714 | 0.0158930714 | 1e-10 |
| 0y | 2Y | 0 | 0.0200831877 | 0.020083189 | -1.3e-09 |
| 0y | 5Y | 0 | 0.0365279154 | 0.0365279193 | -3.9e-09 |
| 0y | 10Y | 0 | 0.0529956228 | 0.0529956243 | -1.7e-09 |
| 0y | 20Y | 0 | 0.0749198942 | 0.0749198951 | 3e-10 |
| 0y | 30Y | 0 | 0.0870913 | 0.0870913614 | -3.4e-09 |

Table 79: Calibration results: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets.

The results are in line with [42] We conclude that the calibration process is robust.

We illustrate the Model Vols under the 5 stressed scenarios in the following figure.

![Figure 55: Calibrated LocalVols obtained in the 5 stressed scenarios for Calibration instrument prices](./Fig/5.png)

#### Impact of the calibration on risk sensitivities under different market scenarios

In this section, the we examine the inflation vega of 3 ZC products (7Y ZC Option, InflSwapAverage and InflSwaptionZC), all denominated in GBP, projected on to the calibration instruments under five different market scenarios represented by relative shifts applied to the original market information. The relative shifts of size -50%, -25%, 0% (base scenario), 25%, and 50% are applied to the market prices of the calibration targets, where a shift of size x% indicates that all the market prices of the calibration targets have been increased by x% of their base values. The present testing extends the testing performed in [42] which covers only the 7Y ZC option test.

| Scenario | Scenario 1 | Scenario 2 | Scenario 3 (Base) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| Shift size | -50% | -25% | 0% | 25% | 50% |

Table 80: Considered scenarios of relative shifts applied to the market prices of the calibration targets.

The inflation vega is monotonic in the shifts applied to market volatilities and this is in line with the results obtained in [42].

| Tenor | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 1Y | 6698.8 | 7792.04 | 8732.67 | 9509.77 | 10218.1 |
| 2Y | 39605.9 | 40829.8 | 41486.4 | 41665.6 | 41779.1 |
| 5Y | 88023.8 | 100967 | 111703 | 121227 | 129583 |
| 10Y | 12394.1 | 14082 | 15338.9 | 16312.2 | 17087.5 |
| 20Y | 0 | 0 | 0 | 0 | 0 |
| 30Y | 0 | 0 | 0 | 0 | 0 |
| | | Cumulative | Inflation | Vega | |
| All buckets | 146723 | 163671 | 177261 | 188715 | 198668 |

Table 81: Inflation Vega for the 7Y ZC Option.The bulk of the vega is concentrated around the 5Y buckets.

| Security | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 0Y/1Y | 27673 | 31244 | 34909 | 37579 | 42056 |
| 0Y/2Y | 63460 | 68355 | 74414 | 77816 | 83500 |
| 0Y/5Y | 153972 | 166714 | 178200 | 186727 | 195080 |
| 0Y/10Y | 29039 | 34067 | 38565 | 42229 | 45021 |
| 0Y/20Y | 0 | 0 | 0 | 0 | 0 |
| 0Y/30Y | 0 | 0 | 0 | 0 | 0 |
| | | Cumulative | Inflation | Vega | |
| All buckets | 146723 | 163671 | 177261 | 188715 | 198668 |

Table 82: Inflation Vega for a 7Y ZC Put Option projected on to the calibration targets. Here again the vega projection is monotonic on the calibration targets. Since a significant portion of the bucketed vega is concentrated on the 5Y buckets (see previous table), the vega on the 0Y/5Y instruments show the largest concentration, as expected. The risk projection on the calibration targets is stable.

| Tenor | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 1Y | -1.86581 | -0.94158 | -0.0311966 | 0.872851 | 1.76768 |
| 2Y | -98.1653 | -102.202 | -104.894 | -107.064 | -108.746 |
| 5Y | -359.746 | -408.067 | -449.844 | -485.255 | -518.454 |
| 10Y | -333.479 | -373.112 | -404.246 | -428.458 | -449.615 |
| 20Y | 90.5759 | 106.603 | 120.131 | 133.771 | 146.879 |
| 30Y | 0.0 | 0 | 0.04775171 | 0.234437 | 0.354891 |
| | | Cumulative | Inflation | Vega | |
| All buckets | -702.679 | -777.671 | -837.764 | -885.899 | -927.814 |

Table 83: Inflation Vega for InflSwapAverage. The bulk of the vega is concentrated around the 5Y and 10Y buckets. This is in line with the results presented in [42].

| Security | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 0Y/1Y | 83 | 93.22 | 106.24 | 110.64 | 123 |
| 0Y/2Y | -149 | -155.132 | -171.095 | -174.151 | -187.64 |
| 0Y/5Y | 288 | 306.64 | 328.35 | 349.55 | 374.19 |
| 0Y/10Y | -1166 | -1298.79 | -1406.92 | -1509.15 | -1596.78 |
| 0Y/20Y | 241 | 275.44 | 303.98 | 334.65 | 355.90 |
| 0Y/30Y | 0 | 0 | 0.9 | 2.55 | 3.4 |
| | | Cumulative | Inflation | Vega | |
| All buckets | -702 | -777.671 | -837.75 | -885.89 | -927.81 |

Table 84: Inflation Vega for InflSwapAverage vega projected on to the calibration targets. Here again the vega projection is monotonic on the calibration targets. Since a significant portion of the bucketed vega is concentrated on the 5Y and 10Y buckets(see previous table), the vega on the 0Y/5Y and 0Y/10Y instruments show the largest concentration, as expected. The risk projection on the calibration targets is stable.This is in line with the results presented in [42].

| Tenor | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 1Y | 9392.07 | 9043.52 | 8677.36 | 7718.06 | 7041.59 |
| 2Y | 1319.09 | -90.0101 | 626.255 | 2888.78 | 4241.21 |
| 5Y | -7232.39 | -3220.71 | -3650.94 | -4673.65 | -4942.68 |
| 10Y | 1134.46 | 2063.16 | 3119.04 | 3678.25 | 3890.6 |
| 20Y | 10982.6 | 14511.5 | 17153.7 | 19906.7 | 25591.9 |
| 30Y | 1411.71 | 2549.2 | 3663.98 | 4675.89 | 6887.69 |
| | | Cumulative | Inflation | Vega | |
| All buckets | 17007.5 | 24861.6 | 29589.4 | 34194 | 42510.3 |

Table 85: Inflation Vega for InflSwaption.

| Security | Scenario 1 | Scenario 2 | Base (Scenario 3) | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| 0Y/1Y | -1359.11 | 4420.14 | 4229 | -110.45 | -2262.66 |
| 0Y/2Y | 25325.35 | 10468 | 9484 | 15297.8 | 16810.33 |
| 0Y/5Y | -30213.04 | -14289 | -10152 | -10057.5 | -6041 |
| 0Y/10Y | 25126.04 | 12725 | 3761 | -660.3 | -6850 |
| 0Y/20Y | -57497.93 | -39062 | -26804 | -21646.7 | -19342.92 |
| 0Y/30Y | 55626.2 | 50800 | 49070 | 51371.26 | 60196.5 |
| | | Cumulative | Inflation | Vega | |
| All buckets | 17007.51 | 24861 | 29589 | 34194 | 42510 |

Table 86: Inflation Vega for InflSwaption vega projected on to the calibration targets. The risk projection on the calibration targets is stable.

#### Sensitivity of Calibrated Vols to StochVol mean-reversion levels

In this section we examine the impact of the mean-reversion of the SV component (MeanRevSV) on the calibration and on the price of three exotic products relying on the DBMVOL-ZC calibration. Currently, the MeanRevSV parameter is not calibrated but exogenously set by the desk. At present the desk uses 0 for the UKRPI case, value to which MeanRevSV was set in all the previous tests. In order to examine the impact of the MeanRevSV parameter we consider three alternative scenarios:

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| MeanRevSV | 0.0 | 0.25 | 0.5 |

Table 87: MeanRevSV parameter values in the current production dictionary (Base) and in two alternative scenarios.

In this section we aim to confirm the correctness of the analysis provided in [42] and further expand it. DBAnalytics concludes in [42] that the MeanRevSV parameter has an impact on the calibrated levels of the LocalVolsSV and LocalVols. Therefore, DBAnalytics recommends that the impact of this parameter be monitored on a periodic basis. 
We examine first the impact of the MeanRevSV on the values of the LocalVolsSV and LocalVols. To this purpose we re-do the two steps of the calibration algorithm in the three scenarios defined above. The results of the calibration are summarized in the following tables:

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| MeanRevSV | 0.0 | 0.25 | 0.5 |
| LocalVolsSV | 11.65% | 29.10% | 45.82 % |

Table 88: Calibrated LocalVolsSV parameter values following Step 1 of calibration in the current approach (Base) and in two alternative scenarios for the ZC calibration. The results are in line with [42]

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| MeanRevSV | 0.0 | 0.25 | 0.5 |
| LocalVols 1Y | 0.0141706103 | 0.0135930479 | 0.0130981457 |
| LocalVols 2Y | 0.0280342134 | 0.0228435484 | 0.0198855301 |
| LocalVols 5Y | 0.0388362529 | 0.0351690019 | 0.0260759561 |
| LocalVols 10Y | 0.0413895063 | 0.0454199887 | 0.0449364719 |
| LocalVols 20Y | 0.044253187 | 0.0695272105 | 0.0733212868 |
| LocalVols 30Y | 0.0154433326 | 0.0447920501 | 0.0459325449 |

Table 89: Calibrated LocalVols term structure following Step 2 of calibration in the current approach (Base) and in two alternative scenarios.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | 34909 | 30527 | 29638 |
| 0Y/2Y | -74414 | -56971 | -50886 |
| 0Y/5Y | 178200 | 142228 | 131191 |
| 0Y/10Y | 38565 | 37525 | 39764 |
| 0Y/20Y | 0 | 0 | 0 |
| 0Y/30Y | 0 | 0 | 0 |
| | Cumulative | Inflation | Vega |
| All buckets | 177260 | 153309 | 149707 |

Table 92: Inflation Vega for 7Y ZC Option projected on the calibration targets. Since a significant portion of the vega is concentrated on the 5Y and 10Y tenors (see previous table), the vega on the 0Y/5Y and 0Y/10Y instruments show the largest concentration.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 1Y | 0 | -7.3 | -24.68 |
| 2Y | -105 | -99.54 | -81.61 |
| 5Y | -449 | -295.99 | -158.97 |
| 10Y | -404 | -257.44 | -109.89 |
| 20Y | 120 | 313.10 | 286.23 |
| 30Y | 0 | 1.84 | 1.77 |
| | Cumulative | Inflation | Vega |
| All buckets | -837 | -345.23 | -87.15 |

Table 93: Inflation Vega for InflSwapAverage. A significant portion of the vega is concentrated on the 5Y, 10Y and 20Y tenors in all three cases.

| Security | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | 106.24 | 189.60 | 150.79 |
| 0Y/2Y | -171.09 | -345.02 | -269.07 |
| 0Y/5Y | 328.35 | 430.44 | 261.50 |
| 0Y/10Y | -1406.92 | -1288.70 | -839.49 |
| 0Y/20Y | 303.98 | 654.36 | 616.42 |
| 0Y/30Y | 1.68 | 14.08 | 12.69 |
| | Cumulative | Inflation | Vega |
| All buckets | -837.75 | -345.23 | -87.15 |

Table 94: Inflation Vega for InflSwapAverage projected on to the calibration targets. Since a significant portion of the vega is concentrated on the 5Y, 10Y and 20Y tenors (see previous table), the vega on the 0Y/5Y, 0Y/10Y and 0Y/20Y instruments show the largest concentration.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 1Y | 8677.36 | -8882.92 | 3685.44 |
| 2Y | 626.255 | -1266.8 | -10341.7 |
| 5Y | -3650.94 | 7706.56 | 11661.53 |
| 10Y | 3119.04 | 319.602 | -1332.93 |
| 20Y | 17153.7 | 16273.1 | 25478.1 |
| 30Y | 3663.98 | 3793 | -1951.8 |
| | Cumulative | Inflation | Vega |
| All buckets | 29589.4 | 17941.5 | 16734.7 |

Table 95: Inflation Vega for InflSwaptionZC.

| Security | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | 4229 | 1731 | 34325 |
| 0Y/2Y | 9484 | -20632 | -52077 |
| 0Y/5Y | -10152 | 22198 | 38434 |
| 0Y/10Y | 3761 | -13337 | -60700 |
| 0Y/20Y | -26804 | -908 | 70680 |
| 0Y/30Y | 49070 | 174458 | -13927 |
| | Cumulative | Inflation | Vega |
| All buckets | 29589 | 17941 | 16734 |

Table 96: Inflation Vega for InflSwaptionZC projected on the calibration targets.

#### Robustness of Step 1 of calibration w.r.t input interest rate and inflation curves

In this section we examine the robustness of the Step 1 of the calibration process with respect to:

1. different levels of the input interest rate curve (i.e. nominal curve). To this purpose we will apply a series of parallel shifts to the input interest rate curve and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities (and market prices) with the model generated implied volatilities (and model-generated prices).

2. different levels of the input inflation curve. We remind the reader that the input inflation curve is used to construct the real interest rate curve. To this purpose we will apply a series of parallel shifts to the input inflation curve and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities (and market prices) with the model generated implied volatilities (and model-generated prices).

3. different levels of interest rate volatilities. To this purpose we apply relative shifts to the input nominal interest rate volatility and input real interest rate volatility (remember that the volatility of the real interest rate is defined by scaling the nominal interest rate volatility by a factor of 0.5) and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities (and market prices) with the model generated implied volatilities (and model-generated prices).

We perform the following tests on Step 1 of the calibration (determining the volatility of the SV component i.e. LocalVolsSV). First, we apply a series of parallel shifts to the input nominal interest rate curve from -0.05 to 0.05 in increments of 0.01. The calibration results are summarized in the following tables:

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | = -0.05 | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01148 | 0.01028 | 0.0012 | 0.4873 | 0.44061 | 0.04669 |
| 0y | 1Y | 0.01181 | 0.01069 | 0.00112 | 0.35525 | 0.31309 | 0.04215 |
| 0y | 2Y | 0.01049 | 0.01215 | -0.00166 | 0.68372 | 0.79205 | -0.10833 |
| 0y | 2Y | 0.01176 | 0.01336 | -0.00158 | 0.35002 | 0.43963 | -0.08961 |
| 0y | 5Y | 0.0173 | 0.01473 | 0.00247 | 2.27355 | 1.947 | 0.32655 |
| 0y | 5Y | 0.02059 | 0.01902 | 0.00157 | 1.08708 | 0.92137 | 0.16571 |
| 0y | 10Y | 0.01683 | 0.01676 | 7e-05 | 4.71202 | 4.69173 | 0.02029 |
| 0y | 10Y | 0.02398 | 0.02211 | 0.00177 | 2.1074 | 1.75486 | 0.35254 |
| 0y | 20Y | 0.01465 | 0.02966 | -0.01501 | 12.29422 | 24.86384 | -12.56963 |
| 0y | 20Y | 0.02647 | 0.03107 | -0.0046 | 6.23648 | 9.00512 | -2.76865 |
| | | | IR Curve | Abs.Shift | = -0.04 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01156 | 0.01076 | 0.0008 | 0.4873 | 0.45331 | 0.03399 |
| 0y | 1Y | 0.01199 | 0.01103 | 0.00096 | 0.35525 | 0.31628 | 0.03896 |
| 0y | 2Y | 0.0107 | 0.01226 | -0.00155 | 0.68372 | 0.78303 | -0.09931 |
| 0y | 2Y | 0.01191 | 0.0133 | -0.00139 | 0.35002 | 0.42755 | -0.07753 |
| 0y | 5Y | 0.0181 | 0.01598 | 0.00212 | 2.27355 | 2.00759 | 0.26596 |
| 0y | 5Y | 0.02112 | 0.01998 | 0.00114 | 1.08708 | 0.97148 | 0.1156 |
| 0y | 10Y | 0.01865 | 0.01812 | 0.00052 | 4.71202 | 4.58619 | 0.13183 |
| 0y | 10Y | 0.02426 | 0.02366 | 0.00132 | 2.1074 | 1.86163 | 0.24577 |
| 0y | 20Y | 0.01799 | 0.03 | -0.01201 | 12.29422 | 20.47968 | -8.18546 |
| 0y | 20Y | 0.02687 | 0.03177 | -0.00289 | 6.23648 | 7.69359 | -1.45711 |
| | | | IR Curve | Abs.Shift | = -0.03 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01165 | 0.01107 | 0.00061 | 0.4873 | 0.46189 | 0.02541 |
| 0y | 1Y | 0.01206 | 0.01129 | 0.00079 | 0.35525 | 0.32357 | 0.03169 |
| 0y | 2Y | 0.01092 | 0.01218 | -0.00126 | 0.68372 | 0.76256 | -0.07885 |
| 0y | 2Y | 0.01204 | 0.01302 | -0.00099 | 0.35002 | 0.40385 | -0.05363 |
| 0y | 5Y | 0.01905 | 0.01745 | 0.0016 | 2.27355 | 2.08208 | 0.19146 |
| 0y | 5Y | 0.02167 | 0.02099 | 0.00068 | 1.08708 | 1.02042 | 0.06666 |
| 0y | 10Y | 0.02008 | 0.02008 | 0 | 4.71202 | 4.58135 | 0.13067 |
| 0y | 10Y | 0.02517 | 0.02549 | -0.00068 | 2.1074 | 1.98941 | 0.118 |
| 0y | 20Y | 0.02208 | 0.03055 | -0.00848 | 12.29422 | 17.01001 | -4.7158 |
| 0y | 20Y | 0.03167 | 0.03267 | -0.00101 | 6.23648 | 6.66212 | -0.42564 |
| | | | IR Curve | Abs.Shift | = -0.02 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.0118 | 0.0115 | 0.00029 | 0.4873 | 0.47516 | 0.01214 |
| 0y | 1Y | 0.01217 | 0.01169 | 0.00048 | 0.35525 | 0.33614 | 0.01911 |
| 0y | 2Y | 0.01114 | 0.0113 | -0.00034 | 0.68372 | 0.72879 | -0.04507 |
| 0y | 2Y | 0.01217 | 0.01259 | -0.00042 | 0.35002 | 0.3725 | -0.02258 |
| 0y | 5Y | 0.02004 | 0.01898 | 0.00106 | 2.27355 | 2.15216 | 0.12039 |
| 0y | 5Y | 0.02224 | 0.02216 | 8e-05 | 1.08708 | 1.07936 | 0.00771 |
| 0y | 10Y | 0.02229 | 0.02495 | -0.00034 | 4.71202 | 4.64881 | 0.06321 |
| 0y | 10Y | 0.02682 | 0.0252 | -0.00038 | 2.1074 | 2.18431 | -0.09691 |
| 0y | 20Y | 0.02811 | 0.03409 | -0.00599 | 12.29422 | 14.25547 | -1.96126 |
| 0y | 20Y | 0.03493 | 0.03386 | 0.00107 | 6.23648 | 5.85556 | 0.38092 |
| | | | IR Curve | Abs.Shift | = -0.01 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01192 | 0.01185 | 3e-05 | 0.4873 | 0.48851 | -0.00121 |
| 0y | 1Y | 0.01226 | 0.01208 | 0.00018 | 0.35525 | 0.34807 | 0.00719 |
| 0y | 2Y | 0.01137 | 0.01171 | -0.00034 | 0.68372 | 0.70401 | -0.02029 |
| 0y | 2Y | 0.0123 | 0.01218 | 0.00011 | 0.35002 | 0.34411 | 0.00591 |
| 0y | 5Y | 0.02105 | 0.02088 | 0.0004 | 2.27355 | 2.23059 | 0.04296 |
| 0y | 5Y | 0.02263 | 0.02305 | -0.00022 | 1.08708 | 1.10718 | -0.0201 |
| 0y | 10Y | 0.02529 | 0.02495 | 0.00034 | 4.71202 | 4.64881 | 0.06321 |
| 0y | 10Y | 0.02845 | 0.0252 | -0.00038 | 2.1074 | 2.18431 | -0.09691 |
| 0y | 20Y | 0.02911 | 0.03409 | -0.00599 | 12.29422 | 13.6881 | -1.39388 |
| 0y | 20Y | 0.03677 | 0.03813 | -0.00064 | 6.23648 | 6.04428 | 0.1922 |
| | | | IR Curve | Abs.Shift | = -0.00 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01204 | 0.01217 | -0.00013 | 0.4873 | 0.49256 | -0.00527 |
| 0y | 1Y | 0.01235 | 0.01222 | 0.00013 | 0.35525 | 0.35021 | 0.00504 |
| 0y | 2Y | 0.0116 | 0.01192 | -0.00032 | 0.68372 | 0.70284 | -0.01892 |
| 0y | 2Y | 0.01244 | 0.01211 | 0.00032 | 0.35002 | 0.33348 | 0.01654 |
| 0y | 5Y | 0.02218 | 0.02229 | -0.00013 | 2.27355 | 2.28715 | -0.0136 |
| 0y | 5Y | 0.02348 | 0.02332 | 0.00016 | 1.08708 | 1.07938 | 0.0114 |
| 0y | 10Y | 0.02796 | 0.02804 | -7e-05 | 4.71202 | 4.72454 | -0.01252 |
| 0y | 10Y | 0.03079 | 0.03023 | 7e-05 | 2.1074 | 2.09793 | 0.00947 |
| 0y | 20Y | 0.0428 | 0.04236 | 0.00044 | 12.29422 | 12.24996 | 0.04426 |
| 0y | 20Y | 0.04328 | 0.04341 | -0.00013 | 6.23648 | 6.26933 | -0.03285 |
| | | | IR Curve | Abs.Shift | = +0.01 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01216 | 0.01232 | -0.00016 | 0.4873 | 0.49367 | -0.00636 |
| 0y | 1Y | 0.01244 | 0.01222 | 0.00014 | 0.35525 | 0.35021 | 0.00542 |
| 0y | 2Y | 0.01184 | 0.01227 | -0.00044 | 0.68372 | 0.71899 | -0.03527 |
| 0y | 2Y | 0.01258 | 0.01217 | 0.0004 | 0.35002 | 0.32999 | 0.02013 |
| 0y | 5Y | 0.02266 | 0.02367 | -0.00042 | 2.27355 | 2.37997 | -0.10642 |
| 0y | 5Y | 0.02368 | 0.02365 | 2e-05 | 1.08708 | 1.09639 | -0.00931 |
| 0y | 10Y | 0.02286 | 0.0225 | 0.00035 | 4.71202 | 4.63919 | 0.07283 |
| 0y | 10Y | 0.02744 | 0.02775 | -0.00031 | 2.1074 | 2.15762 | -0.05022 |
| 0y | 20Y | 0.02704 | 0.03137 | -0.00433 | 12.29422 | 14.25547 | -1.96126 |
| 0y | 20Y | 0.03493 | 0.03386 | 0.00107 | 6.23648 | 5.85556 | 0.38092 |

Table 97: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.

| | | | IR Curve | Abs.Shift | = -0.01 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01192 | 0.01195 | -3e-05 | 0.4873 | 0.48851 | -0.00121 |
| 0y | 1Y | 0.01226 | 0.01208 | 0.00018 | 0.35525 | 0.34807 | 0.00719 |
| 0y | 2Y | 0.01137 | 0.01171 | -0.00034 | 0.68372 | 0.70401 | -0.02029 |
| 0y | 2Y | 0.0123 | 0.01219 | 0.00011 | 0.35002 | 0.34411 | 0.00591 |
| 0y | 5Y | 0.02106 | 0.02068 | 0.0004 | 2.27355 | 2.23059 | 0.04296 |
| 0y | 5Y | 0.02283 | 0.02305 | -0.00022 | 1.08708 | 1.10718 | -0.0201 |
| 0y | 10Y | 0.02229 | 0.02495 | -0.00034 | 4.71202 | 4.64881 | 0.06321 |
| 0y | 10Y | 0.02865 | 0.0252 | -0.00038 | 2.1074 | 2.18431 | -0.09691 |
| 0y | 20Y | 0.02981 | 0.03449 | -0.00099 | 12.29422 | 12.8861 | -0.76563 |
| 0y | 20Y | 0.03677 | 0.03813 | 0.00064 | 6.23648 | 6.04428 | 0.1922 |

| | | | IR Curve | Abs.Shift | = -0.00 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01204 | 0.01217 | -0.00013 | 0.4873 | 0.49258 | -0.00527 |
| 0y | 1Y | 0.01235 | 0.01222 | 0.00013 | 0.35525 | 0.35021 | 0.00504 |
| 0y | 2Y | 0.0116 | 0.01192 | -0.00032 | 0.68372 | 0.70284 | -0.01892 |
| 0y | 2Y | 0.01244 | 0.01211 | 0.00033 | 0.35002 | 0.33348 | 0.01668 |
| 0y | 5Y | 0.02218 | 0.02229 | -0.00013 | 2.27355 | 2.28718 | -0.01136 |
| 0y | 5Y | 0.02348 | 0.02332 | 0.00016 | 1.08708 | 1.07939 | 0.0114 |
| 0y | 10Y | 0.02796 | 0.02804 | -7e-05 | 4.71202 | 4.72854 | -0.01262 |
| 0y | 10Y | 0.03023 | 0.03023 | 7e-05 | 2.1074 | 2.09793 | 0.00947 |
| 0y | 20Y | 0.0432 | 0.04336 | -0.00016 | 12.29422 | 12.34966 | -0.04426 |
| 0y | 20Y | 0.04335 | 0.04343 | -0.00013 | 6.23648 | 6.26903 | -0.03206 |

| | | | IR Curve | Abs.Shift | = 0.01 | | | |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01215 | 0.01232 | -0.00016 | 0.4873 | 0.49367 | -0.00635 |
| 0y | 1Y | 0.01244 | 0.01227 | 0.00014 | 0.35525 | 0.36021 | 0.00504 |
| 0y | 10Y | 0.03191 | 0.03143 | 0.00048 | 2.1074 | 2.04747 | 0.05993 |
| 0y | 20Y | 0.0486 | 0.04902 | -0.00048 | 12.29422 | 12.17461 | 0.11961 |
| 0y | 20Y | 0.04963 | 0.04912 | 0.00048 | 6.23648 | 6.34004 | -0.10356 |

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | = 0.02 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01226 | 0.0124 | -0.00012 | 0.4873 | 0.4922 | -0.0049 |
| 0y | 1Y | 0.01254 | 0.0124 | 0.00014 | 0.35525 | 0.34866 | 0.00659 |
| 0y | 2Y | 0.01207 | 0.01242 | -0.00035 | 0.68372 | 0.7034 | -0.01969 |
| 0y | 2Y | 0.01272 | 0.01239 | 0.00033 | 0.35002 | 0.33396 | 0.01606 |
| 0y | 5Y | 0.02446 | 0.02463 | -0.00016 | 2.27355 | 2.28722 | -0.01367 |
| 0y | 5Y | 0.02475 | 0.02458 | 0.00017 | 1.08708 | 1.07363 | 0.01344 |
| 0y | 10Y | 0.03415 | 0.03388 | 0.00027 | 4.71202 | 4.6752 | 0.03682 |
| 0y | 10Y | 0.03364 | 0.03392 | -0.00028 | 2.1074 | 2.13972 | -0.03232 |
| 0y | 20Y | 0.06047 | 0.05768 | 0.00279 | 12.29422 | 11.7312 | 0.56301 |
| 0y | 20Y | 0.05499 | 0.05779 | -0.0028 | 6.23648 | 6.73909 | -0.50261 |

*Table 98: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.*

The following table contains the calibrated LocalVolsSV at different levels of IR curve shifts:

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | =-0.03 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.0124 | 0.01253 | -0.00013 | 0.4873 | 0.49237 | -0.00508 |
| 0y | 1Y | 0.01263 | 0.01252 | 0.0001 | 0.35525 | 0.35128 | 0.00398 |
| 0y | 2Y | 0.01232 | 0.01226 | 0.00006 | 0.68372 | 0.6964 | -0.01488 |
| 0y | 2Y | 0.01286 | 0.01255 | 0.00031 | 0.35002 | 0.33508 | 0.01494 |
| 0y | 5Y | 0.02572 | 0.02566 | 7e-05 | 2.27355 | 2.26779 | 0.00576 |
| 0y | 5Y | 0.02543 | 0.02561 | -0.00018 | 1.08708 | 1.10075 | -0.01367 |
| 0y | 10Y | 0.03771 | 0.03656 | 0.00115 | 4.71202 | 4.56886 | 0.14316 |
| 0y | 10Y | 0.03552 | 0.0366 | -0.00108 | 2.1074 | 2.2228 | -0.1154 |
| 0y | 20Y | 0.07303 | 0.06817 | 0.00486 | 12.29422 | 11.36099 | 0.93321 |
| 0y | 20Y | 0.06257 | 0.06823 | -0.00566 | 6.23648 | 7.0813 | -0.84482 |

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | =-0.04 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01253 | 0.01266 | -0.00014 | 0.4873 | 0.49266 | -0.00535 |
| 0y | 1Y | 0.01272 | 0.01266 | 7e-05 | 0.35525 | 0.35279 | 0.00247 |
| 0y | 2Y | 0.01256 | 0.01274 | -0.00018 | 0.68372 | 0.69359 | -0.00987 |
| 0y | 2Y | 0.013 | 0.01271 | 0.00029 | 0.35002 | 0.33627 | 0.01375 |

#### Table 99: Calibration results with IR curve shifts (continued)

| 0y | 5Y | 0.02702 | 0.02664 | 0.00038 | 2.27355 | 2.24128 | 0.03227 |
| 0y | 5Y | 0.02614 | 0.02659 | -0.00045 | 1.08708 | 1.12005 | -0.03297 |
| 0y | 10Y | 0.04182 | 0.03958 | 0.00224 | 4.71202 | 4.48142 | 0.2306 |
| 0y | 10Y | 0.03756 | 0.03961 | -0.00205 | 2.1074 | 2.30903 | -0.20162 |
| 0y | 20Y | 0.09012 | 0.08084 | 0.00928 | 12.29422 | 11.04371 | 1.25051 |
| 0y | 20Y | 0.07165 | 0.08091 | -0.00926 | 6.23648 | 7.38461 | -1.14814 |

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | =-0.05 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01265 | 0.01633 | -0.00368 | 0.4873 | 0.62923 | -0.14193 |
| 0y | 1Y | 0.01281 | 0.01633 | -0.00351 | 0.35525 | 0.48721 | -0.13196 |
| 0y | 2Y | 0.01281 | 0.01746 | -0.00465 | 0.68372 | 0.9318 | -0.24807 |
| 0y | 2Y | 0.01315 | 0.01744 | -0.00429 | 0.35002 | 0.55813 | -0.20811 |
| 0y | 5Y | 0.02837 | 0.02077 | 0.0076 | 2.27355 | 1.66462 | 0.60893 |
| 0y | 5Y | 0.02684 | 0.0208 | 0.00604 | 1.08708 | 0.6731 | 0.41398 |
| 0y | 10Y | 0.04591 | 0.02652 | 0.01939 | 4.71202 | 2.72399 | 1.98803 |
| 0y | 10Y | 0.03976 | 0.02649 | 0.01328 | 2.1074 | 0.97398 | 1.13342 |
| 0y | 20Y | 0.11002 | 0.03974 | 0.07028 | 12.29422 | 4.48171 | 7.8125 |
| 0y | 20Y | 0.08255 | 0.03987 | 0.04268 | 6.23648 | 1.99658 | 4.2399 |

*Table 99: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.*

We now consider the calibrated ModelVols / ModelPrices for shifts of the Inflation curve for shifts from 0 to 0.05 in steps of 0.01:

| T₀ | T₁ | MarketVols | Infl. Curve ModelVols | Abs.Shift | = 0.00 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01204 | 0.01216 | -0.00013 | 0.4873 | 0.49249 | -0.00519 |
| 0y | 1Y | 0.01235 | 0.01223 | 0.00013 | 0.35525 | 0.35033 | 0.00492 |
| 0y | 2Y | 0.0116 | 0.01191 | -0.00031 | 0.68372 | 0.70206 | -0.01834 |
| 0y | 2Y | 0.01244 | 0.01212 | 0.00032 | 0.35002 | 0.3339 | 0.01612 |
| 0y | 5Y | 0.02216 | 0.02226 | -0.0001 | 2.27355 | 2.28356 | -0.01001 |
| 0y | 5Y | 0.02345 | 0.02335 | 0.0001 | 1.08708 | 1.07848 | 0.0086 |
| 0y | 10Y | 0.02797 | 0.02805 | -8e-05 | 4.71202 | 4.72694 | -0.01492 |
| 0y | 10Y | 0.03023 | 0.03022 | 8e-05 | 2.1074 | 2.0954 | 0.01147 |
| 0y | 20Y | 0.04325 | 0.04336 | -0.00012 | 12.29422 | 12.25314 | 0.04107 |
| 0y | 20Y | 0.04326 | 0.04341 | -0.00012 | 6.23648 | 6.26757 | -0.03109 |

| Infl. Curve | Abs.Shift | = 0.01 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.0213 | 0.0218 | -0.0005 | 0.4873 | 0.49897 | -0.01843 |
| 0y | 1Y | 0.0214 | 0.0218 | -0.00048 | 0.35525 | 0.37146 | -0.0162 |

#### Table 100: Calibration results with inflation curve shifts

| 0y | 2Y | 0.02454 | 0.02353 | 0.00101 | 0.68372 | 0.63224 | 0.05148 |
| 0y | 2Y | 0.02244 | 0.02347 | -0.00103 | 0.35002 | 0.3922 | -0.04218 |
| 0y | 5Y | 0.04312 | 0.04122 | 0.0019 | 2.27355 | 2.0977 | 0.17586 |
| 0y | 5Y | 0.03931 | 0.04117 | -0.00186 | 1.08708 | 1.22159 | -0.13451 |
| 0y | 10Y | 0.0567 | 0.05427 | 0.00243 | 4.71202 | 4.3432 | 0.36882 |
| 0y | 10Y | 0.0518 | 0.05424 | -0.00243 | 2.1074 | 2.38215 | -0.27475 |
| 0y | 20Y | 0.07958 | 0.07695 | 0.00262 | 12.29422 | 11.55064 | 0.74358 |
| 0y | 20Y | 0.07412 | 0.07677 | -0.00264 | 6.23648 | 6.81311 | -0.57663 |

| Infl. Curve | Abs.Shift | = 0.02 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.03029 | 0.02934 | 0.00095 | 0.4873 | 0.45594 | 0.03136 |
| 0y | 1Y | 0.02856 | 0.02935 | -0.00079 | 0.35525 | 0.37901 | -0.02376 |
| 0y | 2Y | 0.03479 | 0.03306 | 0.00173 | 0.68372 | 0.60645 | 0.07727 |
| 0y | 2Y | 0.03103 | 0.03297 | -0.00194 | 0.35002 | 0.4168 | -0.06678 |
| 0y | 5Y | 0.05975 | 0.05637 | 0.00337 | 2.27355 | 1.99556 | 0.27799 |
| 0y | 5Y | 0.05301 | 0.05628 | -0.00327 | 1.08708 | 1.29522 | -0.20814 |
| 0y | 10Y | 0.07906 | 0.07463 | 0.00443 | 4.71202 | 4.11196 | 0.60006 |
| 0y | 10Y | 0.0702 | 0.07462 | -0.00442 | 2.1074 | 2.54826 | -0.44086 |
| 0y | 20Y | 0.10936 | 0.10467 | 0.00468 | 12.29422 | 11.07826 | 1.21595 |
| 0y | 20Y | 0.0997 | 0.10448 | -0.00477 | 6.23648 | 7.1773 | -0.94083 |

| Infl. Curve | Abs.Shift | = 0.03 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.03761 | 0.04119 | -0.00358 | 0.4873 | 0.59922 | -0.11192 |
| 0y | 1Y | 0.03531 | 0.04121 | -0.0059 | 0.35525 | 0.52453 | -0.16933 |
| 0y | 2Y | 0.04396 | 0.0352 | 0.00876 | 0.68372 | 0.3593 | 0.32442 |
| 0y | 2Y | 0.03891 | 0.03519 | 0.00372 | 0.35002 | 0.24491 | 0.10511 |
| 0y | 5Y | 0.0745 | 0.07522 | -0.00071 | 2.27355 | 2.32827 | -0.05472 |
| 0y | 5Y | 0.06553 | 0.07518 | -0.00964 | 1.08708 | 1.669 | -0.58192 |
| 0y | 10Y | 0.09671 | 0.08859 | 0.00812 | 4.71202 | 3.4851 | 1.22692 |
| 0y | 10Y | 0.0869 | 0.08867 | -0.00177 | 2.1074 | 2.26288 | -0.15548 |
| 0y | 20Y | 0.13509 | 0.13871 | -0.00362 | 12.29422 | 10.74811 | 1.5461 |
| 0y | 20Y | 0.12245 | 0.12884 | -0.00638 | 6.23648 | 7.40401 | -1.16753 |

| Infl. Curve | Abs.Shift | = 0.04 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.0444 | 0.04299 | 0.00141 | 0.4873 | 0.4573 | 0.03005 |
| 0y | 1Y | 0.04162 | 0.04304 | -0.00142 | 0.35525 | 0.39121 | -0.03595 |

#### Table 101: Calibration results with inflation curve shifts (continued)

| 0y | 2Y | 0.05245 | 0.04947 | 0.00299 | 0.68372 | 0.57506 | 0.10865 |
| 0y | 2Y | 0.04632 | 0.04939 | -0.00307 | 0.35002 | 0.43866 | -0.08864 |
| 0y | 5Y | 0.0899 | 0.08267 | 0.00542 | 2.27355 | 1.89763 | 0.37592 |
| 0y | 5Y | 0.07728 | 0.08254 | -0.00526 | 1.08708 | 1.3686 | -0.28152 |
| 0y | 10Y | 0.11665 | 0.10962 | 0.00702 | 4.71202 | 3.90415 | 0.80787 |
| 0y | 10Y | 0.10244 | 0.10948 | -0.00703 | 2.1074 | 2.70037 | -0.59296 |
| 0y | 20Y | 0.15827 | 0.15082 | 0.00746 | 12.29422 | 10.5859 | 1.70832 |
| 0y | 20Y | 0.14335 | 0.15087 | -0.00752 | 6.23648 | 7.53419 | -1.29771 |

| Infl. Curve | Abs.Shift | = 0.05 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.05081 | 0.04924 | 0.00157 | 0.4873 | 0.44639 | 0.04091 |
| 0y | 1Y | 0.0476 | 0.04928 | -0.00169 | 0.35525 | 0.39514 | -0.03989 |
| 0y | 2Y | 0.06048 | 0.05684 | 0.00362 | 0.68372 | 0.56181 | 0.12191 |
| 0y | 2Y | 0.05336 | 0.05678 | -0.00342 | 0.35002 | 0.44127 | -0.09125 |
| 0y | 5Y | 0.10082 | 0.09472 | 0.0061 | 2.27355 | 1.87714 | 0.39641 |
| 0y | 5Y | 0.08837 | 0.09457 | -0.0062 | 1.08708 | 1.39649 | -0.3094 |
| 0y | 10Y | 0.13335 | 0.12525 | 0.0081 | 4.71202 | 3.83624 | 0.87578 |
| 0y | 10Y | 0.11709 | 0.12499 | -0.0079 | 2.1074 | 2.73252 | -0.62512 |
| 0y | 20Y | 0.1796 | 0.17114 | 0.00846 | 12.29422 | 10.4423 | 1.85192 |
| 0y | 20Y | 0.16277 | 0.17125 | -0.00848 | 6.23648 | 7.63137 | -1.39489 |

*Table 101: Calibration results when different parallel shifts are applied to the input inflation curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.*

In the following tables we shift the Nominal and the Real IR volatility together.

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=0.9 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04044 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | 0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | -0.0 | 0.65767 | 0.65767 | -0.0 |

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=0.8 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04044 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | 0.0 | 0.36714 | 0.36714 | 0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | -0.0 | 0.65767 | 0.65767 | -0.0 |

| OptionMat | Tenor | MarketVols | VolShift ModelVols | Rel.Shift=0.7 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | -0.0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | 0.0 | 0.04043 | 0.04043 | 0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -1e-05 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65765 | 1e-05 |

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=0.6 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | 0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | 0.0 | 0.06833 | 0.06833 | 0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | 0.0 | 0.36714 | 0.36714 | 0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65767 | 0.0 |

*Table 107: Calibration results when different parallel shifts are applied to the input inflation curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.*

#### Table 108: Calibration results with relative shifts to volatility

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=1.7 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | 0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65767 | 0.0 |

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=1.8 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01211 | 0.00183 | 0.0885 | 0.05376 | 0.03475 |
| 0y | 2Y | 0.01857 | 0.02036 | -0.00179 | 0.04043 | 0.06493 | -0.0245 |
| 0y | 5Y | 0.03417 | 0.03441 | -0.00024 | 0.06833 | 0.0714 | -0.00308 |
| 0y | 10Y | 0.04971 | 0.04515 | 0.00457 | 0.12452 | 0.06259 | 0.06192 |
| 0y | 20Y | 0.06987 | 0.0819 | -0.01203 | 0.36714 | 0.88845 | -0.52131 |
| 0y | 30Y | 0.0809 | 0.1203 | -0.03944 | 0.65767 | 4.14825 | -3.49059 |

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=1.9 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.0121 | 0.00184 | 0.0885 | 0.05357 | 0.03493 |
| 0y | 2Y | 0.01857 | 0.02019 | -0.00161 | 0.04043 | 0.06221 | -0.02177 |
| 0y | 5Y | 0.03417 | 0.03403 | 0.00015 | 0.06833 | 0.06646 | 0.00186 |
| 0y | 10Y | 0.04971 | 0.04937 | 0.00034 | 0.12452 | 0.06489 | 0.05963 |
| 0y | 20Y | 0.06986 | 0.08471 | -0.01485 | 0.36714 | 1.04926 | -0.68213 |
| 0y | 30Y | 0.0809 | 0.1245 | -0.04358 | 0.65767 | 4.67805 | -4.02039 |

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=2 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01206 | 0.00188 | 0.0885 | 0.05286 | 0.03564 |
| 0y | 2Y | 0.01857 | 0.02177 | -0.0032 | 0.04043 | 0.08655 | -0.04612 |
| 0y | 5Y | 0.03417 | 0.03083 | 0.00335 | 0.06833 | 0.02986 | 0.03846 |
| 0y | 10Y | 0.04971 | 0.04271 | 0.007 | 0.12452 | 0.04025 | 0.08427 |
| 0y | 20Y | 0.06985 | 0.08795 | -0.0181 | 0.36714 | 1.25194 | -0.8848 |
| 0y | 30Y | 0.08093 | 0.1289 | -0.04797 | 0.65767 | 5.27182 | -4.61415 |

*Table 108: Calibration results when equal relative shifts are applied to the input volatility of the real interest rate and the input volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.*

#### Table 103: Calibration results with shifts to real interest rate volatility

| 0y | 2Y | 0.01244 | 0.01255 | -0.00012 | 0.35002 | 0.35602 | -0.006 |
| 0y | 5Y | 0.02214 | 0.01704 | 0.0051 | 2.27355 | 1.75021 | 0.52334 |
| 0y | 5Y | 0.02344 | 0.01705 | 0.00639 | 1.08708 | 0.56187 | 0.52521 |
| 0y | 10Y | 0.02789 | 0.03824 | -0.01035 | 4.71202 | 6.45368 | -1.74166 |
| 0y | 10Y | 0.03025 | 0.0383 | -0.00805 | 2.1074 | 3.25101 | -1.14361 |
| 0y | 20Y | 0.04026 | 0.08589 | -0.04564 | 12.29422 | 25.00655 | -12.71234 |
| 0y | 20Y | 0.04311 | 0.08598 | -0.04287 | 6.23648 | 17.78472 | -11.54824 |

*Table 103: Calibration results when equal relative shifts are applied to the input volatility of the real interest rate and the input volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.*

#### Robustness of Step 2 of calibration w.r.t input interest rate and inflation curves

In this section we examine the robustness of the Step 2 of the calibration process with respect to:

1. different levels of the input interest rate curve (i.e. nominal curve). To this purpose we will apply a series of parallel shifts to the input interest rate curve and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model-generated implied volatilities.

2. different levels of the input inflation curve. We remind the reader that the input inflation curve is used to construct the real interest rate curve. To this purpose we will apply a series of parallel shifts to the input inflation curve and examining the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model-generated implied volatilities.

3. different levels of interest rate volatilities. We apply a series of relative shifts to the input volatility of the nominal interest rate volatility and the input volatility of the real interest rate (remember that the volatility of the real interest rate is defined by scaling the nominal interest rate volatility by a factor of 0.9) and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model-generated implied volatilities.

We perform the above tests on Step 2 of the calibration (determining the LocalVols). First, we apply a series parallel shifts to the input nominal interest rate curve from -0.05 to 0.05 in increments of 0.01. The results of the testing are summarized in the following tables:

| T₀ | T₁ | MarketVols | IR Curve ModelVols | Abs.Shift | = -0.05 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01373 | 0.01464 | -0.00091 | 0.0885 | 0.10695 | -0.02845 |
| 0y | 2Y | 0.01824 | 0.01695 | 0.00129 | 0.04043 | 0.0284 | 0.01366 |
| 0y | 5Y | 0.03258 | 0.03339 | -0.00081 | 0.06833 | 0.07563 | -0.00731 |
| 0y | 10Y | 0.04627 | 0.05037 | -0.0041 | 0.12452 | 0.22484 | -0.10032 |
| 0y | 20Y | 0.06031 | 0.05831 | 0.002 | 0.36714 | 0.28248 | 0.08466 |
| 0y | 30Y | 0.06905 | 0.06269 | 0.00239 | 0.65767 | 0.48252 | 0.17475 |

| IR Curve | Abs.Shift | = -0.04 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01377 | 0.01509 | -0.00132 | 0.0885 | 0.11844 | -0.02994 |
| 0y | 2Y | 0.0183 | 0.01678 | 0.00152 | 0.04043 | 0.02432 | 0.01611 |
| 0y | 5Y | 0.03313 | 0.03532 | -0.00219 | 0.06833 | 0.10266 | -0.03434 |
| 0y | 10Y | 0.04692 | 0.0529 | -0.00598 | 0.12452 | 0.27682 | -0.15231 |
| 0y | 20Y | 0.06199 | 0.06047 | 0.00152 | 0.36714 | 0.30531 | 0.06182 |
| 0y | 30Y | 0.07093 | 0.06495 | 0.00273 | 0.65767 | 0.47648 | 0.18119 |

| IR Curve | Abs.Shift | = -0.03 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01382 | 0.01301 | 0.0008 | 0.0885 | 0.07208 | 0.01642 |
| 0y | 2Y | 0.01837 | 0.01986 | -0.00149 | 0.04043 | 0.061 | -0.02056 |
| 0y | 5Y | 0.03339 | 0.0323 | 0.00109 | 0.06833 | 0.05469 | 0.01364 |
| 0y | 10Y | 0.04759 | 0.04857 | -0.00098 | 0.12452 | 0.14355 | -0.01904 |
| 0y | 20Y | 0.06374 | 0.06481 | -0.00102 | 0.36714 | 0.40999 | -0.04285 |
| 0y | 30Y | 0.07053 | 0.06901 | 0.00152 | 0.65767 | 0.56143 | 0.09624 |

| IR Curve | Abs.Shift | = -0.02 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01386 | 0.01361 | 0.00025 | 0.0885 | 0.0837 | 0.0048 |
| 0y | 2Y | 0.01844 | 0.01887 | -0.00044 | 0.04043 | 0.0459 | -0.00547 |
| 0y | 5Y | 0.03365 | 0.03328 | 0.00037 | 0.06833 | 0.06357 | 0.00475 |
| 0y | 10Y | 0.04829 | 0.04864 | -0.00036 | 0.12452 | 0.13102 | -0.00651 |
| 0y | 20Y | 0.0657 | 0.06533 | 0.00037 | 0.36714 | 0.36345 | 0.00369 |
| 0y | 30Y | 0.07368 | 0.0739 | -0.00022 | 0.65767 | 0.67069 | -0.01302 |

#### Table 104: Calibration results with IR curve shifts

| IR Curve | Abs.Shift | = -0.01 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.0139 | 0.01376 | 0.00014 | 0.0885 | 0.08558 | 0.00292 |
| 0y | 2Y | 0.0185 | 0.01875 | -0.00025 | 0.04043 | 0.04345 | -0.00301 |
| 0y | 5Y | 0.03391 | 0.03369 | 0.00022 | 0.06833 | 0.06549 | 0.00284 |
| 0y | 10Y | 0.0449 | 0.04924 | -0.00024 | 0.12452 | 0.12875 | -0.00424 |
| 0y | 20Y | 0.06774 | 0.06744 | 0.00031 | 0.36714 | 0.35652 | 0.01062 |
| 0y | 30Y | 0.07748 | 0.07738 | 0.0002 | 0.65767 | 0.66845 | -0.01078 |

| IR Curve | Abs.Shift | = 0.00 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01394 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | 0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06994 | 0.06994 | 0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08104 | 0.08104 | -0.0 | 0.65767 | 0.65767 | 0.0 |

| IR Curve | Abs.Shift | = 0.01 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01398 | 0.01398 | 0 | 0.0885 | 0.0885 | 0 |
| 0y | 2Y | 0.01864 | 0.01864 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03445 | 0.03445 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.05055 | 0.05055 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.07229 | 0.07229 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08539 | 0.08539 | -0.0 | 0.65767 | 0.65767 | 0.0 |

| IR Curve | Abs.Shift | = 0.02 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01403 | 0.01403 | 0 | 0.0885 | 0.0885 | 0 |
| 0y | 2Y | 0.01871 | 0.01871 | 0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03472 | 0.03472 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.05126 | 0.05126 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.07483 | 0.07483 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.09028 | 0.09028 | -0.0 | 0.65767 | 0.65767 | -0.0 |

| IR Curve | Abs.Shift | = 0.03 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01407 | 0.01407 | 0 | 0.0885 | 0.0885 | 0 |
| 0y | 2Y | 0.01878 | 0.01878 | 0 | 0.04043 | 0.04043 | 0.0 |
| 0y | 5Y | 0.035 | 0.035 | 0 | 0.06833 | 0.06833 | 0 |
| 0y | 10Y | 0.05209 | 0.05209 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.07757 | 0.07757 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.09582 | 0.09582 | 0.0 | 0.65767 | 0.65767 | 0.0 |

| IR Curve | Abs.Shift | = 0.04 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01411 | 0.01411 | 0 | 0.0885 | 0.0885 | 0 |
| 0y | 2Y | 0.01885 | 0.01885 | 0 | 0.04043 | 0.04043 | 0 |
| 0y | 5Y | 0.03528 | 0.03528 | 0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.05292 | 0.05292 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.08054 | 0.08054 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.10215 | 0.10215 | -0.0 | 0.65767 | 0.65767 | -0.0 |

#### Table 105: Calibration results with IR curve shifts (continued)

| 0y | 1Y | 0.01416 | 0.01416 | 0 | 0.0885 | 0.0885 | 0 |
| 0y | 2Y | 0.01892 | 0.01892 | 0 | 0.04043 | 0.04043 | 0.0 |
| 0y | 5Y | 0.03557 | 0.03557 | 0 | 0.06833 | 0.06833 | 0.0 |
| 0y | 10Y | 0.05379 | 0.05379 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.08376 | 0.08376 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.10942 | 0.10942 | -0.0 | 0.65767 | 0.65767 | 0.0 |

*Table 105: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.*

![Figure 57: Calibrated LocalVols for different input IR curves.](./Fig/57.png)

We next apply a series parallel shifts to the input inflation curve from 0.0 to 0.005 in increments of 0.01. The results of the testing are summarized in the following tables:

#### Table 106: Calibration results with inflation curve shifts

| T₀ | T₁ | MarketVols | Infl.Curve ModelVols | Abs.Shift = 0.03 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.02992 | 0.02992 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.03541 | 0.03541 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.05907 | 0.05907 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.08368 | 0.08368 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.11791 | 0.11791 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.13886 | 0.13886 | 0.0 | 0.65767 | 0.65766 | 0.0 |

| Infl.Curve | Abs.Shift | = 0.04 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.03471 | 0.03471 | 0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.04062 | 0.04062 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.06681 | 0.06681 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.09417 | 0.09417 | 0.0 | 0.12452 | 0.12451 | 0.0 |
| 0y | 20Y | 0.13242 | 0.13242 | -0.0 | 0.36714 | 0.36714 | -1e-05 |
| 0y | 30Y | 0.15602 | 0.15602 | -0.0 | 0.65767 | 0.65768 | -2e-05 |

| Infl.Curve | Abs.Shift | = 0.05 | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.03933 | 0.03449 | 0.00484 | 0.0885 | 0.04416 | 0.04434 |
| 0y | 2Y | 0.04569 | 0.05576 | -0.01008 | 0.04043 | 0.13639 | -0.09596 |
| 0y | 5Y | 0.07434 | 0.06469 | 0.00965 | 0.06833 | 0.02038 | 0.04795 |
| 0y | 10Y | 0.10433 | 0.11628 | -0.01195 | 0.12452 | 0.2847 | -0.16018 |
| 0y | 20Y | 0.14637 | 0.1376 | 0.00877 | 0.36714 | 0.21817 | 0.14897 |
| 0y | 30Y | 0.17298 | 0.17236 | 0.00062 | 0.65767 | 0.65655 | 0.00112 |

*Table 106: Calibration results when different parallel shifts are applied to the input inflation curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.*

![Figure 58: Calibrated LocalVols for different input inflation curves.](./Fig/58.png)

We apply relative shifts (of equal size) the input volatility of the nominal interest rate and the input volatility of the real interest rate. The relative shifts range from -90% to 200% in increments of 10%. The results of the testing are summarized in the following tables. For the sake of brevity we reproduce here only the results of the more extreme shifts. Note that the differences between the implied volatilities of the calibration targets and the model-generated volatilities are well below 0.001% in almost all cases, confirming the robustness of the calibration.

#### Table 107: Calibration results with volatility shifts

| T₀ | T₁ | MarketVols | VolShift ModelVols | Rel.Shift=0.9 | MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1Y | 0.01394 | 0.01394 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04044 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | 0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | -0.0 | 0.65767 | 0.65767 | -0.0 |

| VolShift | Rel.Shift=0.8 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01394 | 0.0 | 0.0885 | 0.0885 | 0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04044 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | 0.0 | 0.36714 | 0.36714 | 0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | -0.0 | 0.65767 | 0.65767 | -0.0 |

| VolShift | Rel.Shift=0.7 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| OptionMat | Tenor | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01394 | -0.0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | 0.0 | 0.04043 | 0.04043 | 0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -1e-05 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65765 | 1e-05 |

| VolShift | Rel.Shift=0.6 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01394 | 0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | 0.0 | 0.06833 | 0.06833 | 0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | 0.0 | 0.36714 | 0.36714 | 0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65767 | 0.0 |

*Table 107: Calibration results when relative shifts (of equal size) are applied to the input volatility of the real interest rate and the input volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.*

#### Table 108: Calibration results with volatility shifts (continued)

| VolShift | Rel.Shift=1.7 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01394 | 0 | 0.0885 | 0.0885 | -0.0 |
| 0y | 2Y | 0.01857 | 0.01857 | -0.0 | 0.04043 | 0.04043 | -0.0 |
| 0y | 5Y | 0.03418 | 0.03418 | -0.0 | 0.06833 | 0.06833 | -0.0 |
| 0y | 10Y | 0.04974 | 0.04974 | -0.0 | 0.12452 | 0.12452 | -0.0 |
| 0y | 20Y | 0.06995 | 0.06995 | -0.0 | 0.36714 | 0.36714 | -0.0 |
| 0y | 30Y | 0.08106 | 0.08106 | 0.0 | 0.65767 | 0.65767 | 0.0 |

| VolShift | Rel.Shift=1.8 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01211 | 0.00183 | 0.0885 | 0.05376 | 0.03475 |
| 0y | 2Y | 0.01857 | 0.02036 | -0.00179 | 0.04043 | 0.06493 | -0.0245 |
| 0y | 5Y | 0.03417 | 0.03441 | -0.00024 | 0.06833 | 0.0714 | -0.00308 |
| 0y | 10Y | 0.04971 | 0.04515 | 0.00457 | 0.12452 | 0.06259 | 0.06192 |
| 0y | 20Y | 0.06987 | 0.0819 | -0.01203 | 0.36714 | 0.88845 | -0.52131 |
| 0y | 30Y | 0.0809 | 0.1203 | -0.03944 | 0.65767 | 4.14825 | -3.49059 |

| VolShift | Rel.Shift=1.9 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.0121 | 0.00184 | 0.0885 | 0.05357 | 0.03493 |
| 0y | 2Y | 0.01857 | 0.02019 | -0.00161 | 0.04043 | 0.06221 | -0.02177 |
| 0y | 5Y | 0.03417 | 0.03403 | 0.00015 | 0.06833 | 0.06646 | 0.00186 |
| 0y | 10Y | 0.04971 | 0.04937 | 0.00034 | 0.12452 | 0.06489 | 0.05963 |
| 0y | 20Y | 0.06986 | 0.08471 | -0.01485 | 0.36714 | 1.04926 | -0.68213 |
| 0y | 30Y | 0.0809 | 0.1245 | -0.04358 | 0.65767 | 4.67805 | -4.02039 |

| VolShift | Rel.Shift=2 | | | | | | |
| --- | --- | --- | --- | --- | --- | --- | --- |
| T₀ | T₁ | MarketVols | ModelVols | VolDiffs | MarketPrices | ModelPrices | PriceDiffs |
| 0y | 1Y | 0.01394 | 0.01206 | 0.00188 | 0.0885 | 0.05286 | 0.03564 |
| 0y | 2Y | 0.01857 | 0.02177 | -0.0032 | 0.04043 | 0.08655 | -0.04612 |
| 0y | 5Y | 0.03417 | 0.03083 | 0.00335 | 0.06833 | 0.02986 | 0.03846 |
| 0y | 10Y | 0.04971 | 0.04271 | 0.007 | 0.12452 | 0.04025 | 0.08427 |
| 0y | 20Y | 0.06985 | 0.08795 | -0.0181 | 0.36714 | 1.25194 | -0.8848 |
| 0y | 30Y | 0.08093 | 0.1289 | -0.04797 | 0.65767 | 5.27182 | -4.61415 |

*Table 108: Calibration results when equal relative shifts are applied to the input volatility of the real interest rate and the input volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.*

![Figure 59: Calibrated LocalVols for different input nominal interest rate volatility and real interest rate volatility.](./Fig/59.png)

We conclude this section by examining the stability of PV and inflation Vega of three exotic instruments (InflSwapAverage, InflSwaptionZC, ZC Option) when we apply relative shifts (ranging from -90% to 200% in increments of 10%) to the calibrated inflation volatilities. Note that extensive testing on the stability of the PV and risk sensitivities for different shifts applied to the input interest rate curves and input inflation curves, as well as different shifts applied to the input volatilities of the real interest rate and nominal interest rate is done in the dedicated sections of the DBX-ShortRate-InflationStochVol MVR.

![Figure 60: Left: InflSwapAverage price (in millions) w.r.t. relative shifts in the inflation volatility. Right: InflSwapAverage inflation vega w.r.t. relative shifts in inflation volatility](./Fig/60.png)

![Figure 61: Left: InflSwaptionZC price (in millions) w.r.t. relative shifts in the inflation volatility. Right: InflSwaptionZC inflation vega w.r.t. relative shifts in inflation volatility](./Fig/61.png)

![Figure 62: Left: ZC Option price (in millions) w.r.t. relative shifts in the inflation volatility. Right: ZC Option inflation vega w.r.t. relative shifts in inflation volatility](./Fig/62.png)

##### 4.2.1.6 DBMVOL-YOY: Independent testing of the Calibration process

In this section we present a series of tests that have a double purpose:

* Validate the correctness of the testing delivered by DBAnalytics as part of the calibration testing. To this purpose, MoRM independently reproduces the tests done in [42].
* Add additional tests to examine several aspects of the calibration that have not been covered in the calibration testing delivered in [42]

#### Sensitivity to Initial Guesses used for Parameters

The calibration process, as presented in [42] is done in two steps: the calibration of the volatility σ(t) of the SV component (i.e. LocalVolsSV) and the calibration of the volatility term structure {σ(t): t ≤ T} (i.e. LocalVols). The parameters are calibrated using the DBAnalytics LEASTSQUARES method (Levenberg-Marquardt method). In this section we investigate the impact that the initial guesses for LocalVolsSV and LocalVols make on the calibration process. The initial guesses used for the calibration are presented in the following table

| Tenor | 1Y | 2Y | 5Y | 10Y | 20Y | 30Y |
| --- | --- | --- | --- | --- | --- | --- |
| LocalVols | 0.017 | 0.02 | 0.024 | 0.028 | 0.034 | 0.038 |
| LocalVolsSV | | | 0.0001 (flat) | | | |

*Table 109: Initial guesses for LocalVols parameters used in Step 1 (calibration of LocalVolsSV) and Step 2 (calibration of LocalVols) of the DBMVOL-YOY calibration. The initial guess for the LocalVolsSV parameter used in Step 1 (calibration of LocalVolsSV) of the DBMVOL-YOY calibration.*

We start by testing the impact of the initial guess for the LocalVolsSV parameter in Step 1 of the calibration process. To this purpose we consider the following four scenarios (of initial guesses):

| Scenario | 1 | 2 | 3 | 4 |
| --- | --- | --- | --- | --- |
| LocalVolsSV | 0.001 (flat) | 0.01 (flat) | 0.1 (flat) | 0.2 (flat) |

*Table 110: Initial guesses for LocalVolsSV parameters*

We perform Step 1 of the calibration in all four scenarios considered in the above table and we obtain the following results:

| Scenario | 1 | 2 | 3 | 4 | original test |
| --- | --- | --- | --- | --- | --- |
| LocalVolsSV | 0.4236450925 | 0.4236465946 | 0.4236492718 | 0.4236883935 | 0.4236440641 |

*Table 111: Calibrated for LocalVolsSV parameters*

We see that the initial guess does not impact the calibrated value of the volatility σ(t) of the SV component. Note that this test was not covered in [42].
We examine the impact that the initial guesses for the LocalVols parameters make on the calibration process. To this purpose, we consider four alternative calibration scenarios:

| Scenario | 1 | 2 | 3 | 4 |
| --- | --- | --- | --- | --- |
| LocalVols | 0.0005 (5 bps) | 0.002 (20 bps) | 0.006(60 bps) | 0.01 (100 bps) |

*Table 112: Initial guesses for LocalVols parameters. Note that the same initial guess is used for all the LocalVol time pegs i.e. flat initial guess.*

###### Table 144: Calibrated LocalVolsSV parameter values following Step 1 of calibration in the current approach (Base) and in two alternative scenarios. The results are in line with [42]

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| MeanRevSV | 0.0 | 0.25 | 0.5 |
| LocalVolsSV | 0.4236448841 | 0.5930350756 | 0.7203835873 |

###### Table 145: Calibrated LocalVols term structure following Step 2 of calibration in the current approach (Base) and in two alternative scenarios.

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| MeanRevSV | 0.0 | 0.25 | 0.5 |
| LocalVols 1Y | 0.0128918311 | 0.0123345019 | 0.0120539061 |
| LocalVols 2Y | 0.0158098023 | 0.0152677244 | 0.0159620972 |
| LocalVols 5Y | 0.0172244971 | 0.0223379770 | 0.0250559485 |
| LocalVols 10Y | 0.0159293738 | 0.0298218171 | 0.0311010507 |
| LocalVols 20Y | 0.0179908007 | 0.0384002472 | 0.0372438899 |
| LocalVols 30Y | 0.0171523349 | 0.0358265796 | 0.0352060112 |

![Figure 68: Calibrated Local Vols.](./Fig/1.png)

###### Table 146: Price (in millions) of InflSwapInflNominalLin, InflSwapSnowball and InflSwapYOYCapFloor in the current calibration as done by DBAnalytics (Base) and in the two alternative calibration scenarios. The prices of the exotic instruments show sensitivity to the choice of MeanRevSV parameter. The results obtained for InflSwapSnowball are in line with [42].

| Scenario | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| InflSwapInflNominalLin | 0.31738 | -0.13878 | -0.253185 |
| InflSwapSnowball | 850.18315 | 859.98967 | 862.36367818123 |
| InflSwapYOYCapFloor | 51.45913 | 51.31701 | 51.33294 |

###### Table 147: Inflation Vega for 30Y InflSwapInflNominalLin projected on the LocalVols tenor structure. A significant portion of the vega is concentrated on the 10Y and 20Y tenors and to a lesser degree on the 30Y and 5Y tenors, in all three cases.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 1Y | .14575 | .13948 | .13637.378 |
| 2Y | .17862 | .15842 | .15858.463 |
| 5Y | .45807 | .47889 | .52530.714 |
| 10Y | .92368 | .116263 | .125622.227 |
| 20Y | .143137 | .190342 | .196414.798 |
| 30Y | .62590 | .77184 | .82060.269 |
| | Cumulative | Inflation | Vega |
| All buckets | .376040 | .461519 | .486023.873 |

###### Table 148: Inflation Vega for 30Y InflSwapInflNominalLin projected on the calibration targets. Since a significant portion of the vega is concentrated on the 5Y, 10Y and 20Y tenors (see previous table), the vega on the 5Y/5Y and 10Y/10Y instruments show the largest concentration, and the vega on the 3Y/2Y and 20Y/10Y instruments to a lesser degree.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | .11772 | .11254 | .10792 |
| 1Y/2Y | .18789 | .16718 | .16798 |
| 3Y/2Y | .12971 | .16018 | .16914 |
| 5Y/5Y | .71747 | .76406 | .81044 |
| 10Y/10Y | .129040 | .167565 | .177760 |
| 20Y/10Y | .131738 | .173555 | .182468 |
| | Cumulative | Inflation | Vega |
| All buckets | .376040 | .461519 | .485780 |

###### Table 149: Inflation Vega for InflSwapSnowball projected on the LocalVols tenor structure. A significant portion of the vega is concentrated on the 5Y, 10Y and 20Y tenors in all three cases.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 1Y | 816756 | 766019 | 768375 |
| 2Y | 960612 | 857277 | 864499 |
| 5Y | 2268890 | 2378103 | 2597892 |
| 10Y | 3869744 | 4750548 | 5104704 |
| 20Y | 3422770 | 4606771 | 4785065 |
| 30Y | 567350 | 731214 | 783196 |
| | Cumulative | Inflation | Vega |
| All buckets | 11906124 | 14110832 | 14903734 |

###### Table 150: Inflation Vega for InflSwapSnowball projected on to the calibration targets. Since a significant portion of the vega is concentrated on the 5Y, 10Y and 20Y tenors (see previous table), the vega on the 5Y/5Y and 10Y/10Y instruments show the largest concentration, and the vega on the 3Y/2Y and 20Y/10Y instruments to a lesser degree.

| Security | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | 668499 | 655497 | 636723 |
| 1Y/2Y | 992677 | 819062 | 796389 |
| 3Y/2Y | 735700 | 1078759 | 1222306 |
| 5Y/5Y | 3428900 | 3319542 | 3403818 |
| 10Y/10Y | 4888201 | 6593340 | 7090017 |
| 20Y/10Y | 1194144 | 1644630 | 1754479 |
| | Cumulative | Inflation | Vega |
| All buckets | 11906124 | 14110832 | 14903734 |

###### Table 151: Inflation Vega for InflSwapYOYCapFloor. A significant portion of the vega is concentrated on the 10Y, 20Y and 30Y tenors in all three cases.

| Tenor | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 1Y | 15523 | 15127 | 14860 |
| 2Y | 25285 | 22473 | 22446 |
| 5Y | 75378 | 76948 | 84024 |
| 10Y | 178472 | 214303 | 233354 |
| 20Y | 300189 | 396272 | 413805 |
| 30Y | 143071 | 179349 | 187677 |
| | Cumulative | Inflation | Vega |
| All buckets | 737918 | 869471 | 955870 |

###### Table 152: Inflation Vega for InflSwapYOYCapFloor projected on the calibration targets. Since a significant portion of the vega is concentrated on the 10Y, 20Y and 30Y tenors (see previous table), the vega on the 5Y/5Y, 10Y/10Y and 20Y/10Y instruments show the largest concentration, as expected.

| Security | Base | Scenario 1 | Scenario 2 |
| --- | --- | --- | --- |
| 0Y/1Y | 10869 | 11045 | 10672 |
| 1Y/2Y | 31171 | 25294 | 25769 |
| 3Y/2Y | 6978 | 17877 | 17428 |
| 5Y/5Y | 140041 | 136629 | 146284 |
| 10Y/10Y | 247726 | 314234 | 335389 |
| 20Y/10Y | 301132 | 394389 | 420425 |
| | Cumulative | Inflation | Vega |
| All buckets | 737918 | 869471 | 955870 |

##### Robustness of Step 1 of calibration w.r.t input interest rate and inflation curves

In this section we examine the robustness of the Step 1 of the calibration process with respect to

1. different levels of the input interest rate curve (i.e. nominal curve). To this purpose we will apply a series of parallel shifts to the input interest rate curve and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model-generated implied volatilities.

2. different levels of the input inflation curve. We remind the reader that the input inflation curve is used to construct the real interest rate curve. To this purpose we will apply a series of parallel shifts to the input inflation curve and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model-generated implied volatilities.

3. different levels of interest rate volatilities. To this purpose we apply a series of relative shifts to the input nominal interest rate volatility and input real interest rate volatility (remember that the volatility of the real interest rate is defined by scaling the nominal interest rate volatility by a factor of 0.9) and examine the quality of the calibration in terms of how well the calibration process is able to match the input market volatilities with the model generated implied volatilities.

We perform the testing on Step 1 of the calibration (determining the volatility of the SV component i.e. LocalVolsSV). First, we apply a series parallel shifts to the input nominal interest rate curve from -0.05 to 0.05 in increments of 0.01. The results of the testing are summarized in the following tables:

###### Table 153: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.05<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01113 | 0.01633 | -0.0052 | 0.59148 | 0.81089 | -0.21941 |
| 0y | 1y | 0.01256 | 0.0163 | -0.00374 | 0.21697 | 0.35349 | -0.13652 |
| 1y | 2y | 0.00967 | 0.01238 | -0.0037 | 1.4033 | 1.9433 | -0.54 |
| 1y | 2y | 0.01027 | 0.0124 | -0.00212 | 0.70164 | 0.97661 | -0.27496 |
| 3y | 2y | 0.00676 | 0.01077 | -0.00401 | 1.56195 | 2.4358 | -0.87385 |
| 3y | 2y | 0.00849 | 0.01077 | -0.00228 | 0.91273 | 1.36109 | -0.44836 |
| 5y | 5y | 0.00383 | 0.00946 | -0.00563 | 4.30481 | 9.08369 | -4.77887 |
| 5y | 5y | 0.00582 | 0.00946 | -0.00364 | 2.72371 | 5.65025 | -2.92654 |
| 10y | 10y | 0.00073 | 0.00826 | -0.00753 | 9.26218 | 32.78741 | -23.52523 |
| 10y | 10y | 0.00336 | 0.00826 | -0.0049 | 6.51792 | 22.43819 | -15.92027 |
| 20y | 10y | 10000 | 0.00752 | 9999.99248 | 8.63168 | 56.7789 | -48.14721 |
| 20y | 10y | 0.0023 | 0.00752 | -0.00522 | 6.8122 | 40.67617 | -33.86397 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.04<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01127 | 0.01138 | -0.00011 | 0.59148 | 0.59611 | -0.00463 |
| 0y | 1y | 0.01263 | 0.01251 | 0.00011 | 0.21697 | 0.21303 | 0.00394 |
| 1y | 2y | 0.00992 | 0.00987 | 6e-05 | 1.4033 | 1.39502 | 0.00828 |
| 1y | 2y | 0.01042 | 0.01048 | -6e-05 | 0.70164 | 0.7091 | -0.00746 |
| 3y | 2y | 0.00711 | 0.00704 | 7e-05 | 1.56195 | 1.5481 | 0.01385 |
| 3y | 2y | 0.00872 | 0.0088 | -7e-05 | 0.91273 | 0.92586 | -0.01313 |
| 5y | 5y | 0.00429 | 0.00461 | -0.00033 | 4.30481 | 4.55623 | -0.25142 |
| 5y | 5y | 0.00614 | 0.00582 | 0.00031 | 2.72371 | 2.50207 | 0.22164 |
| 10y | 10y | 0.00157 | 0.00288 | -0.00131 | 9.26218 | 12.60192 | -3.33974 |
| 10y | 10y | 0.00376 | 0.0031 | 0.00066 | 6.51792 | 4.79302 | 1.7249 |
| 20y | 10y | 0.00175 | 0.0035 | -0.00175 | 8.63168 | 17.0937 | -8.46202 |
| 20y | 10y | 0.00267 | 0.0025 | 0.00017 | 6.8122 | 6.06631 | 0.74589 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.03<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01141 | 0.0115 | -0.00011 | 0.59148 | 0.59613 | -0.00464 |
| 0y | 1y | 0.01269 | 0.01257 | 0.00012 | 0.21697 | 0.21298 | 0.00399 |
| 1y | 2y | 0.01018 | 0.01013 | 4e-05 | 1.4033 | 1.39726 | 0.00604 |
| 1y | 2y | 0.01057 | 0.01062 | -5e-05 | 0.70164 | 0.70785 | -0.00621 |
| 3y | 2y | 0.00746 | 0.00738 | 8e-05 | 1.56195 | 1.5468 | 0.01515 |
| 3y | 2y | 0.00896 | 0.00902 | -7e-05 | 0.91273 | 0.92437 | -0.01164 |
| 5y | 5y | 0.00477 | 0.00502 | -0.00024 | 4.30481 | 4.47937 | -0.17456 |
| 5y | 5y | 0.00647 | 0.00625 | 0.00022 | 2.72371 | 2.58043 | 0.14328 |
| 10y | 10y | 0.00225 | 0.00316 | -0.00091 | 9.26218 | 11.30668 | -2.0445 |
| 10y | 10y | 0.00421 | 0.00349 | 0.00071 | 6.51792 | 4.91537 | 1.60255 |
| 20y | 10y | 0.00135 | 0.00253 | -0.00118 | 8.63168 | 13.18797 | -4.55628 |
| 20y | 10y | 0.00312 | 0.00256 | 0.00056 | 6.8122 | 4.81567 | 1.99653 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.02<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01156 | 0.01168 | -0.00012 | 0.59148 | 0.59629 | -0.00481 |
| 0y | 1y | 0.01275 | 0.01263 | 0.00012 | 0.21697 | 0.21287 | 0.0041 |
| 1y | 2y | 0.00943 | 0.0094 | 3e-05 | 1.4033 | 1.3993 | 0.004 |
| 1y | 2y | 0.01072 | 0.01075 | -3e-05 | 0.70164 | 0.70558 | -0.00393 |
| 3y | 2y | 0.00783 | 0.00776 | 7e-05 | 1.56195 | 1.54878 | 0.01317 |
| 3y | 2y | 0.0092 | 0.00927 | -7e-05 | 0.91273 | 0.92408 | -0.01135 |
| 5y | 5y | 0.0053 | 0.00545 | -0.00015 | 4.30481 | 4.40683 | -0.10202 |
| 5y | 5y | 0.00683 | 0.00668 | 0.00015 | 2.72371 | 2.63349 | 0.09022 |
| 10y | 10y | 0.00299 | 0.00367 | -0.00067 | 9.26218 | 10.59723 | -1.33505 |
| 10y | 10y | 0.00472 | 0.00417 | 0.00055 | 6.51792 | 5.44432 | 1.0736 |
| 20y | 10y | 0.00204 | 0.00287 | -0.00083 | 8.63168 | 11.15656 | -2.52488 |
| 20y | 10y | 0.00369 | 0.00308 | 0.00061 | 6.8122 | 5.08182 | 1.73038 |

###### Table 154: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.01<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01171 | 0.01183 | -0.00012 | 0.59148 | 0.59637 | -0.00489 |
| 0y | 1y | 0.01282 | 0.01269 | 0.00012 | 0.21697 | 0.21328 | 0.00417 |
| 1y | 2y | 0.0097 | 0.00968 | 2e-05 | 1.4033 | 1.40108 | 0.00222 |
| 1y | 2y | 0.01087 | 0.01089 | -2e-05 | 0.70164 | 0.70381 | -0.00216 |
| 3y | 2y | 0.00821 | 0.00815 | 7e-05 | 1.56195 | 1.54994 | 0.01201 |
| 3y | 2y | 0.00946 | 0.00952 | -7e-05 | 0.91273 | 0.92369 | -0.01096 |
| 5y | 5y | 0.00586 | 0.00594 | -8e-05 | 4.30481 | 4.35292 | -0.04811 |
| 5y | 5y | 0.00721 | 0.00713 | 8e-05 | 2.72371 | 2.67964 | 0.04407 |
| 10y | 10y | 0.00382 | 0.00427 | -0.00045 | 9.26218 | 10.03434 | -0.77222 |
| 10y | 10y | 0.00531 | 0.00491 | 0.00039 | 6.51792 | 5.85476 | 0.66316 |
| 20y | 10y | 0.00239 | 0.00335 | -0.0006 | 8.63168 | 10.08283 | -1.45115 |
| 20y | 10y | 0.00439 | 0.0039 | 0.00049 | 6.8122 | 5.70148 | 1.11072 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.00<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01198 | -0.00012 | 0.59148 | 0.59643 | -0.00495 |
| 0y | 1y | 0.01288 | 0.01276 | 0.00013 | 0.21697 | 0.21275 | 0.00422 |
| 1y | 2y | 0.00996 | 0.00995 | 1e-05 | 1.4033 | 1.40263 | 0.00067 |
| 1y | 2y | 0.01102 | 0.01103 | -1e-05 | 0.70164 | 0.70231 | -0.00067 |
| 3y | 2y | 0.00861 | 0.00855 | 6e-05 | 1.56195 | 1.55092 | 0.01103 |
| 3y | 2y | 0.00971 | 0.00977 | -7e-05 | 0.91273 | 0.92299 | -0.01026 |
| 5y | 5y | 0.00646 | 0.00647 | -1e-05 | 4.30481 | 4.31042 | -0.00561 |
| 5y | 5y | 0.00762 | 0.00761 | 1e-05 | 2.72371 | 2.71789 | 0.00582 |
| 10y | 10y | 0.00476 | 0.005 | -0.00024 | 9.26218 | 9.62137 | -0.35918 |
| 10y | 10y | 0.00598 | 0.00576 | 0.00023 | 6.51792 | 6.18713 | 0.33079 |
| 20y | 10y | 0.00398 | 0.00437 | -0.00039 | 8.63168 | 9.35459 | -0.72291 |
| 20y | 10y | 0.00528 | 0.00494 | 0.00034 | 6.8122 | 6.20364 | 0.60856 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.01<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.0224 | 0.02159 | 0.00126 | 0.59148 | 0.53978 | 0.0517 |
| 0y | 1y | 0.02321 | 0.02157 | -0.00136 | 0.21697 | 0.25554 | -0.03857 |
| 1y | 2y | 0.01651 | 0.01614 | 0.00037 | 1.4033 | 1.3576 | 0.0457 |
| 1y | 2y | 0.01576 | 0.01613 | -0.00037 | 0.70164 | 0.73875 | -0.03711 |
| 3y | 2y | 0.01346 | 0.01357 | -3e-05 | 1.56195 | 1.55625 | 0.0057 |
| 3y | 2y | 0.01351 | 0.01355 | -3e-05 | 0.91273 | 0.91761 | -0.00488 |
| 5y | 5y | 0.01044 | 0.01056 | -0.00012 | 4.30481 | 4.36845 | -0.06363 |
| 5y | 5y | 0.01065 | 0.01054 | 0.00011 | 2.72371 | 2.66938 | 0.05433 |
| 10y | 10y | 0.00776 | 0.00803 | -0.00027 | 9.26218 | 9.66704 | -0.40486 |
| 10y | 10y | 0.00823 | 0.00802 | 0.00027 | 6.51792 | 6.15105 | 0.36687 |
| 20y | 10y | 0.00622 | 0.00665 | -0.00043 | 8.63168 | 9.41902 | -0.78734 |
| 20y | 10y | 0.00757 | 0.00664 | 0.00043 | 6.8122 | 6.10842 | 0.70387 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.02<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.03163 | 0.03215 | -0.00048 | 0.59148 | 0.50547 | 0.08601 |
| 0y | 1y | 0.0327 | 0.03217 | -0.00047 | 0.21697 | 0.27926 | -0.06229 |
| 1y | 2y | 0.02184 | 0.02092 | 0.00092 | 1.4033 | 1.22914 | 0.17416 |
| 1y | 2y | 0.01996 | 0.02087 | -0.00092 | 0.70164 | 0.78559 | -0.08394 |
| 3y | 2y | 0.01774 | 0.01733 | 0.00041 | 1.56195 | 1.49542 | 0.06613 |
| 3y | 2y | 0.01691 | 0.01732 | -0.00041 | 0.91273 | 0.97561 | -0.06288 |
| 5y | 5y | 0.01368 | 0.01352 | 0.00016 | 4.30481 | 4.22149 | 0.08332 |
| 5y | 5y | 0.01334 | 0.0135 | -0.00016 | 2.72371 | 2.7949 | -0.07119 |
| 10y | 10y | 0.01018 | 0.01027 | -8e-05 | 9.26218 | 9.37299 | -0.11081 |
| 10y | 10y | 0.01034 | 0.01026 | 8e-05 | 6.51792 | 6.41723 | 0.10069 |
| 20y | 10y | 0.00807 | 0.00837 | -0.0003 | 8.63168 | 9.15976 | -0.52807 |
| 20y | 10y | 0.00867 | 0.00837 | 0.0003 | 6.8122 | 6.34536 | 0.46684 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.03<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.03935 | 0.03902 | 0.00033 | 0.59148 | 0.48586 | 0.1056 |
| 0y | 1y | 0.0392 | 0.03901 | -0.00332 | 0.21697 | 0.29302 | -0.07605 |
| 1y | 2y | 0.02851 | 0.02526 | 0.00138 | 1.4033 | 1.25994 | 0.14337 |
| 1y | 2y | 0.02389 | 0.02525 | -0.00136 | 0.70164 | 0.81603 | -0.11439 |
| 3y | 2y | 0.02145 | 0.02075 | 0.0007 | 1.56195 | 1.46085 | 0.1011 |
| 3y | 2y | 0.02006 | 0.02076 | -0.0007 | 0.91273 | 0.99666 | -0.08393 |
| 5y | 5y | 0.01656 | 0.0162 | 0.00036 | 4.30481 | 4.12711 | 0.1777 |
| 5y | 5y | 0.01581 | 0.01617 | -0.00036 | 2.72371 | 2.87483 | -0.15112 |
| 10y | 10y | 0.01234 | 0.01228 | 6e-05 | 9.26218 | 9.1836 | 0.07858 |
| 10y | 10y | 0.01221 | 0.01227 | -6e-05 | 6.51792 | 6.58532 | -0.0674 |
| 20y | 10y | 0.00972 | 0.00994 | -0.00021 | 8.63168 | 8.98455 | -0.35286 |
| 20y | 10y | 0.01015 | 0.00994 | 0.00021 | 6.8122 | 6.49905 | 0.31314 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.04<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.04847 | 0.04243 | 0.00603 | 0.59148 | 0.47282 | 0.11867 |
| 0y | 1y | 0.04637 | 0.04241 | -0.00404 | 0.21697 | 0.30256 | -0.08561 |
| 1y | 2y | 0.03102 | 0.02931 | 0.00171 | 1.4033 | 1.23275 | 0.17055 |
| 1y | 2y | 0.02758 | 0.0293 | -0.00173 | 0.70164 | 0.8377 | -0.13606 |
| 3y | 2y | 0.02489 | 0.02395 | 0.00094 | 1.56195 | 1.43402 | 0.12793 |
| 3y | 2y | 0.02302 | 0.02395 | -0.00093 | 0.91273 | 1.01806 | -0.10533 |
| 5y | 5y | 0.01923 | 0.01859 | 0.00063 | 4.30481 | 4.05564 | 0.24917 |
| 5y | 5y | 0.01813 | 0.01865 | -0.00053 | 2.72371 | 2.93302 | -0.20931 |
| 10y | 10y | 0.01432 | 0.01415 | 0.00017 | 9.26218 | 8.96015 | 0.30203 |
| 10y | 10y | 0.01387 | 0.01414 | -0.00017 | 6.51792 | 6.70313 | -0.18522 |
| 20y | 10y | 0.01125 | 0.01139 | -0.00014 | 8.63168 | 8.86221 | -0.23053 |
| 20y | 10y | 0.01164 | 0.01139 | 0.00015 | 6.8122 | 6.60734 | 0.20486 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.05<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.05016 | 0.04645 | 0.00467 | 0.59148 | 0.46322 | 0.12846 |
| 0y | 1y | 0.05278 | 0.04645 | 0.0047 | 0.21697 | 0.31004 | -0.09312 |
| 1y | 2y | 0.03317 | 0.03013 | 0.00255 | 1.4033 | 1.2119 | 0.1914 |
| 1y | 2y | 0.03108 | 0.03012 | -0.00206 | 0.70164 | 0.86493 | -0.16338 |
| 3y | 2y | 0.02812 | 0.02698 | 0.00115 | 1.56195 | 1.41366 | 0.14799 |
| 3y | 2y | 0.02585 | 0.02699 | -0.00114 | 0.91273 | 1.03449 | -0.12176 |
| 5y | 5y | 0.02173 | 0.02105 | 0.00068 | 4.30481 | 4.00504 | 0.29978 |
| 5y | 5y | 0.02033 | 0.02101 | -0.00068 | 2.72371 | 2.97702 | -0.25331 |
| 10y | 10y | 0.01618 | 0.01592 | 0.00026 | 9.26218 | 8.94664 | 0.31554 |
| 10y | 10y | 0.01564 | 0.0159 | -0.00026 | 6.51792 | 6.79204 | -0.27412 |
| 20y | 10y | 0.01269 | 0.01277 | -9e-05 | 8.63168 | 8.75514 | -0.12345 |
| 20y | 10y | 0.01286 | 0.01277 | 9e-05 | 6.8122 | 6.69367 | 0.11852 |

###### Table 156: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.9<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01193 | -7e-05 | 0.59148 | 0.59437 | 0.00289 |
| 0y | 1y | 0.01288 | 0.01281 | 7e-05 | 0.21697 | 0.21451 | 0.00246 |
| 1y | 2y | 0.00997 | 0.00994 | 3e-05 | 1.4033 | 1.39978 | 0.00353 |
| 1y | 2y | 0.01102 | 0.01105 | -3e-05 | 0.70164 | 0.70497 | -0.00332 |
| 3y | 2y | 0.00862 | 0.00854 | 8e-05 | 1.56195 | 1.54313 | 0.01882 |
| 3y | 2y | 0.00971 | 0.0098 | -8e-05 | 0.91273 | 0.92564 | -0.01291 |
| 5y | 5y | 0.00646 | 0.00654 | -8e-05 | 4.30481 | 4.34824 | -0.04342 |
| 5y | 5y | 0.00762 | 0.00754 | 8e-05 | 2.72371 | 2.68162 | 0.04209 |
| 10y | 10y | 0.00475 | 0.00509 | -0.00034 | 9.26218 | 9.77032 | -0.50814 |
| 10y | 10y | 0.00598 | 0.00564 | 0.00033 | 6.51792 | 6.03731 | 0.4806 |
| 20y | 10y | 0.00404 | 0.00423 | -0.00019 | 8.63168 | 8.98058 | -0.3489 |
| 20y | 10y | 0.00533 | 0.00515 | 0.00018 | 6.8122 | 6.49111 | 0.32109 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.8<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01194 | -9e-05 | 0.59148 | 0.59494 | -0.00346 |
| 0y | 1y | 0.01288 | 0.0128 | 9e-05 | 0.21697 | 0.21403 | 0.00294 |
| 1y | 2y | 0.00997 | 0.00996 | 1e-05 | 1.4033 | 1.4014 | 0.0019 |
| 1y | 2y | 0.01102 | 0.01104 | -2e-05 | 0.70164 | 0.70343 | -0.00178 |
| 3y | 2y | 0.00862 | 0.00855 | 7e-05 | 1.56195 | 1.54967 | 0.01228 |
| 3y | 2y | 0.00971 | 0.00979 | -7e-05 | 0.91273 | 0.92431 | -0.01158 |
| 5y | 5y | 0.00646 | 0.00653 | -7e-05 | 4.30481 | 4.32423 | -0.01941 |
| 5y | 5y | 0.00762 | 0.00756 | 4e-05 | 2.72371 | 2.70434 | 0.01933 |
| 10y | 10y | 0.00475 | 0.00502 | -0.00027 | 9.26218 | 9.66164 | -0.39946 |
| 10y | 10y | 0.00598 | 0.00572 | 0.00026 | 6.51792 | 6.13846 | 0.37946 |
| 20y | 10y | 0.00403 | 0.00421 | -0.00017 | 8.63168 | 8.95412 | -0.32249 |
| 20y | 10y | 0.00532 | 0.00516 | 0.00017 | 6.8122 | 6.51713 | 0.29502 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.7<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01195 | -0.0001 | 0.59148 | 0.59535 | -0.00387 |
| 0y | 1y | 0.01288 | 0.01278 | 0.0001 | 0.21697 | 0.21368 | 0.00329 |
| 1y | 2y | 0.00997 | 0.00996 | 1e-05 | 1.4033 | 1.40234 | 0.00096 |
| 1y | 2y | 0.01102 | 0.01103 | -1e-05 | 0.70164 | 0.70255 | -0.0009 |
| 3y | 2y | 0.00862 | 0.00855 | 7e-05 | 1.56195 | 1.5505 | 0.01145 |
| 3y | 2y | 0.00971 | 0.00978 | -7e-05 | 0.91273 | 0.92358 | -0.01085 |
| 5y | 5y | 0.00646 | 0.00648 | -1e-05 | 4.30481 | 4.31162 | -0.00681 |
| 5y | 5y | 0.00762 | 0.00761 | 1e-05 | 2.72371 | 2.71658 | 0.00713 |
| 10y | 10y | 0.00475 | 0.00497 | -0.00022 | 9.26218 | 9.58954 | -0.32736 |
| 10y | 10y | 0.00598 | 0.00576 | 0.00021 | 6.51792 | 6.20668 | 0.31124 |
| 20y | 10y | 0.00402 | 0.00421 | -0.00019 | 8.63168 | 8.97583 | -0.34415 |
| 20y | 10y | 0.00531 | 0.00514 | 0.00018 | 6.8122 | 6.49978 | 0.31243 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.6<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01196 | -0.0001 | 0.59148 | 0.59565 | -0.00417 |
| 0y | 1y | 0.01288 | 0.01276 | 0.00011 | 0.21697 | 0.21343 | 0.00354 |
| 1y | 2y | 0.00996 | 0.00996 | 0.0 | 1.4033 | 1.40295 | 0.00045 |
| 1y | 2y | 0.01102 | 0.01103 | -0.0 | 0.70164 | 0.70208 | -0.00043 |
| 3y | 2y | 0.00862 | 0.00855 | 6e-05 | 1.56195 | 1.55064 | 0.01111 |
| 3y | 2y | 0.00971 | 0.00978 | -7e-05 | 0.91273 | 0.92324 | -0.01051 |
| 5y | 5y | 0.00646 | 0.00646 | 0.0 | 4.30481 | 4.30556 | -0.00074 |
| 5y | 5y | 0.00762 | 0.00762 | 0.0 | 2.72371 | 2.72257 | 0.00114 |
| 10y | 10y | 0.00475 | 0.00495 | -0.0002 | 9.26218 | 9.55379 | -0.29161 |
| 10y | 10y | 0.00598 | 0.00579 | 0.00019 | 6.51792 | 6.23936 | 0.27853 |
| 20y | 10y | 0.00401 | 0.00422 | -0.00021 | 8.63168 | 9.01864 | -0.38695 |
| 20y | 10y | 0.00531 | 0.00511 | 0.0002 | 6.8122 | 6.46446 | 0.34774 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 1.7<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01194 | -9e-05 | 0.59148 | 0.59479 | -0.0033 |
| 0y | 1y | 0.01288 | 0.01278 | 9e-05 | 0.21697 | 0.21405 | 0.00291 |
| 1y | 2y | 0.00996 | 0.00989 | 7e-05 | 1.4033 | 1.39481 | 0.00847 |
| 1y | 2y | 0.01102 | 0.01111 | -9e-05 | 0.70164 | 0.71159 | -0.00995 |
| 3y | 2y | 0.00862 | 0.00843 | 0.00019 | 1.56195 | 1.54262 | 0.01933 |
| 3y | 2y | 0.00971 | 0.00968 | 3e-05 | 0.91273 | 0.9085 | 0.00423 |
| 5y | 5y | 0.00645 | 0.007 | -0.00055 | 4.30481 | 4.61439 | -0.30957 |
| 5y | 5y | 0.00761 | 0.00743 | 0.00018 | 2.72371 | 2.62563 | 0.09808 |
| 10y | 10y | 0.00472 | 0.00709 | -0.00237 | 9.26218 | 12.78425 | -3.52207 |
| 10y | 10y | 0.00596 | 0.00709 | -0.00113 | 6.51792 | 8.17187 | -1.65395 |
| 20y | 10y | 0.0037 | 0.00698 | -0.00328 | 8.63168 | 14.68666 | -6.05498 |
| 20y | 10y | 0.00508 | 0.00697 | -0.00189 | 6.8122 | 10.2351 | -3.4229 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 1.9<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01193 | -8e-05 | 0.59148 | 0.59457 | -0.00309 |
| 0y | 1y | 0.01288 | 0.01279 | 0.001 | 0.21697 | 0.21374 | 0.00324 |
| 1y | 2y | 0.00996 | 0.00994 | 2e-05 | 1.4033 | 1.40058 | 0.00272 |
| 1y | 2y | 0.01102 | 0.01114 | -0.00012 | 0.70164 | 0.71586 | -0.01392 |
| 3y | 2y | 0.00862 | 0.00845 | 0.00016 | 1.56195 | 1.53503 | 0.02692 |
| 3y | 2y | 0.00971 | 0.00961 | 9e-05 | 0.91273 | 0.8979 | 0.01483 |
| 5y | 5y | 0.00645 | 0.00715 | -0.00069 | 4.30481 | 4.89511 | -0.5903 |
| 5y | 5y | 0.00761 | 0.00754 | 7e-05 | 2.72371 | 2.68605 | 0.03766 |
| 10y | 10y | 0.00472 | 0.00734 | -0.00262 | 9.26218 | 13.16558 | -3.9034 |
| 10y | 10y | 0.00596 | 0.00734 | -0.00138 | 6.51792 | 8.64572 | -2.1278 |
| 20y | 10y | 0.00366 | 0.00722 | -0.00367 | 8.63168 | 15.21059 | -6.5789 |
| 20y | 10y | 0.00505 | 0.00721 | -0.00216 | 6.8122 | 10.73594 | -3.92374 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 2<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01185 | 0.01237 | -0.00051 | 0.59148 | 0.61273 | -0.02055 |
| 0y | 1y | 0.01288 | 0.01235 | 0.00054 | 0.21697 | 0.19916 | 0.01781 |
| 1y | 2y | 0.00996 | 0.01057 | -0.00061 | 1.4033 | 1.48141 | -0.07811 |
| 1y | 2y | 0.01102 | 0.01055 | 0.00047 | 0.70164 | 0.68291 | 0.01874 |
| 3y | 2y | 0.00862 | 0.00895 | -0.00026 | 1.56195 | 1.62304 | -0.06108 |
| 3y | 2y | 0.00971 | 0.00967 | 0.00004 | 0.91273 | 0.79766 | 0.1152 |
| 5y | 5y | 0.00645 | 0.0075 | -0.00105 | 4.30481 | 4.89992 | -0.59651 |
| 5y | 5y | 0.00761 | 0.00757 | 0.00051 | 2.72371 | 2.66851 | 0.0552 |
| 10y | 10y | 0.00472 | 0.00759 | -0.00328 | 9.26218 | 15.57659 | -6.3144 |
| 10y | 10y | 0.00594 | 0.00759 | -0.00165 | 6.51792 | 8.94 | -2.42209 |
| 20y | 10y | 0.0036 | 0.00747 | -0.00387 | 8.63168 | 15.76504 | -7.13336 |
| 20y | 10y | 0.005 | 0.00745 | -0.00245 | 6.8122 | 11.26037 | -4.44817 |

###### Table 157: Calibration results when equal relative shifts are applied to the input volatility of the real interest rate and the volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the market implied volatilities of the calibration targets.

##### Robustness of Step 2 of calibration w.r.t input interest rate and inflation curves

In this section we examine the robustness of the Step 2 of the calibration process with respect to

1. different levels of the input interest rate curve (i.e. nominal curve). We apply a series of parallel shifts to the input interest rate curve and examine the quality of the calibration in terms of how well the calibration process is able to match the implied volatilities of the calibration targets with the model-generated implied volatilities.

2. different levels of the input inflation curve. We remind the reader that the input inflation curve is used to construct the real interest rate curve. We apply a series of parallel shifts to the input inflation curve and examine the quality of the calibration in terms of how well the calibration process is able to match the implied volatilities of the calibration targets with the model generated implied volatilities.

3. different levels of interest rate volatilities. We apply a series of relative shifts to the input volatility of the nominal interest rate and input volatility of the real interest rate (remember that the volatility of the real interest rate is defined by scaling the nominal interest rate volatility by a factor of 0.9) and examine the quality of the calibration in terms of how well the calibration process is able to match the implied volatilities of the calibration targets with the model generated implied volatilities.

We perform the above tests on Step 2 of the calibration. First, we apply a series of parallel shifts to the input nominal interest rate curve from -0.05 to 0.05 in increments of 0.01. The results of the testing are summarized in the following tables:

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.05<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01373 | 0.01373 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01391 | 0.01391 | 0 | 0.15494 | 0.15494 | 0 |
| 3y | 2y | 0.01271 | 0.01271 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01004 | 0.01004 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00659 | 0.00659 | 0.0 | 4.2001 | 4.2001 | 0.0 |
| 20y | 10y | 0.00424 | 0.00424 | -0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.04<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01377 | 0.01377 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.0140 | 0.0140 | 0 | 0.15494 | 0.15494 | 0 |
| 3y | 2y | 0.01288 | 0.01288 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01031 | 0.01031 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00711 | 0.00711 | -0.0 | 4.2001 | 4.2001 | 0.0 |
| 20y | 10y | 0.00466 | 0.00466 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.03<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01381 | 0.01381 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01409 | 0.01409 | 0 | 0.15494 | 0.15494 | 0 |
| 3y | 2y | 0.01304 | 0.01304 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01058 | 0.01058 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00755 | 0.00755 | -0.0 | 4.2001 | 4.2001 | 0.0 |
| 20y | 10y | 0.00518 | 0.00518 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.02<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01385 | 0.01385 | 0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01418 | 0.01418 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.0132 | 0.0132 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01087 | 0.01087 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00805 | 0.00805 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00578 | 0.00578 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = -0.01<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.0139 | 0.0139 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01427 | 0.01427 | 0 | 0.15494 | 0.15494 | -0.0 |
| 3y | 2y | 0.01337 | 0.01337 | 0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01117 | 0.01117 | 0 | 1.19482 | 1.19482 | -0.0 |
| 10y | 10y | 0.00859 | 0.00859 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00649 | 0.00649 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.00<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01353 | 0.01353 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00917 | 0.00917 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00732 | 0.00732 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.01<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01398 | 0.01398 | 0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01445 | 0.01445 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01371 | 0.01371 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01181 | 0.01181 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00987 | 0.00987 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00842 | 0.00842 | -0.0 | 5.54786 | 5.54786 | -0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.02<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01402 | 0.01402 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01454 | 0.01454 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01388 | 0.01388 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01216 | 0.01216 | 0.0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.01061 | 0.01061 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00972 | 0.00972 | -0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.03<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01407 | 0.01407 | 0.0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01463 | 0.01463 | -0.0 | 0.15494 | 0.15494 | -0.0 |
| 3y | 2y | 0.01406 | 0.01406 | 0.0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01251 | 0.01251 | -0.0 | 1.19482 | 1.19482 | -0.0 |
| 10y | 10y | 0.01144 | 0.01144 | 0.0 | 4.2001 | 4.20005 | -4e-05 |
| 20y | 10y | 0.01131 | 0.01131 | -0.0 | 5.54786 | 5.54791 | -3e-05 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.04<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01411 | 0.01411 | 0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01472 | 0.01472 | 0.0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01425 | 0.01425 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01288 | 0.01288 | 0.0 | 1.19482 | 1.19482 | -0.0 |
| 10y | 10y | 0.01236 | 0.01236 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.01327 | 0.01327 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | IR Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.05<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01415 | 0.01415 | 0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.01481 | 0.01481 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01444 | 0.01444 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01328 | 0.01328 | 0.0 | 1.19482 | 1.19482 | -0.0 |
| 10y | 10y | 0.01339 | 0.01339 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.01589 | 0.01589 | 0.0 | 5.54786 | 5.54786 | 0.0 |

###### Table 158: Calibration results when different parallel shifts are applied to the input nominal IR curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

![Figure 69: Calibrated LocalVols for different input IR curves.]

We apply a series parallel shifts to the input inflation curve of sizes 0 to 0.05 in increments of 0.01. The results of the testing are summarized in the following tables:

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.00<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01353 | 0.01353 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.0092 | 0.0092 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00736 | 0.00736 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.01<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01963 | 0.01963 | 0.0 | 0.08442 | 0.08442 | 0.0 |
| 1y | 2y | 0.01737 | 0.01737 | -0.0 | 0.15494 | 0.15494 | -0.0 |
| 3y | 2y | 0.01606 | 0.01606 | 0.0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01357 | 0.01357 | -0.0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.01091 | 0.01091 | 0.0 | 4.2001 | 4.20007 | -3e-05 |
| 20y | 10y | 0.00863 | 0.00863 | -0.0 | 5.54786 | 5.54789 | -1e-05 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.02<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.02431 | 0.02431 | -0.0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.02025 | 0.02025 | -0.0 | 0.15494 | 0.15494 | -0.0 |
| 3y | 2y | 0.01848 | 0.01848 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01555 | 0.01555 | 0.0 | 1.19482 | 1.19481 | 0.0 |
| 10y | 10y | 0.01254 | 0.01254 | -0.0 | 4.2001 | 4.20011 | -1e-05 |
| 20y | 10y | 0.01022 | 0.01022 | 0.0 | 5.54786 | 5.54785 | 3e-05 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.03<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.02991 | 0.02991 | -0.0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.02303 | 0.02303 | 0.0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.02081 | 0.02081 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01744 | 0.01744 | 0.0 | 1.19482 | 1.19481 | 0.0 |
| 10y | 10y | 0.01409 | 0.01409 | -0.0 | 4.2001 | 4.20011 | -1e-05 |
| 20y | 10y | 0.01154 | 0.01154 | 0.0 | 5.54786 | 5.54786 | -3e-05 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.04<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.03471 | 0.03471 | -0.0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.02572 | 0.02572 | -0.0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.02306 | 0.02306 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01927 | 0.01927 | 0.0 | 1.19482 | 1.19481 | 0.0 |
| 10y | 10y | 0.01557 | 0.01557 | -0.0 | 4.2001 | 4.20011 | -2e-05 |
| 20y | 10y | 0.0128 | 0.0128 | 0.0 | 5.54786 | 5.54784 | 4e-05 |

| OptionMat | Tenor | MarketVols | Infl. Curve<br>ModelVols | Abs.Shift<br>VolDiffs | = 0.05<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.03933 | 0.03933 | -0.0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.02833 | 0.02833 | -0.0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.02524 | 0.02524 | -0.0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.02104 | 0.02104 | -0.0 | 1.19482 | 1.19482 | -0.0 |
| 10y | 10y | 0.01701 | 0.01701 | 0.0 | 4.2001 | 4.2001 | 0.0 |
| 20y | 10y | 0.014 | 0.014 | 0 | 5.54786 | 5.54784 | 0.0 |

###### Table 159: Calibration results when different parallel shifts are applied to the input inflation curve. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

![Figure 70: Calibrated LocalVols for different input inflation curves.]

We apply of relative shifts (of equal size) the input volatility of the nominal interest rate and the input volatility of the real interest rate. The relative shifts range from -90% to 200% in increments of 10%. The results of the testing are summarized in the following tables. For the sake of brevity we reproduce here only the results of the more extreme shifts. Note that the differences between the implied volatilities of the calibration targets and the model-generated volatilities are well below 0.001% in almost all cases, confirming the robustness of the calibration.

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.9<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | -0.0 | 0.08442 | 0.08442 | -0.0 |
| 1y | 2y | 0.01436 | 0.01436 | 0.0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01354 | 0.01354 | -0.0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0.0 | 1.19482 | 1.19481 | 0.0 |
| 10y | 10y | 0.00919 | 0.00919 | -0.0 | 4.2001 | 4.20013 | 3e-05 |
| 20y | 10y | 0.00739 | 0.00739 | 0.0 | 5.54786 | 5.54782 | 6e-05 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.8<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01354 | 0.01354 | 0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00919 | 0.00919 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00739 | 0.00739 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.7<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0.0 |
| 3y | 2y | 0.01354 | 0.01354 | 0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00919 | 0.00919 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00739 | 0.00739 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 0.6<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0 |
| 3y | 2y | 0.01354 | 0.01354 | 0 | 0.28803 | 0.28803 | -0.0 |
| 5y | 5y | 0.01149 | 0.01149 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00919 | 0.00919 | -0.0 | 4.2001 | 4.2001 | -0.0 |
| 20y | 10y | 0.00738 | 0.00738 | 0.0 | 5.54786 | 5.54786 | 0.0 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 1.7<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0 | 0.08442 | 0.08442 | 0 |
| 1y | 2y | 0.01436 | 0.01436 | 0 | 0.15494 | 0.15494 | 0 |
| 3y | 2y | 0.01353 | 0.01353 | 0 | 0.28803 | 0.28803 | 0.0 |
| 5y | 5y | 0.01148 | 0.01148 | 0 | 1.19482 | 1.19482 | 0.0 |
| 10y | 10y | 0.00919 | 0.00919 | 0 | 4.2001 | 4.2001 | 0.0 |
| 20y | 10y | 0.00722 | 0.00722 | -0.0 | 5.54786 | 5.54786 | -0.0 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 1.8<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0.0 | 0.08442 | 0.08441 | 1e-05 |
| 1y | 2y | 0.01436 | 0.01436 | -0.0 | 0.15494 | 0.15507 | -0.00013 |
| 3y | 2y | 0.01353 | 0.01352 | 1e-05 | 0.28803 | 0.28749 | 0.00056 |
| 5y | 5y | 0.01148 | 0.01149 | -1e-05 | 1.19482 | 1.19821 | -0.00339 |
| 10y | 10y | 0.00919 | 0.00912 | 7e-05 | 4.2001 | 4.12581 | 0.07418 |
| 20y | 10y | 0.0072 | 0.0073 | -0.0001 | 5.54786 | 5.70379 | -0.15591 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 1.9<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0.0 | 0.08442 | 0.08441 | 3e-05 |
| 1y | 2y | 0.01436 | 0.01436 | -1e-05 | 0.15494 | 0.15519 | -0.00025 |
| 3y | 2y | 0.01353 | 0.01352 | 1e-05 | 0.28803 | 0.28623 | 0.00179 |
| 5y | 5y | 0.01148 | 0.0115 | -2e-05 | 1.19482 | 1.20139 | -0.00657 |
| 10y | 10y | 0.00919 | 0.00905 | 0.00013 | 4.2001 | 4.05756 | 0.14252 |
| 20y | 10y | 0.00718 | 0.0074 | -0.00023 | 5.54786 | 5.89562 | -0.34779 |

| OptionMat | Tenor | MarketVols | VolShift<br>ModelVols | Rel.Shift<br>VolDiffs | = 2<br>MarketPrices | ModelPrices | PriceDiffs |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0.01394 | 0.01394 | 0.0 | 0.08442 | 0.08441 | 1e-05 |
| 1y | 2y | 0.01436 | 0.01436 | 0.0 | 0.15494 | 0.15511 | -0.00017 |
| 3y | 2y | 0.01353 | 0.01352 | 1e-05 | 0.28803 | 0.28727 | 0.00076 |
| 5y | 5y | 0.01148 | 0.01149 | -2e-05 | 1.19482 | 1.20031 | -0.0055 |
| 10y | 10y | 0.00917 | 0.009 | 0.00016 | 4.2001 | 4.02697 | 0.17322 |
| 20y | 10y | 0.00713 | 0.00755 | -0.00042 | 5.54786 | 6.19639 | -0.64851 |

###### Table 160: Calibration results when equal relative shifts are applied to the input volatility of the real interest rate and the input volatility of the nominal interest rate. The calibration algorithm is set to match at the level of implied volatilities. We can see that the model-generated volatilities are close to the implied volatilities of the calibration targets.

![Figure 71: Calibrated LocalVols for different input nominal interest rate volatility and real interest rate volatility.]

We conclude this section by examining the stability of PV and inflation Vega of three exotic instruments (InflSwapSnowball, InflSwapInflNominalLin, InflSwapYOYCapFloor) when we apply relative shifts (ranging from -90% to 200% in increments of 10%) to the calibrated inflation volatility. Note that extensive testing on the stability of the PV and risk sensitivities for different shifts applied to the input interest rate curves and input inflation curves, as well as different shifts applied to the input volatilities of the real interest rate and nominal interest rate is done in the dedicated sections of the DBX-ShortRate-InflationStochVol MVR.

![Figure 72: Left: InflSwapSnowball price (in millions) w.r.t. relative shifts in the inflation volatility. Right: InflSwapSnowball inflation vega w.r.t. relative shifts in inflation volatility]

![Figure 73: Left: InflSwapYOYCapFloor price (in millions) w.r.t. relative shifts in the inflation volatility. Right: InflSwapYOYCapFloor inflation vega w.r.t. relative shifts in inflation volatility]

![Figure 74: Left: InflSwapInflNominalLin price (in millions) w.r.t. relative shifts in the inflation volatility. Right: InflSwapInflNominalLin inflation vega w.r.t. relative shifts in inflation volatility]

####### 4.2.1.7 Appendix A: European Swaptions on ZC swaps and YOY swaps

A ZC inflation indexed swap is a contract in which party A pays to party B at the trade maturity date T a fixed amount N(1 + K)^T-T₀ in exchange for a inflation-linked floating amount N(I(T)/I(T₀) - 1) paid also at maturity, where N represents the notional of the trade, T₀ represents the start date of the trade, T represents the settle date of the trade. 
The payoff of a swaption on a ZC swap, where the underlying swap starts at the expiry date of the option is equal to

V_swaption^ZC(T₁) = N(V_swap^ZC(T₁))⁺ = NΔT_T₀,T P_n(T₁,T)E_T₁^Q[(I(T)/I(T₀) - (1+K)^T-T₀)⁺]

where the expectation is taken in the T-forward measure of the nominal rate and P_n(t,T) represents the nominal discount bond.

An YOY inflation indexed swap is a contract in which party A makes a series of fixed payments to party B at a series of pre-defined coupon dates T₁ = T₀ < T₁ < ... < T_N in exchange for a series of inflation linked coupon payments N(I(T_i)/I(T_{i-1}) - 1). The payoff of a swaption on a YOY swap, where underlying swap starts at the expiry date of the option is equal to:

V_swaption^YOY(T₁) = N(V_swap^YOY(T₁))⁺ = N∑_{n=0}^N Δ_n P_n(T₁,T_n)E_T₁^Q_n[(I(T_n)/I(T_{n-1}) - K)⁺]

where the expectations are taken in the T_n-forward measures of the nominal rate.

####### 4.2.1.8 Appendix B: Computation of inflation bucketed vegas

The exotic options in scope of the DBX-ShortRate_InflationStochVol model rely on exogenous calibration. It implies that the calibration is performed separately in GENERICALTRATE mode dictionary where the calibration targets are specified. The typical output of a DBAnalytics VEGA mode calculation for an exotic option does not contain the projection of the inflation vega on the set of calibration targets i.e. bucketed vegas (as it is the case for VEGA mode calculations for products like bermudan swaptions which rely on autocalibration). Instead it provides a projection of the inflation vega on the tenor structure of the LocalVols. In this appendix we will explain how the bucketed vegas are calculated for such products.

| Buckets | InflSwapInflNominalLin |
| --- | --- |
| 1Y | -14575.1 |
| 2Y | -17862.0 |
| 5Y | -45507.5 |
| 10Y | -92368.2 |
| 20Y | -143137.4 |
| 30Y | -62590.1 |
| BucketTotals | -376040.3 |

###### Table 161: Example of Inflation Vega projected onto the tenor structure of the LocalVols for InflSwapInflNominalLin, typically contained in the results file of a VEGA mode calculation.

In order to determine the projection of the inflation vega onto the calibration targets (i.e. bucketed vegas), we create a new dictionary containing the exotic security and the calibration targets. Pricing this new dictionary in VEGA mode provides us with the inflation vega of the exotic security projected onto the tenor structure of the LocalVols, as well as the inflation vegas of the calibration targets projected onto the tenor structure of the LocalVols:

| Buckets | InflSwapInflNominalLin | 0Y-1Y PUT | 1Y-2Y PUT | 3Y-2Y PUT | 5Y-5Y PUT | 10Y-10Y PUT | 20Y-10Y PUT |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1Y | -14575.1 | 13138.1 | 1462.4 | 1.0 | -0.4 | 2.0 | -0.9 |
| 2Y | -17862.0 | 0 | 7308.1 | 5045.0 | 3.5 | -4.5 | -15.0 |
| 5Y | -45507.5 | 0 | 1029.5 | 11790.1 | 14197.0 | -24.2 | -59.4 |
| 10Y | -92368.2 | 0 | 0 | 0 | 15252.5 | 30761.1 | -82.1 |
| 20Y | -143137.4 | 0 | 0 | 0 | 0 | 40998.7 | 46118.5 |
| 30Y | -62590.1 | 0 | 0 | 0 | 0 | 0 | 41602.3 |
| BucketTotals | -376040.3 | 13138.1 | 9800.0 | 16836.0 | 29452.7 | 71733.1 | 87563.5 |

###### Table 162: Inflation Vega of InflSwapInflNominalLin and inflation vegas of the calibration targets projected onto the tenor structure of the LocalVols.

The vega of the exotic instrument projected at each tenor point T ∈ {1Y, 2Y, 5Y, 10Y, 20Y, 30Y} is stored by the vector 

v = (v₁, ..., v₆) = (-14575.1, -17862.0, ... -62590.1)

i.e. by the column "InflSwapInflNominalLin" in the above table. The vega of each calibration target projected at each tenor point T ∈ {1Y, 2Y, 5Y, 10Y, 20Y, 30Y} is stored in each of the columns "0Y-1Y PUT", ..."20Y-10Y PUT" in the above table. We denote by A the 6x6 matrix formed by the columns "0Y-1Y PUT",...,"20Y-10Y PUT", i.e.

A = (a_j^k)_{j=1,..,6,k=1,..,6}

where an element a_j^k represents the vega of the j^th calibration target projected onto tenor k.
We are interested in building a vega hedge for the exotic instrument using the calibration targets, i.e determine the quantities ω₁, ..., ω₆ that we need to hold from each calibration instrument such that the vega of the combined position is 0 i.e.

VEGA_exotic + ∑_{i=1}^6 ω_i * VEGA_target(i) = 0

By denoting the vector ω = (ω₁, ..., ω₆) and using the available information from the above table this amounts to solving the linear system

A · ω = v ⟺ ω = A^{-1} · v

Solving the linear system for the numerical example considered above gives us the following vector ω containing the weights that need to be assigned to each calibration target:

ω = (-0.89602051 - 1.91529578 - 0.77048829 - 2.4360313 - 1.79990165 - 1.50448662)

This implies that the six bucketed vegas will be given ω_i · VEGA_target(i), i = 1,...,6 and where VEGA_target(i) represents the total vega corresponding to calibration target i (information stored in the row "BucketTotals" from the above table). This gives us the following bucketed vegas for InflSwapInflNominalLin exotic instrument:

| Tenor | Vega |
| --- | --- |
| 0Y/1Y | -11772 |
| 1Y/2Y | -18769 |
| 3Y/2Y | -12971 |
| 5Y/5Y | -71747 |
| 10Y/10Y | -129040 |
| 20Y/10Y | -131738 |
| All buckets | -376040 |

###### Table 163: Inflation Vega for 30Y InflSwapInflNominalLin projected on the calibration targets. A significant portion of the vega is concentrated on the 5Y, 10Y, 20Y tenors, and therefore the vega on the 10Y/10Y and 20Y/10Y instruments show the largest concentration, and the vega on the 5Y/5Y to a lesser degree.

#### 4.2.2 Calibration Testing - MARS request 2020Sep01-DBEAGLE-15197

The MARS request 2020Sep01-DBEAGLE-15197 covers the calibration testing described in Section 3.10.4 of DBAnalytics' calibration testing document [42]. The submitted testing is relevant for the following template names, model names and products:

| Template Name | Product | Model Name |
| --- | --- | --- |
| <CCY>_<INDEX>_FXSV_<YOY/ZC>_<YYYYMMDD> | InflSwapLockback | DBX-ShortRate_InflationStochVol |
|  | InflSwapLPINonStd | DBX-ShortRate_InflationStochVol |
| <CCY>_<INDEX>_FXVOL_<YOY/ZC>_<YYYYMMDD> | InflSwapLPINonStd | DBX-ShortRate_InflationStochVol |
| <INDEX>_FXVOL_TVSV_<YOY/ZC>_<YYYYMMDD> | InflSwapLockback | DBX-ShortRate_InflationStochVol |
|  | InflSwapAverage | DBX-ShortRate_InflationStochVol |
|  | InflSwapInflNominalLin | DBX-ShortRate_InflationStochVol |
|  | InflSwapPayDelayExtinguisher | DBX-ShortRate_InflationStochVol_CreditIntensity |
|  | InflSwapSnowball | DBX-ShortRate_InflationStochVol |
|  | HybSwapIdxMultiAssetBasket | DBX-ShortRate_EquitySkew |
|  | InflSwapZCAccreterXCcyCallableBerm | DBX-ShortRate_FXSkew_InflationStochVol |
|  | InflSwapLPINonStd | DBX-ShortRate_InflationStochVol2 |
|  | InflSwaptionZCEuro | DBX-ShortRate_InflationStochVol |
|  | LongevityPensionBespokeInflCapFloor | DBX-ShortRate_InflationStochVol_MortalityIntensityLeoCarter |
|  | LongevityPensionBespoke | DBX-ShortRate_MortalityIntensityLeoCarter |
|  | InflSwapYOYQuanto | DBX-ShortRate_FXSkew_InflationStochVol |
|  | InflSwapYOYCapFloor | DBX-ShortRate_InflationStochVol |

###### Table 164: List of template names and products (together with the corresponding model name used in pricing) that rely on each template for calibration, according to Section 3.10.5 of [42].

The Template name defines the format of the calibration dictionary and the composition of the set of calibration targets. A particular instance of the template name is referred to as a object name. For example, a particular instance of <INDEX>_FXVOL_TVSV_<YOY/ZC>_<YYYYMMDD> can be FS_UKRPI_FXVOL_TVSV_YOY_20200429, where

1. The field INDEX represents the inflation index i.e. UKRPI.
2. The field YOY signals that the calibration targets are YOY put-return options.

The following table displays the materiality of each product and the model name used in its pricing:

| PRDS Product | Number Trades | PV (EUR ABS) | Model Name |
| --- | --- | --- | --- |
| InflSwapLockback | 55 | 844,260,599.17 | DBX-ShortRate_InflationStochVol |
| InflSwapLPINonStd | 7 | 1,224,739,452.51 | DBX-ShortRate_InflationStochVol |
| InflSwapAverage | 4 | 85,812,975.74 | DBX-ShortRate_InflationStochVol |
| InflSwapInflNominalLin | 6 | 7,315,848.43 | DBX-ShortRate_InflationStochVol |
| InflSwapPayDelayExtinguisher | 1 | 33,294,075.77 | DBX-ShortRate_InflationStochVol_CreditIntensity |
| InflSwapSnowball | 15 | 11,168,087.91 | DBX-ShortRate_InflationStochVol |
| HybSwapIdxMultiAssetBasketInfl | 9 | 1,395,846.38 | DBX-ShortRate_EquitySkew |
| InflSwapZCAccreterXCcyCallableBerm | 9 | 278,963,759.6 | DBX-ShortRate_FXSkew_InflationStochVol |
| InflSwaptionZCEuro | 6 | 251,176,383.93 | DBX-ShortRate_InflationStochVol |
| LongevityPensionBespokeInflCapFloor | 203 | 991,414,555.70 | DBX-ShortRate_InflationStochVol_MortalityIntensityLeoCarter |
| LongevityPensionBespoke | 545 | 1,021,151,613.76 | DBX-ShortRate_MortalityIntensityLeoCarter |
| InflSwapYOYQuanto | 1 | 1,102,180.99 | DBX-ShortRate_FXSkew_InflationStochVol |
| InflSwapYOYCapFloor | 2 | 1,232,543.75 | DBX-ShortRate_InflationStochVol |

###### Table 165: Model inventory associated to products listed in MARS request 2020Sep01-DBEAGLE-15197 (COB 10 Nov.2020).

| Model Configuration |
| --- |
| DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV] (*) |
| DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV]_CreditIntensityLognormal[LVMR] (*) |
| DBX-ShortRateNormal[LVTV]_FXSkew[SP4]_InflationStochVol[DBTTV] (*) |
| DBX-ShortRateNormal[LVTV]_EquitySkew (**) |
| DBX-ShortRateNormal[LVTV]_InflationStochVol[DBTTV]_MortalityIntensityLeoCarter |

###### Table 166: List of model configurations corresponding to the model names listed in MARS request 2020Sep01-DBEAGLE-15197. Note that only the configurations marked with (*) belong to the Rates space. Their grouping in the same request is justified by the fact that the 5 model configurations have the dynamics for the interest rate component and for the inflation component. Therefore the calibration process of the inflation volatility is common to all models listed above. Note that model configuration (**) is not relevant in the context of inflation calibration, see below comments.

The main objective of the present section is the validation of the calibration process of the inflation volatility, mainly in the context of models belonging to the Rates space. The results of the calibration are used by the Short-Rate_InflationStochVol part of the model later in the pricing. Any additional model components (e.g. CreditIntensity, FXSkew) used in the pricing have their separate calibration logic and do not rely on the calibration described here. Therefore, we will not focus on the credit or equity components of the above models. However, we make the following comments:

* In Section 3.10.5 of [42] it is stated that HybSwapIdxMultiAssetBasket, priced under the model configuration DBX-ShortRate_EquitySkew, does not depend on InflationStochVOL. Therefore its presence in the MARS request is superfluous.

* Model configuration DBX-ShortRate_MortalityIntensityLeeCarter used in relation with LongevityPensionBespoke was not listed in the MARS request. However, since the product does not have an inflation component its presence in the MARS request is superfluous.

The following table displays the object names and calibration dictionaries provided by DBAnalytics for testing:

| PRDS Product | Object Name | Calibration Dictionary |
| --- | --- | --- |
| InflSwapZCAccreterXCcyCallableBerm (*) | FS_UKRPI_FXVOL_TVSV_YOY_20200429 | Calib_UKRPI |
| LongevityPensionBespokeInflCapFloor | FS_UKRPI_FXVOL_TVSV_YOY_20200429 | Calib_UKRPI |
| InflSwapYOYQuanto (*) | FS_USCPI_FXVOL_TVSV_YOY_20200429 | Calib_USCPI |

###### Table 167: Provided object names and calibration dictionaries for testing. Note that only the products marked with (*) belong to the Rates space.

######## 4.2.2.1 Conceptual soundness of calibration process. Main conclusions

The tests performed in the present document and in Sections 3.10.4 of [42] show that:

* Robustness under different market scenarios: The calibration performed in EOD scenario) in different market regimes generates by applying shifts to the original market-observed implied volatilities of the targets - see Section 4.2.2.11, with calibration errors on average of order 10^-9 in all considered scenarios.

* Risk projections and construction of a vega hedge: A vega hedge can be constructed based on an algorithm that relies on the projection of the total vega of an exotic on the calibrated parameters. The algorithm also provides a way to (indirectly) compute the sensitivity of the exotic with respect to each of the calibration targets. The tests show that the distribution of the total vega of the exotics into the calibration targets is largely similar across different scenarios, indicating that the risk projection onto the calibration targets is fairly stable.

* Number of Calibration targets and Optimization method: The model calibrates to a set of targets consisting of 6 YOY put-return options. The testing performed in Section 4.2.2.5 and in Section 3.10.4 of [42] shows that the calibration quality is high, with the absolute differences between the market implied volatilities of the calibration targets and the model-generated implied volatilities being on average of order 10^-9. The optimization method in use is LEASTSQUARES (Levenberg-Marquardt). The tests performed in Section 4.2.2.6 do not show sensitivity to MaxIter when this parameter is set to values greater or equal to 10 (its current default value). We recommend GVG to monitor the calibration quality on an ongoing basis, see Model Limitation 1 (MARS Model Limitation ID: 3609).

* Initial guesses for parameters: The calibrated parameters show a small sensitivity to the choice of the initial guesses used in the calibration. This issue has been confirmed in the tests performed in Section 4.2.2.10. If the calibrated parameters show sensitivity to the choice of the initial guesses used in the calibration. It is recommended that the initial guesses be set to reasonable values (e.g. to the previous day's calibrated values, in order to ensure that no jumps in PV are recorded and the calibrated values are consistent through time).

* The calibrated parameters show sensitivity to the way the weights are allocated among the calibration targets. The weights should be allocated in a meaningful way (e.g. taking into account the liquidity of the targets) and the impact of the weight allocation should be monitored by GVG on a regular basis and uncertainty reserves should be computed, if deemed necessary.

##### Validation Findings

There are no validation findings raised in the context of MARS request 2020Sep01-DBEAGLE-15197.

######## 4.2.2.2 Model description

In the listed model configurations, inflation is modelled with the help of three processes: the nominal interest rate, the real interest rate and the inflation or Consumer Price Index (CPI). The model is an extension of the three-factor approach proposed by Jarrow and Yildirim in [3]. For the complete mathematical description of the inflation model, see Section 4.2.1.2 or DBAnalytics' model document [2].

######## 4.2.2.3 Calibration description

In this section we focus on the calibration of the volatility of the inflation index i.e. on the calibration of the quantities σ(t) and η_e from equations (68)-(69). The SV component η_e depends on two parameters: k_e(t) and the vol-of-vol parameter I(t). In the testing performed in Section 3.10.4 the two SV parameters are not calibrated but set exogenously, which corresponds to the current calibration approach done in production^1.
The calibration of the volatility component σ(t) is exogenous using GenCalibration dictionaries: the calibration targets and the initial guesses for the volatility parameters are specified in a separate calibration dictionary of MODEL-GENCALIBRATION class and optimizer to iteratively modify the model parameters (starting from the initial guesses) until the calibration targets are matched within a specified error tolerance. The calibrated parameters are later used in the pricing dictionaries. This method differs from Autocalibration where the parameters are calibrated on the fly during pricing.

The optimization method is LEASTSQUARES (Levenberg-Marquardt), with the former being the faster of the two methods and should be used when the number of parameters to calibrate is small, while the latter being more robust. POWELL can be used only if the number of parameters to be calibrated is equal to the number of securities being calibrated against. Note that the optimization method in use can also be set through the property SetRep@explicitOpt.method setting the property CalibType to CALVOL or CALVOLROBUST, or market prices by setting the property CalibType to CALPRICE. The property MaxIter sets the number of iterations used in the calibration algorithm, with the default value being 10. The property CalibrationTolerance sets the threshold for the accepted calibration error. The set of targets consist of a set of put-return instruments of on the spot inflation rate with payoff at time T_0(i) + T_1(i) given by

((K + 1)^T_1(i) - I_T_0(i)+T_1(i)/I_T_0(i))^+, i = 1,...,M,

* For DBMVOL-ZC: T_0(i) = 0 for all i = 1,...M and 0 < T_1(1) < ... < T_1(M). At each (T_0(i), T_1(i)) combination, the option strike is K = 0.

* For DBMVOL-YOY: T_0(1) = 0 and T_0(i) > 0 for all i = 2,...M and T_1(i) > 0 for all i = 1,...M. At each (T_0(i), T_1(i)) combination, the option strike is K = 0.

| OptionMat | Tenor | Frequency | Basis | OptionType | Strike | Price | Weight | Use |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0.0877979421 | 100 | 1 |
| 1y | 2y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0.1572369257 | 100 | 1 |
| 3y | 2y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0.2975425797 | 100 | 1 |
| 5y | 5y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 1.1999817775 | 100 | 1 |
| 10y | 10y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 4.3068587732 | 20 | 1 |
| 20y | 10y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 5.8103306616 | 20 | 1 |

###### Table 168: Example of calibration targets in the case of Calib_UKRPI.

| OptionMat | Tenor | Frequency | Basis | OptionType | Strike | Price | Weight | Use |
| --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0 | 100 | 0 |
| 1y | 2y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0.1787829106 | 100 | 1 |
| 3y | 2y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 0.2293940615 | 100 | 1 |
| 5y | 5y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 1.3592631135 | 100 | 1 |
| 10y | 10y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 4.4540563753 | 20 | 1 |
| 20y | 10y | ANNUALLY | NUMBER_1 | PUT.RETURN | 0 | 4.6979462327 | 20 | 1 |

###### Table 169: Example of calibration targets in the case of Calib_USCPI.

######## 4.2.2.4 Description of DBAnalytics testing results

DBAnalytics examined the correct implementation and robustness of the calibration process through a series of tests performed in Section 3.10.4 of [42]. The performed tests are the following:

1. Sensitivity of calibration to Initial Guesses used for parameters and impact on prices of exotics;

2. Sensitivity of calibration to MaxIter parameter and its impact on prices of exotics;

3. Robustness of calibration under different market scenarios;

4. Sensitivity of calibration to the weight allocation across calibration targets;

5. Robustness of calibration under different scenarios for LocalVolsSV parameter and impact of the parameter on prices of exotics;

6. Robustness of calibration under different scenarios for MeanRevSV parameter and impact of the parameter on prices of exotics;

######## 4.2.2.5 Calibration quality in EOD scenario

We perform the calibration using market data provided in two calibration dictionaries: Calib_UKRPI and Calib_USCPI. The parameters are calibrated using the DBAnalytics LEASTSQUARES method (Levenberg-Marquardt). In the MODEL object, the MaxIter property is set to 30 and the NumberStr property is set to 25000. The calibration method in use is LEASTSQUARES and CalibType=CALVOLROBUST i.e. the calibration is set of match the market implied volatilities^2. The results are displayed in the following tables: the market observed implied volatilities of the calibration targets, the model-generated implied volatilities and the differences between the two (these results can be found in the CalibSecurities subtable of the results file). We can see that on average, difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities is below 10^-7.

| OptionMat | Tenor | Strike | MarketVols | ModelVols | VolDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0.013164711 | 0.0131647 | 0 | 100 |
| 1y | 2y | 0 | 0.013911478 | 0.0139115 | 0.0 | 100 |
| 3y | 2y | 0 | 0.013125538 | 0.0131254 | 0.0 | 100 |
| 5y | 5y | 0 | 0.011260741 | 0.0112607 | -0.0 | 100 |
| 10y | 10y | 0 | 0.00883629 | 0.0088363 | -0.0 | 20 |
| 20y | 10y | 0 | 0.00682987 | 0.0068299 | -5e-07 | 20 |

###### Table 170: Calibration results for Calib_UKRPI: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets. In this dictionary, LocalVolsSV=0.0001 and MeanRevSV=0.0.

| OptionMat | Tenor | Strike | MarketVols | ModelVols | VolDiffs | Weights |
| --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | 0.0068700904 | 0.0068702 | -1e-07 | 100 |
| 3y | 2y | 0 | 0.0068312241 | 0.0068312 | -0.0 | 100 |
| 5y | 5y | 0 | 0.0080945744 | 0.0080945 | 0.0 | 100 |
| 10y | 10y | 0 | 0.0073729742 | 0.007373 | -1e-07 | 20 |
| 20y | 10y | 0 | 0.0058324564 | 0.0058324 | 0.0 | 20 |

###### Table 171: Calibration results for Calib_USCPI: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets. In this dictionary, LocalVolsSV=0.15 and MeanRevSV=0.05.

######## 4.2.2.6 Calibration sensitivity to LocalVolsSV parameter

In this section we examine the impact of the volatility of the SV component (LocalVolsSV) on the calibration and on the price of exotic products relying on the calibration. The LocalVolsSV parameter is set exogenously. In order to examine the impact of the MeanRevSV parameter we consider four alternative scenarios:

| Scenario | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 |
| --- | --- | --- | --- | --- |
| LocalVolsSV | 10% | 20% | 40% | 50% |

###### Table 172: LocalVolsSV parameter values in three alternative scenarios. The MeanRevSV parameter is kept fixed to the value from the base case i.e. MeanRevSV=0% in the case of Calib_UKRPI and MeanRevSV=5% in the case of Calib_USCPI.

We aim to confirm the correctness of the analysis provided in [42] and further expand it. The tests done in Section 3.10.4 [42] show that the LocalVolsSV parameter has an impact on the calibrated parameters and on the prices of exotic options depending on the calibration. First, we presents the results of the calibration in the four alternative scenarios in the following tables:

| OptionMat | Tenor | Strike | VolDiffs (S-1) | VolDiffs (S-2) | VolDiffs (S-3) | VolDiffs (S-4) | Weights |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0 | 0 | 0 | 0 | 100 |
| 1y | 2y | 0 | 2e-10 | 1e-10 | 1e-10 | 0 | 100 |
| 3y | 2y | 0 | 7e-10 | 1e-10 | 2e-10 | 3e-10 | 100 |
| 5y | 5y | 0 | -1.3e-09 | -3.5e-09 | 1e-09 | -8.4e-09 | 100 |
| 10y | 10y | 0 | -3.82e-08 | -4.96e-08 | 6.77e-08 | 3.97e-08 | 20 |

###### Table 173: Calibration results for Calib_UKRPI: absolute differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets in the four LocalVolsSV scenarios.

We can see that in the case of Calib_UKRPI the differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets have the same order of magnitude in the base scenario 10^-9. This implies that calibration quality does not degrade in the alternative scenarios.

| OptionMat | Tenor | Strike | VolDiffs (S-1) | VolDiffs (S-2) | VolDiffs (S-3) | VolDiffs (S-4) | Weights |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | -1.02e-08 | -2.7e-08 | -4.99e-08 | -3.4e-09 | 100 |
| 3y | 2y | 0 | 1.73e-08 | -1.53e-08 | -1.11e-08 | 6e-10 | 100 |
| 5y | 5y | 0 | -2.90e-08 | 2.1e-08 | 3.5e-09 | 2e-10 | 100 |
| 10y | 10y | 0 | 1.031e-07 | -7.56e-08 | 2.4e-09 | -2e-10 | 20 |
| 20y | 10y | 0 | 6.85e-08 | 5.57e-08 | 2.1e-09 | 0 | 20 |

###### Table 174: Calibration results for Calib_USCPI: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets in the four LocalVolsSV scenarios.

We can see that in the case of Calib_UKRPI and Calib_USCPI the differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets are the same order of magnitude ≈ 10^-8 which implies that the calibration quality does not degrade in the alternative scenarios. We consider two products depending on Calib_UKRPI: InflSwapZCAccreterXCcyCallableBerm and LongevityPensionBespokeInflCapFloor and one product depending on Calib_USCPI: InflSwapYOYQuanto and examine the impact on the PV in the three LocalVolsSV scenarios:

| Product | LocalVolsSV=10% | LocalVolsSV=20% | LocalVolsSV=40% | LocalVolsSV=50% |
| --- | --- | --- | --- | --- |
| InflSwapYOYQuanto | 3,879,784.11 | 3,850,746.51 | 3,871,832.00 | 3,923,679.91 |

###### Table 176: Pricing results for InflSwapYOYQuanto.

######## 4.2.2.7 Calibration sensitivity to MeanRevSV parameter

In this section we examine the impact of the mean-reversion of the SV component (MeanRevSV) on the calibration and on the price of exotic products relying on the calibration. The MeanRevSV parameter is set exogenously. In order to examine the impact of the MeanRevSV parameter we consider three alternative scenarios:

| Scenario | Scenario 1 | Scenario 2 | Scenario 3 |
| --- | --- | --- | --- |
| MeanRevSV | 0% | 10% | 20% |

###### Table 177: MeanRevSV parameter values in three alternative scenarios. The LocalVolsSV parameter is kept fixed to the value from the base case i.e. LocalVolsSV=0.0001 in the case of Calib_UKRPI and LocalVolsSV=0.15 in the case of Calib_USCPI.

We aim to confirm the correctness of the analysis provided in [42] and further expand it. The tests done in Section 3.10.4 [42] show that the MeanRevSV parameter has an impact on the calibrated parameters and on the prices of exotic options depending on the calibration. First, we presents the results of the calibration in the three alternative scenarios in the following tables:

| OptionMat | Tenor | Strike | VolDiff(S-1) | VolDiff(S-2) | VolDiff(S-3) | PriceDiff(S-1) | PriceDiff(S-2) | PriceDiff(S-3) | Weights |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0 | 0 | 0 | 0.0 | 0.0 | 0.0 | 100 |
| 1y | 2y | 0 | 1e-10 | 1e-10 | 1e-10 | 0.0 | 0.0 | 0.0 | 100 |
| 3y | 2y | 0 | 2e-10 | 2e-10 | 2e-10 | 0.0 | 0.0 | 0.0 | 100 |
| 5y | 5y | 0 | 7e-10 | 7e-10 | 7e-10 | 2e-07 | 2e-07 | 2e-07 | 100 |
| 10y | 10y | 0 | -1.58e-08 | -1.58e-08 | -1.58e-08 | -1.77e-05 | -1.78e-05 | -1.78e-05 | 20 |
| 20y | 10y | 0 | -4.835e-07 | -4.831e-07 | -4.83e-07 | 0.0007832 | -0.0007833 | -0.0007828 | 20 |

###### Table 178: Calibration results for Calib_UKRPI: absolute differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets in the three MeanRevSV scenarios. The table also displays the absolute differences market prices and the model-generated prices.

We can see that in the case of Calib_UKRPI the differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets have the same order of magnitude in the base scenario 10^-9. This implies that calibration quality does not degrade in the alternative scenarios.

| OptionMat | Tenor | Strike | VolDiff(S-1) | VolDiff(S-2) | VolDiff(S-3) | PriceDiff(S-1) | PriceDiff(S-2) | PriceDiff(S-3) | Weights |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | 0 | 6.4e-09 | 1.18e-08 | -1e-06 | 5e-07 | 9e-07 | 100 |
| 3y | 2y | 0 | 1e-10 | 2.1e-09 | 1.7e-08 | 1e-07 | 2e-07 | 1.7e-06 | 100 |
| 5y | 5y | 0 | 2e-10 | -7.8e-09 | -1.63e-08 | -3.2e-08 | -6.6e-06 | -1e-06 | 100 |
| 10y | 10y | 0 | -7e-10 | 3.22e-08 | 6.03e-08 | 3.3e-06 | 3.87e-05 | 7.24e-05 | 20 |
| 20y | 10y | 0 | -1.58e-08 | -1.88e-08 | -3.87e-08 | -2.8e-06 | -2.84e-05 | -5.83e-05 | 20 |

###### Table 179: Calibration results for Calib_USCPI: difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets in the three MeanRevSV scenarios. The table also displays the absolute differences market prices and the model-generated prices.

We can see that in the case of Calib_UKRPI and Calib_USCPI the differences between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets are the same order of magnitude 10^-8 which implies that the calibration quality does not degrade in the alternative scenarios. We consider two products depending on Calib_UKRPI: InflSwapZCAccreterXCcyCallableBerm and LongevityPensionBespokeInflCapFloor and one product depending on Calib_USCPI: InflSwapYOYQuanto and examine the impact on the PV in the three MeanRevSV scenarios:

| Product | MeanRevSV=0% | MeanRevSV=10% | MeanRevSV=20% |
| --- | --- | --- | --- |
| InflSwapZCAccreterXCcyCallableBerm | -67,589,069.35 | -67,589,091.09 | -67,589,100.07 |
| LongevityPensionBespokeInflCapFloor | 95,569.97 | 95,569.98 | 95,569.99 |
| InflSwapYOYQuanto | 4,543,610.77 | 4,543,705.77 | 4,543,753.46 |

###### Table 180: Pricing results for products depending on for Calib_UKRPI and Calib_USCPI.

Note that in the case of Calib_USCPI, the dictionary calibrates a term structure of LocalVols at the time pegs 1Y, 2Y, 5Y, 10Y and 20Y. The product InflSwapYOYQuanto is priced using an inflation index VOL object that requires a term structure of TermVols at the time pegs 0.25Y, 1Y, 2Y, 5Y, 7Y, 10Y, 15Y, 20Y and 30Y. Therefore we converted the LocalVols parameters calibrated in the three scenarios into TermVols parameters using the DBAnalytics function VolFunction. In the tests delivered in Section 3.10.4, table 493, the calibrated LocalVols were used directly (by modifying the VOL object to allow for LocalVols inputs instead of TermVols). If we use the calibrated LocalVols directly we obtain the following PVs for InflSwapYOYQuanto:

| Product | MaxIter=10 | MaxIter=20 | MaxIter=30 | MaxIter=40 | MaxIter=50 |
| --- | --- | --- | --- | --- | --- |
| InflSwapZCAccreterXCcyCallableBerm | -67,589,069.35 | -67,589,069.35 | -67,589,069.35 | -67,589,069.35 | -67,589,069.35 |
| InflSwapYOYQuanto | 4,543,706.77 | 4,543,706.77 | 4,543,706.77 | 4,543,706.77 | 4,543,706.77 |

##### 4.2.2.8 Calibration sensitivity to MaxIter parameter

The MaxIter property sets the number of iterations performed by the pricer during the calibrations. In this section we perform the following test: we consider the following scenarios for the MaxIter property:

| Property | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| MaxIter | 10 | 20 | 30 | 40 | 50 |

###### Table 182: Scenarios for MaxIter property.

The following table display the results of the calibration, expressed in the absolute differences between the market-observed implied volatilities of the targets and the model-generated implied volatilities of the targets:

| OptionMat | Tenor | Strike | VolDiffs (MaxIt=10) | VolDiffs (MaxIt=20) | VolDiffs (MaxIt=30) | VolDiffs (MaxIt=40) | VolDiffs (MaxIt=50) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | 4e-09 | 4e-09 | 4e-09 | 4e-09 | 4e-09 |
| 3y | 2y | 0 | 7e-09 | 7e-09 | 7e-09 | 7e-09 | 7e-09 |
| 5y | 5y | 0 | -8e-09 | -8e-09 | -8e-09 | -8e-09 | -8e-09 |
| 10y | 10y | 0 | 2.7e-08 | 2.7e-08 | 2.7e-08 | 2.7e-08 | 2.7e-08 |
| 20y | 10y | 0 | -1.6e-08 | -1.6e-08 | -1.6e-08 | -1.6e-08 | -1.6e-08 |

###### Table 183: Calibration results for Calib_USCPI for the five scenarios of MaxIter.

| OptionMat | Tenor | Strike | VolDiffs (MaxIt=10) | VolDiffs (MaxIt=20) | VolDiffs (MaxIt=30) | VolDiffs (MaxIt=40) | VolDiffs (MaxIt=50) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0 | 0 | 0 | 0 | 0 |
| 1y | 2y | 0 | 0 | 0 | 0 | 0 | 0 |
| 3y | 2y | 0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 |
| 5y | 5y | 0 | -0.0 | -0.0 | -0.0 | -0.0 | -0.0 |
| 10y | 10y | 0 | -1.6e-08 | -1.6e-08 | -1.6e-08 | -1.6e-08 | -1.6e-08 |
| 20y | 10y | 0 | -5.16e-07 | -5.16e-07 | -5.16e-07 | -5.16e-07 | -5.16e-07 |

###### Table 184: Calibration results for Calib_UKRPI for the five scenarios of MaxIter.

###### 4.2.2.9 Calibration sensitivity to Weight allocation

In this section we examine the impact of the weights assigned to the calibration targets on the robustness of the calibration and on the price of exotic options relying on the calibration. To this purpose, we will extend the tests performed in Section 3.10.4 of [42] by considering the following scenarios for the weights:

| Scenario | Weights |
| --- | --- |
| Scenario 1 (base) | [100, 100, 100, 100, 20, 20] |
| Scenario 2 | [100, 100, 100, 100, 100, 100] |
| Scenario 3 | [1000, 1000, 1000, 1000, 1000, 1000] |
| Scenario 4 | [10,000, 10,000, 10,000, 10,000, 10,000, 10,000] |
| Scenario 5 | [20, 20, 20, 100, 100, 100] |

Table 186: Considered scenarios for the weights assigned to the calibration targets contained in Calib_USCPI and Calib_UKRPI.

The results of calibrations in each of the above scenarios are summarized in the following tables:

| OptionMat | Tenor | Strike | VolDiffs (Sc. 1) | VolDiffs (Sc. 2) | VolDiffs (Sc. 3) | VolDiffs (Sc. 4) | VolDiffs (Sc. 5) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | 4e-09 | 1.7e-08 | 3.8e-08 | 1e-08 | 4.6e-09 |
| 3y | 2y | 0 | 7e-09 | 1e-08 | 1.5e-08 | 3e-09 | 3.8e-08 |
| 5y | 5y | 0 | 8e-09 | 5e-09 | 1.4e-08 | 0.0 | 1.3e-08 |
| 10y | 10y | 0 | 2.7e-08 | 6e-09 | 1.2e-08 | 1e-09 | 1e-08 |
| 20y | 10y | 0 | 1.5e-08 | 4e-09 | 8e-09 | 0.0 | 7e-09 |

Table 187: Calibration results for Calib_USCPI displaying the difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets (VolDiffs columns). We can see that the calibration quality expressed in terms of distance between the market implied volatilities and model-generated implied volatilities remains high in all considered scenarios.

The choice of weights is shown to have a negligible impact on the pricing of exotic options depending on the calibration:

| Product | MaxIter=10 | MaxIter=20 | MaxIter=30 | MaxIter=40 | MaxIter=50 |
| --- | --- | --- | --- | --- | --- |
| InflSwapZCAcrreterXCcyCallableBerm | -67,590,876.66 | -67,590,876.66 | -67,590,876.66 | -67,590,876.66 | -67,590,876.66 |
| LongevityPensionBespokeInflCapFloor | 95,428.59 | 95,428.59 | 95,428.59 | 95,428.59 | 95,428.59 |
| InflSwapYOYQuanto | 3,863,605.31 | 3,863,605.31 | 3,863,605.31 | 3,863,605.31 | 3,863,605.31 |

Table 185: Pricing results for products depending on for Calib_UKRPI and Calib_USCPI.

| Product | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| InflSwapYOYQuanto | 3,863,605.31 | 3,863,537.48 | 3,863,527.62 | 3,863,554.51 | 3,863,525.33 |

Table 188: Pricing results for InflSwapYOYQuanto.

The results of calibrations in each of the above scenarios in the case of Calib_UKRPI are summarized in the following tables:

| OptionMat | Tenor | Strike | VolDiffs (Sc. 1) | VolDiffs (Sc. 2) | VolDiffs (Sc. 3) | VolDiffs (Sc. 4) | VolDiffs (Sc. 5) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 0y | 1y | 0 | 0 | 0.0 | 0.0 | 0 | 2e-09 |
| 1y | 2y | 0 | 0 | 1e-09 | 1e-09 | 1e-09 | 4e-09 |
| 3y | 2y | 0 | 0.0 | 5e-09 | 4e-09 | 3e-09 | 9.3e-08 |
| 5y | 5y | 0 | 0.0 | 3.2e-08 | 8e-09 | 1.4e-08 | 1.8e-08 |
| 10y | 10y | 0 | 1.5e-08 | 5.2e-08 | 5e-09 | 3.1e-08 | 3.2e-08 |
| 20y | 10y | 0 | 5.15e-07 | 1.157e-06 | 1.91e-07 | 5.22e-07 | 1.147e-06 |

Table 189: Calibration results for Calib_UKRPI displaying the difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets (VolDiffs columns). We can see that the calibration quality expressed in terms of distance between the market implied volatilities and model-generated implied volatilities remains high in all considered scenarios.

The choice of weights is shown to have a negligible impact on the pricing of exotic options depending on the calibration:

| Product | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| InflSwapZCAcrreterXCcyCallableBerm | -67,591,454.04 | -67,591,447.35 | -67,591,455.93 | -67,591,454.62 | -67,591,451.95 |
| LongevityPensionBespokeInflCapFloor | 95,569.97 | 95,569.98 | 95,569.95 | 95,569.95 | 95,569.39 |

Table 190: Pricing results for products depending on Calib_UKRPI.

###### 4.2.2.10 Calibration sensitivity to initial guesses

The calibration process relies on the DBAnalytics LEASTSQUARES method (Levenberg-Marquardt) to determine the parameters of the inflation index. In this section we investigate the impact that the initial guesses for LocalVols/TermVols have on the calibration process.

The impact of the initial guesses used for the parameters contained in the subtables LocalVols/TermVols has been investigated in Section 3.10.4 of [42]. The tests set the initial guesses at all time points contained the LocalVols/TermVols tables to values from the set {5bps, 20bps, 60bps, 100bps} and show that the values of the exotic instruments depending on the calibration are influenced by the initial choice. Note that the optimizer does not converge in all cases: for calibration dictionary Calib_UKRPI the optimizer does not converge for initial guess 60bps. In the remaining cases, the calibration quality remains constant, with the average absolute difference between the market observed implied volatilities and the model-generated volatilities having order of magnitude 10^-9. In conclusion, the test of Section 3.10.4 of [42] show that the PV of exotic instruments to be sensitive to the initial guesses. In this section we confirm the analysis of [42]. The current initial guesses used in the calibration dictionary Calib_USCPI are presented in the following table:

| Time | Vol | UpperBound | LowerBound | Use | BumpType |
| --- | --- | --- | --- | --- | --- |
| 1 | 0.012444903 | 1000000 | 1e-05 | 1 | REL |
| 2 | 0.017822177 | 1000000 | 1e-05 | 1 | REL |
| 5 | 0.017161462 | 1000000 | 1e-05 | 1 | REL |
| 10 | 0.017508918 | 1000000 | 1e-05 | 1 | REL |
| 20 | 0.02176902 | 1000000 | 1e-05 | 1 | REL |

Table 191: Original initial guesses for LocalVols in calibration dictioanary Calib_USCPI.

We consider the following set of initial guesses to be set at all time pegs contained in the LocalVols table contained in the calibration dictionary:

| Property | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 | Scenario 6 |
| --- | --- | --- | --- | --- | --- | --- |
| Initial guess | 5bps | 20bps | 60bps | 100bps | 150bps | 200bps |

Table 192: Scenarios for initial guesses.

The following tables display the calibrated values of the LocalVols parameters in the four alternative scenarios:

| Time | LocalVols (5bps) | LocalVols (20bps) | LocalVols (60bps) | LocalVols (100bps) | LocalVols (150bps) | LocalVols (200bps) |
| --- | --- | --- | --- | --- | --- | --- |
| 1 | 0.0108536444 | 0.010853566 | 0.0108533159 | 0.0108537303 | 0.0108540453 | 0.0108538572 |
| 2 | 0.0089932187 | 0.0089937373 | 0.0089938196 | 0.0089935084 | 0.0089932575 | 0.0089934519 |
| 5 | 0.0151480568 | 0.0151480823 | 0.0151480089 | 0.0151481736 | 0.0151482363 | 0.0151482004 |
| 10 | 0.0256400251 | 0.0256399912 | 0.0256400776 | 0.0256399424 | 0.0256399712 | 0.0256399677 |
| 20 | 0.0251212547 | 0.0251212612 | 0.0251212138 | 0.0251212818 | 0.0251213043 | 0.0251212876 |

Table 193: Calibrated values of the LocalVols of Calib_USCPI in the six initial guess scenarios.

The following table display the values of exotic instrument depending in the calibration dictionary Calib_USCPI in the four scenarios considered for the initial guesses:

| Product | Guess=5bps | Guess=20bps | Guess=60bps | Guess=100bps | Guess=150bps | Guess=200bps |
| --- | --- | --- | --- | --- | --- | --- |
| InflSwapYOYQuanto | 3,863,568.78 | 3,863,553.68 | 3,863,534.84 | 3,863,558.39 | 3,863,578.63 | 3,863,567.15 |

Table 194: Pricing results for products depending on Calib_USCPI.

We consider the following set of initial guesses for Calib_UKRPI:

| Property | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| Initial guess | 20bps | 60bps | 100bps | 150bps | 200bps |

Table 195: Scenarios for initial guesses for TermVols in Calib_UKRPI.

The following tables display the calibrated values of the TermVols parameters in the five alternative scenarios:

| Time | TermVols (g=20bps) | TermVols (g=60bps) | TermVols (g=100bps) | TermVols (g=150bps) | TermVols (g=200bps) |
| --- | --- | --- | --- | --- | --- |
| 1 | - | - | 0.0144650094 | 0.0144650094 | 0.0144650094 |
| 2 | - | - | 0.0186638067 | 0.0186638068 | 0.0186638068 |
| 5 | - | - | 0.0239010925 | 0.0239010933 | 0.0239010932 |
| 10 | - | - | 0.0281752299 | 0.0281752288 | 0.0281752872 |
| 20 | - | - | 0.0313708699 | 0.0313711453 | 0.0313711363 |
| 30 | - | - | 0.0322147907 | 0.0322165998 | 0.0322164881 |

Table 196: Calibrated values of the TermVols of Calib_UKRPI in the five initial guess scenarios. The calibration is performed only in the case of initial guess=100bps, 150bps and 200bps, in the remaining cases the dictionary is throwing the error message: "PriceBook: Impossible vol curve in vol_object".

The following table display the values of exotic instruments depending in the calibration dictionary Calib_UKRPI in the three scenarios considered for the initial guesses:

| Product | Guess=100bps | Guess=150bps | Guess=200bps |
| --- | --- | --- | --- |
| InflSwapZCAcrreterXCcyCallableBerm | -67,591,450.57 | -67,591,454.53 | -67,591,454.49 |
| LongevityPensionBespokeInflCapFloor | 95,569.94 | 95,569.96 | 95,569.96 |

Table 197: Pricing results for products depending on Calib_UKRPI.

###### 4.2.2.11 Robustness of the calibration under different Market Scenarios

In this test we evaluate the robustness of the calibration engine to shifts in market regimes. To this purpose we apply relative shifts of size -50%, -25%, +25% and +50% to the market observed prices of the calibration targets, where a shift of size of x% indicates that all the implied volatilities of the calibration targets have been increased by x% of their base values.

| Scenario | Scenario 1 | Scenario 2 | Base | Scenario 3 | Scenario 4 |
| --- | --- | --- | --- | --- | --- |
| Shift size | -50% | -25% | 0% | +25% | +50% |

Table 198: Considered scenarios of relative shifts applied to the prices of the calibration targets.

The results of calibrations in each of the above scenarios are summarized in the following tables:

| OptionMat | Tenor | Strike | VolDiffs(sh=-50%) | VolDiffs(sh=-25%) | VolDiffs(sh=0%) | VolDiffs(sh=+25%) | VolDiffs(sh=+50%) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | -7.13e-08 | 3e-09 | 3.7e-09 | -1.5e-09 | -1.81e-08 |
| 3y | 2y | 0 | -8e-10 | 2e-09 | 7.5e-09 | -2e-10 | -3.3e-09 |
| 5y | 5y | 0 | -5.8e-09 | -1e-09 | -8.3e-09 | 9e-10 | 1.8e-09 |
| 10y | 10y | 0 | 4e-09 | 2e-09 | 2.68e-08 | -1.2e-09 | -2.2e-09 |
| 20y | 10y | 0 | -5.4e-09 | -1e-09 | -1.52e-08 | 1e-09 | 1.7e-09 |

Table 199: Calibration results for Calib_USCPI displaying the difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets (VolDiffs columns) in five scenarios: base and the four alternative scenarios (relative shifts of size -50%, -25%, +25%, and +50%)

| Product | Shift=-50% | Shift=-25% | Shift=0% | Shift=+25% | Shift=+50% |
| --- | --- | --- | --- | --- | --- |
| InflSwapYOYQuanto | 3,414,016.68 | 3,664,805.33 | 3,863,605.31 | 4,027,258.31 | 4,166,965.25 |

Table 200: Pricing results for product depending on Calib_USCPI.

| OptionMat | Tenor | Strike | VolDiffs(sh=-50%) | VolDiffs(sh=-25%) | VolDiffs(sh=0%) | VolDiffs(sh=+25%) | VolDiffs(sh=+50%) |
| --- | --- | --- | --- | --- | --- | --- | --- |
| 1y | 2y | 0 | -7.13e-08 | 3e-09 | 3.7e-09 | -1.5e-09 | -1.81e-08 |
| 3y | 2y | 0 | -8e-10 | 2e-09 | 7.5e-09 | -2e-10 | -3.3e-09 |
| 5y | 5y | 0 | -5.8e-09 | -1e-09 | -8.3e-09 | 9e-10 | 1.8e-09 |
| 10y | 10y | 0 | 4e-09 | 2e-09 | 2.68e-08 | -1.2e-09 | -2.2e-09 |
| 20y | 10y | 0 | -5.4e-09 | -1e-09 | -1.52e-08 | 1e-09 | 1.7e-09 |

Table 201: Calibration results for Calib_UKRPI displaying the difference between the market observed implied volatilities of the calibration targets and the model-generated implied volatilities of the calibration targets (VolDiffs columns) in five scenarios: base and the four alternative scenarios (relative shifts of size -50%, -25%, +25%, and +50%)

| Product | Shift=-50% | Shift=-25% | Shift=0% | Shift=+25% | Shift=+50% |
| --- | --- | --- | --- | --- | --- |
| InflSwapZCAcrreterXCcyCallableBerm | -67,424,166.41 | -67,508,334.98 | -67,591,454.04 | -67,671,054.73 | -67,748,905.12 |
| LongevityPensionBespokeInflCapFloor | 95,514.2461 | 95,542.9186 | 95,569.97 | 95,596.87 | 95,617.36 |

Table 202: Pricing results for products depending on Calib_UKRPI.

The results are in line with the ones of Section 3.10.4 of [42]. We conclude that the calibration process is robust under different market regimes.

###### 4.2.2.12 Impact of the calibration on the VEGA calculation

In this section, we examine behaviour of the inflation vega sensitivity of exotic products depending on the calibration. DBAnalytics VEGA mode calculation provides the projection of the instrument's total vega on each of the parameters contained in subtables LocalVols or TermVols. We consider the following five scenarios in which we apply relative shifts to the original market information (prices):

| Scenario | Scenario 1 | Scenario 2 | Base | Scenario 3 | Scenario 4 |
| --- | --- | --- | --- | --- | --- |
| Shift size | -50% | -25% | 0% | +25% | +50% |

Table 203: Considered scenarios of relative shifts applied to the prices of the calibration targets.

After performing the calibration in each of the above scenarios and computing the VEGA, we obtain the following "bucketed" vegas:

| Buckets | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| Flat | -68,860,103.51 | -68,927,340.92 | -68,915,557.88 | -68,963,752.78 | -69,043,588.53 |
| 1.0000 | -173.37 | -2088.43 | -194.96 | -340.12 | -307.01 |
| 2.0000 | 3426.27 | 23,050.18 | -336.3 | 409.07 | 612.34 |
| 5.0000 | -7340.85 | -14,969.51 | 2340.49 | -1716.7 | -2023.06 |
| 10.0000 | -26,234.61 | -32,872.92 | 850.89 | -2548.81 | -2905.79 |
| 20.0000 | 56,725.45 | 30,646.15 | -25,841.37 | -24,797.31 | -28,587.9 |
| 30.0000 | -78,010.96 | -60,906.16 | -5484.11 | -4822.99 | -8574.13 |
| BucketTotals | -51,608.06 | -57,140.7 | -28,645.37 | -33,816.85 | -39,785.55 |

Table 208: InflSwapZCAcrreterXCcyCallableBerm: The total vega and the vega projections w.r.t. shifts in the volatilities of the calibration targets.

| Calibration Target Weights | 0Y1Y | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- | --- |
| Scenario 1 | -0.0192 | -0.0690 | -0.9406 | -3.8091 | 0.6103 | -0.9580 |
| Scenario 2 | 0.0509 | 2.6709 | -1.4532 | 2.8408 | -0.1244 | -0.4963 |
| Scenario 3 | -0.0191 | -0.0672 | -0.0049 | 0.4573 | 0.5876 | -0.0923 |
| Scenario 4 | -0.0298 | -0.0903 | -0.1249 | -0.3062 | -0.4020 | -0.0220 |
| Scenario 5 | -0.0247 | -0.0731 | -0.1301 | -0.3230 | -0.3504 | -0.0316 |

Table 209: InflSwapZCAcrreterXCcyCallableBerm: The computed values of the weight parameters.

| Calibration Target Vegas | 0Y1Y | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- | --- |
| Scenario 1 | -68.105 | -573.252 | -5401.696 | 17,336.5 | 3947.378 | -37,841.934 |
| Scenario 2 | 470.412 | 14,085.473 | -33,131.367 | 24,639.034 | 2221.888 | -26,470.381 |
| Scenario 3 | 374.192 | -676.436 | -194.233 | 8007.4968 | 15,982.73 | -2988.079 |
| Scenario 4 | -298.137 | -1183.718 | -4972.811 | -4186.419 | 19801.843 | -2183.972 |
| Scenario 5 | -478.232 | -1184.726 | -4857.258 | -6168.361 | 21,282.451 | -4571.882 |

Table 210: InflSwapZCAcrreterXCcyCallableBerm: The vega projected onto the calibration instruments. The hedging strategy suggested by the vega projection implies that to (largely) offset the vega of the InflSwapZCAcrreterXCcyCallableBerm, one must take positions in the 3Y2Y, 5Y5Y and 10Y10Y targets. The proportion of the total vega contributed by these 3 targets is largely similar across the different scenarios, indicating that the risk projection onto the calibration targets is fairly stable.

![Figure 76: Vega Allocation across the calibration instruments in the five scenarios.](./Fig/76.png)

| Buckets | Scenario 1 | Scenario 2 | Scenario 3 | Scenario 4 | Scenario 5 |
| --- | --- | --- | --- | --- | --- |
| Flat | 95,454.73 | 95,487.97 | 95,511.79 | 95,530.01 | 95,544.23 |
| 1.0000 | 0.3 | 0.36 | 0.16 | 0.53 | 0.22 |
| 2.0000 | 0.48 | 0.77 | 0.89 | 0.53 | 0.22 |
| 5.0000 | 1.49 | 1.13 | 0.97 | 1.04 | 0.57 |
| 10.0000 | 2.28 | 2.13 | 1.54 | 2.59 | 1.91 |
| 20.0000 | 0.76 | 3.21 | 6.59 | 8.47 | 8.32 |
| 30.0000 | 6.25 | 4.29 | 0.78 | -0.04 | 0.3 |
| BucketTotals | 6.99 | 7.63 | 7.85 | 7.48 | 7.62 |

Table 211: LongevityPensionBespokeInflCapFloor: The total vega and the vega projections w.r.t. shifts in the volatilities of the calibration targets.

| Calibration Target Weights | 0Y1Y | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- | --- |
| Scenario 1 | 4.5407e-04 | 6.11134e-04 | 9.35261e-05 | -1.5491e-04 | 1.14135e-09 | 5.95132e-04 |
| Scenario 2 | 2.98292e-04 | 3.30105e-04 | 3.80045e-05 | -2.4095e-05 | 1.12838e-03 | 2.45455e-04 |
| Scenario 3 | 1.22283e-04 | 2.32752e-04 | 2.52340e-05 | 6.16397e-05 | 5.27500e-04 | 2.62941e-05 |
| Scenario 4 | 5.58508e-05 | 1.22251e-04 | 2.24618e-05 | 1.60946e-05 | 4.21410e-04 | 1.03751e-06 |
| Scenario 5 | 3.58956e-05 | 4.75105e-05 | 1.57288e-05 | 3.65195e-05 | 2.97608e-04 | 4.59983e-06 |

Table 212: LongevityPensionBespokeInflCapFloor: The computed values of the weight parameters.

| Calibration Target Vegas | 0Y1Y | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- | --- |
| Scenario 1 | 0.4225 | 0.8184 | 0.6603 | -0.2287 | 1.5644 | 3.3252 |
| Scenario 2 | 0.5254 | 1.0326 | 0.4582 | -0.0785 | 3.4713 | 1.7281 |
| Scenario 3 | 0.3490 | 1.2182 | 0.4605 | 0.4536 | 4.4596 | 0.4349 |
| Scenario 4 | 0.2224 | 0.8372 | 0.4363 | 0.1834 | 5.2931 | 0.0313 |
| Scenario 5 | 0.1965 | 0.4673 | 0.4391 | 0.6352 | 5.2167 | 0.1875 |

Table 213: LongevityPensionBespokeInflCapFloor: The vega projected onto the calibration instruments.

![Figure 77: LongevityPensionBespokeInflCapFloor: Vega Allocation across the calibration instruments in the five scenarios.](./Fig/77.png)

### 4.3 Model Parameters Testing

In this section, we document and examine some of the parameters deemed as relevant for the present model, as provided by DBAnalytics "20201014_DBX_ShortRate_InflationStochVol.xlsx" as part of MARS request. A more detailed list of the parameter rules can be found in the file "20201014_DBX_ShortRate_InflationStochVol.xlsx".
The DBX_ShortRate_InflationStochVol.xlsx model is an extension of the 3-factor Jarrow-Yildirim (inflation model) which models three processes: the nominal interest rate, the real interest rate and the inflation index. The inflation index is modelled as a stochastic volatility component. In this section we document and examine some of the parameters deemed as relevant for the present model, as provided by DBAnalytics "20201014_DBX_ShortRate_InflationStochVol.xlsx" as part of MRM request.
The typical inflation modelling relies on the foreign currency analogy, in which the CPI is interpreted as the exchange rate between the nominal ("domestic") economy and the real ("foreign") economy, with the real interest rate representing the interest rate of the real economy.
The nominal interest rate represents the interest rate observed in the market (corresponding to the nominal economy). It is modelled as a Hull-White short rate process with time-dependent coefficients. The model does not capture the potential smile existing in the market. The dynamics of the nominal short rate are given by the following equation:

$dr_t^{nom} = (θ_{nom}(t) − k_{nom}(t)r_t^{nom})dt + σ_{nom}(t)dW_t^{nom} \quad (66)$

The initial discount curve of the nominal short rate ${DF_{nom}(t_0,t); t > t_0}$ is constructed by bootstrapping from the input market data, typically Cash, Futures and Swaps and taking into account various spreads such as OIS spreads, CCY spreads, etc.
The real interest rate is modelled in a similar manner to the nominal interest rate. More precisely, the dynamics of the real short rate are given by the following Hull-White process:

$dr_t^{real} = (θ_{real}(t) − k_{real}(t)r_t^{real})dt + σ_{real}(t)dW_t^{real}$

As explained in Section 3.5 of [36], the initial discount factor of the real rate ${DF_{real}(t_0,T); T ≥ t_0}$ is computed from the relation:

$DF_{real}(t_0,T) = \frac{DF_{nom}(t_0,T)}{DF_{infl}(t_0,T)} \quad (67)$

where $DF_{nom}(t_0,T)$ represents the discount factor of the nominal rate (constructed as explained above) and $DF_{infl}(t_0,T)$ represents the discount factor of the inflation rate. Therefore the knowledge of $DF_{nom}(t_0,T)$ and $DF_{infl}(t_0,T)$ is sufficient for the construction of the discount factor of the real rate.

The CPI index $I$ is modelled as a lognormal process with stochastic volatility multiplier

$dI_t = (r_t^{nom} - r_t^{real})I_tdt + σ(t)η_tI_tdW_t \quad (68)$

where $η_t$ is called the stochastic volatility multiplier and is given by

$d\log(η_t) = (μ(t) − k_η(t)\log(η_t))dt + ξ(t)dZ_t \quad (69)$

The SV component $η_t$ can be written under the form $η_t = \exp(X_t)$ where $X$ is a mean-reverting process.

An overview of the model parameters, their rule and the sections discussing these parameters is given in the following table. Note that for reasons of brevity, we have shortened the rules. Only Model Rules categorized as "Used" are listed. Curve object related rules are marked by DBAnalytics "Rules as per CURVE submission" and therefore are not discussed here.

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| CORRELATION_0012 | NO | CorrelationInputType | IN | LOCAL_TERMMATURITY |
| CORRELATION_0013 | YES | VOL::VolName | EQUAL_TO | CORRELATION |
| CORRELATION_0013 | NO | VOL::CorrelationInterpolationSpace | EQUAL_TO | TIME |
| CORRELATION_0015A | YES | VOL::VolName | EQUAL_TO | CORRELATION |
| CORRELATION_0015A | NO | VOL::InterpType | IN | LINEAR,PWCONST_R |
| CORRELATION_0022 | YES | VOL::VolName | EQUAL_TO | CORRELATION |
| CORRELATION_0022 | NO | VOL::Weight | = | 0 |
| CORRELATION_0023 | NO | VOL::CorrelationTime | PASS |  |
| CORRELATION_0024 | YES | VOL::VolName | EQUAL_TO | CORRELATION |
| CORRELATION_0024 | YES | VOL::VolType | EQUAL_TO | CORR |
| CORRELATION_0024 | NO | VOL::SVFactor | EQUAL_TO | 0 |
| DBMVOL_0010 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0010 | NO | VOL::CorrelSVInterpType | IN | LINEAR,PWCONST_R |
| DBMVOL_0011 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0011 | NO | VOL::CorrInterpolation | EQUAL_TO | LINEAR |
| DBMVOL_0014 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0014 | NO | VOL::Interpolation | IN | LINEAR,PWCONST_R PWCONSTSMOOTH,CONSTANT_LV |
| DBMVOL_0015 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0015 | NO | VOL::InterpolationSV | IN | LINEAR,PWCONSTSMOOTH |
| DBMVOL_0017A | YES | VOL::MaxBPVol | != | -9.99 |
| DBMVOL_0017A | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0017A | NO | VOL::MaxBPVol | > | 0 |
| DBMVOL_0017B | YES | VOL::MaxBPVol | EQUAL_TO | -9.99 |
| DBMVOL_0017B | NO | VOL::MaxBPVol | PASS |  |
| DBMVOL_0018 (*) | YES | VOL::MeanRevInterpolation | SET |  |
| DBMVOL_0018 (*) | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0018 (*) | NO | VOL::MeanRevInterpolation | IN | LINEAR,PWCONST_R |
| DBMVOL_0027 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0027 | NO | VOL::SmoothMaxBPVol | EQUAL_TO | 9.99 |
| DBMVOL_0030 | YES | VOL::StochVolCap | != | -9.99 |
| DBMVOL_0030 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0030 | NO | VOL::StochVolCap | > | 5 |
| DBMVOL_0031A | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0031A | YES | VOL::StochVolCenteringMode | != | -1 |
| DBMVOL_0031A | NO | VOL::StochVolCenteringMode | IN | 0,1 |
| DBMVOL_0031B | YES | VOL::StochVolCenteringMode | EQUAL_TO | -1 |
| DBMVOL_0031B | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0031B | NO | VOL::StochVolCenteringMode | PASS |  |
| DBMVOL_0032 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0032 | NO | VOL::SVFactorIndex | EQUAL_TO | 1 |
| DBMVOL_0042A (*) | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0042A (*) | NO | VOL::MinVol | IN | REFLECT,FLAT,ABSORB,REFLECT,FLAT,ABSORB |
| DBMVOL_0046 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0046 | NO | VOL::AbsorbingBarrierType | IN | NONE,ABSOLUTE FORWARDDIFF,STDDEV |
| DBMVOL_0049 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0049 | NO | VOL::RescaleWeights | IN | YES,NO |
| DBMVOL_0050 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0050 | NO | VOL::CalibToEndDate | IN | YES,NO |
| DBMVOL_0054 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0054 | NO | VOL::Vols::Bound | PASS | nan |
| DBMVOL_0055 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0055 | NO | VOL::VolsSV::Bound | PASS | nan |
| DBMVOL_0061 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0061 | NO | VOL::MeanRevSV::Bound | PASS | nan |
| DBMVOL_0062 | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0062 | NO | VOL::MeanRevSV::Bound | PASS | nan |
| DBMVOL_0066 (*) | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0066 | (*)NO | VOL::DiffusionAValuationDate | IN | NO,YES |
| DBMVOL_0084 (*) | YES | VOL::VolName | EQUAL_TO | DBMVOL |
| DBMVOL_0084 (*) | NO | VOL::CalibrationUseFlag | IN | NONE, SEQUENTIAL |
| DBQVOL_0003 | YES | VOL::VolName | EQUAL_TO | DBQVOL |
| DBQVOL_0003 | NO | VOL::Interpolation | IN | CONSTANT_LV, LINEAR |
| DBQVOL_0005 | YES | VOL::VolName | EQUAL_TO | DBQVOL |
| DBQVOL_0005 | NO | VOL::UnderlyingCap | PASS | nan |
| DBQVOL_0006 | YES | VOL::VolName | EQUAL_TO | DBQVOL |
| DBQVOL_0006 | NO | VOL::UnderlyingFloor | PASS | nan |
| DBQVOL_0007 | YES | VOL::VolName | EQUAL_TO | DBQVOL |
| DBQVOL_0007 | NO | VOL::Vols::Bound | PASS | nan |
| DBX_0001A (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0001A (*) | NO | MODEL::RangeCompression | IN | NONE, EXPONENTIAL, EXPONENTIAL |
| DBX_0002 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0002 | NO | MODEL::CMBForwardCentering | EQUAL_TO | INARREARS |
| DBX_0003 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0003 | NO | MODEL::ValueMode | EQUAL_TO | VALUEDATE |
| DBX_0004 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0004 | NO | MODEL::AnalyticCentering | EQUAL_TO | NO |
| DBX_0005A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0005A | NO | MODEL::AverageCompression | IN | NONE,EXPONENTIAL,EXPONENTIAL_SYNCHRONISED,SYNCHRONISED |
| DBX_0008A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0008A | NO | MODEL::CenteringMode | IN | 0,2,3 |
| DBX_0009 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0009 (*) | NO | MODEL::CenterIntensityPoints | IN | YES,NO |
| DBX_0010B | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0010B | NO | MODEL::CMDSCenteringMode | PASS |  |
| DBX_0011 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0011 | NO | MODEL::CompressionDirection | IN | FORWARD,BACKWARD |
| DBX_0012 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0012 | NO | MODEL::CompressionFreq | >= | 4 |
| DBX_0013 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0013 | NO | MODEL::CondBondControlVariate | EQUAL_TO | NO |
| DBX_0014 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0014 (*) | NO | MODEL::CondBondPolyOrder | IN | 0,100,103,200,1200-0.25,2063 |
| DBX_0016B (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0016B (*) | NO | MODEL::CondIntegrationFreq | PASS | nan |
| DBX_0017 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0017 | NO | MODEL::CreditMaxLambda | <= | 100 |
| DBX_0018 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0018 | NO | MODEL::CumulativeNumDeviations | >= | 4 |
| DBX_0019 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0019 | NO | MODEL::CumulativeNumSteps | >= | 50 |
| DBX_0025 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0025 (*) | NO | MODEL::DirectRVPolyOrder | EQUAL_TO | 3 |
| DBX_0038A (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0038A (*) | NO | MODEL::ExerciseCompression | IN | NONE,EXPONENTIAL,EXPONENTIAL_SYNCHRONISED,SYNCHRONISED |
| DBX_0039A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0039A | NO | MODEL::FreqTimeVec | >= | 12 |
| DBX_0040A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0040A | NO | MODEL::FreqLifeFreq | >= | 12 |
| DBX_0045A (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0045A (*) | NO | MODEL::IndexCompression | IN | NONE,EXPONENTIAL,EXPONENTIAL_SYNCHRONISED,SYNCHRONISED |
| DBX_0046 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0046 (*) | NO | MODEL::IndexInterpolationDensity | EQUAL_TO | 0 |
| DBX_0047 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0047 | NO | MODEL::IntegrationFreq | >= | 365 |
| DBX_0048 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0048 | NO | MODEL::MinNumberSteps | >= | 0 |
| DBX_0051 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0051 | NO | MODEL::NumberRuns | >= | 1 |
| DBX_0052 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0052 | NO | MODEL::NumberSeedVarianceRuns | >= | 1 |
| DBX_0053A | YES | MODEL::CalcIntrinsic | != | 1 |
| DBX_0053A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0053A | NO | MODEL::NumberSims | >= | 5000 |
| DBX_0054 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0054 | NO | MODEL::NumberSubSims | >= | 1 |
| DBX_0056 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0056 | NO | MODEL::OptimizationType | EQUAL_TO | 0 |
| DBX_0059 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0059 | NO | MODEL::PolyOrder | IN | 0,100,103,200,1200-0.25,2063 |
| DBX_0060 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0060 (*) | NO | MODEL::PricingIter | >= | 3 |
| DBX_0062 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0062 | NO | MODEL::StateMaxControlVariate | IN | NO,YES,INDICATOR |
| DBX_0063 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0063 | NO | MODEL::StateMaxCorrection | IN | JACKKNIFE,NONE |
| DBX_0064 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0064 | NO | MODEL::StateMaxCutOff | >= | 0.01 |
| DBX_0065B | YES | MODEL::StateMaxFactors | EQUAL_TO | -1 |
| DBX_0065B | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0065B | NO | MODEL::StateMaxFactors | PASS |  |
| DBX_0067 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0067 | YES | MODEL::PolyOrder | NOT_IN | 1200,1200-0.25 |
| DBX_0067 | NO | MODEL::StateMaxFraction | EQUAL_TO | 1 |
| DBX_0068 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0068 | NO | MODEL::StateMaxRegularization | IN | NONE, RIDGE, RIDGE_RIDGENORM, RIDGENORM |
| DBX_0069 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0069 | NO | MODEL::StateMaxWedge | IN | -4,0 |
| DBX_0070A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0070A | NO | MODEL::StateUseFlag | EQUAL_TO | -1 |
| DBX_0071A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0071A | NO | MODEL::StochVolCenteringMode | IN | -1,0,1 |
| DBX_0072 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0072 | NO | MODEL::Tolerance | <= | 1e-05 |
| DBX_0073 (*) | NO | MODEL::UpdateTimewec | EQUAL_TO | 1 |
| DBX_0074 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0074 | NO | MODEL::UseBinomialSimulation | EQUAL_TO | NO |
| DBX_0076 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0076 | NO | MODEL::UseOrthogonalRuns | IN | YES,NO |
| DBX_0078 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0078 | NO | MODEL::UseRegularTimeVec | IN | YES,NO,PARTIAL,ADAPTIVE |
| DBX_0079A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0079A | NO | MODEL::VarianceReduction | IN | ANTITHETIC,ANTITHETICPURE BROWNIANBRIDGE,ORTHOGONAL |
| DBX_0091 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0091 | NO | MODEL::Seed | PASS |  |
| DBX_0092 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0092 | NO | MODEL::ComparedSimulation | IN | YES,NO |
| DBX_0093 | YES | MODEL::LognormalCutoff | EQUAL_TO | 9.99 |
| DBX_0093 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0093 | NO | MODEL::LognormalCutoff | PASS |  |
| DBX_0094 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0094 (*) | NO | MODEL::CMBForwardCentering | EQUAL_TO | NO |
| DBX_0095 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0095 (*) | NO | MODEL::UseFTP | EQUAL_TO | NO |
| DBX_0096 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0096 | NO | MODEL::AntitheticStochvol | EQUAL_TO | YES |
| DBX_0097 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0097 | NO | MODEL::ZSpaceDensityMultiplier | EQUAL_TO | NONE |(*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0073  Flat | 3,414,016.88 | 3,664,805.33 | 3,863,605.32 | 4,027,258.32 | 4,160,965.25 |
| 1.0000 | 36,717.17 | 44,471.86 | 46,527.96 | 47,328.27 | 47,552.77 |
| 2.0000 | 20,128.79 | 20,996.48 | 21,402.15 | 21,528.05 | 21,254.52 |
| 5.0000 | 7,652.39 | 9,063.91 | 9,969.22 | 10,469.85 | 10,560.37 |
| 10.0000 | 7.41 | 9.25 | 10.3 | 11.15 | 11.36 |
| 20.0000 | 0 | 0 | 0 | 0 | 0 |
| BucketTotals | 64,505.76 | 74,541.5 | 77,909.64 | 79,337.32 | 79,379.02 |

Table 204: InflSwapYOYQuanto: The total vega and the vega projections are monotonic w.r.t. shifts in the volatilities of the calibration targets.

The above projections provide us with an alternative way to compute the market vegas from the model vegas. More precisely, let $Σ = (σ_i)_i$ represent the set of market information (market-observed volatilities or prices) and let $P$ represent the set of model volatilities. The calibration determines the optimal model parameters $P^*$ by minimizing the objective function $f$:

$$P^*(Σ) = \arg\min_P f(P,Σ)$$

The model-generated volatilities $Σ̃$ and the price of an exotic instrument $V$ relying on the calibration are computed afterwards by

$$Σ̃ = Σ̃(P^*) \text{ and } V = V(P^*)$$

The direct vega calculation relies on applying a shock at the level of each component of the market information i.e., $σ_i → σ_i + δ$, and recalibrating the model to determine the new parameters i.e. a re-calibration determines the optimal model parameters $P_i^*$ by minimizing the objective function $f$:

$$P_i^*(Σ + δ) = \arg\min_P f(P, Σ + δ)$$

where the vector $δ = (0, 0, ...0, δ_i, 0...0)$ has a single non-zero element and the vega is computed as

$$VEGA_i = \frac{1}{δ} (V(P_i^*(Σ + δ)) - V(P^*(Σ)))$$

An alternative way of computing the vega by avoiding the re-calibration step is to use the following identity:

$$\frac{∂V}{∂P} = \frac{∂V}{∂Σ̃} \frac{∂Σ̃}{∂P}$$

where the RHS represents a vector of model vegas (computed in the previous table for example) and the LHS represents the product between the market vegas and the model vegas of the calibration targets. Therefore the market vegas will be given by

$$\frac{∂V}{∂Σ̃} = \left(\frac{∂Σ̃}{∂P}\right)^{-1} \frac{∂V}{∂P}$$

This technique can be regarded as equivalent to the computation of a vega hedge for the exotic instrument using the calibration targets, i.e. determine the weights $ω = (ω_i)_i$ that we need to hold from each hedge instrument such that the vega of the combined position is 0 i.e.

$$- VEGA_{exotic} + \sum_{i} ω_i * VEGA_{TARGET}(i) = 0$$

which amounts to solving the linear system

$$A · ω = ν ⇔ ω = A^{-1} · ν$$

with

$$A = (a_j^k)_{j,k}$$

where an element $a_j^k$ represents the vega of the $j^{th}$ calibration target projected onto parameter $k$ and $ν$ represents the vector of model vegas of the exotic. The following table displays the computed weights for InflSwapYOYQuanto:

| Calibration Target Weights | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- |
| Scenario 1 | 29.115 | -34.861 | 36.954 | -27.088 | 13.885 |
| Scenario 2 | 20.158 | -24.445 | 25.067 | -18.509 | 9.924 |
| Scenario 3 | 14.288 | -16.496 | 16.642 | -12.608 | 6.054 |
| Scenario 4 | 10.583 | -11.848 | 11.824 | -8.774 | 4.249 |
| Scenario 5 | 8.276 | -8.857 | 8.731 | -6.608 | 3.288 |

Table 205: InflSwapYOYQuanto: The computed values of the weight parameters.

| Calibration Target Vegas | 1Y2Y | 3Y2Y | 5Y5Y | 10Y10Y | 20Y10Y |
| --- | --- | --- | --- | --- | --- |
| Scenario 1 | 130,375.419 | -212,726.572 | 418,282.915 | -443,474.762 | 172,068.759 |
| Scenario 2 | 136,380.638 | -221,814.740 | 452,777.00 | -521,315.796 | 228,514.385 |
| Scenario 3 | 129,103.466 | -197,541.469 | 420,431.267 | -515,162.800 | 241,099.173 |
| Scenario 4 | 122,709.438 | -176,067.759 | 385,573.132 | -488,209.659 | 235,332.170 |
| Scenario 5 | 116,080.806 | -168,355.155 | 357,997.580 | -468,609.911 | 232,285.703 |

Table 206: InflSwapYOYQuanto: The vega projected onto the calibration instruments. The hedging strategy implied by the vega projection implies that to (largely) offset the vega of the InflSwapYOYQuanto, one must take positions in the 3Y2Y, 5Y5Y and 10Y10Y targets. The proportion of the total vega contributed by these 3 targets is largely similar across the different scenarios, indicating that the risk projection onto the calibration targets is fairly stable.

![Figure 75: Vega Allocation across the calibration instruments in the five scenarios.](./Fig/75.png)

The calibrated TermVols structure of the Calib_UKRPI calibration dictionary in the five scenarios is displayed in the following table:

| Time | Vol (Scen.1) | Vol (Scen.2) | Vol (Scen.3) | Vol (Scen.4) | Vol (Scen.5) |
| --- | --- | --- | --- | --- | --- |
| 1Y | 0.0118730315 | 0.0132675225 | 0.0144650094 | 0.0155444354 | 0.016549882 |
| 2Y | 0.0160347202 | 0.0174714687 | 0.0186638083 | 0.0197172288 | 0.0206814891 |
| 5Y | 0.0201073382 | 0.0221603382 | 0.0239010925 | 0.0254505275 | 0.0268714975 |
| 10Y | 0.0231345628 | 0.0258437689 | 0.0281752871 | 0.0302872067 | 0.0322432098 |
| 20Y | 0.0248037199 | 0.0281878149 | 0.0313712074 | 0.0343190643 | 0.0371099086 |
| 30Y | 0.0244728654 | 0.0288475677 | 0.0322177422 | 0.0356487843 | 0.0389438831 |

Table 207: Calib_UKRPI: The calibrated term structured of the TermVols is monotonic w.r.t. the shifts applied to the calibration targets, i.e. higher shifts result in higher volatility values.

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| DBX_0068 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0068 | NO | MODEL::StateMaxRegularization | IN | NONE, RIDGE, RIDGE-*, RIDGENORM, RIDGENORM-* |
| DBX_0069 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0069 | NO | MODEL::StateMaxWedge | IN | -4,0 |
| DBX_0070A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0070A | NO | MODEL::StateUseFlag | EQUAL_TO | -1 |
| DBX_0071A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0071A | NO | MODEL::StochVolCenteringMode | IN | -1,0,1 |
| DBX_0072 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0072 | NO | MODEL::Tolerance | ≤ | 1e-05 |
| DBX_0073 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0073 (*) | NO | MODEL::UpdateTimewec | EQUAL_TO | 1 |
| DBX_0074 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0074 | NO | MODEL::UseBinomialSimulation | EQUAL_TO | NO |
| DBX_0076 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0076 | NO | MODEL::UseOrthogonalRuns | IN | YES,NO |
| DBX_0078 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0078 | NO | MODEL::UseRegularTimeVec | IN | YES,NO,PARTIAL,ADAPTIVE |
| DBX_0079A | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0079A | NO | MODEL::VarianceReduction | IN | ANTITHETIC,ANTITHETICPURE,BROWNIANBRIDGE,ORTHOGONAL |
| DBX_0091 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0091 | NO | MODEL::Seed | PASS |  |
| DBX_0092 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0092 | NO | MODEL::ComparedSimulation | IN | YES,NO |
| DBX_0093 | YES | MODEL::LognormalCutoff | EQUAL_TO | 9.99 |
| DBX_0093 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0093 | NO | MODEL::LognormalCutoff | PASS |  |
| DBX_0094 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0094 (*) | NO | MODEL::CDSForwardCentering | EQUAL_TO | NO |
| DBX_0095 (*) | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0095 (*) | NO | MODEL::UseFTP | EQUAL_TO | NO |
| DBX_0096 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0096 | NO | MODEL::AntitheticStochvol | EQUAL_TO | YES |
| DBX_0097 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0097 | NO | MODEL::ZSpaceDensityMultiplier | EQUAL_TO | NONE |

| Rule | MinCondition | ParameterLabel | Operator | Value |
| --- | --- | --- | --- | --- |
| DBX_0098 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0098 | NO | MODEL::IsAlwaysNeedNewCalibration | EQUAL_TO | NONE |
| DBX_0099 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0099 | NO | MODEL::SimSecBackbone | EQUAL_TO | NO |
| DBX_0100 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0100 | NO | MODEL::VolSpaceDensityMultiplier | EQUAL_TO | NONE |
| DBX_0107 | YES | MODEL::ModelName | EQUAL_TO | DBX |
| DBX_0107 | NO | MODEL::StateMaxPayoffState | IN | NONE,DIGITAL,ALL |
| EXPOSURE_0007 | NO | EXPOSURE::AutoCorreltTable | NOT_EXISTS |  |
| FIXING_0001 | NO | FIXING::InterpolateNatural | IN | YES,NO |
| FIXING_0002B | YES | FIXING::NaturalTolerance | LIKE | *w |
| FIXING_0002B | NO | FIXING::NaturalTolerance | ≤ | 1 |
| GeneralRule_0006 | NO | MODEL::UseNewSVD | IN | NO,ALGLIB |
| GeneralRule_0008 | NO | MODEL::RecalibCurves | IN | NO,YES |
| GeneralRule_0011 | NO | MODEL::CompressionDecayTime | PASS |  |
| GeneralRule_0012 | NO | MODEL::DecayTime | PASS |  |
| GeneralRule_0020 | NO | MODEL::CalibType | PASS |  |
| GeneralRule_0021 | NO | MODEL::MaxIter | PASS |  |
| GeneralRule_0047 | NO | MODEL::DecayDropIrofToValuationDate | IN | YES,NO |
| MKTDATA_INFLATION_000YES | - | MKTDATA::Type | EQUAL_TO | INFLATION |
| MKTDATA_INFLATION_000NO | - | MKTDATA::Interpolation | IN | FLAT,FLAT-DIR,DIR-* |

**Table 214: List of Model Rules as provided by DBAnalytics. The Model Rules presented are present in the DBAnalytics original submission but have been deemed as having no impact on the DBX-ShortRateStochVol model, since they refer to components not present in the model.**

#### 4.3.0.0.1 Identified issues in the Model Parameter Rules

The following issues have been identified during the validation of the MPM rules and have been highlighted to DBAnalytics:

1. Rules that do not impact the model DBX-ShortRate_InflationStochVol, since they refer to components not present in the model. We consider the following model rules from the list provided by DBAnalytics as not relevant for the present model, despite being marked as USED in the submission document: DBMVOL_0066, DBMVOL_0084, DBX_0009 (CenterIntensityPoints), DBX_0010B (CMDSCenteringMode), DBX_0013 (CondBondControlVariate), DBX_0014 (CondBondPolyOrder), DBX_0016B (CreditIntegrationFreq), DBX_0017 (CreditMaxLambda), DBX_0018 (CumulativeNumDeviations), DBX_0019 (CumulativeNumSteps), DBX_0025 (DirectSLVPolyOrder), DBX_0045A (IndexInterpolationDensity), DBX_0060 (PricingIter), DBX_0073 (UpdateTimeVec), DBX_0094 (CDSForwardCentering), DBMVOL_0042A (MinVol), DBX_0095 (UseFTP).

2. Rules that do not impact the model DBX-ShortRate_InflationStochVol, due to the type of inputs or type of SECURITY objects being allowed in the model: DBX_0001A (RangeCompression), DBX_0038A (ExerciseCompression), DBX_0045A (IndexCompression), DBMVOL_0018 (MeanRevInterpolation)

3. Situations where the pricing fails. When certain properties are set to some of the allowed values in the model rule, the pricing fails and the dictionary will throw an error message. Although the reason triggering the error is well understood (as the error messages shows), these situations can be avoided by refining the model rules, such that the problematic cases are excluded.
   * DBX_0063: In the case of PolyOrder=1200, setting StateMaxCorrection=JACKKNIFE will result in the error message: "StateMaxCorrection is supported only for basis function regression (e.g. 3rd order polynomial for PolyOrder=103)!
   * DBX_0071A: Setting StochVolCenteringMode=0,1 in the MODEL object will result in the error message: "StochVolCenteringMode in the MODEL should be set to -1 to allow the StochVolCenteringMode to be taken from the VOL"
   * DBX_0063: Setting UseRegularTimeVec=ADAPTIVE when DecayTime=0 will result in the error message: "DecayTime cannot be 0 with RegularTimeVec ADAPTIVE!"
   * DBMVOL_0014: Setting the Interpolation property of DBMVOL object corresponding to the inflation index to values PWCONST_R or PWCONSTSMOOTH will throw error: "When VolMode=0, the interpolation should be CONSTANT_LV or LINEAR; Setting the Interpolation property of DBMVOL object corresponding to the interest rates to values PWCONST_R or CONSTANT_LV will throw error: "When this VolMode, the interpolation should be LINEAR or PWCONSTSMOOTH.
   * DBMVOL_0066: Setting the DiffusionAValuationDate property of DBMVOL object to YES will throw error: "VolAtValuationDate=YES is not implemented in DBX".

4. Rules that refer to parameters that are not documented at the time of the present review: DBX_0097 (ZSpaceDensityMultiplier), DBX_0098 (IsAlwaysNeedNewCalibration), DBX_0100 (VolSpaceDensityMultiplier), DBX_0107 (StateMaxPayoffState).

5. Rules that refer to properties that are incompletely documented at the time of the present review: DBX_0062 (StateMaxControlVariate) - option INDICATOR is not documented; DBX_0068 (StateMaxRegularization) - option RIDGENORM is not documented.

6. Missing Rules: The property CompressionDirection, mentioned in the description of property UseRegularTimeVec, is not covered in the submitted model rules (USED or UNUSED). According to DBAnalytics the parameter can take the values FORWARD (default value), BACKWARD, BROWNIANBRIDGE, MULTIBRIDGE, FORWARDBRIDGE. A rule will be added to specify the values this parameter is allowed to take.

#### 4.3.1 MODEL::CMSForwardCentering

In a DBX model, the property CMSForwardCentering is relevant when the security has CMS or CMSSpread RateIndexType and the dictionary contains a DBCPIVOL object, see [37]. When these conditions are met, CMSForwardCentering controls how DBX forwards are centered to DBCPT forwards. In the context of the model DBX-ShortRate_InflationStochVol, this property is currently set to CMSForwardCentering=INARREARS and will have no impact on the computations.

#### 4.3.2 MODEL::ValueMode

The ValueMode property present in the MODEL object can be set to SettleDate or ValueDate. If ValueMode=SettleDate, then the security cashflows are ignored in the pricing if they are paid on or before the settlement date of the curve. If ValueMode=ValueDate, then the security cashflows are ignored in pricing if paid on of before valuation date of the curve. In the context of the model DBX-ShortRate_InflationStochVol, this property is currently set to ValueMode=ValueDate.

#### 4.3.3 MODEL::AnalyticCentering

The nominal interest rate modelled by a short rate Hull-White process of the type

$$dr_t^{nom} = (θ_{nom}(t) − k_{nom}(t)r_t^{nom})dt + σ_{nom}(t)dW_t^{nom} \quad (70)$$

can be represented under the form

$$r_t^{nom} = α_{nom}(t) + ϕ_{nom}(t)\int_0^t σ_{nom}(s)dW_s^{nom} \quad (71)$$

where $ϕ_{nom}(t) = \exp(-\int_0^t -k_{nom}(s)ds)$. The function $α_{nom}(t)$ is known explicitly, as it is a function of the original model parameters and the initial volatility curve ${r_{nom}(0,T); T > 0}$, see Equation 1.15 in Section 1.1.1. of [38]. However, in the framework of the DBX model, $α_{nom}(t)$ is determined from the following centering condition:

$$E\left[\exp\left(-\int_0^T r(s)ds\right)\right] = P_{nom}(0,T) \quad (72)$$

The purpose of the centering is to ensure that the Monte-Carlo simulated values lead to PVs that match exactly closed-form PVs, when these are available and hence reducing the Monte Carlo noise. The centering condition used in the case of the inflation index is the following:

$$E[A_{nom}(T^*)I_T] = X^{Fixing} \frac{P_{real}(0,T^*)}{P_{nom}(0,T^*)}B_{nom}(0,T) \quad (73)$$

where $T^*$ represents the $CPIDate(T) + InflDelayOutput$ date and $X^{Fixing}$ is the value of the last CPI fixing. The interpretation of (73) can be found in Section 1.6 of [38]. In the context of the DBX-ShortRate_InflationStochVol model the property AnalyticCentering is set to NO. This represents the default method, and leads to good results but requires the simulation of all paths in order to calculate the above expectations.

#### 4.3.4 MODEL::Compression

To improve speed of pricing for products involving many dates (such as long dated swaps with range options with daily or weekly fixings), the idea of compression is to price a simplified product, containing fewer dates than the initial one. According to the proposed MPM rules, the properties related to Compression can take the following values:

| Property | Values |
| --- | --- |
| AverageCompression | NONE, EXPONENTIAL, EXPONENTIAL_*, SYNCHRONISED, SYNCHRONISED_* |
| RangeCompression | NONE, EXPONENTIAL, EXPONENTIAL_* |
| ExerciseCompression | NONE, EXPONENTIAL, EXPONENTIAL_*, SYNCHRONISED, SYNCHRONISED_* |
| IndexCompression | NONE, EXPONENTIAL, EXPONENTIAL_*, SYNCHRONISED, SYNCHRONISED_* |
| CompressionDirection | FORWARD, BACKWARD |
| CompressionFreq | ≥ 4 |
| CompressionDecayTime | PASS |

Table 215: Values that the MODEL object properties related to Compression can take, based on the MPM rules.

There are three different properties controlling compression features, depending on the kind of product: AverageCompression, ExerciseCompression and RangeCompression. They work in the same way and can be set to:

1. NONE: no compression is performed, the security is priced without any adjustments;
2. EXPONENTIAL: After 1Y (default value) from valuation date, the look dates get compressed and their frequency tends towards the compression frequency set by CompressionFreq parameter. However the start from which compression starts can be changed; for example, AverageCompression=EXPONENTIAL-3M which implies that in the first 3 months after valuation date, the look dates will stay unchanged, and after that date, their frequency will decrease exponentially to CompressionFreq value. The compressed dates are always a subset of the initial looked dates. The convergence speed is controlled by CompressionDecayTime model property: after around 2 or 3 CompressionDecayTime, the frequency has reached its infinite level.
3. SYNCHRONIZED: is used when pricing a security that involves several averages. SYNCHRONISED will ensure that all the sequences of compressed dates are as similar as possible, in order to reduce memory usage. When SYNCHRONISED is used the compressed dates will not be a subset of the original look dates. SYNCHRONISED allows for the versions SYNCHRONISED-YES and SYNCHRONISED-NO, with SYNCHRONISED-YES implying that the first and last look cut dates will not be included amongst the compressed look dates. Note that as in the case of EXPONENTIAL, the starting date of the compression can be set similarly, e.g. SYNCHRONISED-3M-YES or SYNCHRONISED-3M-NO.

The CompressionFreq parameter determines the frequency above which products with many dates will be compressed in order to price it in a simplified manner using fewer dates than the initial ones. The compression direction can be FORWARD or BACKWARD. A complete description of Compression can be found in [39].

According to Section 2.4.1 of [61], MULTISWAP, RATESWAP, and SWAP are the only DBAnalytics SECURITY objects approved for DBX-ShortRate_InflationStochVol. This implies that only the property AverageCompression will have an impact on the pricing of products in scope of the model. We examine the impact of the properties AverageCompression (and of the adjacent properties CompressionDirection and CompressionFreq) and show that the properties ExerciseCompression, RangeCompression and IndexCompression have no impact on the pricing in the context of the following two dictionaries:

1. Dictionary_1 contains an InflSwapAverage with swap start date 10/01/2002 and swap end date 10/07/2024. The payments on the receive and pay legs are exchanged with annual frequency. The OptionPosition=NONE meaning that the value of the swap is given by

$$PV_{swap}(t) = RecLegPV(t) - PayLegPV(t)$$

The value of the exchanged cash flows at a payment date $T_n$ is given by

$$PV(T_n) = τ_n (m · R_{avg} - s)$$

where $τ_n$ represents the time interval between the previous payment date $T_{n-1}$ and the current one $T_n$, $s = 1, m = 0.014041712$ and $s = 1$ (the RateIndexType of the Pay Leg is set to Fixed meaning that the rate used on the pay leg is 0 and the coupon will depend on the only non-zero parameter $s = 1$). The quantity $R_{avg}$ represents the simple yearly arithmetic average over the monthly inflation index values (since AverageType=AVG, RateLookInterval=1M). The option valuation date is 02/11/2018 and the trade currency is EUR. The product is booked as a MULTISWAP object in DBAnalytics. The original MODEL object settings are AverageCompression=EXPONENTIAL-3M, RangeCompression=EXPONENTIAL-3M, ExerciseCompression=NONE, IndexCompression=NONE.

2. Dictionary_2 contains an InflSwaptionYOYBerm. The underlying swap's start date is 05/02/2014 and the end date is 05/02/2044. The frequency of the payments on the pay and receive leg is annual. The exercise start date of the option to enter the inflation YOY swap is 05/02/2014 and the exercise end date of the option is 05/02/2024 and it can be exercised monthly (i.e. the option to enter the swap can be exercised monthly during the first 10 years of the underlying swap). The receive leg of the swap depends on the inflation index, while the pay leg is fixed. The product is booked as a MULTISWAP object in DBAnalytics. The original MODEL object settings are AverageCompression=EXPONENTIAL-3M, RangeCompression=EXPONENTIAL-3M, ExerciseCompression=NONE, IndexCompression=NONE.

We will use the above dictionaries to test the impact of the property AverageCompression (and of the adjacent properties CompressionDirection and CompressionFreq) on the price of the two products and show that the properties ExerciseCompression, RangeCompression and IndexCompression have no impact on the pricing. To this purpose, for each

$$xCompression ∈ \{AverageCompression, RangeCompression, ExerciseCompression, IndexCompression\}$$

we will compute the price of the products under 8 scenarios:

1. (xCompression=NONE, CompressionDirection=BACKWARD)
2. (xCompression=EXPONENTIAL, CompressionDirection=BACKWARD)
3. (AverageCompression=EXPONENTIAL-3M, CompressionDirection=BACKWARD)
4. (xCompression=EXPONENTIAL-6M, CompressionDirection=BACKWARD)
5. (xCompression=NONE, CompressionDirection=FORWARD)
6. (xCompression=EXPONENTIAL, CompressionDirection=FORWARD)
7. (xCompression=EXPONENTIAL-3M, CompressionDirection=FORWARD)
8. (xCompression=EXPONENTIAL-6M, CompressionDirection=FORWARD)

![Figure 78: Upper Left: The price of the InflSwapAverage as a function of the CompressionFreq in the eight scenarios defined above and in the context of the AverageCompression parameter. We can see that the price of the security is influenced by the choice of the AverageCompression method, with the price of the security under different scenarios converging to the price of the security computed in the scenario AverageCompression=NONE as we increase the value of the CompressionFreq parameter. The impact of the AverageCompression method and of the CompressionDirection type on the price is relatively small.
Upper Right: The price of the InflSwapAverage as a function of the CompressionFreq in the eight scenarios defined above and in the context of the ExerciseCompression parameter. Lower Left: the price of the InflSwapAverage as a function of the CompressionFreq in the eight scenarios defined above and in the context of the RangeCompression parameter. Lower Right: the price of the InflSwapAverage as a function of the CompressionFreq in the eight scenarios defined above and in the context of the IndexCompression parameter. We can see that changing the ExerciseCompression, RangeCompression, IndexCompression methods do not impact the PV profile as function of CompressionFreq. In these three cases, the PV profiles as function of CompressionFreq are identical to the profile of scenario (AverageCompression=EXPONENTIAL-3M, CompressionDirection=FWD) from the upper left figure confirming the fact that the increasing the CompressionFreq value impacts only the AverageCompression method, since the others are not being used.](./Fig/78.png)

![Figure 79: Upper Left: The price of the InflSwaptionYOYBerm as a function of the CompressionFreq in the eight scenarios defined above and in the context of the AverageCompression parameter. Upper Right: The price of the InflSwaptionYOYBerm as a function of the CompressionFreq in the eight scenarios defined above and in the context of the ExerciseCompression parameter. Lower Left: the price of the InflSwaptionYOYBerm as a function of the CompressionFreq in the eight scenarios defined above and in the context of the RangeCompression parameter. Lower Right: the price of the InflSwaptionYOYBerm as a function of the CompressionFreq in the eight scenarios defined above and in the context of the IndexCompression parameter. 
We can see that the four compression parameters have no impact on the pricing of InflSwaptionYOYBerm. Note that property ExerciseCompression (which applies a compression at the level of the exercise dates) is relevant only if the SECURITY type objects are marked in DBAnalytics as a SWAPTION or EGOPT SECURITY object. However, these two SECURITY type objects are not in scope of the model, the present bermudan option on YOY swap being booked in DBAnalytics as a MULTISWAP object.](./Fig/79.png)

Note that in the above tests we only tested for the property values NONE, EXPONENTIAL and EXPONENTIAL-*. In the following test we consider the above InflSwapAverage and compare the PVs obtained in the above 8 scenarios to which we add the following six:

1. (AverageCompression=SYNCHRONISED, CompressionDirection=FORWARD)
2. (AverageCompression=SYNCHRONISED-3M, CompressionDirection=FORWARD)
3. (AverageCompression=SYNCHRONISED-6M, CompressionDirection=FORWARD)
4. (AverageCompression=SYNCHRONISED, CompressionDirection=BACKWARD)
5. (AverageCompression=SYNCHRONISED-3M, CompressionDirection=BACKWARD)
6. (AverageCompression=SYNCHRONISED-6M, CompressionDirection=BACKWARD)

![Figure 81: Price of product as function of number of simulation paths in three scenarios: CenteringMode=0 (Euler discretization), CenteringMode=2 (Milstein discretization) and CenteringMode=3 (second order Milstein discretization). We can see that prices of all six products converge as we increase the number of simulation paths from 500 to 50,000 with the impact of the discretization method on the prices being negligible. Note that the product stabilizes as the number of simulation paths goes above the 5000 paths threshold set in the model rule.](./Fig/81.png)

#### 4.3.6 MODEL::CenterIntensityPoints

The property CenterIntensityPoints controls the centering of the default intensity process and can be set to YES or NO. DEFAULTCURVE objects of type PROBABILITIES or INTENSITY need to be present in the dictionary. This property is not relevant for the present model, as they are no default times present in the DBX-ShortRate_InflationStochVol model. We show that setting the CenterIntensityPoints property to YES and NO has no impact on the pricing by comparing the price of six securities (InflSwapLookback, InflSwapAverage, InflSwaptionZCEuro, InflSwapSnowball, InflSwapYOYCapFloor and InflSwapInflNominalLin) in the two scenarios.

| Product | CenterIntensityPoints=YES | CenterIntensityPoints=NO | Abs. Diff. |
| --- | --- | --- | --- |
| InflSwapSnowball | -0.1800185232 | -0.1800185232 | 0.0 |
| InflSwapYOYCapFloor | -0.142692108 | -0.142692108 | 0.0 |
| InflSwapInflNominalLin | -0.1229749407 | -0.1229749407 | 0.0 |
| InflSwapLookback | 215.8077989124 | 215.8077989124 | 0.0 |
| InflSwapAverage | 535.6250742 | 535.6250742 | 0.0 |
| InflSwaptionZCEuro | 4.6755182345 | 4.6755182345 | 0.0 |

Table 216: Prices (in M) of six securities computed under scenario CenterIntensityPoints=YES and CenterIntensityPoints=NO. We can see that this property plays no role in the context of the present model.

#### 4.3.7 MODEL::CMDSCenteringMode

According to the model rules the property CMDSCenteringMode can be set to any value from the set {0, 1, 2}. CMDSCenteringMode controls the way CMDS rates (or equivalently conditional EPDV1s (expected PV losses) and risky DVD1s) are calculated in DBX. This property is not relevant for the model DBX-ShortRate_InflationStochVol. Therefore, we expect that the choice of CMDSCenteringMode to have no impact on the price of securities that are in scope of the model. The following table illustrates this fact:

| Product | CMDSCenteringMode=0 | CMDSCenteringMode=1 | CMDSCenteringMode=2 |
| --- | --- | --- | --- |
| InflSwapSnowball | -0.1800185232 | -0.1800185232 | -0.1800185232 |
| InflSwapYOYCapFloor | -0.142692108 | -0.142692108 | -0.142692108 |
| InflSwapInflNominalLin | -0.1229749407 | -0.1229749407 | -0.1229749407 |
| InflSwapLookback | 215.8077989124 | 215.8077989124 | -0.1229749407 |
| InflSwapAverage | 535.6250742 | 535.6250742 | 535.6250742 |
| InflSwaptionZCEuro | 4.6755182345 | 4.6755182345 | 4.6755182345 |

Table 217: Prices (in M) of six securities computed under scenarios CMDSCenteringMode=0, CMDSCenteringMode=1 and CMDSCenteringMode=2. We can see that this property plays no role in the context of the present model.

#### 4.3.8 MODEL::CondBondControlVariate

According to the model rules the property CondBondControlVariate is set to NO. Note that this property is relevant for credit derivatives and plays no role in the context of the DBX-ShortRate_InflationStochVol model.

#### 4.3.9 MODEL::CondBondPolyOrder

CondBondPolyOrder defaults to PolyOrder and determines the state max method used in the calculation of conditional BONDs (credit risky or rikless), and CMDS rates. Note that this property is relevant for credit derivatives and plays no role in the context of the DBX-ShortRate_InflationStochVol model.

#### 4.3.10 MODEL::CreditIntegrationFreq

According to the model rules, the property CreditIntegrationFreq, which sets the number of background time steps per year used in credit simulation, can be set to any value. Note that this property is relevant for credit derivatives and plays no role in the context of the DBX-ShortRate_InflationStochVol model. Therefore, we expect that the choice of the CreditIntegrationFreq value to have no impact on the price of securities that are in scope of the model. The following table illustrates this fact:

| Product | CreditIntegrationFreq=40 (original value) | CreditIntegrationFreq=12 | CreditIntegrationFreq=60 |
| --- | --- | --- | --- |
| InflSwapSnowball | -0.1800185232 | -0.1800185232 | -0.1800185232 |
| InflSwapYOYCapFloor | -0.142692108 | -0.142692108 | -0.142692108 |
| InflSwapInflNominalLin | 0.1229749407 | -0.1229749407 | -0.1229749407 |
| InflSwapLookback | 215.8077989124 | 215.8077989124 | -0.1229749407 |
| InflSwapAverage | 535.6250742 | 535.6250742 | 535.6250742 |
| InflSwaptionZCEuro | 4.6755182345 | 4.6755182345 | 4.6755182345 |

Table 218: Prices (in M) of six securities computed under scenarios CreditIntegrationFreq=40 (original value present in the DBX model object), CreditIntegrationFreq=12 and CreditIntegrationFreq=60. We can see that this property plays no role in the context of the present model.

#### 4.3.11 MODEL::CreditMaxLambda

The CreditMaxLambda property sets an upper bound on the default intensity process and it is used in the credit centering algorithm. According to the model rules, it has to be set to a value less than 100. Therefore, this property is relevant for credit derivatives and plays no role in the context of the DBX-ShortRate_InflationStochVol model.

#### 4.3.12 MODEL::CumulativeNumDeviations, MODEL::CumulativeNumSteps

The properties CumulativeNumSteps and CumulativeNumDeviations are relevant in the context of DLVCalibration and are currently set in model rules to CumulativeNumSteps ≥ 50 and CumulativeNumDeviations ≥ 4. However, according to the model rules, the DLV Calibration is not used in the context of the DBX-ShortRate_InflationStochVol model, and therefore we expect these properties to have no impact on the pricing. The below figures confirm this fact.

![Figure 82: Price of product as function of CumulativeNumDeviations. We can see that the PVs do not exhibit any sensitivity to the parameter, confirming the fact that the parameter is not used in the context of the DBX-ShortRate_InflationStochVol model.](./Fig/82.png)

![Figure 83: Price of product as function of CumulativeNumSteps. We can see that the PVs do not exhibit any sensitivity to the parameter, confirming the fact that the parameter is not used in the context of the DBX-ShortRate_InflationStochVol model.](./Fig/83.png)

#### 4.3.13 MODEL::DirectSLVPolyOrder

The DirectSLVPolyOrder property is locked to the value 3 in the model rules and it is relevant in the context of stochastic local volatility models. More precisely, the property sets the order of the polynomial used in the regression technique employed to compute the conditional expectation of the SV multiplier from Gyongy's theorem. Gyongy's theorem, see [41] and Section 9.4 of [57] allows to compute the local volatility component of a local-stochastic volatility model from the input volatility surface and the stochastic volatility component (i.e. the parameters of the SV component). In order to compute the local volatility component, the dictionary requires a PARAMETRICVOL with DirectLocalVol=YES and a DBMVOL with DiffusionType=EQUITYSTOCHVOL (or STOCHVOL for FX). This technique is not relevant in the context of the model DBX-ShortRate_InflationStochVol, as the inflation component of the model is a stochastic volatility process whose calibration, see [42], does not rely on the DLV calibration described in [40].

#### 4.3.14 MODEL::FreqTimeVec, MODEL::FrontLatticeFreq

The FreqTimeVec property determines the background time grid for the simulation. According to the model rules, FreqTimeVec has to be set to a value greater or equal to 12. FrontLatticeFreq is the background timevector frequency for the simulation at the start of the timevector. According to the model rules, the FrontLatticeFreq has to be set to a value greater or equal to 12. The actual background frequency used is a blend of FrontLatticeFreq and FreqTimeVec, see below.

We examine the impact of the FreqTimeVec property on the price of six securities, by increasing its value from 12 to 102 in increments of 5.

![Figure 84: Price of product as function of FreqTimeVec (for FrontLatticeFreq=12 and DecayTime=0.5). We can see that the PVs exhibit relatively low sensitivity to the parameter.](./Fig/84.png)

Increasing the value assigned to the FreqTimeVec property leads to a significant increase in the computational time, therefore the model user is presented with a trade-off between timegrid granularity and computational time. For each of the six products, we can compute the following metric:

$$\max_{F\in\{12,14,16,...50\}} \left(\frac{|PV(F) - PV_{avg}|}{PV(F)}\right) \quad (74)$$

where $PV(F)$ represents the security's price when FreqTimeVec is set to value $F$ and $PV_{avg}$ represents the average PV taken over all scenarios $F \in \{12,14,16,...50\}$. The below table shows that the maximum relative difference between the price in any of the considered scenarios FreqTimeVec $F \in\{12,14,16,...50\}$ and the average price computed over all these scenarios is below 0.07% for all six products. Therefore the parameter FreqTimeVec has a relatively low impact on the pricing.

| Product | InflSwapSnowball | InflSwapYOYCapFloor | InflSwapInflNominalLin | InflSwapLookback | InflSwapAverage | InflSwaptionZCEuro |
| --- | --- | --- | --- | --- | --- | --- |
| Max rel. diff. | < 0.04% | < 0.01% | < 0.01% | < 0.08% | < 0.01% | < 0.06% |

Table 219: Maximum relative difference between the prices computed in the 18 scenarios FreqTimeVec ∈ {12, 17, 22,...102} and the average price over the 18 scenarios. We can see that the impact of the property FreqTimeVec on the pricing is very small.

We examine the impact of the FrontLatticeFreq on the price of six securities, by increasing its value from 12 to 102 in increments of 5.

![Figure 85: Price of product as function of FrontLatticeFreq (with the value of the parameter FreqTimeVec=12). We can see that the PVs exhibit relatively low sensitivity to the parameter. For comparison purpose, we included the behavior of the price as function of FreqTimeVec (with the value of the parameter FrontLatticeFreq=12) i.e. the results displayed in the previous figures. We can see that the impact of the properties FrontLatticeFreq and FreqTimeVec is similar in size, the price showing low sensitivity to the two properties.](./Fig/85.png)

| Product | InflSwapSnowball | InflSwapYOYCapFloor | InflSwapInflNominalLin | InflSwapLookback | InflSwapAverage | InflSwaptionZCEuro |
| --- | --- | --- | --- | --- | --- | --- |
| Max rel. diff. | < 0.2% | < 0.01% | < 0.01% | < 0.06% | < 0.01% | < 0.05% |

Table 220: Maximum relative difference between the prices computed in the 18 scenarios FrontLatticeFreq ∈ {12, 17, 22,...102} and the average price over the 18 scenarios. We can see that the impact of the property FrontLatticeFreq on the pricing is very small.

As stated above, the actual background frequency used is a blend of FrontLatticeFreq and FreqTimeVec, with the connection between the properties FrontLatticeFreq and FreqTimeVec being done via the DecayTime property.

When DecayTime is set to 0, the FrontLatticeFreq is ignored and only FreqTimeVec is used. The general formula is

$Frequency = (FrontLatticeFreq - FreqTimeVec) \exp \left(-\frac{time}{decaytime}\right) + FreqTimeVec \quad (75)$

We test the correctness of the implementation by setting DecayTime=0 and increase the FrontLatticeFreq from 12 to 102 in increments of 5. We expect no impact on the pricing, since DecayTime=0 should ensure that only FreqTimeVec is used.

![Figure 86: Price of product as function of FrontLatticeFreq with the value of the parameter FreqTimeVec=12 and DecayTime=0. We can see that the PVs exhibit no sensitivity to the increase in FrontLatticeFreq parameter. This is due to the fact that DecayTime=0 which implies that the time frequency depends only on the FreqTimeVec which is kept fixed. Therefore the results are in line with expectations.](./Fig/86.png)

#### 4.3.15 MODEL::IndexInterpolationDensity

The property IndexInterpolationDensity controls the density of points used when performing piecewise linear interpolation of conditional LPI. Its current value is locked at 0.

#### 4.3.16 MODEL::IntegrationFreq

The property IntegrationFreq controls how fine the integration mesh size will be in computing the mean-reversion parameter (MR) from the input local volatility (LV) and term volatility (TV) parameters. We remind the reader that this property is relevant for the interest rates components of the model. The dynamics of the nominal interest rate and of the real interest rate are represented by Hull-White processes of the type (e.g. for nominal rate)

$dr_t^{nom} = k_{nom}(t) (θ_{nom}(t) - r_t^{nom})dt + σ_{nom}(t)dW_t^{nom} \quad (76)$

The information (parameters) on the above dynamics is stored in DBAnalytics by VOL objects with VolMode=LVTV. The property VolMode=LVTV implies that the information regarding the mean-reversion $k_{nom}(t)$ parameter and instantaneous volatility parameter $σ_{nom}(t)$ is stored in the form of two tables called LocalVols which contains a term structure of volatilities $\{σ_{LV}(T), T = T_0,T_1,...T_N\}$ and TermVols which contains a term structure of terminal volatilities $\{TV(T), T = T_0,T_1,...T_N\}$.

The relation between the terminal volatilities $TV(t)$, local volatilities $σ_{LV}(t)$ and mean-reversion parameter $k_{nom}(t)$ is the following:

$TV^2(T)T = \phi^2(T) \int_0^T \frac{σ^2_{LV}(t)}{\phi^2(t)}dt \quad (77)$

where $\phi(t) = \exp(-\int_0^t k^2_{nom}(s)ds)$. Equation (77), which is equivalent to 

$TV(T) = \sqrt{\frac{Var(r_t^{nom})}{T}}$

shows that specifying any two quantities among LocalVols, TermVols and mean-reversion parameter allows to define the third one.

The instantaneous volatility $σ_{nom}(t)$ is stored in the table LocalVols i.e. $σ_{nom}(t) = σ_{LV}(t)$. The mean-reversion parameter $k_{nom}(t)$ is computed from equation (77), by deriving the equation with respect to T and solving the resulting ODE in $\phi^2(T)$. We obtain:

$\phi^2(T) = \frac{TV^2(T)}{TV^2(0)} \exp \left(\int_0^T \frac{1}{t} \left(1-\frac{σ^2_{LV}(t)}{TV^2(t)}\right)dt\right) \quad (78)$

If necessary, the mean reversion $k_{nom}(t)$ is computed by numerical differentiation, with the integral in the exponent approximated by the trapezium rule. However, the knowledge of the term $\phi(t)$ suffices as the process $r_t^{nom}$ is represented in DBAnalytics under the form:

$r_t^{nom} = drift + \phi(t) \int_0^t \frac{σ_{nom}(s)}{\phi(s)}dW_s$

For more details on (77) and the complete derivations we refer to [43]. Note that according to the model rules, the value of the parameter has to be set greater or equal to 365.

Taking into account that the IntegrationFreq is a property impacting the interest rate components of the model we test its impact on the pricing and on the interest rate deltas (i.e. nominal interest rate deltas and real interest rate deltas). To this purpose we increase the value of IntegrationFreq from 12 (value well below the threshold) to 372 in increments of 10. The below figures show that the impact of the parameter is already very small even for values outside the approved range, with the PV and Delta profiles becoming stable as we increase its value:

![Figure 87: Price (right), Delta w.r.t nominal interest rate (center) and Delta w.r.t. real interest rate (right) as function of IntegrationFreq. We can see that the impact of the property IntegrationFreq is very small, with the profiles becoming stable as we increase the parameter's value.](./Fig/87.png)

![Figure 88: Price (right), Delta w.r.t nominal interest rate (center) and Delta w.r.t. real interest rate (right) as function of IntegrationFreq. We can see that the impact of the property IntegrationFreq is very small, with the profiles becoming stable as we increase the parameter's value.](./Fig/88.png)

#### 4.3.17 MODEL::MinNumberSteps

The property MinNumberSteps sets the minimal number of Monte Carlo timesteps before the first security point. According to the model rules, its value has to be greater or equal to 0. The following figures display PV of two securities as function of number of simulation paths in several scenarios for MinNumberSteps. We can see that the impact of the parameter on the pricing is very small, even for a low number of simulation paths.

![Figure 89: Upper Row: Price of InflSwapAverage as function of NumberSims when MinNumberSteps=0, 1, 5, 10. Lower Row: Price of InflSwaptionYOYBerm as function of NumberSims when MinNumberSteps=0, 1, 5, 10.](./Fig/89.png)

#### 4.3.18 MODEL::NumberRuns, MODEL::NumberSeedVarianceRuns

The property NumberRuns sets the number of runs used in the Monte Carlo simulation. According to the model rules NumberRuns has to be set to a value greater or equal to 1. Each run consists of a number of simulation paths set via the property NumberSims. Note that the testing performed in this subsection are just sanity checks, as the impact of Monte-Carlo related parameters (CenteringMode, NumberSims, NumberRuns, Seed, etc) on the Monte Carlo convergence is extensively tested in [50] as part of the standard (re)validation process, for all products in scope, at the level of PV and relevant risk sensitivities, in both normal (EOD) and stressed market conditions (IRRBB, CCAR). All the paths in each simulation run are generated from an initial value called seed by a pseudo-random number generator. The PV of the security for each run is the average of the PVs for all the paths of the run. When the NumberRuns property is set to a value greater than 1, the results file of DBPrice performed in MODE=PRICE will contain the following SeedReport subtable:

| SecType/SecName | MeanPrice | StdPrice | PercentErr | NormStdPrice | NumberRuns | Run0 | Run1 |
| --- | --- | --- | --- | --- | --- | --- | --- |
| SWAP/InflSwapSnowball | -0.1737257 | 0.0016046 | 0.9236398 | 0.0011346 | 2 | -0.1721211 | -0.1753303 |

**Table 221: Upper Row: SeedReport table present in the results file when NumberRuns is set to 2 (and NumberSeedVarianceRuns=1). Lower Row: SeedReport table present in the results file when NumberRuns is set to 3 (and NumberSeedVarianceRuns=1). The description of the parameters present in the table can be found in [45].**

The property NumberSeedVarianceRuns also sets the number of runs used in the MonteCarlo simulation. According to the model rules NumberSeedVarianceRuns has to be set to a value greater or equal to 1. When the NumberSeedVarianceRuns property is set to a value greater than 1, the results file of DBPrice performed in MODE=PRICE will contain the following SeedVarianceReport subtable:

| SecType/SecName | MeanPrice | StdPrice | PercentErr | NormStdPrice | NumberRuns | Run0 | Run1 |
| --- | --- | --- | --- | --- | --- | --- | --- |
| SWAP/InflSwapSnowball | -0.1737257 | 0.0016046 | 0.9236398 | 0.0011346 | 2 | -0.1721211 | -0.1753303 |
| SecType/SecName | MeanPrice | StdPrice | PercentErr | NormStdPrice | NumberRuns | Run0 | Run1 | Run2 |
| SWAP/InflSwapSnowball | -0.173694 | 0.0013108 | 0.7547111 | 0.0007564 | 3 | -0.1721211 | -0.1753303 | -0.1736322 |

**Table 222: Upper Row: SeedVariance table present in the results file when NumberSeedVarianceRuns is set to 2 (and NumberRuns=1). Lower Row: SeedVariance table present in the results file when NumberSeedVarianceRuns is set to 3 (and NumberRuns=1). The description of the parameters present in the table can be found in [45].**

![Figure 90: Price as function of NumberRuns (with NumberSeedVarianceRuns kept fixed to 1) and price as function of NumberSeedVarianceRuns (with NumberRuns kept fixed to 1). Each run uses 10,000 simulation paths. We can see that the impact of the properties is identical.](./Fig/90.png)

We can see that the impact of the properties NumberRuns and NumberSeedVarianceRuns on the pricing is identical. The difference between NumberRuns and NumberSeedVarianceRuns comes in the computation of risk sensitivities, as explained in [45], with NumberSeedVarianceRuns reducing the memory consumption. The properties NumberRuns and NumberSeedVarianceRuns can be used simultaneously. If NumberRuns > 1 and NumberSeedVarianceRuns >1, then a total of NumberRuns*NumberSeedVarianceRuns pricing runs will be done. The SeedVarianceReport will be output, and will still contain the variance of NumberSeedVarianceRuns pricing runs, but now each of these has internally NumberRuns simulations. This will be useful if we want to know the seed variance for the price in a dictionary that is already using NumberRuns > 1.

#### 4.3.19 MODEL::NumberSubSims

The property NumberSubSims is set equal to 1. Note that the property is used only in the simulation of default times and therefore is not relevant for the present model.

##### 4.3.20 MODEL::OptimizationType

The property OptimizationType is set equal to 0.

##### 4.3.21 MODEL::PricingIter

The property PricingIter is used only in the pricing of Accelerated share repurchase (ASR) SECURITY with Enhanced Share Buyback (ESB) payout types and it represents the number of iterations of the maximization algorithm used to price, see [44]. Therefore the property is not relevant in the context of the present model. In the submitted model rules, PricingIter has to be set to a value greater or equal to 3.

##### 4.3.22 MODEL::StateMax Properties

In this section we discuss the StateMax related properties: PolyOrder, StateMaxControlVariate, StateMaxCorrection, StateMaxCutOff, StateMaxFactors, StateMaxFraction, StateMaxRegularization, StateMaxWedge and StateUseFlag. The model rules surrounding these parameters can be summarized in the following table:

| Property | Operator | Values | Observations |
| --- | --- | --- | --- |
| PolyOrder | IN | 0,100,102,103,200,1200,0.25,2003 |  |
| StateMaxControlVariate | IN | NO,YES,INDICATOR |  |
| StateMaxCorrection | IN | JACKKNIFE,NONE |  |
| StateMaxCutOff | < | 0.01 |  |
| StateMaxFactors | PASS |  | If PolyOrder is 1200,1200-0.25 |
| StateMaxFraction | = | 1 |  |
| StateMaxRegularization | IN | NONE,RIDGE,RIDGE-*,RIDGENORM,RIDGENORM-* |  |
| StateMaxWedge | IN | -4,0 |  |
| StateUseFlag | = | 1 |  |
| StateMaxPayoffState | IN | NONE, DIGITAL, ALL |  |

Table 223: Summary of values that the StateMax-related properties can take.

We will test the above properties in the context of a Bermudan swaption, which is a product that gives the owner the right to enter the underlying swap at a set of exercise dates $(T_n)_{n\geq N}$. We can define the exercise value of the swaption at time $T_n$, i.e. the value to enter the underlying swap at time $T_n$:

$$U_n(T_n) = B(T_n)\mathbb{E}_{T_n}\left[\sum_{i=1}^{\tau} B(T_{i+1})^{-1}X_i\right]$$

where $X_i$ represents the net payment at time $T_{i+1}$ of the underlying swap, and the hold/continuation value of the

swaption at time $T_n$ defined as the time $T_n$ value of the swaption if it can be exercised only at times $(T_k)_{k>n}$ i.e.

$$H_n(T_n) = B(T_n) \sup_{T=T_{n+1}...T_N} \mathbb{E}_{T_n} [B(T)^{-1}U_T(T)]$$

StateMax represents a set of algorithms used to compute conditional expectations in the context of pricing based on Monte Carlo methods. In DBAnalytics, the most important application of StateMax is in the solving of the optimal exercise problem, encountered in the pricing of American/Bermudan and callable options.
A generic StateMax algorithm used to determine the price of a Bermudan option can be found in Section 1.2 of [46]. It relies on recursively computing at each time step (exercise date) starting from the end date, the exercise value and the continuation value of the option on each Monte Carlo path. These values are used to construct a table (called Exercise matrix) of optimal exercise times on each path in the life of the option, essentially a table of 1's and 0's that set the point on each simulated path where the option should be exercised. Every time we encounter a 0 in the Exercise matrix, the corresponding contribution from that element in the value matrix is set to zero. When we encounter a 1 in the Exercise matrix, we multiply the corresponding contribution of the value matrix by 1, and add it to our total option value. The value of the option will be defined as the average over all the paths.
The exercise function is defined as the conditional expectation of the difference between the option's exercise value and the option's hold value i.e.

$$\mathbb{E}[U_n(T_n) - H_n(T_n)|X_n] - W(X_n)$$

where $X_n$ represents a set of state variables at time $T_n$ and $W$ is a polynomial function defined by the PolyOrder property. The parameters of the function $W$ will be determined using the least squares method employed on the data points $\{(x_n, y_n)\}_{x_n = X(T_n, \omega_k), y_n = U_n(T_n, \omega_k) - H_n(T_n, \omega_k), k = 1...N\}$, with $N$ representing the number of Monte Carlo paths and $X(T_n, \omega_k)$ the realisation of variable $X$ at time $T_n$ on path $\omega_k$.
The property PolyOrder impacts the value of "Ramp" and "Polynomial" since PolyOrder is decomposed internally as follows:

$$PolyOrder = 100 \cdot Ramp + Polynomial$$

This implies that:

1. PolyOrder=0 implies Ramp=0 and Polynomial=0
2. PolyOrder=100, 102, 103 implies Ramp=1 and Polynomial=0, 2, 3
3. PolyOrder=200 implies Ramp=2 and Polynomial=0
4. PolyOrder=1200-0.25 implies Ramp=12 and Polynomial=0
5. PolyOrder=2003 implies Ramp=20 and Polynomial=3.

Ramp impact the method used to define the exercise time while Polynomial determines the order of the polynomial function $W$. Note that Polynomial=0 implies that we use a polynomial of order 3 in the case of PolyOrder=100 is equivalent with PolyOrder=103. As stated before the Exercise function is defined as a binary function taking the values 0 and 1. The introduction of Ramp has the purpose of allowing the Exercise function to take any value between 0 and 1 and smoothening th discontinuities in the pricing, since small changes in the underlying values along any path will cause small changes in the value from state $x$ to state $y$.
The Ramp function has assigned a width parameter $\sigma$. Ramp is set equal to 0 when $W({\omega_k}) < -\sigma$ and set equal to 1 when $W({\omega_k}) > \sigma$ and increases linearly from 0 to 1 when $W({\omega_k})$ moves from $-\sigma$ to $\sigma$. This implies that for $W({\omega_k}) < -\sigma$ the Exercise Value will be 0 and the value assigned to the option on path $\omega_k$ and time $T_n$ is 0, for $W({\omega_k}) > \sigma$ the Exercise Value will be 1 and the value assigned to the option on path $\omega_k$ and time $T_n$ is $V(T_n, \omega_k) > 0$ and for $W(\omega_k) < -\sigma$ the Exercise Value will be a number between 0 and 1 and the option value on path $\omega_k$ and time $T_n$ will be $Ramp \cdot V(T_n, \omega_k)$ where $0 \leq Ramp \leq 1$.
According to the model rules, the ramp function can be of type 0, 1, 2, 12 and 20. A Ramp = 0 will tend to be the narrowest by default. Ramp = 1 will set the ramp using the maximum of either the standard deviations of the W(i). There is a default setting for Ramp = 2 which is to use the Gaussian wedge with the same width as Ramp = 1. The complete description of the Ramp function can be found in [46], see Section 2.4.1 for Ramp=0, Section 2.4.2 for Ramp=1, Section 2.4.3 for Ramp=2, Section 3 for Ramp=12 and Section 4 for Ramp=20.
The parameter StateMaxWedge to set manually the width of the Ramp, by overriding the default settings of the selected ramp type. The parameter StateMaxWedge can be used to set the width of the Ramp. Setting the parameter StateMaxWedge to the negative value -4 will cause the linear ramp to be replaced by a gaussian or normal ramp, described in [47]. Setting StateMaxWedge=0 will optimize the choice of wedge size.
The property StateMaxControlVariate introduces a control variate in the computation, which is a variance reduction technique whose final purpose is to make the StateMax algorithm more stable and accurate. The complete description of the property can be found in Section 5 of [48].
The property StateMaxFraction introduces a smoothing methods which is based on the elimination of "extremal" paths. The complete description of the property can be found in Section 6.2 of [46]. This property is set to 1 (i.e. the smoothing method is not used) for all configurations except PolyOrder=1200, 1200-0.25.
The property StateMaxFactors is used to limit the number of state variables (risk factors) used in the regression. If StateMaxFactors=N then a PCA is performed on all factors involved and the first N-1 eigenvectors with the highest eigenvalues will be used in StateMax calculation. Additionally, an N-th factor is used, which is obtained by doing a linearization of the final payoff with all the factors.
The property StateMaxCutOff is used to reduce the number of states by selecting only the smallest and most diversified set of eigenvectors. As in the case of StateMaxFactor a PCA is performed on all risk factors to determine the smallest N satisfying

$$\frac{\sum (largestNeigenvalues)}{\sum (totaleigenvalues)} \geq 1 - StateMaxCutOff$$

The first N-1 eigenvectors with the highest eigenvalues will be used in the statemax calculation. Additionally, an N-th factor is used, which is obtained by doing a linearization of the final payoff with all the factors. According to model rules StateMaxCutOff has to be set to a value less or equal to 0.01. The complete description of the property can be found in Section 6.4 of [46].
The property StateMaxCorrection is used to reduce the variance-related bias and it impact only the calculation of the exercise decision. The property can be set to NONE (no adjustments are made) or JACKKNIFE. The description of the property can be found in Section 6.5 of [46].
The property StateMaxRegularization is used to improve the general performance of least-squares regression. This is done by changing the way the regression coefficients are computed from the classic formula:

$$\beta = argmin_{\beta}||Y - X\beta||^2 = (X^T X)^{-1} X^T Y$$

to the ridge (Tikhonov regularization) regression:

$$\beta = argmin_{\beta}[||Y - X\beta||^2 + \lambda||\beta||^2] = (X^T X + \lambda I)^{-1} X^T Y$$

where $\lambda$ is a suitably chosen parameter (if $\lambda = 0$ the formula degenerates to the classic expression) and where $I$ represents the unit matrix. The description of the property can be found in Section 6.6 of [46].
The property StateMaxFlag allows choice between various tables being used during the Monte Carlo valuation of american options. According model rules, StateMaxFlag=1 which means use all the states.
For two instruments in scope of the model (inflSwaptionYOYBerm, inflSwaptionZCEuro, inflSwapAverage, inflSwaptionZCEuro), under DBX model with PolyOrder=0, we compare the PV and the values of the underlying swap's Pay and Receive legs, the total value of the underlying swap (defined as the difference between the two swap legs) according to the booking convention given by the properties OptionPosition and OptionType) and "American Option" value i.e. the option to enter the underlying swap under threee scenarios: StateMaxControlVariate=YES, StateMaxControlVariate=NO and StateMaxControlVariate=INDICATOR. The results are presented in the following table:

| Security | RecPV | PayPV | Underlying Swap | American Option | NetValue |
| --- | --- | --- | --- | --- | --- |
| inflSwaptionYOYBerm(NO) | 22.760708 | 22.701333 | 0.18754 | 0.18587258 | 0.18587258 |
| inflSwaptionYOYBerm(YES) | 22.760708 | 22.701333 | 0.18754 | 0.18070348 | 0.18070348 |
| inflSwaptionYOYBerm(INDICATOR) | 22.760708 | 22.701333 | 0.18754 | 0.18754205 | 0.18754205 |
| inflSwapYOYCapFloor(NO) | 0.306084 | 0.4487761 | -0.1426921 | 0.0 | -0.1426921 |
| inflSwapYOYCapFloor(YES) | 0.306084 | 0.4487761 | -0.1426921 | 0.0 | -0.1426921 |
| inflSwapYOYCapFloor(INDICATOR) | 0.306084 | 0.4487761 | -0.1426921 | 0.0 | -0.1426921 |
| inflSwapIntlNominalLin(NO) | 0.0125615 | 0.1355364 | -0.1229749 | 0 | -0.1229749 |
| inflSwapIntlNominalLin(YES) | 0.0125615 | 0.1355364 | -0.1229749 | 0 | -0.1229749 |
| inflSwapIntlNominalLin(INDICATOR) | 0.0125615 | 0.1355364 | -0.1229749 | 0 | -0.1229749 |
| inflSwapAverage(NO) | 625.2421088 | 89.6170364 | 535.6250724 | 0 | 535.6250724 |
| inflSwapAverage(YES) | 625.2421088 | 89.6170364 | 535.6250724 | 0 | 535.6250724 |
| inflSwapAverage(INDICATOR) | 625.2421088 | 89.6170364 | 535.6250724 | 0 | 535.6250724 |
| inflSwaptionZCEuro(NO) | 27.8159307 | 23.3200298 | 4.4959009 | 4.6809973 | 4.6809973 |
| inflSwaptionZCEuro(YES) | 27.8159307 | 23.3200298 | 4.4959009 | 4.6755182 | 4.6755182 |
| inflSwaptionZCEuro(INDICATOR) | 27.8159307 | 23.3200298 | 4.4959009 | 4.6776631 | 4.6776631 |

Table 224: DBX Model, PolyOrder=0. The values of the underlying swap's Pay Leg, Receive Leg, Swap value (difference between the receive leg and the pay leg), "american option" (defined as right to enter the swap/reverse swap, depending on the properties OptionType/OptionPosition) and net value of the instrument in 3 scenarios: StateMaxControlVariate=YES, StateMaxControlVariate=NO and StateMaxControlVariate=INDICATOR.

We can see in the above table that only the values of inflSwaptionYOYBerm and inflSwaptionZCEuro are impacted by the change of StateMaxControlVariate, which is in line with expectations. Both instruments are booked in DBAnalytics as MULTISWAP objects with OptionPosition=LONG and OptionType=ENTER, meaning that their risk decomposition is RightToEnter(ReceiveLeg - PayLeg) i.e. their net value will be equal to the value of the "american option" component of their decomposition. The valuation of the american option component relies on STATEMAX and therefore it is sensitive to the property StateMaxControlVariate as the results show. The other instruments inflSwapIntlNominalLin, inflSwapAverage) have the american option component equal to 0 and therefore are not impacted by the property StateMaxControlVariate. In the case of inflSwaptionYOYBerm the results file will contain also an "Exercise Table" containing the values of the american option (i.e. net value of the instrument), european option (the instrument considered as having only 1 exercise date) and exercise probability at each of the exercise dates. The following figures display the profiles of the american option value, european option value and exercise probability. The time points range represents the exercise dates, which range between the start date 05/02/2014 and the end date 05/02/2024, with a 3M interval between the exercise dates.

![Figure 91: DBX Model, PolyOrder=0. InflSwaptionYOYBerm: profiles of the european option value (upper left), american option value (upper right), and exercise probability (center).](./Fig/1.png)

Given that out of the five instruments from above only inflSwaptionYOYBerm and inflSwaptionZCEuro show sensitivity to STATEMAX, we will perform the remaining tests on these two instruments. In the following test we will examine the impact of the PolyOrder property on the valuation of the two instruments. To this purpose, we compare the price (net value) of the two instruments in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. The results are summarized in the following table:

| Security | PolyOrd=0 | PolyOrd=100 | PolyOrd=102 | PolyOrd=103 | PolyOrd=200 | PolyOrd=1200 | PolyOrd=2003 |
| --- | --- | --- | --- | --- | --- | --- | --- |
| inflSwaptionYOYBerm PV | 0.185873 | 0.176356 | 0.178731 | 0.176356 | 0.174922 | 0.198173 | 0.258143 |
| inflSwaptionZCEuro PV | 4.680397 | 4.680077 | 4.675908 | 4.680077 | 4.680397 | 4.596569 | 4.718158 |

Table 225: The price (net value) of the inflSwaptionYOYBerm and inflSwaptionZCEuro in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. We can see that the PV in the case PolyOrder=2003 is relatively different from the PVs corresponding to the other scenarios.

In the case of InflSwaptionYOYBerm the results file will contain also an "Exercise Table" containing the values of the american option (i.e. net value of the instrument), european option (the instrument considered as having only 1 exercise date) and exercise probability at each of the exercise dates. The following figures display the profiles of the american option value, european option value and exercise probability in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003 and in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1. The time points range represents the exercise dates, which range between the start date 05/02/2014 and the end date 05/02/2024, with a 3M interval between the exercise dates.

![Figure 96: InflSwaptionYOYBerm: profiles of the european option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/6.png)

![Figure 97: InflSwaptionYOYBerm: profiles of the american option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/7.png)

![Figure 98: InflSwaptionYOYBerm: profiles of the exercise probabilities in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/8.png)

The impact of StateMaxFactors and StateMaxFraction properties is mostly overwritten by the properties StateStateMaxCutOff ≤ 0.01 and StateUseFlag=-1 which imply that all risk factors will be used in the regression. Furthermore, note that in all PolyOrder modes except PolyOrder=1200, StateMaxFraction is set equal to 1, implying that no smoothing method based on "extremal paths" elimination is in use. In the case of PolyOrder=1200 we can see that setting StateMaxFactors=2,3,4 yields the same value of the option i.e. the impact of StateMaxFactors is cancelled by StateStateMaxCutOff ≤ 0.01 and StateUseFlag=-1:

| Security | StateMaxFactors=2 | StateMaxFactors=3 | StateMaxFactors=4 |
| --- | --- | --- | --- |
| inflSwaptionZCEuro PV | 4.596569 | 4.596569 | 4.596569 |
| inflSwaptionZCEuro EigenValueRatio | 1 | 1 | 1 |

Table 228: The price (net value) and EigenValueRatio of inflSwaptionZCEuro with PolyOrder=1200 mode and under scenarios StateMaxFactors=2, 3 and 4. We can see that the property StateMaxFactors has no impact on the valuation, which is obvious when comparing the EigenValueRatio value, which is equal to 1 in all three cases.

We conclude this section by examining the impact of property StateMaxWedge on the valuation of inflSwaptionZCEuro and inflSwaptionYOYBerm in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. In each Scenario we will set StateMaxWedge=-4 and StaateMaxWedge=0. The results are summarized in the following figures:

![Figure 99: InflSwaptionYOYBerm: profiles of the european option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/9.png)

![Figure 100: InflSwaptionYOYBerm: profiles of the american option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/10.png)

![Figure 101: InflSwaptionYOYBerm: profiles of the exercise probabilities in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/11.png)

##### 4.3.23 MODEL::StateMaxBreakdown

This property, StateMaxBreakDown, isn't file specific. It's values should be set to 'NO'.

##### 4.3.24 MODEL::StateMaxParallel

According to model rules, property StateMaxParallel can be set to 'NO', with a meaning of 'global control setup'. Therefore, model assumes that 'global setup' is used for this parameter. We cannot control this from file level but we delegate this to model environment. Test can be performaed as StateMaxParallel is set "OFF" with PolyOrder = 0 first, and StateMaxParallel is set to "OFF", "ON" and "SMART" with PolyOrder = 103.

First, run the model with StateMaxParallel = "OFF" with various PolyOrder configurations:

| Security | PolyOrd=0 | PolyOrd=100 | PolyOrd=103 | PolyOrd=200 | PolyOrd=1200 | PolyOrd=2003 |
| --- | --- | --- | --- | --- | --- | --- |
| inflSwaptionYOYBerm PV | 0.185873 | 0.176356 | 0.176356 | 0.174922 | 0.198173 | 0.258143 |
| inflSwaptionZCEuro PV | 4.680397 | 4.680077 | 4.680077 | 4.680397 | 4.596569 | 4.718158 |

Table 229: The prices of instruments for various PolyOrder configurations with StateMaxParallel = "OFF".erm the results file will contain also an "Exercise Table" containing the values of the american option (i.e. net value of the instrument), european option (the instrument considered as having only 1 exercise date) and exercise probability at each of the exercise dates. The following figures display the profiles of the american option value, european option value and exercise probability. The time points range represents the exercise dates, which range between the start date 05/02/2014 and the end date 05/02/2024, with a 3M interval between the exercise dates.

![Figure 92: InflSwaptionYOYBerm: profiles of the european option value (upper left), american option value (upper right), and exercise probability (center) in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003.](./Fig/2.png)

In the following test we will examine the impact of the StateMaxCorrection property on the valuation of the two instruments. To this purpose, we compare the price (net value) of the two instruments in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003 and in each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE. Note that in the case of PolyOrder=1200 the test cannot be performed as StateMaxCorrection=JACKKNIFE is not supported for PolyOrder=1200 - the dictionary throws an error message "StateMaxCorrection is supported only for basis function regression (e.g. 3rd order polynomial for PolyOrder = 103)!". The results are summarized in the following table:

| Security | PolyOrd=0 | PolyOrd=100 | PolyOrd=102 | PolyOrd=103 | PolyOrd=200 | PolyOrd=2003 |
| --- | --- | --- | --- | --- | --- | --- |
| inflSwaptionYOYBerm PV (NONE) | 0.1858725 | 0.1763561 | 0.1787308 | 0.1763561 | 0.1749224 | 0.258143 |
| inflSwaptionYOYBerm PV (JACKKNIFE) | 0.1687401 | 0.1659130 | 0.1732 | 0.1659130 | 0.1585595 | 0.177299 |
| inflSwaptionZCEuro (Rel.Diff.) | 0.10153 | 0.06294 | 0.03191 | 0.062943 | 0.103197 | 0.45598 |
| inflSwaptionZCEuro PV (NONE) | 4.6803973 | 4.680076 | 4.6759084 | 4.6800769095 | 4.6803973 | 4.7181579 |
| inflSwaptionZCEuro PV (JACKKNIFE) | 4.6743233 | 4.6741124 | 4.6737109 | 4.6741124 | 4.6743233 | 4.6608457 |
| inflSwaptionZCEuro (Rel.Diff.) | 0.0012 | 0.00127 | 0.00047 | 0.00127 | 0.00129 | 0.01229 |

Table 226: The price (net value) of the inflSwaptionYOYBerm and inflSwaptionZCEuro in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. In each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE and compute the prices and the relative difference between them. We can see that the PV in the scenario PolyOrder=2003 is relatively sensitive to the choice of StateMaxCorrection, especially in the case of inflSwaptionYOYBerm.

In the case of inflSwaptionYOYBerm the results file will contain also an "Exercise Table" containing the values of the american option (i.e. net value of the instrument), european option (the instrument considered as having only 1 exercise date) and exercise probability at each of the exercise dates. The following figures display the profiles of the american option value, european option value and exercise probability in six scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200 and PolyOrder=2003 and in each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE. The time points range represents the exercise dates, which range between the start date 05/02/2014 and the end date 05/02/2024, with a 3M interval between the exercise dates.

![Figure 93: InflSwaptionYOYBerm: profiles of the european option value in six scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE.](./Fig/3.png)

![Figure 94: InflSwaptionYOYBerm: profiles of the american option value in six scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE.](./Fig/4.png)

![Figure 95: InflSwaptionYOYBerm: profiles of the exercise probabilities in six scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxCorrection=NONE and StateMaxCorrection=JACKKNIFE.](./Fig/5.png)

In the following test we will examine the impact of the StateMaxregularization property on the valuation of the instruments. To this purpose, we compare the price (net value) of the two instruments in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003 and in each scenario we set StateMaxRegularization equal to NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1. Note that we expect that the profiles of the pairs (RIDGE, RIDGE-0.01) and (RIDGENORM, RIDGENORM-0.01) to coincide since the model settings for RIDGE (RIDGENORM) should be identical to RIDGE-0.01 (RIDGENORM-0.01).

The results are summarized in the following table:

| Security | NONE | RIDGE | RIDGE-0.01 | RIDGE-0.1 | RIDGENORM | RIDGENORM-0.01 | RIDGENORM-0.1 |
| --- | --- | --- | --- | --- | --- | --- | --- |
| inflSwaptionZCEuro (POrder=0) | 4.680397 | 4.680265 | 4.680265 | 4.673116 | 4.680397 | 4.680397 | 4.680397 |
| inflSwaptionZCEuro (POrder=100) | 4.680077 | 4.679641 | 4.679641 | 4.672497 | 4.680077 | 4.680077 | 4.680077 |
| inflSwaptionZCEuro (POrder=102) | 4.675908 | 4.675247 | 4.675247 | 4.655759 | 4.675908 | 4.675908 | 4.675908 |
| inflSwaptionZCEuro (POrder=103) | 4.680077 | 4.679641 | 4.679641 | 4.672497 | 4.680077 | 4.680077 | 4.680077 |
| inflSwaptionZCEuro (POrder=200) | 4.680397 | 4.680265 | 4.680265 | 4.673116 | 4.680397 | 4.680397 | 4.680397 |
| inflSwaptionZCEuro (POrder=1200) | 4.596569 | 4.596569 | 4.596569 | 4.596569 | 4.596569 | 4.596569 | 4.596569 |
| inflSwaptionZCEuro (POrder=2003) | 4.718158 | 4.619467 | 4.619467 | 4.606255 | 4.718158 | 4.718158 | 4.718158 |
| inflSwaptionYOYBerm (POrder=0) | 0.185873 | 0.182461 | 0.182461 | 0.180159 | 0.185873 | 0.185873 | 0.185873 |
| inflSwaptionYOYBerm (POrder=100) | 0.176356 | 0.177512 | 0.177512 | 0.17619 | 0.176356 | 0.176356 | 0.176356 |
| inflSwaptionYOYBerm (POrder=102) | 0.178731 | 0.176579 | 0.176579 | 0.175905 | 0.178731 | 0.178731 | 0.178731 |
| inflSwaptionYOYBerm (POrder=103) | 0.176356 | 0.177512 | 0.177512 | 0.17619 | 0.176356 | 0.176356 | 0.176356 |
| inflSwaptionYOYBerm (POrder=200) | 0.174922 | 0.180478 | 0.180478 | 0.176524 | 0.174922 | 0.174922 | 0.174922 |
| inflSwaptionYOYBerm (POrder=1200) | 0.198173 | 0.198173 | 0.198173 | 0.198173 | 0.198173 | 0.198173 | 0.198173 |
| inflSwaptionYOYBerm (POrder=2003) | 0.258143 | 0.241389 | 0.241389 | 0.237292 | 0.258143 | 0.258143 | 0.258143 |

Table 227: The price (net value) of the inflSwaptionYOYBerm and inflSwaptionZCEuro in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. In each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1 and compute the prices. Note that the PVs in cases RIDGE AND RIDGE-0.01 coincide, which is in line with expectations, due to their definition. Furthermore, note that for both securities, in the case PolyOrder=1200, the property StateMaxRegularization has no impact, as the PVs are identical in all cases.

In the case of InflSwaptionYOYBerm the results file will contain also an "Exercise Table" containing the values of the american option (i.e. net value of the instrument), european option (the instrument considered as having only 1 exercise date) and exercise probability at each of the exercise dates. The following figures display the profiles of the american option value, european option value and exercise probability in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003 and in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1. The time points range represents the exercise dates, which range between the start date 05/02/2014 and the end date 05/02/2024, with a 3M interval between the exercise dates.

![Figure 96: InflSwaptionYOYBerm: profiles of the european option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/6.png)

![Figure 97: InflSwaptionYOYBerm: profiles of the american option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/7.png)

![Figure 98: InflSwaptionYOYBerm: profiles of the exercise probabilities in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxRegularization=NONE, RIDGE, RIDGE-0.01, RIDGE-0.1, RIDGENORM, RIDGENORM-0.01 and RIDGENORM-0.1.](./Fig/8.png)

The impact of StateMaxFactors and StateMaxFraction properties is mostly overwritten by the properties StateStateMaxCutOff ≤ 0.01 and StateUseFlag=-1 which imply that all risk factors will be used in the regression. Furthermore, note that in all PolyOrder modes except PolyOrder=1200, StateMaxFraction is set equal to 1, implying that no smoothing method based on "extremal paths" elimination is in use. In the case of PolyOrder=1200 we can see that setting StateMaxFactors=2,3,4 yields the same value of the option i.e. the impact of StateMaxFactors is cancelled by StateStateMaxCutOff ≤ 0.01 and StateUseFlag=-1:

| Security | StateMaxFactors=2 | StateMaxFactors=3 | StateMaxFactors=4 |
| --- | --- | --- | --- |
| inflSwaptionZCEuro PV | 4.596569 | 4.596569 | 4.596569 |
| inflSwaptionZCEuro EigenValueRatio | 1 | 1 | 1 |

Table 228: The price (net value) and EigenValueRatio of inflSwaptionZCEuro with PolyOrder=1200 mode and under scenarios StateMaxFactors=2, 3 and 4. We can see that the property StateMaxFactors has no impact on the valuation, which is obvious when comparing the EigenValueRatio value, which is equal to 1 in all three cases.

We conclude this section by examining the impact of property StateMaxWedge on the valuation of inflSwaptionZCEuro and inflSwaptionYOYBerm in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003. In each Scenario we will set StateMaxWedge=-4 and StaateMaxWedge=0. The results are summarized in the following figures:

![Figure 99: InflSwaptionYOYBerm: profiles of the european option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/9.png)

![Figure 100: InflSwaptionYOYBerm: profiles of the american option value in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/10.png)

![Figure 101: InflSwaptionYOYBerm: profiles of the exercise probabilities in seven scenarios: PolyOrder=0, PolyOrder=100, PolyOrder=102, PolyOrder=103, PolyOrder=200, PolyOrder=1200 and PolyOrder=2003, where in each scenario we set StateMaxWedge=-4 and StateMaxWedge=0.](./Fig/11.png)

#### **////////////////////////////////////////////////////////////////
#### **////////////////////////////////////////////////////////////////
#### **////////////////////////////////////////////////////////////////

for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 126: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/12.png)

![Figure 127: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwapZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapZC.](./Fig/13.png)

#### 4.4.3 Convergence Testing

##### 4.4.3.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapZC test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 128 and 129. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 128: The graphs present the price and risk measures for the InflSwapZC test trade (5473531) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/14.png)

![Figure 129: The graphs present the standard deviation of price for the InflSwapZC test trade (5473531) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/15.png)

#### 4.4.4 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwapZC.

![Figure 130: Transition of the PV of the InflSwapZC in the up and down stressed scenarios.](./Fig/16.png)

#### 4.4.5 CCAR Testing

We test the product InflSwapZC under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of the risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.4).

#### 4.4.5.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of the IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. In the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability tests successful.

##### 4.4.5.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 131: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the EUR IR curve. The risks are smooth and well behaved.](./Fig/17.png)

![Figure 132: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/18.png)

##### 4.4.5.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 133: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the EUR IR curve vol. The risks are smooth and well behaved.](./Fig/19.png)

![Figure 134: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the CPALBE inflation curve vol. The risks are smooth and well behaved.](./Fig/20.png)

![Figure 135: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the EUR IR real vol. The risks are smooth and well behaved.](./Fig/21.png)

##### 4.4.5.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 136: The price and risk ladders for the InflSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/22.png)

##### 4.4.5.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the full 2D inflation Delta and Gamma risks, and consider whether these risks are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only becoming significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base, CCAR1 and CCAR2 scenarios separately.

![Figure 137: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/23.png)

![Figure 138: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InflSwapZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapZC.](./Fig/24.png)

![Figure 139: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/25.png)

![Figure 140: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InflSwapZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapZC.](./Fig/26.png)

![Figure 141: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/27.png)

![Figure 142: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwapZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapZC.](./Fig/28.png)

#### 4.4.5.2 Convergence Testing

##### 4.4.5.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapZC test trade in the three CCAR scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 143 and 144. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 143: The graphs present the price and risk measures for the InfSwapZC test trade (547353L) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/1.png)

![Figure 144: The graphs present the standard deviation of price for the InfSwapZC test trade in the three scenarios Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/2.png)

#### 4.4.6 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InfSwapZC trade according to a range of ten different scenarios defined under the IRBB framework. For clarity's sake, we display the various scenarios by grouping them into different categories, based on the overall effect on the curve due to application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus flattening' the curve. Similarly, the Long up and Long down scenarios respectively increase and decrease the long rates part of the original curve, while leaving unchanged the short portion of the curve. In dual effect, the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

#### 4.4.6.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 145: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/3.png)

#### 4.4.6.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities of the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 146: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/4.png)

![Figure 147: PV ladders of the trade InfSwapZC under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/5.png)

![Figure 148: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/5.png)

![Figure 149: PV ladders of the trade InfSwapZC under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/6.png)

![Figure 150: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/7.png)

![Figure 151: PV ladders of the trade InfSwapZC under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/7.png)

![Figure 152: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/8.png)

![Figure 153: PV ladders of the trade InfSwapZC under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/9.png)

![Figure 154: The graph shows the PV Ladder for inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/9.png)

![Figure 155: PV ladders of the trade InfSwapZC under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/10.png)

#### 4.4.6.3 Convergence Testing

We have investigated the Monte Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. For each value of NumSims, we have set the parameter Seed = 1.

![Figure 156: The graphs present the MonteCarlo simulation of the price for the InfSwapZC IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/11.png)

### 4.5 Product Testing - InfSwapYOYCapFloor

The General YOY Inflation Swap with Cap and/or Floor (InfSwapYOYCapFloor) is a swap trade with inflation coupons, payable at coupon dates $T_i$, having the general form:

$$C(T_i) = \max\left[\min\left[\left(\frac{I(T_i)}{I(T_{i-1})}-1\right), \text{Cap}_i\right], \text{Floor}_i\right] - \text{Spread}_i, \tag{79}$$

where $\text{Cap}_i$, $\text{Floor}_i$ and $\text{Spread}_i$ are the, possibly coupon date dependent, cap level, floor level and spreads correspondingly. The coupon dates $T_i$ are typically set annually spaced, such that the coupon payment reflects effectively a capped/floored annual inflation rate for the preceding year (with a possible delay). The present value of the swap is obtained by summing the values of individual coupons, and is given by the following expressions:

$$\text{NetValue}(t_0) = \sum_{i=1}^{M_{\max}} \text{NetValue}_i(t_0)$$

$$\text{NetValue}_i(t_0) = N \cdot \text{dcf}_i \cdot E_n\left[e^{-\int_{t_0}^{T_i} r(s)ds} C(T_i) | \mathcal{F}_{t_0}\right], \tag{80}$$

where $N$ is the notional of the trade, $\text{dcf}_i$ is the daycount fraction applicable to the coupon, $M_{\max}$ is the number of coupons in the swap, $r$ is the short rate factor in the nominal currency, and $E_n[\cdot | \mathcal{F}_{t_0}]$ is the expectation in the nominal currency risk-neutral measure at time $t_0$. The nature of the individual coupon is most clearly understandable when written down in the forward nominal measure and using the tower law property:

$$\text{NetValue}_i(t_0) = N \cdot \text{dcf}_i \cdot E_n\left[e^{-\int_{t_0}^{T_i} r(s)ds} C(T_i) | \mathcal{F}_{t_0}\right]$$

$$= N \cdot \text{dcf}_i \cdot P_n(t_0, T_i) \cdot E^{T_i}_{n}\left[C(T_i) | \mathcal{F}_{t_0}\right]$$

$$= N \cdot \text{dcf}_i \cdot P_n(t_0, T_i) \cdot E^{T_i}_{n}\left[E^{T_i}_{n}\left[C(T_i) | \mathcal{F}_{T_{i-1}}\right] | \mathcal{F}_{t_0}\right], \tag{81}$$

Since the term $E^{T_i}_{n}\left[C(T_i) | \mathcal{F}_{T_{i-1}}\right]$ is essentially the price of a zero coupon inflation capped/floored swap at time $T_{i-1}$ with maturity at time $T_i$, it follows that the YOY coupon is essentially a forward starting option. This term can be further decomposed in terms of contributions from real and nominal curve as well as inflation index as follows:

$$E^{T_i}_{n}\left[C(T_i) | \mathcal{F}_{T_{i-1}}\right] = -\text{Spread}_i +$$

$$+ \max\left[\min\left[\left(\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} - 1\right), \text{Cap}_i\right], \text{Floor}_i\right] + \circled{1}$$

$$= +\left\{E^{T_i}_{n}\left[\max\left[\min\left[\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right), \text{Cap}_i\right], \text{Floor}_i\right] | \mathcal{F}_{T_{i-1}}\right] - \right.$$

$$\left.- \max\left[\min\left[\left(\frac{E^{T_i}_{n}[I(T_i) | \mathcal{F}_{T_{i-1}}]}{I(T_{i-1})} - 1\right), \text{Cap}_i\right], \text{Floor}_i\right]\right\} + \circled{2} \tag{82}$$

The two numbered terms in above equation have the following interpretation:

* The first term corresponds to a non-linear payoff dependent on real and nominal curves.
* The second term is a forward starting option payoff on the inflation index, with the last term in the curly brackets dependent on evolution of real and nominal curves upto time $T_{i-1}$.

The InfSwapYOYCapFloor swap is non-callable, and can therefore be decomposed as a linear combination of individual capped/floored coupons. For our testing purposes we shall consider a set of simple benchmark securities, namely linear swap coupons, caplets and floorlets, for a set of standardized maturities of 1Y, 5Y, 10Y and 20Y. The coupons payoffs for these securities are given by:

$$C_{Linear}(T_i) = \left(\frac{I(T_i)}{I(T_{i-1})} - 1\right)$$

$$C_{Caplet}(T_i) = \min\left[\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right), \text{Cap}_i\right] \tag{83}$$

$$C_{Floorlet}(T_i) = \max\left[\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right), \text{Floor}_i\right]$$

The notional for the trades is set to $N = 10, 000$, such that the price of the relevant coupons is essentially given in basis points (bps). The considered inflation index is the CPXTEMU index with 3M delay. The CPXTEMU index is the European HICP (Harmonized Index of Consumer Prices), which is a weighted average of price indices of member states who have adopted the euro. Figure 157 shows the past and future projected behaviour of this index. The ladder-like nature of the plot reflects the monthly nature of data release for the inflation index.

![Figure 157: The CPXTEMU inflation index with 3M delay. The valuation date is 8-Dec-2014. For dates prior to valuation date, the index is based on historical fixings. For dates after 8-Dec-2014, the figure shows the projected inflation index value.](./Fig/13.png)

The valuation date is given by
$$t_0 = 8-\text{Dec}-2014, \tag{84}$$

and the other relevant dates are given by in Table 235. The last column in Table 235 corresponds to the convexity-adjusted YOY forward, defined in Eq. 86 below. The market data dependencies for pricing the YOY coupons are summarized in Table 237. The production market data corresponds to all of the correlations set and vol-of-vol set to zero.

| Label | $T_{i-1}$ | $T_i$ | Fwd |
| --- | --- | --- | --- |
| 1Y | 31-Dec-2014 | 31-Dec-2015 | 0.01% |
| 5Y | 31-Dec-2018 | 31-Dec-2019 | 1.48% |
| 10Y | 31-Dec-2023 | 31-Dec-2024 | 1.81% |
| 20Y | 31-Dec-2033 | 31-Dec-2034 | 1.05% |

Table 235: Coupon dates and forwards.

The pricing of YOY coupons involves several subtleties arising due to facts that we investigate more detail in the following subsection. Firstly, even in the case of a linear YOY coupon, the YOY feature introduces convexity correction in comparison to zero-coupon inflation swaps [16]. Secondly, the introduction of caps/floors on the YOY coupon introduces additional volatility price dependency due to the convex nature of the payoff.

##### 4.5.1 Testing Product Specific Features

###### 4.5.1.1 YOY Convexity Correction

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | InflationLAG_3M | CPXTEMU inflation asset, with a 3 month delay. |
| CURVE | EUR | EUR curve (nominal curve) |
| CURVE | CPXTEMU | CPXTEMU curve (inflation curve) |
| VOL | EURvol_noskew | EUR curve volatility object |
| VOL | CPXTEMUvol | CPXTEMU curve volatility object |
| VOL | EUR/CPXTEMUvol | EUR/CPXTEMU inflation asset volatility object with stochastic volatility |
| VOL | zeroCorrelation_ZC | correlation object specifying correlation between the four underlying factors. |

Table 236: Market data dependencies for pricing YOY coupons. The data has been taken for COB date 8-Dec-14.

The convexity correction for a YOY coupon arises because, in general, for the value of the linear coupon in Eq. 83, one has:

$$E_n\left[e^{-\int_{t_0}^{T_i} r(s)ds}\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right) | \mathcal{F}_{t_0}\right] =$$

$$= E_n\left[e^{-\int_{t_0}^{T_{i-1}} r(s)ds}E_n\left[e^{-\int_{T_{i-1}}^{T_i} r(s)ds}\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right) | \mathcal{F}_{T_{i-1}}\right] | \mathcal{F}_t\right]$$

$$= E_n\left[e^{-\int_{t_0}^{T_{i-1}} r(s)ds}P_r(T_{i-1}, T_i) | \mathcal{F}_t\right] - P_n(t_0, T_i) \neq$$

$$\neq \frac{P_r(t_0, T_i)}{P_r(t_0, T_{i-1})}P_n(t_0, T_{i-1}) - P_n(t_0, T_i) \tag{85}$$

where we focus attention on the last inequality. This inequality holds in general when real and nominal rates are stochastic. The inequality may become an equality in special cases, in particular when inflation curve (real curve) is deterministic, and in these cases the convexity correction vanishes. However, in general case the valuation of the YOY coupon has a non-trivial dependence on dynamics of underlying factors, and is model dependent.

The convexity adjusted forward YOY inflation rate as follows:

$$\text{Fwd}^{\text{adjusted}}_{T_i} = E^{T_i}_{n}\left[\left(\frac{I(T_i)}{I(T_{i-1})} - 1\right) | \mathcal{F}_{t_0}\right], \tag{86}$$

where $E^{T_i}_{n}$ is the expectation in the $T_i$-forward measure. The ATM caplets, which we consider below, have their cap set to this convexity adjusted forward value. This, can be compared to the un-adjusted forward YOY inflation rate defined as follows:

$$\text{Fwd}^{\text{unadjusted}}_{T_i} = \frac{P_r(t_0, T_i)}{P_r(t_0, T_{i-1})} \cdot \frac{P_n(t_0, T_{i-1})}{P_n(t_0, T_i)} - 1 \tag{87}$$

In what follows, we define the convexity correction (adjustment) $\text{CA}_{T_i}$ as:

$$\text{CA}_{T_i} = \text{Fwd}^{\text{adjusted}}_{T_i} - \text{Fwd}^{\text{unadjusted}}_{T_i} \tag{88}$$

To further understand the nature of the convexity correction, we can rewrite the expression for $\text{CA}_{T_i}$ as follows:

$$\text{CA}_{T_i} = E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] - \frac{E^{T_i}_{n}\left[\frac{1}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]}{E^{T_i}_{n}\left[\frac{1}{P_r(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]}$$

$$= \left\{E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] - \frac{1}{E^{T_i}_{n}\left[\frac{1}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]} \cdot E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]\right\} + \circled{1}$$

$$+ \left\{E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] - E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] \cdot E^{T_i}_{n}\left[\frac{1}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]\right\} + \circled{2}$$

$$+ \left\{E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] - E^{T_i}_{n}\left[\frac{P_r(T_{i-1}, T_i)}{P_r(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right]\right\} \cdot E^{T_i}_{n}\left[\frac{1}{P_n(T_{i-1}, T_i)} | \mathcal{F}_{t_0}\right] \cdot \circled{3} \tag{89}$$

The expression above gives one possible way of model-independent decomposition of the convexity correction. In this decomposition, the three components break down the convexity correction into three components:

* The effect due to stochastic nature of the real rates.
* The impact due to correlation between the real rate and nominal rate curve.
* The impact due to change of measure between real and nominal forward measures.

Once again, Eq. 89 clearly shows that the convexity correction vanishes under the assumption of deterministic real curve.

In Figure 158 we compare the YOY forwards calculated by the pricing model against those obtained directly from the CPXTEMU inflation curve. In order to obtain YOY forwards from the pricing model, we generated YOY coupons with cap/floor removed for maturities between 1Y and 20Y The convexity-adjusted YOY forwards were calculated by setting CalculateIntrinsicFlag = 0, while non-adjusted YOY forwards were calculated by setting CalculateIntrinsicFlag = 1. As expected, the non-convexity adjusted forwards calculated by the pricing model are in close agreement with the curve implied forwards. This is in essence confirmation of equality in Eq. 85 in case when underlying factors are deterministic. On the other hand, one can clearly see that the convexity-adjusted forwards diverge from non-adjusted forwards for large maturities.

![Figure 158: A comparison of YOY forwards calculated by the pricing model against those predicted from the inflation curve (solid blue curve). The red circles correspond to non-adjusted forwards, while green diamonds correspond to convexity-adjusted forwards.](./Fig/16.png)

In Figure 159 we show the convexity correction as a function of coupon maturity, for several levels of volatility. For the presented calculation, have used a flat 5% EUR discount curve, and flat 3% CPXTEMU inflation curve. In addition, we have set the volatilities of the real and nominal curves as well as inflation index to flat values. The vol-of-vol parameter was set to 0%, and all of the correlations were set to 0%. In addition, in Figure 160 we show the dependence of the convexity correction on changes to individual volatilities. For this calculation, the remaining two volatilities were set to 10%, and vol-of-vol was set fixed at 0%. The figure shows that the convexity correction is primarily sensitive to the volatility of the real rate. This is inline with the analysis in [16], where a closed form solution for the log-normal JY model is derived (see Eq. (16.15) in [16]). In particular, for the special case when correlations are zero, the convexity correction only depends on real rate volatility. We have verified that when correlations are set all levels different from 0%, a mild dependency of price on other volatilities appears. This is illustrated in Figure 161, where we have set all of the correlations to a level of 50%. Finally, in Figure 162, we show the impact on convexity correction of changes in correlation. For this calculation we varied the corresponding correlation parameter, while keeping all of the volatilities fixed at 10%, and vol-of-vol was set fixed at 0%. Our analysis shows that the convexity correction is only sensitive to changes in correlations between real and nominal curves, as well as real rate and inflation index. Once again, this is in full correspondence with expectations based on Eq. (16.15) in [16]. In passing, we note that for small levels of convexity adjustment, i.e. in case of small volatilities and/or maturities, the convexity correction exhibits quadratic scaling with volatility, which again, is in full agreement with Eq. (16.15) in [16].

![Figure 159: The maturity dependency of the convexity correction for different levels of flat volatility. The EUR discount curve has been taken 5% flat, and CPXTEMU inflation curve has been taken at flat 3%. The correlations are set at level 0%.](./Fig/17.png)

![Figure 160: The convexity correction as a function of flat volatility levels for the different benchmark linear coupons. The EUR discount curve has been taken 5% flat, and CPXTEMU inflation curve has been taken at flat 3%. The correlations are set at level 0%.](./Fig/17.png)

![Figure 161: The convexity correction as a function of flat volatility levels for the different benchmark linear coupons. The EUR discount curve has been taken 5% flat, and CPXTEMU inflation curve has been taken at flat 3%. Furthermore, all of the correlations have been set to 50% to contrast against Figure 160 where correlations are set at 0%.](./Fig/18.png)

![Figure 162: The convexity correction as a function of correlations levels for the different benchmark linear coupons. The EUR discount curve has been taken 5% flat, and CPXTEMU inflation curve has been taken at flat 3%. All of the vols are set flat at 10%.](./Fig/18.png)

###### 4.5.1.2 Non-linear YOY coupon products

We now shift our focus to the non-linear payoffs defined in Eq. 83. The key consistency relation between three payoffs is the put call parity, which in the current context takes the form:

$$C_{Linear}(T_i) + \text{Strike}_i = \left. C_{Caplet}(T_i)\right|_{\text{Cap}_i = \text{Strike}_i} + \left. C_{Floorlet}(T_i)\right|_{\text{Floor}_i = \text{Strike}_i}$$

As a quick sanity check, as illustrated in Figure 163, we have verified the validity of the call-put parity between the prices of the vanilla payoffs in Eq. 83. Since, floorlets are essentially a linear combination of a linear coupon, a caplet and an constant offset, in what follows we shall restrict our analysis to caplets.

![Figure 163: Illustration of the Call Put Parity for 5Y maturity. The linear coupon has been appropriately offset for illustration purposes.](./Fig/19.png)

In Figures 164 and 165 we show, correspondingly, the price and key risks for these set of caplets as a function of caplet strike. As expected, the price profiles show the characteristic hockey-stick profile. For high values of strike, the cap is out-of-money, and the caplet essentially behaves as a linear YOY coupon. This is reflected in the fact that in this region the price is no longer sensitive to strike. We note, however, that in this region the linear YOY coupon still retains CPXTEMU inflation curve vega and residual CPXTEMU curve delta due to the convexity correction. As expected these risks are larger for larger maturities. In the at-the-money region the price and risk profiles exhibit the characteristic pattern for caplets. Finally, at the other extreme, for small strike values, the cap is in-the-money and the caplet essentially behaves as a fixed payment. As a result all of the risks drop down to zero in this region, and the payoff behaves as a linear function of the strike.

![Figure 164: The strike dependencies of price for caplets of maturities 1Y, 5Y, 10Y and 20Y.](./Fig/19.png)

![Figure 165: The strike dependencies of key risks for caplets of maturities 1Y, 5Y, 10Y and 20Y.](./Fig/20.png)

##### 4.5.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR, real curve and inflation asset volatilities (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

In this and the following sections, we test a trade (DY70732L) with the following main characteristics:

###### 4.5.2.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | InflationLAG_3M | USCPI inflation asset, with a 3 month delay. |
| CURVE | USD | USD curve (nominal curve) |
| CURVE | USCPI | USCPI curve (inflation curve) |
| VOL | USDvol_noskew | USD curve volatility object |
| VOL | USCPIvol | USCPI curve volatility object |
| VOL | US/USCPIvol | US/USCPI inflation asset volatility object with stochastic volatility |

Table 237: Market characteristics for InfSwapYOYCapFloor trade (D770732L). The data has been taken for COB date 25-Oct-19.

![Figure 166: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the EUR IR curve. The risks are smooth and well behaved.](./Fig/166.png)

![Figure 167: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/167.png)

###### 4.5.2.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 168: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/168.png)

![Figure 169: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the CPALBE inflation curve vol. The risks are smooth and well behaved.](./Fig/169.png)

![Figure 170: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the EUR IR real vol. The risks are smooth and well behaved.](./Fig/170.png)

###### 4.5.2.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 171: The price and risk ladders for the InfSwapYOYCapFloor test trade (D770732L) as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/171.png)

###### 4.5.2.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risks are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 172: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/172.png)

![Figure 173: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InfSwapYOYCapFloor. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfSwapYOYCapFloor.](./Fig/173.png)

##### 4.5.3 Convergence Testing

###### 4.5.3.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InfSwapYOYCapFloor test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 174 and 175. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 174: The graphs present the price and risk measures for the InfSwapYOYCapFloor test trade (D770732L) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/174.png)

![Figure 175: The graphs present the standard deviation of price for the InfSwapYOYCapFloor test trade (D770732L) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/175.png)

##### 4.5.4 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InfSwapYOYCapFloor.

![Figure 176: Transition of the PV of the InfSwapYOYCapFloor in the up and down stressed scenarios.](./Fig/176.png)

##### 4.5.5 CCAR Testing

We test the product InfSwapYOYCapFloor under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of the risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.5).

###### 4.5.5.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. In the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR test successful.

####### 4.5.5.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 177: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/177.png)

![Figure 178: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/178.png)

####### 4.5.5.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 179: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/179.png)

![Figure 180: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/180.png)

![Figure 181: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/181.png)

####### 4.5.5.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 182: The price and risk ladders for the InfSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/182.png)

####### 4.5.5.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 183: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/183.png)

![Figure 184: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InfSwapYOYCapFloor. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfSwapYOYCapFloor.](./Fig/184.png)

![Figure 185: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/185.png)

![Figure 186: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InfSwapYOYCapFloor. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfSwapYOYCapFloor.](./Fig/186.png)

![Figure 187: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/187.png)

###### 4.5.5.2 Convergence Testing

###### 4.5.5.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapYOYCapFloor test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 189 and 190. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 188: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwapYOYCapFloor. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapYOYCapFloor.](./Fig/1.png)

![Figure 189: The graphs present the price and risk measures for the InflSwapYOYCapFloor test trade in the three scenarios Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/2.png)

![Figure 190: The graphs present the standard deviation of price for the InflSwapYOYCapFloor test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/3.png)

##### 4.5.6 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwapYOYCapFloor trade according to a range of ten different scenarios defined under the RIBB framework. For clarity's sake, we display the various scenarios by grouping them into different categories. We see that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and a downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" indeed the original curve. Similarly the Long up and Long down shock affect the long rates part of the curve, by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

###### 4.5.6.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 191: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/4.png)

###### 4.5.6.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities for the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that these price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 192: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/5.png)

![Figure 193: PV ladders of the trade InflSwapYOYCapFloor under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/6.png)

![Figure 194: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/6.png)

![Figure 195: PV ladders of the trade InflSwapYOYCapFloor under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/7.png)

![Figure 196: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/7.png)

![Figure 197: PV ladders of the trade InflSwapYOYCapFloor under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/8.png)

![Figure 198: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/9.png)

![Figure 199: PV ladders of the trade InflSwapYOYCapFloor under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/10.png)

![Figure 200: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/10.png)

![Figure 201: PV ladders of the trade InflSwapYOYCapFloor under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/11.png)

###### 4.5.6.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade, under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. Fo each value of NumSims, we have set the parameter Seed.

![Figure 202: The graphs present the MonteCarlo simulation of the price for the InflSwapYOYCapFloor IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/12.png)

### 4.6. Product Testing - InflSwaptionZCEuro

In Table 238 we specify the market data that was used for testing conducted in the current subsection.

The testing was performed on a trade taken from production with TradeID D328108L_20170919_RealSwaption3_B2B_Eisler. The main features of the trade are as follows.

- Notional: 50, Exercise Date: 04-Oct-2030, Underlying Expiry Date: 04-Oct-2052.
- Underlying coupon frequency: semi-annually. Inflation leg index: UKRPI 2M delay. Funding leg: LIBOR 6M. Inflation leg multiplier: 1.0151.

#### 4.6.1 Stability Testing

In order to test the adequacy of model and it's implementation for pricing and risk managing the current product in a production setting, we have calculated price and risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation curve and inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR curve and inflation curve and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | 2MFLAT | UK RPI inflation asset, with a 2 month delay ( Type: INFLATION). |
| CURVE | UKRPI_20171215_COB | GBP-UKRPI inflation curve (UseType: INFLATION, Curve Type: SPREAD) |
| CURVE | GBP3MSWPDS2H_20171215_COB | GBP rate curve (UseType: DISCOUNTBASIS, Curve Type: CCYBASIS) |
| VOL | GBP_UKRPI_REALVOL_80_20171213_DS | GBP-UKRPI real curve vol (VolType: DBT, VolMode: LVTV) |
| VOL | GBPBOTHNormal20171213_DS | GBP rate curve volatility object (VolType: DBT, VolMode: LVTV) |
| VOL | UKRPI_FXVOL_TVSV_YOY_20171213 | GBP/UKRPI Inflation Asset Vol object (VolType: DBT, VolMode: TV) |
| VOL | GBP_UKRPI_CORR_EXOTICS_20171213 | correlation object (VolType: CORR, VolMode: CONST) |

Table 238: Market data used for the testing InflSwaptionZCEuro. The data has been taken for COB date 15-Dec-17.

##### 4.6.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 203: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/14.png)

![Figure 204: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/15.png)

##### 4.6.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 205: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/16.png)

![Figure 206: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/17.png)

![Figure 207: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/18.png)

![Figure 208: The price and risk ladders for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/19.png)

##### 4.6.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respect to bumps in the interest rate curve and the inflation curve. In this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 209: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/20.png)

![Figure 210: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwaptionZCEuro. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionZCEuro.](./Fig/21.png)

#### 4.6.2 Convergence Testing

##### 4.6.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwaptionZCEuro test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 211 and 212. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 211: The graphs present the price and risk measures for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/22.png)

![Figure 212: The graphs present the standard deviation of price for the InflSwaptionZCEuro test trade (D328108L_20170919_RealSwaption3_B2B_Eisler) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/23.png)

#### 4.6.3 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwaptionZCEuro.

![Figure 213: Transition of the PV of the InflSwaptionZCEuro in the up and down stressed scenarios.](./Fig/24.png)

#### 4.6.4 CCAR Testing

We test the product InflSwaptionZCEuro under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of te risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.6).

##### 4.6.4.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities, in the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

##### 4.6.4.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 214: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/25.png)

![Figure 215: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/26.png)

##### 4.6.4.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 216: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/27.png)

![Figure 217: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/28.png)

![Figure 218: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/29.png)

##### 4.6.4.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 219: The price and risk ladders for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/30.png)

##### 4.6.4.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respect to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 220: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/31.png)

![Figure 221: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InflSwaptionZCEuro. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionZCEuro.](./Fig/32.png)

![Figure 222: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/33.png)

![Figure 223: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InflSwaptionZCEuro. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionZCEuro.](./Fig/34.png)

![Figure 224: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/35.png)

![Figure 225: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwaptionZCEuro. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionZCEuro.](./Fig/36.png)

##### 4.6.4.2 Convergence Testing

##### 4.6.4.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwaptionZCEuro test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 226 and 227. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 226: The graphs present the price and risk measures for the InflSwaptionZCEuro test trade in the three scenarios Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/37.png)

![Figure 227: The graphs present the standard deviation of price for the InflSwaptionZCEuro test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/38.png)

#### 4.6.5 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwaptionZCEuro trade according to a range of ten different scenarios defined under the RIBB framework. For clarity's sake, we display the various scenarios by grouping them into different categories. We see that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and a downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" indeed the original curve. Similarly the Long up and Long down shock affect the long rates part of the curve, by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

##### 4.6.5.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 228: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/39.png)

##### 4.6.5.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities for the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that these price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 229: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/40.png)

![Figure 230: PV ladders of the trade InflSwaptionZCEuro under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/41.png)

![Figure 231: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/42.png)

![Figure 232: PV ladders of the trade InflSwaptionZCEuro under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/43.png)

![Figure 233: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/44.png)

![Figure 234: PV ladders of the trade InflSwaptionZCEuro under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/1.png)

![Figure 235: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/2.png)

![Figure 236: PV ladders of the trade InflSwaptionZCEuro under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/3.png)

![Figure 237: The graph shows the PV Ladder for inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/3.png)

![Figure 238: PV ladders of the trade InflSwaptionZCEuro under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/4.png)

##### 4.6.5.3. Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade. In particular, we have considered the inflation swap specified in table 235 as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our parameter sweep, we set NumRuns = 1, and vary NumSims. For each value of NumSims, we have set the parameter Seed = 1.

![Figure 239: The graphs present the MonteCarlo simulation of the price for the InflSwaptionZCEuro_IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/5.png)

### 4.7. Product Testing - InflSwapSnowball

In Table 239 we specify the market data that was used for testing conducted in the current subsection.

The testing was performed on a trade taken from production with TradeID:707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2.
The main features of the trade are as follows:

- Notional: 60, Start Date:23-Apr-2014, End Date: 23-Apr-2020.
- Funding Leg: EUR LIBOR 3M (quarterly), Structured Leg: snowball payoff paid semi-annually based on ITCPI index.

#### 4.7.1. Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. In the figures below, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | 3MDIR | Italian CPI (ITCPI) inflation asset, with a 3 month delay ( Type:INFLATION). |
| CURVE | EUR3MSWPDS2H_20171215_COB | EUR rate curve ( UseType:DISCOUNTBASIS, CurveType:CCYBASIS) |
| CURVE | ITCPI20171215_BE_COB | Italian CPI (ITCPI) inflation curve ( UseType:INFLATION, CurveType:SPREAD) |
| VOL | EUR_ITCPI_REALVOL_YOY_20171213 | EUR-ITCPI real curve vol ( VolType:DBT, VolMode:LVTV) |
| VOL | EURBOTHNormal20171213_DS | EUR rate curve volatility object ( VolType:DBT, VolMode:LVTV) |
| VOL | ITCPI_FIXVOL_TYSV_YOY_20171213 | EUR/ITCPI Inflation Asset Vol object ( VolType:DBT, VolMode:TV) |
| VOL | EUR_ITCPI_CORR_YOY_20171213 | correlation object ( VolType:CORR, VolMode:CONST) |

Table 239: Market data used for the testing InflSwapSnowball. The data has been taken for COB date 15-Dec-17.

##### 4.7.1.1. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 240: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/7.png)

![Figure 241: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/8.png)

![Figure 242: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/9.png)

![Figure 243: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/10.png)

![Figure 244: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/11.png)

##### 4.7.1.2. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 245: The price and risk ladders for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/13.png)

##### 4.7.1.3. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 246: The standard deviation of price for the InflSwapSnowball test trade (707720sL_20150303_ITCPI_BTPS_Apr20_ASW_2) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/15.png)

#### 4.7.3. Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwapSnowball.

![Figure 250: Transition of the PV of the InflSwapSnowball in the up and down stressed scenarios.](./Fig/15.png)

#### 4.7.4. CCAR Testing

We test the product InflSwapSnowball under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of the risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.7).

##### 4.7.4.1. Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. In the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

###### 4.7.4.1.1. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 251: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/17.png)

![Figure 252: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/18.png)

###### 4.7.4.1.2. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 253: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/19.png)

![Figure 254: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/20.png)

![Figure 255: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/1.png)

##### 4.7.4.1.3. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 256: The price and risk ladders for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/2.png)

##### 4.7.4.1.4. 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respect to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 257: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/3.png)

![Figure 258: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InflSwapSnowball. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapSnowball.](./Fig/4.png)

![Figure 259: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/4.png)

![Figure 260: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InflSwapSnowball. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapSnowball.](./Fig/5.png)

![Figure 261: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/5.png)

![Figure 262: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwapSnowball. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapSnowball.](./Fig/6.png)

#### 4.7.4.2. Convergence Testing

##### 4.7.4.2.5. Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapSnowball test trade. In the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 263 and 264. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 263: The graphs present the price and risk measures for the InflSwapSnowball test trade in the three scenarios Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/7.png)

![Figure 264: The graphs present the standard deviation of price for the InflSwapSnowball test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/8.png)

### 4.7.5. IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwapSnowball trade according to a range of ten different scenarios defined under the RIBB framework. For clarity's sake, we display the various scenarios by grouping them into different categories. We see that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and a downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" indeed the original curve. Similarly, the Long up and Long down shock affect the long rates part of the curve, by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

#### 4.7.5.1. Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 265: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/9.png)

#### 4.7.5.2. Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities for the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, and inflation asset volatilities.

The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 266: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/10.png)

![Figure 267: PV ladders of the trade InflSwapSnowball under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/11.png)

![Figure 268: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/11.png)

![Figure 269: PV ladders of the trade InflSwapSnowball under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/12.png)

![Figure 270: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/12.png)

![Figure 271: PV ladders of the trade InflSwapSnowball under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/13.png)

![Figure 272: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/14.png)

![Figure 273: PV ladders of the trade InflSwapSnowball under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/15.png)

![Figure 274: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/15.png)

![Figure 275: PV ladders of the trade InflSwapSnowball under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/16.png)

#### 4.7.5.3. Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. For each value of NumSims, we have set the parameter Seed = 1.

![Figure 276: The graphs present the MonteCarlo simulation of the price for the InflSwapSnowball IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/17.png)

### 4.8. Product Testing - InflSwapLookback

In Table 240 we specify the market data that was used for testing conducted in the current subsection.

The product tested is a security of type GENSWAP with 3 legs.

Leg 1 pays the following payoff every 6 months:

$$P_1(t) = N \times \max(\max(I(\tilde{t})^{-1} \times M_1, \text{ for } \tilde{t} \in \{t_{set}, t_{set} + 6m,...,t_{pay}\}) \times I(t) - 1, 0),$$

where $N = 100EUR$ is the notional, $I(t)$ is the 3m delayed inflation rate (EUR/ITCPI) at time $t$ and $M_1 = 10,000$ is the rate multiplier.

Leg 2 pays the following payoff every 6 months:

$$P_2(t) = N \times \max(\max(I(\tilde{t})^{-1} \times \text{ for } \tilde{t} \in \{t_{set}, t_{set} + 6m,...,t_{pay}\}) \times I(t) \times M_2/2, 0.00125),$$

where $N = 100EUR$ is the notional, $I(t)$ is the 3m delayed inflation rate (EUR/ITCPI) at time $t$ and $M_2 = 0.0025$ is the rate multiplier.

Leg 3 pays 6 month LIBOR over 6 years Start Date : 20-Nov-2017, End date : 20-Nov-2023.

#### 4.8.1. Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | INFLATION_LAG_Trunc | Italian CPI inflation asset, with a 3 month delay ( Type:INFLATION). |
| CURVE | FS_EUR20220420LON_COB_Trunc | EUR rate curve (UseType:DISCOUNTBASIS, CurveType:CCYBASIS) |
| CURVE | FS_ITCPI20220420LON_BE_COB | Italian CPI curve (UseType:INFLATION, CurveType:SPREAD) |
| VOL | FS_EUR_ITCPI_REALVOL_YOY_20220414 | real curve vol (VolType:DBT, VolMode:LVTV) |
| VOL | FS_EURBOTHNormal20220420_DS | EUR rate curve volatility object (VolType:DBT, VolMode:LVTV) |
| VOL | FS_ITCPI_FXVOL_TVSV_YOY_20220414 | EUR/ITCPI Inflation Asset Vol and StochVol object (VolType:FXVOL, VolMode:TV) |
| VOL | FS_EUR_ITCPI_CORR_SV_20220414_Trunc | correlation object (VolType:CORR, VolMode:CONST). |

Table 240: Market data used for the testing InflSwapLookback. The data has been taken for COB date 20-April-2022.

##### 4.8.1.1. Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 278: The price and risk ladders for the InflSwapLookback test trade (S152872L) as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/19.png)

##### 4.8.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 279: The price and risk ladders for the InflSwapLookback test trade (S152872L) as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/1-2.png)

![Figure 280: The price and risk ladders for the InflSwapLookback test trade (S152872L) as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/3.png)

![Figure 281: The price and risk ladders for the InflSwapLookback test trade (S152872L) as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/4.png)

##### 4.8.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 282: The price and risk ladders for the InflSwapLookback test trade (S152872L) as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/5.png)

##### 4.8.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 283: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/6.png)

![Figure 284: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwapLookback. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapLookback.](./Fig/6.png)

#### 4.8.2 Convergence Testing

##### 4.8.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapLookback test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 300 and 301. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 285: The graphs present the price and risk measures for the InflSwapLookback test trade (S152872L) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/7-8.png)

![Figure 286: The graphs present the standard deviation of price for the InflSwapLookback test trade (S152872L) as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/8.png)

#### 4.8.3 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwapLookback.

![Figure 287: Transition of the PV of the InflSwapLookback in the up and down stressed scenarios.](./Fig/9.png)

#### 4.8.4 CCAR Testing

We test the product InflSwapLookback under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of the risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.8).

##### 4.8.4.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. In the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

###### 4.8.4.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 288: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/13.png)

![Figure 289: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/14.png)

###### 4.8.4.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 290: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/15.png)

![Figure 291: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/16.png)

![Figure 292: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/17.png)

###### 4.8.4.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 293: The price and risk ladders for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/18.png)

###### 4.8.4.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 294: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/19.png)

![Figure 295: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InfiSwapLookback. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiSwapLookback.](./Fig/20.png)

![Figure 296: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/21.png)

![Figure 297: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InfiSwapLookback. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiSwapLookback.](./Fig/22.png)

![Figure 298: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/23.png)

![Figure 299: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InfiSwapLookback. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiSwapLookback.](./Fig/24.png)

##### 4.8.4.2 Convergence Testing

###### 4.8.4.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InfiSwapLookback test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 300 and 301. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 300: Convergence testing results for Base, CCAR1 and CCAR2 scenarios.](./Fig/25.png)

![Figure 300: The graphs present the price and risk measures for the InfiSwapLookback test trade in the three scenarios Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/26.png)

![Figure 301: The graphs present the standard deviation of price for the InfiSwapLookback test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/27.png)

#### 4.8.5 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InfiSwapLookback trade according to a range of ten different scenarios defined under the IRRBB framework. For clarity's sake, we classify the scenarios by grouping them into different categories. We note that the construction and application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short end while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" the original curve. Similarly, the Long up and Long down scenarios are obtained by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial portion of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

##### 4.8.5.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 302: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/28.png)

##### 4.8.5.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities in the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 303: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/29.png)

![Figure 304: PV ladders of the trade InfiSwapLookback under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/30.png)

![Figure 305: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/31.png)

![Figure 306: PV ladders of the trade InfiSwapLookback under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/32.png)

![Figure 307: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/33.png)

![Figure 308: PV ladders of the trade InfiSwapLookback under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/34.png)

![Figure 309: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/35.png)

![Figure 310: PV ladders of the trade InfiSwapLookback under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/36.png)

![Figure 311: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/37.png)

![Figure 312: PV ladders of the trade InfiSwapLookback under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/38.png)

##### 4.8.5.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. Fo each value of NumSims, we have set the parameter Seed = 1.

### 4.9 InfiCapFloorZC Testing

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | 3MFLAT | EUR CPALBE inflation asset, with a 3 month delay ( Type:INFLATION). |
| CURVE | EUR3MSWPDS2H_20171215_COB | EUR rate curve (UseType:DISCOUNTBASIS, CurveType:CCYBASIS) |
| CURVE | CPALBE-20171215_BE_COB | European CPALBE inflation curve (UseType:INFLATION, CurveType:SPREAD) |
| VOL | EUR_CPALBE_REALVOL_YOY_20171213 | EUR-CPALBE real curve vol (VolType:DBT, VolMode:LVTV) |
| VOL | EURBOTHNormal20171213_DS | EUR rate curve volatility object (VolType:DBT, VolMode:LVTV) |
| VOL | CPALBE_FXVOL_TVSV_YOY_20171213 | EUR/CPALBE Inflation Asset Vol object (VolType:DBT, VolMode:TV) |
| VOL | EUR_CPALBE_CORR_YOY_20171213 | correlation object (VolType:CORR, VolMode:CONST) |

Table 241: Market data used for the testing InfiCapFloorZC. The data has been taken for COB date 15-Dec-17.

#### 4.9.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 314: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/39.png)

![Figure 315: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/40.png)

#### 4.9.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 316: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/41.png)

![Figure 317: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the inflation curve vol. The risks are smooth and well behaved.](./Fig/42.png)

![Figure 318: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/43.png)

#### 4.9.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 319: The price and risk ladders for the InfiCapFloorZC test trade as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/44.png)

#### 4.9.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 320: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/45.png)

![Figure 321: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InfiCapFloorZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiCapFloorZC.](./Fig/46.png)

### 4.9.2 Convergence Testing

#### 4.9.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InfiCapFloorZC test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 322 and 323. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 322: The graphs present the price and risk measures for the InfiCapFloorZC test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/47.png)

![Figure 323: The graphs present the standard deviation of price for the InfiCapFloorZC test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/48.png)

### 4.9.3 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InfiCapFloorZC.

![Figure 324: Transition of the PV of the InfiCapFloorZC in the up and down stressed scenarios.](./Fig/49.png)

### 4.9.4 CCAR Testing

We test the product InfiCapFloorZC under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of te risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.9).

#### 4.9.4.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities, in the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

##### 4.9.4.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 325: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/50.png)

![Figure 326: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation curve. The risks are smooth and well behaved.](./Fig/51.png)

##### 4.9.4.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 327: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/52.png)

![Figure 328: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/53.png)

![Figure 329: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/54.png)

##### 4.9.4.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 330: The price and risk ladders for the InfiCapFloorZC test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the inflation stochastic vol. The risks are smooth and well behaved.](./Fig/55.png)

##### 4.9.4.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 331: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/56.png)

![Figure 332: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InfiCapFloorZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiCapFloorZC.](./Fig/57.png)

![Figure 333: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/58.png)

![Figure 334: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InfiCapFloorZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiCapFloorZC.](./Fig/59.png)

![Figure 335: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/60.png)

![Figure 336: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InfiCapFloorZC. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InfiCapFloorZC.](./Fig/61.png)

#### 4.9.4.2 Convergence Testing

##### 4.9.4.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InfiCapFloorZC test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC 
simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 337 and 338. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 337: The graphs present the price and risk measures for the InflCapFloorZC test trade in the three scenario Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/337.png)

![Figure 338: The graphs present the standard deviation of price for the InflCapFloorZC test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/338.png)

### 4.9.5 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflCapFloorZC trade according to a range of ten different scenarios defined under the RRBB framework. For clarity's sake, we classify the various scenarios by grouping them into different categories. We note that the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upward and downward translation of the original Zero Rate curve. The Steepener scenario bends the curve, developing a downwards translation of rates part up, whereas the Flattener shock produces the opposite scenario, thus a flattener trend. Similarly, the Long up and Long down scenaries, affect the long rates part of the original curve by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve, a dual effect is produced. Finally, the application of the Short up and Short down scenarios, whereby only the short part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

![Figure 340: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/340.png)

![Figure 341: PV ladders of the trade InflCapFloorZC under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/341.png)

![Figure 342: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/342.png)

![Figure 343: PV ladders of the trade InflCapFloorZC under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/343.png)

![Figure 344: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/344.png)

![Figure 345: PV ladders of the trade InflCapFloorZC under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/345.png)

![Figure 346: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/346.png)

![Figure 347: PV ladders of the trade InflCapFloorZC under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/347.png)

![Figure 348: The graph shows the PV Ladder for inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/348.png)

![Figure 349: PV ladders of the trade InflCapFloorZC under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/349.png)

#### 4.9.5.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. To each value of NumSims, we have set the parameter Seed = 1.

![Figure 350: The graphs present the MonteCarlo simulation of the price for the InflCapFloorZC_IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/350.png)

## 4.10 Product Testing - InflSwapYOY

In Table 242 we specify the market data that was used for testing conducted in the current subsection.

The testing was performed on a test trade. The main features of the trade are as follows:

* Notional: 100, Start Date: 31-Dec-2014, End Date: 31-Dec-2034.

### 4.10.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | 3MFLAT | EUR CPALBE inflation asset, with a 3 month delay ( Type:INFLATION). |
| CURVE | EUR3MSWPDS2H_20171215_COB | EUR rate curve (UseType:DISCOUNTBASIS, CurveType:CCYBASIS) |
| CURVE | CPALBE20171215_DE_COB | European CPALBE Inflation curve (UseType:INFLATION, CurveType:SPREAD) |
| VOL | EUR_CPALBE_REALVOL_YOY_20171213 | EUR-CPALBE real curve vol (VolType:DBT, VolMode:LVTV) |
| VOL | EURBOTHNormal20171213_DS | EUR rate curve volatility object (VolType:DBT, VolMode:LVTV) |
| VOL | CPALBE_FXVOL_TVSV_YOY_20171213 | EUR/CPALBE Inflation Asset Vol object (VolType:DBT, VolMode:TV) |
| VOL | EUR_CPALBE_CORR_YOY_20171213 | correlation object (VolType:CORR, VolMode:CONST) |

Table 242: Market data used for the testing InflSwapYOY. The data has been taken for COB date 15-Dec-17.

#### 4.10.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 351: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/351.png)

![Figure 352: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/352.png)

#### 4.10.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 353: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/353.png)

![Figure 354: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/354.png)

![Figure 355: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/355.png)

#### 4.10.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 356: The price and risk ladders for the InflSwapYOY test trade as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/356.png)

#### 4.10.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 357: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the taylor formula.](./Fig/357.png)

![Figure 358: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwapYOY. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapYOY.](./Fig/358.png)

### 4.10.2 Convergence Testing

#### 4.10.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapYOY test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 359 and 360. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 359: The graphs present the price and risk measures for the InflSwapYOY test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/359.png)

![Figure 360: The graphs present the standard deviation of price for the InflSwapYOY test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/360.png)

### 4.10.3 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwapYOY.

![Figure 361: Transition of the PV of the InflSwapYOY in the up and down stressed scenarios.](./Fig/361.png)

### 4.10.4 CCAR Testing

We test the product InflSwapYOY under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, defined as the base scenario.

The definitions and implementations of te risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.10).

#### 4.10.4.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities, in the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

##### 4.10.4.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 362: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/362.png)

![Figure 363: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/363.png)

##### 4.10.4.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 364: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/364.png)

![Figure 365: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/365.png)

![Figure 366: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/366.png)

##### 4.10.4.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 367: The price and risk ladders for the InflSwapYOY test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/367.png)

##### 4.10.4.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 368: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/368.png)

![Figure 369: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario calculated using Deltas and Gammas for InflSwapYOY. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapYOY.](./Fig/369.png)

![Figure 370: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/370.png)

![Figure 371: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario calculated using Deltas and Gammas for InflSwapYOY. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapYOY.](./Fig/371.png)

![Figure 372: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/372.png)

![Figure 373: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario calculated using Deltas and Gammas for InflSwapYOY. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapYOY.](./Fig/373.png)

#### 4.10.4.2 Convergence Testing

##### 4.10.4.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapYOY test trade, in the three base scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 374 and 375. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 374: The graphs present the price and risk measures for the InflSwapYOY test trade in the three scenario Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/374.png)

![Figure 375: The graphs present the standard deviation of price for the InflSwapYOY test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/375.png)

### 4.10.5 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwapYOY trade according to a range of ten different scenarios defined under the RRBB framework. For clarity's sake, we classify the various scenarios by grouping them into different categories. We display the various scenarios by displaying them. We note that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upward and a downward translation of the original Zero Rate curve. The Steepener scenario bends the curve, developing a downwards translation of rates part up, whereas the Flattener shock produces the opposite scenario, thus a flattener trend. Indeed the Steepener produces the original curve, pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus a flattening of the original curve. Similarly, the Long up and Long down scenaries, affect the long rates part of the original curve, by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve, a dual effect is produced by the application of the Short up and Short down scenarios, whereby only the short part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

#### 4.10.5.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 376: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/376.png)

#### 4.10.5.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities under the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.

![Figure 377: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/377.png)

![Figure 378: PV ladders of the trade InflSwapYOY under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/378.png)

![Figure 379: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/379.png)

![Figure 380: PV ladders of the trade InflSwapYOY under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/380.png)

![Figure 381: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/381.png)

![Figure 382: PV ladders of the trade InflSwapYOY under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/382.png)

![Figure 383: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/383.png)

![Figure 384: PV ladders of the trade InflSwapYOY under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/384.png)

![Figure 385: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/385.png)

![Figure 386: PV ladders of the trade InflSwapYOY under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/386.png)

#### 4.10.5.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. Fo each value of NumSims, we have set the parameter Seed = 1.

![Figure 387: The graphs present the MonteCarlo simulation of the price for the InflSwapYOY_IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/387.png)

## 4.11 Product Testing - InflSwapAverage

In Table 243 we specify the market data that was used for testing conducted in the current subsection.

The testing was performed on a test trade. The main features of the trade are as follows:

* Notional: 3.6875, Start Date: 01-Oct-2020, End Date: 10-Jul-2024.

### 4.11.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to IR, real curve and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem stability test successful.

| Object Type | Market Object | Description |
| --- | --- | --- |
| MKTDATA | 3MFLAT | EUR CPALBE inflation asset, with a 3 month delay ( Type:INFLATION). |
| CURVE | FS_EUR20181102LON_COB | EUR rate curve (UseType:DISCOUNTBASIS, CurveType:CCYBASIS) |
| CURVE | FS_CPALBE20181102LON_BE_COB | European CPALBE Inflation curve (UseType:INFLATION, CurveType:SPREAD) |
| VOL | EUR_CPALBE_REALVOL_YOY_20181029 | EUR-CPALBE real curve vol (VolType:DBT, VolMode:LVTV) |
| VOL | EURBOTHNormal20181029_DS | EUR rate curve volatility object (VolType:DBT, VolMode:LVTV) |
| VOL | CPALBE_FXVOL_TVSV_YOY_20181029 | EUR/CPALBE Inflation Asset Vol object (VolType:DBT, VolMode:TV) |
| VOL | EUR_CPALBE_CORR_YOY_20181029 | correlation object (VolType:CORR, VolMode:CONST) |

Table 243: Market data used for the testing InflSwapAverage. The data has been taken for COB date 02-Nov-18.

#### 4.11.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 388: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/388.png)

![Figure 389: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/389.png)

#### 4.11.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 390: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/390.png)

![Figure 391: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/391.png)

![Figure 392: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/392.png)

#### 4.11.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 393: The price and risk ladders for the InflSwapAverage test trade as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/393.png)

#### 4.11.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

![Figure 394: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/394.png)

![Figure 395: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwapAverage. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapAverage.](./Fig/395.png)

### 4.11.2 Convergence Testing

#### 4.11.2.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapAverage test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 396 and 397. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 396: The graphs present the price and risk measures for the InflSwapAverage test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/396.png)

![Figure 397: The graphs present the standard deviation of price for the InflSwapAverage test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/397.png)

### 4.11.3 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwapAverage.

![Figure 398: Transition of the PV of the InflSwapAverage in the up and down stressed scenarios.](./Fig/398.png)

### 4.11.4 CCAR Testing

We test the product InflSwapAverage under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega. The resulting ladders are then shown together with the corresponding EOD ladder, denoted as the base scenario.

The definitions and implementations of te risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.11).

#### 4.11.4.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities, in the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR tests successful.

##### 4.11.4.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 399: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/399.png)

![Figure 400: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/400.png)

##### 4.11.4.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 401: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/401.png)

![Figure 402: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/402.png)

![Figure 403: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/403.png)

##### 4.11.4.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 402: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/402.png)

![Figure 403: The price and risk ladders for the InflSwapAverage test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/403.png)

###### 4.11.4.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respect to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 405: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/1.png)

![Figure 406: The figure on the left shows the comparison of exact PV against approximate PV in the Base Scenario, calculated using Deltas and Gammas for InflSwapAverage. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapAverage.](./Fig/2.png)

![Figure 407: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/3.png)

![Figure 408: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InflSwapAverage. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapAverage.](./Fig/4.png)

![Figure 409: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/5.png)

![Figure 410: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwapAverage. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwapAverage.](./Fig/6.png)

#### 4.11.4.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwapAverage test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 411 and 412. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 411: The graphs present the price and risk measures for the InflSwapAverage test trade in the three scenario Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/7.png)

![Figure 412: The graphs present the standard deviation of price for the InflSwapAverage test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/8.png)

#### 4.11.5 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwapAverage trade according to a range of ten different scenarios defined under the IRRBB framework. For clarity's sake, we classify the various scenarios by grouping them into different categories. We note that the overall expectation of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards flattening modification and a downwards flattening of the original Zero Rate curve. The Steepener Shock tends the curve upward in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus flattening the original curve. Similarly, the Long up and Long down scenarios impact the long rates part of the curve by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

##### 4.11.5.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 413: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/9.png)

##### 4.11.5.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities for the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities. The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. The small instabilities showing in some of the FlatGamma and FlatVega are accounted for by the fact that the risks presented here are multiplied by 10⁴ whereas the notional is 100. Therefore the absolute values showing in the tests must be divided by 10⁶ in order to obtain the correct units (in basis points) of the corresponding risks. When taking this into account, we conclude that these instabilities are immaterial for the stability of the tested risks. For this reason, we deem stability test successful.

###### 4.11.5.2.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 415: PV ladders of the trade InflSwapAverage under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/10.png)

![Figure 416: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/11.png)

![Figure 417: PV ladders of the trade InflSwapAverage under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/12.png)

![Figure 418: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/13.png)

![Figure 419: PV ladders of the trade InflSwapAverage under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/14.png)

![Figure 420: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/15.png)

![Figure 421: PV ladders of the trade InflSwapAverage under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/16.png)

![Figure 422: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/17.png)

![Figure 423: PV ladders of the trade InflSwapAverage under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/18.png)

##### 4.11.5.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. Fo each value of NumSims, we have set the parameter Seed = 1.

![Figure 424: The graphs present the MonteCarlo simulation of the price for the InflSwapAverage IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/19.png)

### 4.12 Product Testing - InflSwaptionYOYBerm.

In Table 244 we specify the market data that was used for testing conducted in the current subsection.

The testing was performed on a test trade provided by DBAnalytics. The main features of the trade are as follows:

- Notional: 100, Exercise Start:05-Feb-2014, Exercise End: 05-Feb-2024.
- Underlying Swap End Date: 05-Feb-2044, Funding Leg: Fixed annual 2.27%, Inflation Leg: annual CPXTEMU inflation YOY coupon with 3M delay.

#### 4.12.1 Product Specific Testing

It is well known that a Bermudan swaption is worth more than any of the European swaptions in which it can be exercised. We have explicitly checked this statement and verified that the pricing of the InflSwaptionYOYBerm is in-line with this requirement. The result is shown in figure 425. The graph shows a comparison of the price of the test Bermudan trade (blue circles), against the European Swaptions (red diamonds) with varying exercise dates (i.e. exercise start or exercise end as the cases may be). On the other hand, as expected, the European swaptions have the lowest prices. Furthermore, the Bermudan prices for Bermudans with varying exercise windows converge to the price of the referenced Bermudan as the exercise windows are reduced (i.e left side of the graph for green squares and right side of the graph for cyan crosses). This shows that the Bermudan optionality behaves as expected with respect to the corresponding European optionality for the InflSwaptionYOYBerm product.

![Figure 425: Comparison of price of a test Bermudan trade vs prices of equivalent European Swaptions, and Bermudan trades with reduced exercise windows.](./Fig/20.png)

#### 4.12.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation asset volatilities. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. The small instabilities showing in some of the FlatGamma and FlatVega are accounted for by the fact that the risks presented here are multiplied by 10⁴ whereas the notional is 100. Therefore the absolute values showing in the tests must be divided by 10⁶ in order to obtain the correct units (in basis points) of the corresponding risks. When taking this into account, we conclude that these instabilities are immaterial for the stability of the tested risks. For this reason, we deem stability test successful.

##### 4.12.2.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 426: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/21.png)

![Figure 427: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/22.png)

##### 4.12.2.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 428: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/23.png)

![Figure 429: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/24.png)
![Figure 430: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/25.png)

#### 4.12.2.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 431: The price and risk ladders for the InflSwaptionYOYBerm test trade as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/26.png)

#### 4.12.2.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management.

Note that for these tests we have chosen a range of the IR and the Inflation curve considerably smaller than the ones chosen for the other products ([-50bps, 50bps] instead of [-1000bps, 1000bps]). This is because for the given trade, the PV as a function of the inflation curve equals zero for larger negative shifts of the inflation curve (as it is evident from Fig. (426)) and this would make the relative differences between the exact PV and the approximated PV calculated using the Taylor formula (right diagram in Fig.(433)) meaningless, yielding a division by zero.

![Figure 432: The PVs calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/27.png)

![Figure 433: The figure on the left shows the comparison of exact PV against approximate PV calculated using Deltas and Gammas for InflSwaptionYOYBerm. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionYOYBerm.](./Fig/28.png)

### 4.12.3 Convergence Testing

#### 4.12.3.1 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwaptionYOYBerm test trade. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 434 and 435. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 434: The graphs present the price and risk measures for the InflSwaptionYOYBerm test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/29.png)

![Figure 435: The graphs present the standard deviation of price for the InflSwaptionYOYBerm test trade as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/30.png)

### 4.12.4 Multivar Testing

The multivar methodology has been described in Sect. 2.6.3. Here we apply the methodology to the trade InflSwaptionYOYBerm.

![Figure 436: Transition of the PV of the InflSwaptionYOYBerm in the up and down stressed scenarios.](./Fig/31.png)

### 4.12.5 CCAR Testing

We test the product InflSwaptionYOYBerm under the two CCAR scenarios explained above for stability of the PV, FlatDelta, FlatGamma and FlatVega risks. Resulting ladders are then shown together with the corresponding EOD ladder, denoted as the Base scenario.

The definitions and implementations of the risks tested here are the same as those already given in the EOD testing framework (cf. Sect. 4.12).

#### 4.12.5.1 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price and relevant risk ladders as functions of bumps to the various curves and volatilities. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve and inflation asset volatilities in the three scenarios Base (EOD), CCAR1 and CCAR2. Apart from the price ladders, we have constructed risk ladders for the delta and gamma risks with respect to IR and inflation curves (FLATDELTA and FLATGAMMA), as well as risk ladders for the vega risks with respect to the IR, real curve and inflation asset volatilities in all the three scenarios Base, CCAR1 and CCAR2. The results of the calculation are presented in figures below. It can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product. For this reason, we deem the stability CCAR test successful.

##### 4.12.5.1.1 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to Infl & IR curves.

![Figure 437: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve. The risks are smooth and well behaved.](./Fig/32.png)

![Figure 438: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve. The risks are smooth and well behaved.](./Fig/33.png)

##### 4.12.5.1.2 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to volatilities.

![Figure 439: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR curve vol. The risks are smooth and well behaved.](./Fig/34.png)

![Figure 440: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation curve vol. The risks are smooth and well behaved.](./Fig/35.png)

![Figure 441: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the IR real vol. The risks are smooth and well behaved.](./Fig/36.png)

##### 4.12.5.1.3 Ladders for Price, Infl & IR Deltas, Gammas and Vegas. Bumps to stochastic vol

![Figure 442: The price and risk ladders for the InflSwaptionYOYBerm test trade in the three scenarios Base, CCAR1 and CCAR2 as a function of bumps to the Inflation stochastic vol. The risks are smooth and well behaved.](./Fig/37.png)

##### 4.12.5.1.4 2-Dimensional PnL Explain Analysis. Bumps to Infl & IR curves.

In this subsection we perform a PnL explain exercise in the two primary risk factor dimensions for the DBX-ShortRate_InflationStochVol model, namely with respects to bumps in the interest rate curve and the inflation curve. For this exercise, we consider the IR and Inflation Delta and Gamma risks, and consider how these risk are sufficient to explain the changes to PnL. The figures below, show the PnL calculated exactly vs that calculated using the Delta and Gamma risks. The figures show a close correspondence, with differences only being significantly large for large moves in the risk factors. This is an expected result, and indicates the adequacy of Delta and Gamma risks for risk management. We test for Base (EOD), CCAR1 and CCAR2 scenarios separately.

![Figure 443: The PVs of the Base Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/38.png)

![Figure 444: The figure on the left shows the comparison of exact PV against approximate PV in the Base scenario, calculated using Deltas and Gammas for InflSwaptionYOYBerm. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionYOYBerm.](./Fig/39.png)

![Figure 445: The PVs of the CCAR1 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/40.png)

![Figure 446: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR1 scenario, calculated using Deltas and Gammas for InflSwaptionYOYBerm. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionYOYBerm.](./Fig/41.png)

![Figure 447: The PVs of the CCAR2 Scenario calculated for bumps to Infl (x-axis) and IR (y-axis) curves. The figure on the left shows the PVs calculated exactly. The figure on the right shows the PVs calculated using Deltas and Gammas, using the Taylor formula.](./Fig/42.png)

![Figure 448: The figure on the left shows the comparison of exact PV against approximate PV in the CCAR2 scenario, calculated using Deltas and Gammas for InflSwaptionYOYBerm. The figure on the right shows the absolute value of the relative difference between exact PV and approximate PV calculated using Deltas and Gammas for InflSwaptionYOYBerm.](./Fig/43.png)

#### 4.12.5.2 Convergence Testing

##### 4.12.5.2.5 Price, Infl & IR Deltas, Gammas and Vegas.

We have investigated the Monte-Carlo (MC) convergence properties of the model for the InflSwaptionYOYBerm test trade, in the three cases scenarios Base (EOD), CCAR1 and CCAR2. In particular, we have investigated the convergence behaviour of price and risk outputs under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. We then calculated the standard deviation of the resulting price and use it as a proxy of the MC convergence measure. The test results are shown in Figures 449 and 450. The results, as expected, show a significant reduction in errors as one increases the number of MC simulations. For this reason, we deem this test successful.

![Figure 449: The graphs present the price and risk measures for the InflSwaptionYOYBerm test trade in the three scenario Base, CCAR1 and CCAR2, as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/44.png)

![Figure 450: The graphs present the standard deviation of price for the InflSwaptionYOYBerm test trade in the scenarios Base (EOD), CCAR1 and CCAR2 as function of parameter NumSims (which governs the number of MC simulations) for benchmark caplets. The parameter NumRuns is set to 1.](./Fig/45.png)

### 4.12.6 IRRBB Testing

In this section, we describe the Interest Rate Stress Tests for the InflSwaptionYOYBerm trade according to a range of ten different scenarios defined under the RIBB framework. For clarity's sake, we display the various scenarios by grouping them into different categories. We see that the overall effect of the application of the scenarios is as expected. For example, the up and down scenarios yield respectively an upwards and a downwards translation of the original Zero Rate curve. The Steepener scenario bends the curve down in the short run while pushing the long rates part up, whereas the Flattener shock produces the opposite scenario, thus "flattening" indeed the original curve. Similarly, the Long up and Long down scenarios affect the long rates part of the curve, by respectively increasing and decreasing the original curve, while leaving unchanged the initial portion of the curve. A dual effect is produced by the application of the Short up and Short down scenarios, whereby only the initial part of the curve is affected. Finally, the Steepener negative and Flattener negative give opposite results than those obtained in the Steepener and Flattener scenarios. Presented below are the results. The tests are passed.

#### 4.12.6.1 Scenario Curves

We plot the scenario curves for the rates affecting this product. We plot the curves for all the 10 scenarios considered in the testing, whose definitions and effects are explained in Sect. 2.6.4.

![Figure 451: Plots of the Zero Rates for the various IRRBB scenarios](./Fig/46.png)

#### 4.12.6.2 Stability Testing

In order to test the adequacy of model and its implementation for pricing and risk managing the current product in a production setting, we have calculated price ladders as functions of bumps to the various curves and volatilities for the specified IRRBB scenarios as well as the base scenario. In particular, we have considered ladders with respect to parallel bumps of IR and inflation curves, as well as ladders with respect to proportional shifts in IR, real curve, inflation curve volatilities.

The results of the calculation are presented in figures below. We have verified that the price ladders behave in a manner consistent with the definition of the product and its payoff for all of the considered scenarios. Furthermore, it can be clearly seen that the price and risk outputs are smooth functions of curve bumps and volatility shifts. The ladders indicate the adequacy of the model for pricing and risk managing the current product.
&&&&
![Figure 452: The graph shows the PV Ladder for IR Curve Bumps for the various IRRBB scenarios.](./Fig/47.png)

![Figure 453: PV ladders of the trade InflSwaptionYOYBerm under bumps of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/48.png)

![Figure 454: The graph shows the PV Ladder for Inflation Curve Bumps for the various IRRBB scenarios.](./Fig/49.png)

![Figure 455: PV ladders of the trade InflSwaptionYOYBerm under bumps of the Inflation Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/50.png)

![Figure 456: The graph shows the PV Ladder for Nominal IR Curve Bumps for the various IRRBB scenarios.](./Fig/51.png)

![Figure 457: PV ladders of the trade InflSwaptionYOYBerm under bumps of the vol of the IR Curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/52.png)

![Figure 458: The graph shows the PV Ladder for real IR Curve Bumps for the various IRRBB scenarios.](./Fig/53.png)

![Figure 459: PV ladders of the trade InflSwaptionYOYBerm under bumps of the vol of the real IR for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/54.png)

![Figure 460: The graph shows the PV Ladder for Inflation Curve volatility Bumps for the various IRRBB scenarios.](./Fig/55.png)

![Figure 461: PV ladders of the trade InflSwaptionYOYBerm under bumps of the vol of the inflation curve for the various IRRBB Scenarios. The various scenarios have been grouped by categories. The individual curves show the PV of the current trade for the different IRRBB scenarios.](./Fig/56.png)

### 4.12.6.3 Convergence Testing

We have investigated the Monte-Carlo (MC) convergence properties of the current model for the current test trade under prescribed 10 IRRBB scenarios as well as the base scenario. In particular, we have investigated the convergence behaviour of the price (NetValue) under different choices for the number of MC simulations. The number of MC simulations is determined by the model parameters NumSims and NumRuns, and is essentially the product of the two. For our testing, we set NumRuns = 1, and vary NumSims. For each value of NumSims, we have set the parameter Seed = 1.

![Figure 462: The graphs present the MonteCarlo simulation of the price for the InflSwaptionYOYBerm IRRBB test trade under the various IRRBB scenarios, as function of parameter NumSims (which governs the number of MC simulations). The parameter Seed is set to 1 and the parameter NumRuns is set to 1.](./Fig/57.png)

## 5 Model Uncertainty Identification, Measurement, and Management

### 5.1 Model Uncertainty and Identification

Sources of model uncertainty and deficiencies/weaknesses have identified and categorized in accordance with the classification define by the policy. Findings and Model limitations have been issued for the sources of uncertainty analysed.

Model deficiencies/weaknesses have been indentied in section 2.8 and include an assessment for compensating controls.

Model limitation uncertainties have been identified and categorized into:

- Numerical techniques
- Methodology assumptions
- Implementation and deployment
- Missing Risk Factors
- Process Issues

#### 5.1.1 Model Limitations

The following set of limitations are applicable to the DBX-ShortRate_InflationStochVol model.

- Missing Risk Factor[Interest Rate Smile][ShortRate]: The ShortRate framework can only produce a decreasing interest rate implied volatility profile (for β ∈ (0, 1]). This assumption is reasonable for markets that do not exhibit significant implied volatility smile or when products are not sensitive to high-strikes. [Lim ID 699]

- Numerical[Monte-Carlo Error][DBX]: Monte-Carlo valuations have an error associated with them that is a function of the timegrid discretisation and number of simulations used.[Lim ID 700]

- Missing Risk Factor[Interest Rate Forward Volatility][ShortRate]: The ShortRate framework can only produce a forward volatility dynamic that does not preserve observed features in the volatility market (e.g. volatility hump). This assumption is reasonable for single expiry products or weakly path dependent products that are not strongly dependent on forward volatility.[Lim ID 2070]

- Model Weakness[Inflation Volatility Smile][InflationStochVol]: The InflationStochVol framework has limited flexibility and may not be able to capture the full volatility smile structure of the inflation market. This assumption is reasonable if there are only limited targets available for calibration.[Lim ID 2561]

- Model Weakness[Interest Rate Market Calibration][ShortRate]: The ShortRate framework cannot simultaneously fit the entire option market (i.e. caps/swaptions of all expiries/tenors/strikes). This limitation can be ameliorated by calibrating different exotic volatilities to different parts of the volatility surface.[Lim ID 3085]

- Calibration[Model Calibration Uncertainty][InflationStochVol]: The calibration quality of the model, expressed in terms of distance between the model generated implied volatilities and the market observed volatilities may vary, depending on number of calibration targets, market regimes, certain parameters of the calibration algorithm (e.g. initial guesses, number of iterations, weights, etc.). Since the calibration will impact the prices and risk sensitivities of the products in scope of the model, GVQ should monitor the quality of the calibration and compute uncertainty reserves, if deemed necessary.[Lim ID 3609]

- Numerical[Model Calibration Uncertainty][InflationStochVol]: The initial guess of the LocalVolsSV parameter impacts the computed model-generated volatilities in a a few extreme market cases. The issue seems to be solved if we set the LocalVolsSV initial guess above 100bps and/or fine-tune the calibrated LocalVolsSV value used in Step2 of calibration if the calibrated value obtained in Step1 is too small. We recommend GVQ monitor and holds reserves in the interim until Validation Finding 2 (ID:2020Jul31-PREVLUI-14944) is resolved.[Lim ID 3610]

- Model Weakness[Model Calibration Uncertainty][InflationStochVol]: The calibration process may opt to exogenously set the SV parameters mean reversion rate (MeanRevSV) and volatility of volatility (LocalVolsSV) instead of calibrating them to market observables. This results in an uncertainty around the marking of these parameters. Therefore, the choice of these parameters should be monitored by GVQ on a regular basis and uncertainty reserves should be computed, if deemed necessary.[Lim ID 3611]

- Calibration[Model Weakness][InflationStochVol]: The calibration process does not simultaneously fit the YOY and ZC markets and is subject to uncertainty due to the type and availability of market data used as calibration targets. Since the calibration will impact the prices and risk sensitivities of exotics depending on it, we recommend GVQ to monitor the uncertainty surrounding the calibration and compute uncertainty reserves, if deemed necessary. Products with callable/ path dependent features should be benchmarked against a model that can fit both YOY and ZC markets.[Lim ID 3612]

Table 245 denotes the model limitations using their UID.

| Limitation UID | Limitation Category | Limitation Type | Limitation Framework |
| --- | --- | --- | --- |
| 699 | Interest Rate Smile | Missing Risk Factor | ShortRate |
| 700 | Monte-Carlo Error | Numerical | DBX |
| 2070 | Interest Rate Forward Volatility | Missing Risk Factor | ShortRate |
| 2561 | Inflation Volatility Smile | Model Weakness | InflationStochVol |
| 3085 | Interest Rate Market Calibration | Model Weakness | ShortRate |
| 3609 | Model Calibration Uncertainty | Calibration | InflationStochVol |
| 3610 | Model Calibration Uncertainty | Numerical | InflationStochVol |
| 3611 | Model Calibration Uncertainty | Model Weakness | InflationStochVol |
| 3612 | Model Weakness | Calibration | InflationStochVol |

Table 245: DBX-ShortRate_InflationStochVol model limitations.

For the DBX-ShortRate_InflationStochVol model, the product/ limitations grid is given in Table 246.

[Table 246: Product-Model limitation table for DBX-ShortRate_InflationStochVol model.]

### 5.2 Model Uncertainty Measurement and Management

The requirement for a valuation adjustment methodology to compensate for a model limitation is to be established and implemented by VC/GSA. The limitations assigned to the product model are detailed in the previous section. Details for each limitation on whether or not the compensating control is applied to mitigate the limitations identified and the appropriateness of proposed measurement approaches has been assessed.

Note that the information on the reserve policy has not been available yet. It is thus denoted by "NL--" for all limitations.

| Limitation UID | Reserve Policy | Limitation Assessed | RFU | Reserve MVR |
| --- | --- | --- | --- | --- |
| 699 | NL--** | YES | TBD | [64] |
| 700 | NL--** | YES | TBD | [64] |
| 2070 | NL--** | YES | TBD | [64] |
| 2561 | NL--** | YES | TBD | [64] |
| 3085 | NL--** | YES | TBD | [64] |
| 3609 | NL--** | YES | TBD | [64] |
| 3610 | NL--** | YES | TBD | [64] |
| 3611 | NL--** | YES | TBD | [64] |
| 3612 | NL--** | YES | TBD | [64] |

Table 247: Compensating Control.

The table below detailed for each finding whether or not the compensating control is applied to mitigate the finding identified:

| Finding ID | Model weakness | Compensating control methodology | Control assessed |
| --- | --- | --- | --- |

## 6 Control Assessment

When the pricing model is used as a servicer, please refer to top model validation report section on the control assessment of the servicer models.

### 6.1 Ongoing Performance Monitoring

The model performance monitoring relies on performance indicators defined by the Product Owners, product model users or control functions as necessary, to confirm that the model is performing as intended.

The following activities as linked to models are included in performance monitoring:

- Unexplained P&L due to model issues

- Relative size of model reserves taken at product-model pair level (relative to PV and or trade count). Month-on-month changes in the value of a specific model reserve in excess of 1m euros automatically triggers further scrutiny.

- VRM's output price testing results through IPV processes.

- Identification of risk instabilities produced by models.

- Feedback on model performance (e.g. hedging performance, market observations, historical back testing exceptions, calibration failures, completed pricing auction results successes, risk instabilities, significant collateral disputes due to model issues), and model failure, including technical model failures (identified through model development regression testing or other BAU processes).

The activities listed above must be prepared and presented to the MCWGs and during the year's annual attestation.

### 6.2 Data and Process Controls

#### 6.2.1 Condition for use

Table 248 provide the Conditions for Use for the model parameter rules that apply to the DBX-ShortRate_InflationStochVol model.

| CfU ID | Monitoring Method | Rule Name | Status | Business | Last Change Date | ParamInfo Date |
| --- | --- | --- | --- | --- | --- | --- |
| 1320 | Model Rule | Inflation0002 | Released | INFLATION | 2019-08-07 | 2014-07-13 |
| 1321 | Model Rule | Inflation0003 | Released | INFLATION | 2018-11-09 | 2014-07-10 |
| 11910 | Model Rule | Inflation0061 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11911 | Model Rule | Inflation0062 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11912 | Model Rule | Inflation0063 | Released | INFLATION | 2020-08-18 | 2017-06-28 |
| 11913 | Model Rule | Inflation0064 | Released | INFLATION | 2020-08-18 | 2019-07-27 |
| 11914 | Model Rule | Inflation0065 | Released | INFLATION | 2020-08-18 | 2020-08-12 |
| 11915 | Model Rule | Inflation0066 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11916 | Model Rule | Inflation0067 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11917 | Model Rule | Inflation0068 | Released | INFLATION | 2020-08-18 | 2020-07-08 |
| 11918 | Model Rule | Inflation0069 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11919 | Model Rule | Inflation0070 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11920 | Model Rule | Inflation0071 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11921 | Model Rule | Inflation0072 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11922 | Model Rule | Inflation0073 | Released | INFLATION | 2020-08-18 | 2019-07-27 |
| 11923 | Model Rule | Inflation0074 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11924 | Model Rule | Inflation0075 | Released | INFLATION | 2020-08-17 | 2017-04-05 |
| 11925 | Model Rule | Inflation0076 | Released | INFLATION | 2020-08-18 | 2017-07-19 |
| 11926 | Model Rule | Inflation0077 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11927 | Model Rule | Inflation0078 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11928 | Model Rule | Inflation0079 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11929 | Model Rule | Inflation0080 | Released | INFLATION | 2020-08-18 | 2018-07-10 |
| 11930 | Model Rule | Inflation0081 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11931 | Model Rule | Inflation0082 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11932 | Model Rule | Inflation0083 | Released | INFLATION | 2020-08-18 | 2020-08-12 |
| 11933 | Model Rule | Inflation0084 | Released | INFLATION | 2020-08-18 | 2019-07-27 |
| 11934 | Model Rule | Inflation0085 | Released | INFLATION | 2020-08-18 | 2019-07-27 |
| 11935 | Model Rule | Inflation0086 | Released | INFLATION | 2020-08-18 | 2014-08-26 |
| 11936 | Model Rule | Inflation0087 | Released | INFLATION | 2020-08-18 | 2017-06-28 |
| 11937 | Model Rule | Inflation0088 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11938 | Model Rule | Inflation0089 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11939 | Model Rule | Inflation0090 | Released | INFLATION | 2020-08-17 | 2020-08-12 |
| 11940 | Model Rule | Inflation0091 | Released | INFLATION | 2020-08-18 | 2014-08-26 |
| 11941 | Model Rule | Inflation0092 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11942 | Model Rule | Inflation0093 | Released | INFLATION | 2020-08-18 | 2020-08-12 |
| 11943 | Model Rule | Inflation0094 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11944 | Model Rule | Inflation0095 | Released | INFLATION | 2020-08-18 | 2015-11-01 |
| 11945 | Model Rule | Inflation0096 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11946 | Model Rule | Inflation0097 | Released | INFLATION | 2020-08-18 | 2014-08-26 |
| 11947 | Model Rule | Inflation0098 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11948 | Model Rule | Inflation0099 | Released | INFLATION | 2020-08-18 | 2018-07-13 |
| 11949 | Model Rule | Inflation0100 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11950 | Model Rule | Inflation0101 | Released | INFLATION | 2020-09-01 | 2019-03-27 |
| 11951 | Model Rule | Inflation0102 | Released | INFLATION | 2020-08-18 | 2014-08-26 |
| 11952 | Model Rule | Inflation0103 | Released | INFLATION | 2020-08-17 | 2019-06-27 |
| 11953 | Model Rule | Inflation0104 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11954 | Model Rule | Inflation0105 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11955 | Model Rule | Inflation0106 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11956 | Model Rule | Inflation0107 | Released | INFLATION | 2020-08-18 | 2020-08-12 |
| 11957 | Model Rule | Inflation0108 | Released | INFLATION | 2020-08-18 | 2017-02-14 |
| 11958 | Model Rule | Inflation0109 | Released | INFLATION | 2020-08-18 | 2019-06-27 |
| 11959 | Model Rule | Inflation0110 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11960 | Model Rule | Inflation0111 | Released | INFLATION | 2020-08-18 | 2019-08-11 |
| 11961 | Model Rule | Inflation0112 | Released | INFLATION | 2020-12-16 | 2020-12-11 |
| 11962 | Model Rule | Inflation0113 | Released | INFLATION | 2020-08-18 | 2014-10-31 |
| 11963 | Model Rule | Inflation0114 | Released | FX | 2020-08-18 | 2019-09-13 |
| 11964 | Model Rule | Inflation0115 | Released | INFLATION | 2020-08-18 | 2014-10-31 |
| 11965 | Model Rule | Inflation0116 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11966 | Model Rule | Inflation0117 | Released | INFLATION | 2021-04-01 | 2014-08-26 |
| 11967 | Model Rule | Inflation0118 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11968 | Model Rule | Inflation0119 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11969 | Model Rule | Inflation0120 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11970 | Model Rule | Inflation0121 | Released | INFLATION | 2020-08-18 | 2019-10-22 |
| 11971 | Model Rule | Inflation0122 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11972 | Model Rule | Inflation0123 | Released | INFLATION | 2021-04-01 | 2019-04-18 |
| 11973 | Model Rule | Inflation0124 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11974 | Model Rule | Inflation0125 | Released | INFLATION | 2020-08-17 | 2019-07-27 |
| 11975 | Model Rule | Inflation0126 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11976 | Model Rule | Inflation0127 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11977 | Model Rule | Inflation0128 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11978 | Model Rule | Inflation0129 | Released | INFLATION | 2020-08-18 | 2019-09-13 |
| 11979 | Model Rule | Inflation0130 | Released | INFLATION | 2020-08-18 | 2019-06-03 |
| 11980 | Model Rule | Inflation0131 | Released | INFLATION | 2020-08-18 | 2015-02-18 |
| 11981 | Model Rule | Inflation0132 | Released | INFLATION | 2020-08-18 | 2015-01-06 |
| 11982 | Model Rule | Inflation0133 | Released | INFLATION | 2020-08-18 | 2020-07-17 |
| 11983 | Model Rule | Inflation0134 | Released | INFLATION | 2020-08-18 | 2019-06-07 |
| 11984 | Model Rule | Inflation0135 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11985 | Model Rule | Inflation0136 | Released | INFLATION | 2020-08-17 | 2019-04-18 |
| 11986 | Model Rule | Inflation0137 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11987 | Model Rule | Inflation0138 | Released | INFLATION | 2020-08-17 | 2019-04-18 |
| 11988 | Model Rule | Inflation0139 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 11989 | Model Rule | Inflation0140 | Released | INFLATION | 2020-08-18 | 2020-08-12 |
| 11990 | Model Rule | Inflation0141 | Released | INFLATION | 2020-08-18 | 2020-08-15 |
| 11991 | Model Rule | Inflation0142 | Released | INFLATION | 2020-08-18 | 2019-04-18 |
| 15336 | Model Rule | Inflation0152 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15337 | Model Rule | Inflation0153 | Released | INFLATION | 2020-12-16 | 2019-06-27 |
| 15338 | Model Rule | Inflation0154 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15339 | Model Rule | Inflation0155 | Released | INFLATION | 2020-09-29 | 2020-08-31 |
| 15340 | Model Rule | Inflation0156 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15341 | Model Rule | Inflation0157 | Released | INFLATION | 2020-09-29 | 2018-07-10 |
| 15342 | Model Rule | Inflation0158 | Released | INFLATION | 2020-12-16 | 2019-06-27 |
| 15343 | Model Rule | Inflation0159 | Released | FX | 2020-09-29 | 2019-06-27 |
| 15344 | Model Rule | Inflation0160 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15345 | Model Rule | Inflation0161 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15346 | Model Rule | Inflation0162 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15496 | Model Rule | Inflation0163 | Released | INFLATION | 2020-09-29 | 2020-08-12 |
| 15497 | Model Rule | Inflation0164 | Released | INFLATION | 2020-09-29 | 2020-08-12 |
| 15498 | Model Rule | Inflation0165 | Released | INFLATION | 2020-09-29 | 2019-08-11 |
| 15499 | Model Rule | Inflation0166 | Released | INFLATION | 2020-09-29 | 2020-07-08 |
| 15500 | Model Rule | Inflation0167 | Released | INFLATION | 2020-12-08 | 2017-02-14 |
| 15501 | Model Rule | Inflation0168 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15502 | Model Rule | Inflation0169 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15503 | Model Rule | Inflation0170 | Released | INFLATION | 2020-09-29 | 2020-08-12 |
| 15504 | Model Rule | Inflation0171 | Released | INFLATION | 2020-09-29 | 2020-08-12 |
| 15505 | Model Rule | Inflation0172 | Released | INFLATION | 2020-09-29 | 2018-07-13 |
| 15506 | Model Rule | Inflation0173 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 15507 | Model Rule | Inflation0174 | Released | INFLATION | 2020-09-29 | 2020-08-12 |
| 15508 | Model Rule | Inflation0175 | Released | INFLATION | 2020-09-29 | 2019-04-18 |
| 15509 | Model Rule | Inflation0176 | Released | INFLATION | 2020-09-29 | 2019-06-27 |
| 17046 | Model Rule | Rates0402 | Released | RATES | 2020-12-16 | 2020-09-09 |
| 17047 | Model Rule | Rates0403 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17048 | Model Rule | Rates0404 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17049 | Model Rule | Rates0405 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17050 | Model Rule | Rates0406 | Released | RATES | 2020-12-16 | 2020-09-10 |
| 17051 | Model Rule | Rates0407 | Released | RATES | 2020-12-16 | 2014-08-26 |
| 17053 | Model Rule | Rates0409 | Released | RATES | 2020-12-16 | 2020-07-18 |
| 17054 | Model Rule | Rates0410 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17055 | Model Rule | Rates0411 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17056 | Model Rule | Rates0412 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17057 | Model Rule | Rates0413 | Released | RATES | 2020-12-16 | 2020-09-10 |
| 17058 | Model Rule | Rates0414 | Released | RATES | 2020-12-16 | 2020-08-15 |
| 17653 | Model Rule | Rates0457 | Released | RATES | 2021-12-17 | 2021-09-24 |
| 17853 | Model Rule | Rates0477 | Released | RATES | 2021-12-17 | 2021-09-24 |
| 18790 | Model Rule | Rates0503 | Released | FX | 2022-06-23 | 2022-06-23 |

Table 248: Conditions for Use, imposed for DBX-ShortRate_InflationStochVol model.

Below we present the conditions for use, imposed for DBX-ShortRate_InflationStochVol model in further details:

| CfU ID: | 1320 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::InflationInterpolation∈(FLAT, DIR, LINEAR, PWCONST_L, DIR-10, LINEAR-10, FLAT-15, PWCONST_L-15) |

| CfU ID: | 1321 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::BuildMethod∈(LINEAR_FORWARD, QUADRATIC_ZERO) |

| CfU ID: | 11910 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | CURVE::SpreadBuildMethod not like *.*  |
| Target Conditions: | CURVE::SpreadBuildMethod∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD) |

| CfU ID: | 11911 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == CORRELATION |
| Target Conditions: | VOL::Weight ≥ 0 |

| CfU ID: | 11912 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODEL::ModelName == DBX |
| Target Conditions: | CenteringMode ∈ (0, 2, 3) |

| CfU ID: | 11913 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODELVOL::VolName == CORRELATION |
| Target Conditions: | VOL::InterpType∈(LINEAR, PWCONST_R) |

| CfU ID: | 11914 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::InflationMethod == EXACT |

| CfU ID: | 11915 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::SmoothFutures∈(NO, YES, BACKWARD, BACKWARDDAILY) |

| CfU ID: | 11916 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::CurveType∈(LIBOR, SPREAD, RBASIS, CCYBASIS, BASIS) |

| CfU ID: | 11917 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | CURVE::UseType∈(DISCOUNTBASIS, LIBOR) |
| Target Conditions: | CURVE::BaseRateType∈(LIBOR, LIBOR-*, OIS, OIS-*) |

| CfU ID: | 11918 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODEL::ModelName == DBX |
| Target Conditions: | MODEL::CompressionFreq ≥ 4 |

| CfU ID: | 11919 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::ExtrapMethod∈(CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE) |

| CfU ID: | 11920 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::OISDateCompression∈(NO, YES) |

| CfU ID: | 11921 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::CCYUseBaseCurve∈(NO, YES) |

| CfU ID: | 11922 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == DBMVOL |
| Target Conditions: | MODELVOL::AbsorbingBarrierType∈(NONE, ABSOLUTE, FORWARDDIFF, STDDEV) |

| CfU ID: | 11923 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::SpotLiborUseBaseCurve∈(NO, YES) |

| CfU ID: | 11924 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == CORRELATION |
| Target Conditions: | VOL::CorrelationInterpolationSpace == TIME |

| CfU ID: | 11925 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODEL::ModelName == DBX |
| Target Conditions: | MODEL::CMSFixFracCentering == NOINCREASE |

| CfU ID: | 11926 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::MeanRevInterpolation set and VOL::VolName == DBMVOL |
| Target Conditions: | VOL::MeanRevInterpolation∈(LINEAR, PWCONST_R) |

| CfU ID: | 11927 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == DBMVOL and VOL::StochVolCap < 9.99 |
| Target Conditions: | VOL::StochVolCap ≥ 5 |

| CfU ID: | 11928 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::HybridConstantForwardConnection∈(LINEAR, QUADRATIC) |

| CfU ID: | 11929 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::BuildMode∈(CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD) |

| CfU ID: | 11930 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODEL::ModelName == DBX |
| Target Conditions: | MODEL::CurveMeshNumber ≥ 4 |

| CfU ID: | 11931 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | MODEL::ModelName == DBX |
| Target Conditions: | MODEL::CompressionDirection∈(FORWARD, BACKWARD) |

| CfU ID: | 11932 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: |  |
| Target Conditions: | CURVE::ShortEndInflationInterpolation∈(YOY, FLAT) |

| CfU ID: | 11933 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == DBMVOL |
| Target Conditions: | MODELVOL::CorInterpolation == LINEAR |

| CfU ID: | 11934 |
| --- | --- |
| Model Configurations: | All model configurations. |
| PRDS Products: | All approved products. |
| Rule usage logic: | IF (Minimum Conditions) THEN (Check Target Conditions) |
| Minimum Conditions: | VOL::VolName == DBMVOL |
| Target Conditions: | MODELVOL::CalibToEndDate∈(YES, NO) |

### CRU ID: 11938
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::DirectSLVPolyOrder == 3

### CRU ID: 11939
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL and VOL::StochVolCenteringMode != -1
- Target Conditions: VOL::StochVolCenteringMode∈(0, 1)

### CRU ID: 11939
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: CURVE::BuildMethodCutOff like "m
- Target Conditions: CURVE::BuildMethodCutOff [("m] ≤ 48

### CRU ID: 11940
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::RangeCompression∈(NONE, EXPONENTIAL, EXPONENTIAL-*)

### CRU ID: 11941
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::TermMethod∈(CONSTANT_CASH, CONSTANT_FORWARD, PARALLEL_ZERO)

### CRU ID: 11942
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::InflationQuote.Type∈(MARKET, SEASONALITYADJUSTED)

### CRU ID: 11943
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::CumulativeNumSteps ≥ 50

### CRU ID: 11944
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::IndexCompression∈(NONE, EXPONENTIAL, EXPONENTIAL-*, SYNCHRONISED, SYNCHRONISED-*)

### CRU ID: 11945
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL
- Target Conditions: VOL::SVFactorIndex == 1

### CRU ID: 11946
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::FreqTimeVec ≥ 12

### CRU ID: 11947
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL
- Target Conditions: VOL::TestForPositiveRate∈(YES, NO)

### CRU ID: 11948
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::InflationInterpolation∈(DIR, FLAT, FLAT-*, LINEAR, LINEAR-*, PWCONST_L)

### CRU ID: 11949
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == CORRELATION
- Target Conditions: VOL::CorrelationInputType∈(LOCAL, TERMMATURITY)

### CRU ID: 11950
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::AverageCompression∈(NONE, EXPONENTIAL, EXPONENTIAL-*, SYNCHRONISED, SYNCHRONISED-*)

### CRU ID: 11951
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::NaturalTolerance [("*)]d]] ≤ 10 and CURVE::NaturalTolerance like "d

### CRU ID: 11952
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::RecalibMethod∈(APPROX, EXACT, EXACTFORCED)

### CRU ID: 11953
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::AdditionalFunc: LINEAR)

### CRU ID: 11954
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::ExerciseCompression∈(NONE, EXPONENTIAL, EXPONENTIAL-*, SYNCHRONISED, SYNCHRONISED-*)

### CRU ID: 11955
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::CashToFuture∈(EXACT, EXACTCASH, EXACTCASH-1, CASHPRIORITY, LINEAR, NONE)

### CRU ID: 11956
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::InflationSmoothDIR∈(YES, NO)

### CRU ID: 11957
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::UseType∈(CROSSCCYSWAP, DISCOUNTBASIS, LIBOR, INFLATION, TREASURY, CONVERTIBILITY, CROSSCCY)

### CRU ID: 11958
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::DistLawBaseCurve∈(NO, YES, HYBRID)

### CRU ID: 11959
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::ValueMode == VALUEDATE

### CRU ID: 11960
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::TreasuryUseBaseCurve∈(NO, YES)

### CRU ID: 11961
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == CORRELATION and VOL::VolType == CORR
- Target Conditions: VOL::SVFactor == 0

### CRU ID: 11962
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL
- Target Conditions: VOL::Interpolation∈(LINEAR, PWCONST_R, PWCONSTSMOOTH, CONSTANT_LV)

### CRU ID: 11963
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL
- Target Conditions: VOL::MinMode∈(REFLECT-*, FLAT*, ABSORB-*, REFLECT, FLAT, ABSORB)

### CRU ID: 11964
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: VOL::VolName == DBMVOL
- Target Conditions: VOL::Interpolation∈(CONSTANT_LV, LINEAR)

### CRU ID: 11965
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::StateMaxContOfVariate∈(NO, YES, INDICATOR)

### CRU ID: 11966
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::PolyOrder∈(0, 100, 102, 103, 200, 2003)

### CRU ID: 11967
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::MinNumberSteps ≥ 0

### CRU ID: 11968
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::NumberSubSims == 1

### CRU ID: 11969
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::UseFTP == NO

### CRU ID: 11970
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::CDSForwardCentering == NO

### CRU ID: 11971
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::CompactSimulation∈(YES, NO)

### CRU ID: 11972
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX and MODEL::PolyOrder != 1200
- Target Conditions: MODEL::StateMaxFraction == 1

### CRU ID: 11973
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::Tolerance ≤ 0.00001

### CRU ID: 11974
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: FIXING::NaturalTolerance like "m
- Target Conditions: FIXING::NaturalTolerance [("m] < 1

### CRU ID: 11975
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::NumberBaseXFixingPoints ≥ 1

### CRU ID: 11976
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::UseOrthogonalRuns∈(YES, NO)

### CRU ID: 11977
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::StateMaxCorrection∈(JACKKNIFE, NONE)

### CRU ID: 11978
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::StochVolCenteringMode∈(-1, 0, 1)

### CRU ID: 11979
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: FIXING::InterpolateNaturals∈(YES, NO)
- Target Conditions: 

### CRU ID: 11980
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::RegularizeFreq ≥ 365

### CRU ID: 11981
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::NumberRuns ≥ 1

### CRU ID: 11982
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: MODEL::DecayDbsplvctToValuationDate∈(YES, NO)

### CRU ID: 11983
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: MODEL::RecalibCurves∈(NO, YES)

### CRU ID: 11984
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::UseRegularTimeVec∈(YES, NO, PARTIAL, ADAPTIVE)

### CRU ID: 11985
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::ZetaIssrFlag == -1

### CRU ID: 11986
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: MODEL::StateMaxRegFunction∈(NONE, RIDGE, RIDGE-*, RIDGENORM, RIDGENORM-*)

### CRU ID: 11987
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::StateMaxCutOff ≤ 0.01

### CRU ID: 11988
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::VarianceReduction∈(ANTITHETIC, ANTITHETICPURE, BROWNIANBRIDGE, ORTHOGONAL)

### CRU ID: 11989
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MKTDATA::Type == INFLATION
- Target Conditions: MKTDATA::Interpolation∈(DIR, DIR-*, FLAT, FLAT-*)

### CRU ID: 11990
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: MODEL::UseNewSVD∈(NO, YES)

### CRU ID: 11991
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: MODEL::ModelName == DBX
- Target Conditions: MODEL::StateMaxWeightSet∈(4, 0)

### CRU ID: 15336
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::DistLawBaseCurve∈(NO, YES, HYBRID)

### CRU ID: 15337
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: CURVE::SpreadsBuildMethod not like "-*
- Target Conditions: CURVE::SpreadBuildMethod∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)

### CRU ID: 15338
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::SmoothFutures∈(NO, YES, BACKWARD, BACKWARDDAILY)

### CRU ID: 15339
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::RecalibMethod∈(APPROX, EXACT, EXACTFORCED)

### CRU ID: 15340
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::ExtrapMethod∈(CONSTANT_FORWARD, CONSTANT_PAR, CONSTANT_ZERO, NATIVE)

### CRU ID: 15341
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::BuildMethod∈(CONSTANT_FORWARD, HYBRID_CONSTANT_FORWARD, HYBRID_FORWARD, LINEAR_ZERO, QUADRATIC_FORWARD)

### CRU ID: 15342
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: CURVE::Spreads::SpreadBuildMethod not like "
- Target Conditions: CURVE::Spreads::SpreadBuildMethod∈(LINEAR_ZERO, CONSTANT_FORWARD, HYBRID_FORWARD, HYBRID_CONSTANT_FORWARD, QUADRATIC_FORWARD)

### CRU ID: 15343
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::AddPar∈(NONE, LINEAR)

### CRU ID: 15344
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::CashToFuture∈(EXACT, EXACTCASH, EXACTCASH-1, CASHPRIORITY, LINEAR, NONE)

### CRU ID: 15345
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::SpotLiborUseBaseCurve∈(NO, YES)

### CRU ID: 15346
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::CurveType∈(LIBOR, SPREAD, FRABASIS, CCYBASIS, BASIS)

### CRU ID: 15347
- Model Configurations: All model configurations.
- PRDS Products: All approved products.
- Rule usage logic: IF (Minimum Conditions) THEN (Check Target Conditions)
- Minimum Conditions: 
- Target Conditions: CURVE::ShortEndInflationInterpolation∈(YOY, FLAT)